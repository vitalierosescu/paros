"use strict";
(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined")
      return require.apply(this, arguments);
    throw new Error('Dynamic require of "' + x + '" is not supported');
  });
  var __esm = (fn, res) => function __init() {
    return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
  };
  var __commonJS = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // bin/live-reload.js
  var init_live_reload = __esm({
    "bin/live-reload.js"() {
      "use strict";
      new EventSource(`${"http://localhost:3000"}/esbuild`).addEventListener("change", () => location.reload());
    }
  });

  // node_modules/.pnpm/@barba+core@2.9.7/node_modules/@barba/core/dist/barba.umd.js
  var require_barba_umd = __commonJS({
    "node_modules/.pnpm/@barba+core@2.9.7/node_modules/@barba/core/dist/barba.umd.js"(exports, module) {
      init_live_reload();
      !function(t2, n2) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = n2() : "function" == typeof define && define.amd ? define(n2) : (t2 = t2 || self).barba = n2();
      }(exports, function() {
        function t2(t3, n3) {
          for (var r3 = 0; r3 < n3.length; r3++) {
            var e4 = n3[r3];
            e4.enumerable = e4.enumerable || false, e4.configurable = true, "value" in e4 && (e4.writable = true), Object.defineProperty(t3, e4.key, e4);
          }
        }
        function n2(n3, r3, e4) {
          return r3 && t2(n3.prototype, r3), e4 && t2(n3, e4), n3;
        }
        function r2() {
          return (r2 = Object.assign || function(t3) {
            for (var n3 = 1; n3 < arguments.length; n3++) {
              var r3 = arguments[n3];
              for (var e4 in r3)
                Object.prototype.hasOwnProperty.call(r3, e4) && (t3[e4] = r3[e4]);
            }
            return t3;
          }).apply(this, arguments);
        }
        function e3(t3, n3) {
          t3.prototype = Object.create(n3.prototype), t3.prototype.constructor = t3, t3.__proto__ = n3;
        }
        function i2(t3) {
          return (i2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(t4) {
            return t4.__proto__ || Object.getPrototypeOf(t4);
          })(t3);
        }
        function o2(t3, n3) {
          return (o2 = Object.setPrototypeOf || function(t4, n4) {
            return t4.__proto__ = n4, t4;
          })(t3, n3);
        }
        function u(t3, n3, r3) {
          return (u = function() {
            if ("undefined" == typeof Reflect || !Reflect.construct)
              return false;
            if (Reflect.construct.sham)
              return false;
            if ("function" == typeof Proxy)
              return true;
            try {
              return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
              })), true;
            } catch (t4) {
              return false;
            }
          }() ? Reflect.construct : function(t4, n4, r4) {
            var e4 = [null];
            e4.push.apply(e4, n4);
            var i3 = new (Function.bind.apply(t4, e4))();
            return r4 && o2(i3, r4.prototype), i3;
          }).apply(null, arguments);
        }
        function f(t3) {
          var n3 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
          return (f = function(t4) {
            if (null === t4 || -1 === Function.toString.call(t4).indexOf("[native code]"))
              return t4;
            if ("function" != typeof t4)
              throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== n3) {
              if (n3.has(t4))
                return n3.get(t4);
              n3.set(t4, r3);
            }
            function r3() {
              return u(t4, arguments, i2(this).constructor);
            }
            return r3.prototype = Object.create(t4.prototype, { constructor: { value: r3, enumerable: false, writable: true, configurable: true } }), o2(r3, t4);
          })(t3);
        }
        function s2(t3, n3) {
          try {
            var r3 = t3();
          } catch (t4) {
            return n3(t4);
          }
          return r3 && r3.then ? r3.then(void 0, n3) : r3;
        }
        "undefined" != typeof Symbol && (Symbol.iterator || (Symbol.iterator = Symbol("Symbol.iterator"))), "undefined" != typeof Symbol && (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol("Symbol.asyncIterator")));
        var c, a = "2.9.7", h = function() {
        };
        !function(t3) {
          t3[t3.off = 0] = "off", t3[t3.error = 1] = "error", t3[t3.warning = 2] = "warning", t3[t3.info = 3] = "info", t3[t3.debug = 4] = "debug";
        }(c || (c = {}));
        var v = c.off, l = function() {
          function t3(t4) {
            this.t = t4;
          }
          t3.getLevel = function() {
            return v;
          }, t3.setLevel = function(t4) {
            return v = c[t4];
          };
          var n3 = t3.prototype;
          return n3.error = function() {
            for (var t4 = arguments.length, n4 = new Array(t4), r3 = 0; r3 < t4; r3++)
              n4[r3] = arguments[r3];
            this.i(console.error, c.error, n4);
          }, n3.warn = function() {
            for (var t4 = arguments.length, n4 = new Array(t4), r3 = 0; r3 < t4; r3++)
              n4[r3] = arguments[r3];
            this.i(console.warn, c.warning, n4);
          }, n3.info = function() {
            for (var t4 = arguments.length, n4 = new Array(t4), r3 = 0; r3 < t4; r3++)
              n4[r3] = arguments[r3];
            this.i(console.info, c.info, n4);
          }, n3.debug = function() {
            for (var t4 = arguments.length, n4 = new Array(t4), r3 = 0; r3 < t4; r3++)
              n4[r3] = arguments[r3];
            this.i(console.log, c.debug, n4);
          }, n3.i = function(n4, r3, e4) {
            r3 <= t3.getLevel() && n4.apply(console, ["[" + this.t + "] "].concat(e4));
          }, t3;
        }(), d = O, m = E, p = g, w = x, b = T, y = "/", P = new RegExp(["(\\\\.)", "(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?"].join("|"), "g");
        function g(t3, n3) {
          for (var r3, e4 = [], i3 = 0, o3 = 0, u2 = "", f2 = n3 && n3.delimiter || y, s3 = n3 && n3.whitelist || void 0, c2 = false; null !== (r3 = P.exec(t3)); ) {
            var a2 = r3[0], h2 = r3[1], v2 = r3.index;
            if (u2 += t3.slice(o3, v2), o3 = v2 + a2.length, h2)
              u2 += h2[1], c2 = true;
            else {
              var l2 = "", d2 = r3[2], m2 = r3[3], p2 = r3[4], w2 = r3[5];
              if (!c2 && u2.length) {
                var b2 = u2.length - 1, g2 = u2[b2];
                (!s3 || s3.indexOf(g2) > -1) && (l2 = g2, u2 = u2.slice(0, b2));
              }
              u2 && (e4.push(u2), u2 = "", c2 = false);
              var E2 = m2 || p2, x2 = l2 || f2;
              e4.push({ name: d2 || i3++, prefix: l2, delimiter: x2, optional: "?" === w2 || "*" === w2, repeat: "+" === w2 || "*" === w2, pattern: E2 ? A(E2) : "[^" + k(x2 === f2 ? x2 : x2 + f2) + "]+?" });
            }
          }
          return (u2 || o3 < t3.length) && e4.push(u2 + t3.substr(o3)), e4;
        }
        function E(t3, n3) {
          return function(r3, e4) {
            var i3 = t3.exec(r3);
            if (!i3)
              return false;
            for (var o3 = i3[0], u2 = i3.index, f2 = {}, s3 = e4 && e4.decode || decodeURIComponent, c2 = 1; c2 < i3.length; c2++)
              if (void 0 !== i3[c2]) {
                var a2 = n3[c2 - 1];
                f2[a2.name] = a2.repeat ? i3[c2].split(a2.delimiter).map(function(t4) {
                  return s3(t4, a2);
                }) : s3(i3[c2], a2);
              }
            return { path: o3, index: u2, params: f2 };
          };
        }
        function x(t3, n3) {
          for (var r3 = new Array(t3.length), e4 = 0; e4 < t3.length; e4++)
            "object" == typeof t3[e4] && (r3[e4] = new RegExp("^(?:" + t3[e4].pattern + ")$", R(n3)));
          return function(n4, e5) {
            for (var i3 = "", o3 = e5 && e5.encode || encodeURIComponent, u2 = !e5 || false !== e5.validate, f2 = 0; f2 < t3.length; f2++) {
              var s3 = t3[f2];
              if ("string" != typeof s3) {
                var c2, a2 = n4 ? n4[s3.name] : void 0;
                if (Array.isArray(a2)) {
                  if (!s3.repeat)
                    throw new TypeError('Expected "' + s3.name + '" to not repeat, but got array');
                  if (0 === a2.length) {
                    if (s3.optional)
                      continue;
                    throw new TypeError('Expected "' + s3.name + '" to not be empty');
                  }
                  for (var h2 = 0; h2 < a2.length; h2++) {
                    if (c2 = o3(a2[h2], s3), u2 && !r3[f2].test(c2))
                      throw new TypeError('Expected all "' + s3.name + '" to match "' + s3.pattern + '"');
                    i3 += (0 === h2 ? s3.prefix : s3.delimiter) + c2;
                  }
                } else if ("string" != typeof a2 && "number" != typeof a2 && "boolean" != typeof a2) {
                  if (!s3.optional)
                    throw new TypeError('Expected "' + s3.name + '" to be ' + (s3.repeat ? "an array" : "a string"));
                } else {
                  if (c2 = o3(String(a2), s3), u2 && !r3[f2].test(c2))
                    throw new TypeError('Expected "' + s3.name + '" to match "' + s3.pattern + '", but got "' + c2 + '"');
                  i3 += s3.prefix + c2;
                }
              } else
                i3 += s3;
            }
            return i3;
          };
        }
        function k(t3) {
          return t3.replace(/([.+*?=^!:${}()[\]|/\\])/g, "\\$1");
        }
        function A(t3) {
          return t3.replace(/([=!:$/()])/g, "\\$1");
        }
        function R(t3) {
          return t3 && t3.sensitive ? "" : "i";
        }
        function T(t3, n3, r3) {
          for (var e4 = (r3 = r3 || {}).strict, i3 = false !== r3.start, o3 = false !== r3.end, u2 = r3.delimiter || y, f2 = [].concat(r3.endsWith || []).map(k).concat("$").join("|"), s3 = i3 ? "^" : "", c2 = 0; c2 < t3.length; c2++) {
            var a2 = t3[c2];
            if ("string" == typeof a2)
              s3 += k(a2);
            else {
              var h2 = a2.repeat ? "(?:" + a2.pattern + ")(?:" + k(a2.delimiter) + "(?:" + a2.pattern + "))*" : a2.pattern;
              n3 && n3.push(a2), s3 += a2.optional ? a2.prefix ? "(?:" + k(a2.prefix) + "(" + h2 + "))?" : "(" + h2 + ")?" : k(a2.prefix) + "(" + h2 + ")";
            }
          }
          if (o3)
            e4 || (s3 += "(?:" + k(u2) + ")?"), s3 += "$" === f2 ? "$" : "(?=" + f2 + ")";
          else {
            var v2 = t3[t3.length - 1], l2 = "string" == typeof v2 ? v2[v2.length - 1] === u2 : void 0 === v2;
            e4 || (s3 += "(?:" + k(u2) + "(?=" + f2 + "))?"), l2 || (s3 += "(?=" + k(u2) + "|" + f2 + ")");
          }
          return new RegExp(s3, R(r3));
        }
        function O(t3, n3, r3) {
          return t3 instanceof RegExp ? function(t4, n4) {
            if (!n4)
              return t4;
            var r4 = t4.source.match(/\((?!\?)/g);
            if (r4)
              for (var e4 = 0; e4 < r4.length; e4++)
                n4.push({ name: e4, prefix: null, delimiter: null, optional: false, repeat: false, pattern: null });
            return t4;
          }(t3, n3) : Array.isArray(t3) ? function(t4, n4, r4) {
            for (var e4 = [], i3 = 0; i3 < t4.length; i3++)
              e4.push(O(t4[i3], n4, r4).source);
            return new RegExp("(?:" + e4.join("|") + ")", R(r4));
          }(t3, n3, r3) : function(t4, n4, r4) {
            return T(g(t4, r4), n4, r4);
          }(t3, n3, r3);
        }
        d.match = function(t3, n3) {
          var r3 = [];
          return E(O(t3, r3, n3), r3);
        }, d.regexpToFunction = m, d.parse = p, d.compile = function(t3, n3) {
          return x(g(t3, n3), n3);
        }, d.tokensToFunction = w, d.tokensToRegExp = b;
        var S = { container: "container", history: "history", namespace: "namespace", prefix: "data-barba", prevent: "prevent", wrapper: "wrapper" }, j = new (function() {
          function t3() {
            this.o = S, this.u = new DOMParser();
          }
          var n3 = t3.prototype;
          return n3.toString = function(t4) {
            return t4.outerHTML;
          }, n3.toDocument = function(t4) {
            return this.u.parseFromString(t4, "text/html");
          }, n3.toElement = function(t4) {
            var n4 = document.createElement("div");
            return n4.innerHTML = t4, n4;
          }, n3.getHtml = function(t4) {
            return void 0 === t4 && (t4 = document), this.toString(t4.documentElement);
          }, n3.getWrapper = function(t4) {
            return void 0 === t4 && (t4 = document), t4.querySelector("[" + this.o.prefix + '="' + this.o.wrapper + '"]');
          }, n3.getContainer = function(t4) {
            return void 0 === t4 && (t4 = document), t4.querySelector("[" + this.o.prefix + '="' + this.o.container + '"]');
          }, n3.removeContainer = function(t4) {
            document.body.contains(t4) && t4.parentNode.removeChild(t4);
          }, n3.addContainer = function(t4, n4) {
            var r3 = this.getContainer();
            r3 ? this.s(t4, r3) : n4.appendChild(t4);
          }, n3.getNamespace = function(t4) {
            void 0 === t4 && (t4 = document);
            var n4 = t4.querySelector("[" + this.o.prefix + "-" + this.o.namespace + "]");
            return n4 ? n4.getAttribute(this.o.prefix + "-" + this.o.namespace) : null;
          }, n3.getHref = function(t4) {
            if (t4.tagName && "a" === t4.tagName.toLowerCase()) {
              if ("string" == typeof t4.href)
                return t4.href;
              var n4 = t4.getAttribute("href") || t4.getAttribute("xlink:href");
              if (n4)
                return this.resolveUrl(n4.baseVal || n4);
            }
            return null;
          }, n3.resolveUrl = function() {
            for (var t4 = arguments.length, n4 = new Array(t4), r3 = 0; r3 < t4; r3++)
              n4[r3] = arguments[r3];
            var e4 = n4.length;
            if (0 === e4)
              throw new Error("resolveUrl requires at least one argument; got none.");
            var i3 = document.createElement("base");
            if (i3.href = arguments[0], 1 === e4)
              return i3.href;
            var o3 = document.getElementsByTagName("head")[0];
            o3.insertBefore(i3, o3.firstChild);
            for (var u2, f2 = document.createElement("a"), s3 = 1; s3 < e4; s3++)
              f2.href = arguments[s3], i3.href = u2 = f2.href;
            return o3.removeChild(i3), u2;
          }, n3.s = function(t4, n4) {
            n4.parentNode.insertBefore(t4, n4.nextSibling);
          }, t3;
        }())(), M = new (function() {
          function t3() {
            this.h = [], this.v = -1;
          }
          var e4 = t3.prototype;
          return e4.init = function(t4, n3) {
            this.l = "barba";
            var r3 = { ns: n3, scroll: { x: window.scrollX, y: window.scrollY }, url: t4 };
            this.h.push(r3), this.v = 0;
            var e5 = { from: this.l, index: 0, states: [].concat(this.h) };
            window.history && window.history.replaceState(e5, "", t4);
          }, e4.change = function(t4, n3, r3) {
            if (r3 && r3.state) {
              var e5 = r3.state, i3 = e5.index;
              n3 = this.m(this.v - i3), this.replace(e5.states), this.v = i3;
            } else
              this.add(t4, n3);
            return n3;
          }, e4.add = function(t4, n3) {
            var r3 = this.size, e5 = this.p(n3), i3 = { ns: "tmp", scroll: { x: window.scrollX, y: window.scrollY }, url: t4 };
            this.h.push(i3), this.v = r3;
            var o3 = { from: this.l, index: r3, states: [].concat(this.h) };
            switch (e5) {
              case "push":
                window.history && window.history.pushState(o3, "", t4);
                break;
              case "replace":
                window.history && window.history.replaceState(o3, "", t4);
            }
          }, e4.update = function(t4, n3) {
            var e5 = n3 || this.v, i3 = r2({}, this.get(e5), {}, t4);
            this.set(e5, i3);
          }, e4.remove = function(t4) {
            t4 ? this.h.splice(t4, 1) : this.h.pop(), this.v--;
          }, e4.clear = function() {
            this.h = [], this.v = -1;
          }, e4.replace = function(t4) {
            this.h = t4;
          }, e4.get = function(t4) {
            return this.h[t4];
          }, e4.set = function(t4, n3) {
            return this.h[t4] = n3;
          }, e4.p = function(t4) {
            var n3 = "push", r3 = t4, e5 = S.prefix + "-" + S.history;
            return r3.hasAttribute && r3.hasAttribute(e5) && (n3 = r3.getAttribute(e5)), n3;
          }, e4.m = function(t4) {
            return Math.abs(t4) > 1 ? t4 > 0 ? "forward" : "back" : 0 === t4 ? "popstate" : t4 > 0 ? "back" : "forward";
          }, n2(t3, [{ key: "current", get: function() {
            return this.h[this.v];
          } }, { key: "state", get: function() {
            return this.h[this.h.length - 1];
          } }, { key: "previous", get: function() {
            return this.v < 1 ? null : this.h[this.v - 1];
          } }, { key: "size", get: function() {
            return this.h.length;
          } }]), t3;
        }())(), L = function(t3, n3) {
          try {
            var r3 = function() {
              if (!n3.next.html)
                return Promise.resolve(t3).then(function(t4) {
                  var r4 = n3.next;
                  if (t4) {
                    var e4 = j.toElement(t4);
                    r4.namespace = j.getNamespace(e4), r4.container = j.getContainer(e4), r4.html = t4, M.update({ ns: r4.namespace });
                    var i3 = j.toDocument(t4);
                    document.title = i3.title;
                  }
                });
            }();
            return Promise.resolve(r3 && r3.then ? r3.then(function() {
            }) : void 0);
          } catch (t4) {
            return Promise.reject(t4);
          }
        }, $6 = d, _ = { __proto__: null, update: L, nextTick: function() {
          return new Promise(function(t3) {
            window.requestAnimationFrame(t3);
          });
        }, pathToRegexp: $6 }, q = function() {
          return window.location.origin;
        }, B = function(t3) {
          return void 0 === t3 && (t3 = window.location.href), U(t3).port;
        }, U = function(t3) {
          var n3, r3 = t3.match(/:\d+/);
          if (null === r3)
            /^http/.test(t3) && (n3 = 80), /^https/.test(t3) && (n3 = 443);
          else {
            var e4 = r3[0].substring(1);
            n3 = parseInt(e4, 10);
          }
          var i3, o3 = t3.replace(q(), ""), u2 = {}, f2 = o3.indexOf("#");
          f2 >= 0 && (i3 = o3.slice(f2 + 1), o3 = o3.slice(0, f2));
          var s3 = o3.indexOf("?");
          return s3 >= 0 && (u2 = D(o3.slice(s3 + 1)), o3 = o3.slice(0, s3)), { hash: i3, path: o3, port: n3, query: u2 };
        }, D = function(t3) {
          return t3.split("&").reduce(function(t4, n3) {
            var r3 = n3.split("=");
            return t4[r3[0]] = r3[1], t4;
          }, {});
        }, F = function(t3) {
          return void 0 === t3 && (t3 = window.location.href), t3.replace(/(\/#.*|\/|#.*)$/, "");
        }, H = { __proto__: null, getHref: function() {
          return window.location.href;
        }, getOrigin: q, getPort: B, getPath: function(t3) {
          return void 0 === t3 && (t3 = window.location.href), U(t3).path;
        }, parse: U, parseQuery: D, clean: F };
        function I(t3, n3, r3) {
          return void 0 === n3 && (n3 = 2e3), new Promise(function(e4, i3) {
            var o3 = new XMLHttpRequest();
            o3.onreadystatechange = function() {
              if (o3.readyState === XMLHttpRequest.DONE) {
                if (200 === o3.status)
                  e4(o3.responseText);
                else if (o3.status) {
                  var n4 = { status: o3.status, statusText: o3.statusText };
                  r3(t3, n4), i3(n4);
                }
              }
            }, o3.ontimeout = function() {
              var e5 = new Error("Timeout error [" + n3 + "]");
              r3(t3, e5), i3(e5);
            }, o3.onerror = function() {
              var n4 = new Error("Fetch error");
              r3(t3, n4), i3(n4);
            }, o3.open("GET", t3), o3.timeout = n3, o3.setRequestHeader("Accept", "text/html,application/xhtml+xml,application/xml"), o3.setRequestHeader("x-barba", "yes"), o3.send();
          });
        }
        var C = function(t3) {
          return !!t3 && ("object" == typeof t3 || "function" == typeof t3) && "function" == typeof t3.then;
        };
        function N(t3, n3) {
          return void 0 === n3 && (n3 = {}), function() {
            for (var r3 = arguments.length, e4 = new Array(r3), i3 = 0; i3 < r3; i3++)
              e4[i3] = arguments[i3];
            var o3 = false, u2 = new Promise(function(r4, i4) {
              n3.async = function() {
                return o3 = true, function(t4, n4) {
                  t4 ? i4(t4) : r4(n4);
                };
              };
              var u3 = t3.apply(n3, e4);
              o3 || (C(u3) ? u3.then(r4, i4) : r4(u3));
            });
            return u2;
          };
        }
        var X = new (function(t3) {
          function n3() {
            var n4;
            return (n4 = t3.call(this) || this).logger = new l("@barba/core"), n4.all = ["ready", "page", "reset", "currentAdded", "currentRemoved", "nextAdded", "nextRemoved", "beforeOnce", "once", "afterOnce", "before", "beforeLeave", "leave", "afterLeave", "beforeEnter", "enter", "afterEnter", "after"], n4.registered = /* @__PURE__ */ new Map(), n4.init(), n4;
          }
          e3(n3, t3);
          var r3 = n3.prototype;
          return r3.init = function() {
            var t4 = this;
            this.registered.clear(), this.all.forEach(function(n4) {
              t4[n4] || (t4[n4] = function(r4, e4) {
                t4.registered.has(n4) || t4.registered.set(n4, /* @__PURE__ */ new Set()), t4.registered.get(n4).add({ ctx: e4 || {}, fn: r4 });
              });
            });
          }, r3.do = function(t4) {
            for (var n4 = this, r4 = arguments.length, e4 = new Array(r4 > 1 ? r4 - 1 : 0), i3 = 1; i3 < r4; i3++)
              e4[i3 - 1] = arguments[i3];
            if (this.registered.has(t4)) {
              var o3 = Promise.resolve();
              return this.registered.get(t4).forEach(function(t5) {
                o3 = o3.then(function() {
                  return N(t5.fn, t5.ctx).apply(void 0, e4);
                });
              }), o3.catch(function(r5) {
                n4.logger.debug("Hook error [" + t4 + "]"), n4.logger.error(r5);
              });
            }
            return Promise.resolve();
          }, r3.clear = function() {
            var t4 = this;
            this.all.forEach(function(n4) {
              delete t4[n4];
            }), this.init();
          }, r3.help = function() {
            this.logger.info("Available hooks: " + this.all.join(","));
            var t4 = [];
            this.registered.forEach(function(n4, r4) {
              return t4.push(r4);
            }), this.logger.info("Registered hooks: " + t4.join(","));
          }, n3;
        }(h))(), z = function() {
          function t3(t4) {
            if (this.P = [], "boolean" == typeof t4)
              this.g = t4;
            else {
              var n3 = Array.isArray(t4) ? t4 : [t4];
              this.P = n3.map(function(t5) {
                return $6(t5);
              });
            }
          }
          return t3.prototype.checkHref = function(t4) {
            if ("boolean" == typeof this.g)
              return this.g;
            var n3 = U(t4).path;
            return this.P.some(function(t5) {
              return null !== t5.exec(n3);
            });
          }, t3;
        }(), G = function(t3) {
          function n3(n4) {
            var r3;
            return (r3 = t3.call(this, n4) || this).k = /* @__PURE__ */ new Map(), r3;
          }
          e3(n3, t3);
          var i3 = n3.prototype;
          return i3.set = function(t4, n4, r3) {
            return this.k.set(t4, { action: r3, request: n4 }), { action: r3, request: n4 };
          }, i3.get = function(t4) {
            return this.k.get(t4);
          }, i3.getRequest = function(t4) {
            return this.k.get(t4).request;
          }, i3.getAction = function(t4) {
            return this.k.get(t4).action;
          }, i3.has = function(t4) {
            return !this.checkHref(t4) && this.k.has(t4);
          }, i3.delete = function(t4) {
            return this.k.delete(t4);
          }, i3.update = function(t4, n4) {
            var e4 = r2({}, this.k.get(t4), {}, n4);
            return this.k.set(t4, e4), e4;
          }, n3;
        }(z), Q = function() {
          return !window.history.pushState;
        }, W = function(t3) {
          return !t3.el || !t3.href;
        }, J = function(t3) {
          var n3 = t3.event;
          return n3.which > 1 || n3.metaKey || n3.ctrlKey || n3.shiftKey || n3.altKey;
        }, K = function(t3) {
          var n3 = t3.el;
          return n3.hasAttribute("target") && "_blank" === n3.target;
        }, V = function(t3) {
          var n3 = t3.el;
          return void 0 !== n3.protocol && window.location.protocol !== n3.protocol || void 0 !== n3.hostname && window.location.hostname !== n3.hostname;
        }, Y = function(t3) {
          var n3 = t3.el;
          return void 0 !== n3.port && B() !== B(n3.href);
        }, Z = function(t3) {
          var n3 = t3.el;
          return n3.getAttribute && "string" == typeof n3.getAttribute("download");
        }, tt = function(t3) {
          return t3.el.hasAttribute(S.prefix + "-" + S.prevent);
        }, nt = function(t3) {
          return Boolean(t3.el.closest("[" + S.prefix + "-" + S.prevent + '="all"]'));
        }, rt = function(t3) {
          var n3 = t3.href;
          return F(n3) === F() && B(n3) === B();
        }, et = function(t3) {
          function n3(n4) {
            var r4;
            return (r4 = t3.call(this, n4) || this).suite = [], r4.tests = /* @__PURE__ */ new Map(), r4.init(), r4;
          }
          e3(n3, t3);
          var r3 = n3.prototype;
          return r3.init = function() {
            this.add("pushState", Q), this.add("exists", W), this.add("newTab", J), this.add("blank", K), this.add("corsDomain", V), this.add("corsPort", Y), this.add("download", Z), this.add("preventSelf", tt), this.add("preventAll", nt), this.add("sameUrl", rt, false);
          }, r3.add = function(t4, n4, r4) {
            void 0 === r4 && (r4 = true), this.tests.set(t4, n4), r4 && this.suite.push(t4);
          }, r3.run = function(t4, n4, r4, e4) {
            return this.tests.get(t4)({ el: n4, event: r4, href: e4 });
          }, r3.checkLink = function(t4, n4, r4) {
            var e4 = this;
            return this.suite.some(function(i3) {
              return e4.run(i3, t4, n4, r4);
            });
          }, n3;
        }(z), it = function(t3) {
          function n3(r3, e4) {
            var i3;
            void 0 === e4 && (e4 = "Barba error");
            for (var o3 = arguments.length, u2 = new Array(o3 > 2 ? o3 - 2 : 0), f2 = 2; f2 < o3; f2++)
              u2[f2 - 2] = arguments[f2];
            return (i3 = t3.call.apply(t3, [this].concat(u2)) || this).error = r3, i3.label = e4, Error.captureStackTrace && Error.captureStackTrace(function(t4) {
              if (void 0 === t4)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              return t4;
            }(i3), n3), i3.name = "BarbaError", i3;
          }
          return e3(n3, t3), n3;
        }(f(Error)), ot = function() {
          function t3(t4) {
            void 0 === t4 && (t4 = []), this.logger = new l("@barba/core"), this.all = [], this.page = [], this.once = [], this.A = [{ name: "namespace", type: "strings" }, { name: "custom", type: "function" }], t4 && (this.all = this.all.concat(t4)), this.update();
          }
          var n3 = t3.prototype;
          return n3.add = function(t4, n4) {
            switch (t4) {
              case "rule":
                this.A.splice(n4.position || 0, 0, n4.value);
                break;
              case "transition":
              default:
                this.all.push(n4);
            }
            this.update();
          }, n3.resolve = function(t4, n4) {
            var r3 = this;
            void 0 === n4 && (n4 = {});
            var e4 = n4.once ? this.once : this.page;
            e4 = e4.filter(n4.self ? function(t5) {
              return t5.name && "self" === t5.name;
            } : function(t5) {
              return !t5.name || "self" !== t5.name;
            });
            var i3 = /* @__PURE__ */ new Map(), o3 = e4.find(function(e5) {
              var o4 = true, u3 = {};
              return !(!n4.self || "self" !== e5.name) || (r3.A.reverse().forEach(function(n5) {
                o4 && (o4 = r3.R(e5, n5, t4, u3), e5.from && e5.to && (o4 = r3.R(e5, n5, t4, u3, "from") && r3.R(e5, n5, t4, u3, "to")), e5.from && !e5.to && (o4 = r3.R(e5, n5, t4, u3, "from")), !e5.from && e5.to && (o4 = r3.R(e5, n5, t4, u3, "to")));
              }), i3.set(e5, u3), o4);
            }), u2 = i3.get(o3), f2 = [];
            if (f2.push(n4.once ? "once" : "page"), n4.self && f2.push("self"), u2) {
              var s3, c2 = [o3];
              Object.keys(u2).length > 0 && c2.push(u2), (s3 = this.logger).info.apply(s3, ["Transition found [" + f2.join(",") + "]"].concat(c2));
            } else
              this.logger.info("No transition found [" + f2.join(",") + "]");
            return o3;
          }, n3.update = function() {
            var t4 = this;
            this.all = this.all.map(function(n4) {
              return t4.T(n4);
            }).sort(function(t5, n4) {
              return t5.priority - n4.priority;
            }).reverse().map(function(t5) {
              return delete t5.priority, t5;
            }), this.page = this.all.filter(function(t5) {
              return void 0 !== t5.leave || void 0 !== t5.enter;
            }), this.once = this.all.filter(function(t5) {
              return void 0 !== t5.once;
            });
          }, n3.R = function(t4, n4, r3, e4, i3) {
            var o3 = true, u2 = false, f2 = t4, s3 = n4.name, c2 = s3, a2 = s3, h2 = s3, v2 = i3 ? f2[i3] : f2, l2 = "to" === i3 ? r3.next : r3.current;
            if (i3 ? v2 && v2[s3] : v2[s3]) {
              switch (n4.type) {
                case "strings":
                default:
                  var d2 = Array.isArray(v2[c2]) ? v2[c2] : [v2[c2]];
                  l2[c2] && -1 !== d2.indexOf(l2[c2]) && (u2 = true), -1 === d2.indexOf(l2[c2]) && (o3 = false);
                  break;
                case "object":
                  var m2 = Array.isArray(v2[a2]) ? v2[a2] : [v2[a2]];
                  l2[a2] ? (l2[a2].name && -1 !== m2.indexOf(l2[a2].name) && (u2 = true), -1 === m2.indexOf(l2[a2].name) && (o3 = false)) : o3 = false;
                  break;
                case "function":
                  v2[h2](r3) ? u2 = true : o3 = false;
              }
              u2 && (i3 ? (e4[i3] = e4[i3] || {}, e4[i3][s3] = f2[i3][s3]) : e4[s3] = f2[s3]);
            }
            return o3;
          }, n3.O = function(t4, n4, r3) {
            var e4 = 0;
            return (t4[n4] || t4.from && t4.from[n4] || t4.to && t4.to[n4]) && (e4 += Math.pow(10, r3), t4.from && t4.from[n4] && (e4 += 1), t4.to && t4.to[n4] && (e4 += 2)), e4;
          }, n3.T = function(t4) {
            var n4 = this;
            t4.priority = 0;
            var r3 = 0;
            return this.A.forEach(function(e4, i3) {
              r3 += n4.O(t4, e4.name, i3 + 1);
            }), t4.priority = r3, t4;
          }, t3;
        }(), ut = function() {
          function t3(t4) {
            void 0 === t4 && (t4 = []), this.logger = new l("@barba/core"), this.S = false, this.store = new ot(t4);
          }
          var r3 = t3.prototype;
          return r3.get = function(t4, n3) {
            return this.store.resolve(t4, n3);
          }, r3.doOnce = function(t4) {
            var n3 = t4.data, r4 = t4.transition;
            try {
              var e4 = function() {
                i3.S = false;
              }, i3 = this, o3 = r4 || {};
              i3.S = true;
              var u2 = s2(function() {
                return Promise.resolve(i3.j("beforeOnce", n3, o3)).then(function() {
                  return Promise.resolve(i3.once(n3, o3)).then(function() {
                    return Promise.resolve(i3.j("afterOnce", n3, o3)).then(function() {
                    });
                  });
                });
              }, function(t5) {
                i3.S = false, i3.logger.debug("Transition error [before/after/once]"), i3.logger.error(t5);
              });
              return Promise.resolve(u2 && u2.then ? u2.then(e4) : e4());
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, r3.doPage = function(t4) {
            var n3 = t4.data, r4 = t4.transition, e4 = t4.page, i3 = t4.wrapper;
            try {
              var o3 = function(t5) {
                if (u2)
                  return t5;
                f2.S = false;
              }, u2 = false, f2 = this, c2 = r4 || {}, a2 = true === c2.sync || false;
              f2.S = true;
              var h2 = s2(function() {
                function t5() {
                  return Promise.resolve(f2.j("before", n3, c2)).then(function() {
                    var t6 = false;
                    function r6(r7) {
                      return t6 ? r7 : Promise.resolve(f2.remove(n3)).then(function() {
                        return Promise.resolve(f2.j("after", n3, c2)).then(function() {
                        });
                      });
                    }
                    var o4 = function() {
                      if (a2)
                        return s2(function() {
                          return Promise.resolve(f2.add(n3, i3)).then(function() {
                            return Promise.resolve(f2.j("beforeLeave", n3, c2)).then(function() {
                              return Promise.resolve(f2.j("beforeEnter", n3, c2)).then(function() {
                                return Promise.resolve(Promise.all([f2.leave(n3, c2), f2.enter(n3, c2)])).then(function() {
                                  return Promise.resolve(f2.j("afterLeave", n3, c2)).then(function() {
                                    return Promise.resolve(f2.j("afterEnter", n3, c2)).then(function() {
                                    });
                                  });
                                });
                              });
                            });
                          });
                        }, function(t7) {
                          if (f2.M(t7))
                            throw new it(t7, "Transition error [sync]");
                        });
                      var r7 = function(r8) {
                        return t6 ? r8 : s2(function() {
                          var t7 = function() {
                            if (false !== o5)
                              return Promise.resolve(f2.add(n3, i3)).then(function() {
                                return Promise.resolve(f2.j("beforeEnter", n3, c2)).then(function() {
                                  return Promise.resolve(f2.enter(n3, c2, o5)).then(function() {
                                    return Promise.resolve(f2.j("afterEnter", n3, c2)).then(function() {
                                    });
                                  });
                                });
                              });
                          }();
                          if (t7 && t7.then)
                            return t7.then(function() {
                            });
                        }, function(t7) {
                          if (f2.M(t7))
                            throw new it(t7, "Transition error [before/after/enter]");
                        });
                      }, o5 = false, u3 = s2(function() {
                        return Promise.resolve(f2.j("beforeLeave", n3, c2)).then(function() {
                          return Promise.resolve(Promise.all([f2.leave(n3, c2), L(e4, n3)]).then(function(t7) {
                            return t7[0];
                          })).then(function(t7) {
                            return o5 = t7, Promise.resolve(f2.j("afterLeave", n3, c2)).then(function() {
                            });
                          });
                        });
                      }, function(t7) {
                        if (f2.M(t7))
                          throw new it(t7, "Transition error [before/after/leave]");
                      });
                      return u3 && u3.then ? u3.then(r7) : r7(u3);
                    }();
                    return o4 && o4.then ? o4.then(r6) : r6(o4);
                  });
                }
                var r5 = function() {
                  if (a2)
                    return Promise.resolve(L(e4, n3)).then(function() {
                    });
                }();
                return r5 && r5.then ? r5.then(t5) : t5();
              }, function(t5) {
                if (f2.S = false, t5.name && "BarbaError" === t5.name)
                  throw f2.logger.debug(t5.label), f2.logger.error(t5.error), t5;
                throw f2.logger.debug("Transition error [page]"), f2.logger.error(t5), t5;
              });
              return Promise.resolve(h2 && h2.then ? h2.then(o3) : o3(h2));
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, r3.once = function(t4, n3) {
            try {
              return Promise.resolve(X.do("once", t4, n3)).then(function() {
                return n3.once ? N(n3.once, n3)(t4) : Promise.resolve();
              });
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, r3.leave = function(t4, n3) {
            try {
              return Promise.resolve(X.do("leave", t4, n3)).then(function() {
                return n3.leave ? N(n3.leave, n3)(t4) : Promise.resolve();
              });
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, r3.enter = function(t4, n3, r4) {
            try {
              return Promise.resolve(X.do("enter", t4, n3)).then(function() {
                return n3.enter ? N(n3.enter, n3)(t4, r4) : Promise.resolve();
              });
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, r3.add = function(t4, n3) {
            try {
              return j.addContainer(t4.next.container, n3), X.do("nextAdded", t4), Promise.resolve();
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, r3.remove = function(t4) {
            try {
              return j.removeContainer(t4.current.container), X.do("currentRemoved", t4), Promise.resolve();
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, r3.M = function(t4) {
            return t4.message ? !/Timeout error|Fetch error/.test(t4.message) : !t4.status;
          }, r3.j = function(t4, n3, r4) {
            try {
              return Promise.resolve(X.do(t4, n3, r4)).then(function() {
                return r4[t4] ? N(r4[t4], r4)(n3) : Promise.resolve();
              });
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, n2(t3, [{ key: "isRunning", get: function() {
            return this.S;
          }, set: function(t4) {
            this.S = t4;
          } }, { key: "hasOnce", get: function() {
            return this.store.once.length > 0;
          } }, { key: "hasSelf", get: function() {
            return this.store.all.some(function(t4) {
              return "self" === t4.name;
            });
          } }, { key: "shouldWait", get: function() {
            return this.store.all.some(function(t4) {
              return t4.to && !t4.to.route || t4.sync;
            });
          } }]), t3;
        }(), ft = function() {
          function t3(t4) {
            var n3 = this;
            this.names = ["beforeLeave", "afterLeave", "beforeEnter", "afterEnter"], this.byNamespace = /* @__PURE__ */ new Map(), 0 !== t4.length && (t4.forEach(function(t5) {
              n3.byNamespace.set(t5.namespace, t5);
            }), this.names.forEach(function(t5) {
              X[t5](n3.L(t5));
            }));
          }
          return t3.prototype.L = function(t4) {
            var n3 = this;
            return function(r3) {
              var e4 = t4.match(/enter/i) ? r3.next : r3.current, i3 = n3.byNamespace.get(e4.namespace);
              return i3 && i3[t4] ? N(i3[t4], i3)(r3) : Promise.resolve();
            };
          }, t3;
        }();
        Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), Element.prototype.closest || (Element.prototype.closest = function(t3) {
          var n3 = this;
          do {
            if (n3.matches(t3))
              return n3;
            n3 = n3.parentElement || n3.parentNode;
          } while (null !== n3 && 1 === n3.nodeType);
          return null;
        });
        var st = { container: null, html: "", namespace: "", url: { hash: "", href: "", path: "", port: null, query: {} } };
        return new (function() {
          function t3() {
            this.version = a, this.schemaPage = st, this.Logger = l, this.logger = new l("@barba/core"), this.plugins = [], this.hooks = X, this.dom = j, this.helpers = _, this.history = M, this.request = I, this.url = H;
          }
          var e4 = t3.prototype;
          return e4.use = function(t4, n3) {
            var r3 = this.plugins;
            r3.indexOf(t4) > -1 ? this.logger.warn("Plugin [" + t4.name + "] already installed.") : "function" == typeof t4.install ? (t4.install(this, n3), r3.push(t4)) : this.logger.warn("Plugin [" + t4.name + '] has no "install" method.');
          }, e4.init = function(t4) {
            var n3 = void 0 === t4 ? {} : t4, e5 = n3.transitions, i3 = void 0 === e5 ? [] : e5, o3 = n3.views, u2 = void 0 === o3 ? [] : o3, f2 = n3.schema, s3 = void 0 === f2 ? S : f2, c2 = n3.requestError, a2 = n3.timeout, h2 = void 0 === a2 ? 2e3 : a2, v2 = n3.cacheIgnore, d2 = void 0 !== v2 && v2, m2 = n3.prefetchIgnore, p2 = void 0 !== m2 && m2, w2 = n3.preventRunning, b2 = void 0 !== w2 && w2, y2 = n3.prevent, P2 = void 0 === y2 ? null : y2, g2 = n3.debug, E2 = n3.logLevel;
            if (l.setLevel(true === (void 0 !== g2 && g2) ? "debug" : void 0 === E2 ? "off" : E2), this.logger.info(this.version), Object.keys(s3).forEach(function(t5) {
              S[t5] && (S[t5] = s3[t5]);
            }), this.$ = c2, this.timeout = h2, this.cacheIgnore = d2, this.prefetchIgnore = p2, this.preventRunning = b2, this._ = this.dom.getWrapper(), !this._)
              throw new Error("[@barba/core] No Barba wrapper found");
            this._.setAttribute("aria-live", "polite"), this.q();
            var x2 = this.data.current;
            if (!x2.container)
              throw new Error("[@barba/core] No Barba container found");
            if (this.cache = new G(d2), this.prevent = new et(p2), this.transitions = new ut(i3), this.views = new ft(u2), null !== P2) {
              if ("function" != typeof P2)
                throw new Error("[@barba/core] Prevent should be a function");
              this.prevent.add("preventCustom", P2);
            }
            this.history.init(x2.url.href, x2.namespace), this.B = this.B.bind(this), this.U = this.U.bind(this), this.D = this.D.bind(this), this.F(), this.plugins.forEach(function(t5) {
              return t5.init();
            });
            var k2 = this.data;
            k2.trigger = "barba", k2.next = k2.current, k2.current = r2({}, this.schemaPage), this.hooks.do("ready", k2), this.once(k2), this.q();
          }, e4.destroy = function() {
            this.q(), this.H(), this.history.clear(), this.hooks.clear(), this.plugins = [];
          }, e4.force = function(t4) {
            window.location.assign(t4);
          }, e4.go = function(t4, n3, r3) {
            var e5;
            if (void 0 === n3 && (n3 = "barba"), this.transitions.isRunning)
              this.force(t4);
            else if (!(e5 = "popstate" === n3 ? this.history.current && this.url.getPath(this.history.current.url) === this.url.getPath(t4) : this.prevent.run("sameUrl", null, null, t4)) || this.transitions.hasSelf)
              return n3 = this.history.change(t4, n3, r3), r3 && (r3.stopPropagation(), r3.preventDefault()), this.page(t4, n3, e5);
          }, e4.once = function(t4) {
            try {
              var n3 = this;
              return Promise.resolve(n3.hooks.do("beforeEnter", t4)).then(function() {
                function r3() {
                  return Promise.resolve(n3.hooks.do("afterEnter", t4)).then(function() {
                  });
                }
                var e5 = function() {
                  if (n3.transitions.hasOnce) {
                    var r4 = n3.transitions.get(t4, { once: true });
                    return Promise.resolve(n3.transitions.doOnce({ transition: r4, data: t4 })).then(function() {
                    });
                  }
                }();
                return e5 && e5.then ? e5.then(r3) : r3();
              });
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, e4.page = function(t4, n3, e5) {
            try {
              var i3 = function() {
                var t5 = o3.data;
                return Promise.resolve(o3.hooks.do("page", t5)).then(function() {
                  var n4 = s2(function() {
                    var n5 = o3.transitions.get(t5, { once: false, self: e5 });
                    return Promise.resolve(o3.transitions.doPage({ data: t5, page: u2, transition: n5, wrapper: o3._ })).then(function() {
                      o3.q();
                    });
                  }, function() {
                    0 === l.getLevel() && o3.force(t5.current.url.href);
                  });
                  if (n4 && n4.then)
                    return n4.then(function() {
                    });
                });
              }, o3 = this;
              o3.data.next.url = r2({ href: t4 }, o3.url.parse(t4)), o3.data.trigger = n3;
              var u2 = o3.cache.has(t4) ? o3.cache.update(t4, { action: "click" }).request : o3.cache.set(t4, o3.request(t4, o3.timeout, o3.onRequestError.bind(o3, n3)), "click").request, f2 = function() {
                if (o3.transitions.shouldWait)
                  return Promise.resolve(L(u2, o3.data)).then(function() {
                  });
              }();
              return Promise.resolve(f2 && f2.then ? f2.then(i3) : i3());
            } catch (t5) {
              return Promise.reject(t5);
            }
          }, e4.onRequestError = function(t4) {
            this.transitions.isRunning = false;
            for (var n3 = arguments.length, r3 = new Array(n3 > 1 ? n3 - 1 : 0), e5 = 1; e5 < n3; e5++)
              r3[e5 - 1] = arguments[e5];
            var i3 = r3[0], o3 = r3[1], u2 = this.cache.getAction(i3);
            return this.cache.delete(i3), !(this.$ && false === this.$(t4, u2, i3, o3) || ("click" === u2 && this.force(i3), 1));
          }, e4.prefetch = function(t4) {
            var n3 = this;
            this.cache.has(t4) || this.cache.set(t4, this.request(t4, this.timeout, this.onRequestError.bind(this, "barba")).catch(function(t5) {
              n3.logger.error(t5);
            }), "prefetch");
          }, e4.F = function() {
            true !== this.prefetchIgnore && (document.addEventListener("mouseover", this.B), document.addEventListener("touchstart", this.B)), document.addEventListener("click", this.U), window.addEventListener("popstate", this.D);
          }, e4.H = function() {
            true !== this.prefetchIgnore && (document.removeEventListener("mouseover", this.B), document.removeEventListener("touchstart", this.B)), document.removeEventListener("click", this.U), window.removeEventListener("popstate", this.D);
          }, e4.B = function(t4) {
            var n3 = this, r3 = this.I(t4);
            if (r3) {
              var e5 = this.dom.getHref(r3);
              this.prevent.checkHref(e5) || this.cache.has(e5) || this.cache.set(e5, this.request(e5, this.timeout, this.onRequestError.bind(this, r3)).catch(function(t5) {
                n3.logger.error(t5);
              }), "enter");
            }
          }, e4.U = function(t4) {
            var n3 = this.I(t4);
            if (n3)
              return this.transitions.isRunning && this.preventRunning ? (t4.preventDefault(), void t4.stopPropagation()) : void this.go(this.dom.getHref(n3), n3, t4);
          }, e4.D = function(t4) {
            this.go(this.url.getHref(), "popstate", t4);
          }, e4.I = function(t4) {
            for (var n3 = t4.target; n3 && !this.dom.getHref(n3); )
              n3 = n3.parentNode;
            if (n3 && !this.prevent.checkLink(n3, t4, this.dom.getHref(n3)))
              return n3;
          }, e4.q = function() {
            var t4 = this.url.getHref(), n3 = { container: this.dom.getContainer(), html: this.dom.getHtml(), namespace: this.dom.getNamespace(), url: r2({ href: t4 }, this.url.parse(t4)) };
            this.C = { current: n3, next: r2({}, this.schemaPage), trigger: void 0 }, this.hooks.do("reset", this.data);
          }, n2(t3, [{ key: "data", get: function() {
            return this.C;
          } }, { key: "wrapper", get: function() {
            return this._;
          } }]), t3;
        }())();
      });
    }
  });

  // node_modules/.pnpm/jquery@3.7.1/node_modules/jquery/dist/jquery.js
  var require_jquery = __commonJS({
    "node_modules/.pnpm/jquery@3.7.1/node_modules/jquery/dist/jquery.js"(exports, module) {
      init_live_reload();
      (function(global2, factory) {
        "use strict";
        if (typeof module === "object" && typeof module.exports === "object") {
          module.exports = global2.document ? factory(global2, true) : function(w) {
            if (!w.document) {
              throw new Error("jQuery requires a window with a document");
            }
            return factory(w);
          };
        } else {
          factory(global2);
        }
      })(typeof window !== "undefined" ? window : exports, function(window2, noGlobal) {
        "use strict";
        var arr = [];
        var getProto = Object.getPrototypeOf;
        var slice = arr.slice;
        var flat = arr.flat ? function(array) {
          return arr.flat.call(array);
        } : function(array) {
          return arr.concat.apply([], array);
        };
        var push = arr.push;
        var indexOf = arr.indexOf;
        var class2type = {};
        var toString2 = class2type.toString;
        var hasOwn = class2type.hasOwnProperty;
        var fnToString = hasOwn.toString;
        var ObjectFunctionString = fnToString.call(Object);
        var support2 = {};
        var isFunction = function isFunction2(obj) {
          return typeof obj === "function" && typeof obj.nodeType !== "number" && typeof obj.item !== "function";
        };
        var isWindow = function isWindow2(obj) {
          return obj != null && obj === obj.window;
        };
        var document2 = window2.document;
        var preservedScriptAttributes = {
          type: true,
          src: true,
          nonce: true,
          noModule: true
        };
        function DOMEval(code, node, doc) {
          doc = doc || document2;
          var i2, val, script = doc.createElement("script");
          script.text = code;
          if (node) {
            for (i2 in preservedScriptAttributes) {
              val = node[i2] || node.getAttribute && node.getAttribute(i2);
              if (val) {
                script.setAttribute(i2, val);
              }
            }
          }
          doc.head.appendChild(script).parentNode.removeChild(script);
        }
        function toType(obj) {
          if (obj == null) {
            return obj + "";
          }
          return typeof obj === "object" || typeof obj === "function" ? class2type[toString2.call(obj)] || "object" : typeof obj;
        }
        var version = "3.7.1", rhtmlSuffix = /HTML$/i, jQuery2 = function(selector3, context3) {
          return new jQuery2.fn.init(selector3, context3);
        };
        jQuery2.fn = jQuery2.prototype = {
          // The current version of jQuery being used
          jquery: version,
          constructor: jQuery2,
          // The default length of a jQuery object is 0
          length: 0,
          toArray: function() {
            return slice.call(this);
          },
          // Get the Nth element in the matched element set OR
          // Get the whole matched element set as a clean array
          get: function(num) {
            if (num == null) {
              return slice.call(this);
            }
            return num < 0 ? this[num + this.length] : this[num];
          },
          // Take an array of elements and push it onto the stack
          // (returning the new matched element set)
          pushStack: function(elems) {
            var ret = jQuery2.merge(this.constructor(), elems);
            ret.prevObject = this;
            return ret;
          },
          // Execute a callback for every element in the matched set.
          each: function(callback) {
            return jQuery2.each(this, callback);
          },
          map: function(callback) {
            return this.pushStack(jQuery2.map(this, function(elem, i2) {
              return callback.call(elem, i2, elem);
            }));
          },
          slice: function() {
            return this.pushStack(slice.apply(this, arguments));
          },
          first: function() {
            return this.eq(0);
          },
          last: function() {
            return this.eq(-1);
          },
          even: function() {
            return this.pushStack(jQuery2.grep(this, function(_elem, i2) {
              return (i2 + 1) % 2;
            }));
          },
          odd: function() {
            return this.pushStack(jQuery2.grep(this, function(_elem, i2) {
              return i2 % 2;
            }));
          },
          eq: function(i2) {
            var len = this.length, j = +i2 + (i2 < 0 ? len : 0);
            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);
          },
          end: function() {
            return this.prevObject || this.constructor();
          },
          // For internal use only.
          // Behaves like an Array's method, not like a jQuery method.
          push,
          sort: arr.sort,
          splice: arr.splice
        };
        jQuery2.extend = jQuery2.fn.extend = function() {
          var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i2 = 1, length = arguments.length, deep = false;
          if (typeof target === "boolean") {
            deep = target;
            target = arguments[i2] || {};
            i2++;
          }
          if (typeof target !== "object" && !isFunction(target)) {
            target = {};
          }
          if (i2 === length) {
            target = this;
            i2--;
          }
          for (; i2 < length; i2++) {
            if ((options = arguments[i2]) != null) {
              for (name in options) {
                copy = options[name];
                if (name === "__proto__" || target === copy) {
                  continue;
                }
                if (deep && copy && (jQuery2.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {
                  src = target[name];
                  if (copyIsArray && !Array.isArray(src)) {
                    clone = [];
                  } else if (!copyIsArray && !jQuery2.isPlainObject(src)) {
                    clone = {};
                  } else {
                    clone = src;
                  }
                  copyIsArray = false;
                  target[name] = jQuery2.extend(deep, clone, copy);
                } else if (copy !== void 0) {
                  target[name] = copy;
                }
              }
            }
          }
          return target;
        };
        jQuery2.extend({
          // Unique for each copy of jQuery on the page
          expando: "jQuery" + (version + Math.random()).replace(/\D/g, ""),
          // Assume jQuery is ready without the ready module
          isReady: true,
          error: function(msg) {
            throw new Error(msg);
          },
          noop: function() {
          },
          isPlainObject: function(obj) {
            var proto, Ctor;
            if (!obj || toString2.call(obj) !== "[object Object]") {
              return false;
            }
            proto = getProto(obj);
            if (!proto) {
              return true;
            }
            Ctor = hasOwn.call(proto, "constructor") && proto.constructor;
            return typeof Ctor === "function" && fnToString.call(Ctor) === ObjectFunctionString;
          },
          isEmptyObject: function(obj) {
            var name;
            for (name in obj) {
              return false;
            }
            return true;
          },
          // Evaluates a script in a provided context; falls back to the global one
          // if not specified.
          globalEval: function(code, options, doc) {
            DOMEval(code, { nonce: options && options.nonce }, doc);
          },
          each: function(obj, callback) {
            var length, i2 = 0;
            if (isArrayLike(obj)) {
              length = obj.length;
              for (; i2 < length; i2++) {
                if (callback.call(obj[i2], i2, obj[i2]) === false) {
                  break;
                }
              }
            } else {
              for (i2 in obj) {
                if (callback.call(obj[i2], i2, obj[i2]) === false) {
                  break;
                }
              }
            }
            return obj;
          },
          // Retrieve the text value of an array of DOM nodes
          text: function(elem) {
            var node, ret = "", i2 = 0, nodeType = elem.nodeType;
            if (!nodeType) {
              while (node = elem[i2++]) {
                ret += jQuery2.text(node);
              }
            }
            if (nodeType === 1 || nodeType === 11) {
              return elem.textContent;
            }
            if (nodeType === 9) {
              return elem.documentElement.textContent;
            }
            if (nodeType === 3 || nodeType === 4) {
              return elem.nodeValue;
            }
            return ret;
          },
          // results is for internal usage only
          makeArray: function(arr2, results) {
            var ret = results || [];
            if (arr2 != null) {
              if (isArrayLike(Object(arr2))) {
                jQuery2.merge(
                  ret,
                  typeof arr2 === "string" ? [arr2] : arr2
                );
              } else {
                push.call(ret, arr2);
              }
            }
            return ret;
          },
          inArray: function(elem, arr2, i2) {
            return arr2 == null ? -1 : indexOf.call(arr2, elem, i2);
          },
          isXMLDoc: function(elem) {
            var namespace = elem && elem.namespaceURI, docElem = elem && (elem.ownerDocument || elem).documentElement;
            return !rhtmlSuffix.test(namespace || docElem && docElem.nodeName || "HTML");
          },
          // Support: Android <=4.0 only, PhantomJS 1 only
          // push.apply(_, arraylike) throws on ancient WebKit
          merge: function(first, second) {
            var len = +second.length, j = 0, i2 = first.length;
            for (; j < len; j++) {
              first[i2++] = second[j];
            }
            first.length = i2;
            return first;
          },
          grep: function(elems, callback, invert) {
            var callbackInverse, matches = [], i2 = 0, length = elems.length, callbackExpect = !invert;
            for (; i2 < length; i2++) {
              callbackInverse = !callback(elems[i2], i2);
              if (callbackInverse !== callbackExpect) {
                matches.push(elems[i2]);
              }
            }
            return matches;
          },
          // arg is for internal usage only
          map: function(elems, callback, arg) {
            var length, value, i2 = 0, ret = [];
            if (isArrayLike(elems)) {
              length = elems.length;
              for (; i2 < length; i2++) {
                value = callback(elems[i2], i2, arg);
                if (value != null) {
                  ret.push(value);
                }
              }
            } else {
              for (i2 in elems) {
                value = callback(elems[i2], i2, arg);
                if (value != null) {
                  ret.push(value);
                }
              }
            }
            return flat(ret);
          },
          // A global GUID counter for objects
          guid: 1,
          // jQuery.support is not used in Core but other projects attach their
          // properties to it so it needs to exist.
          support: support2
        });
        if (typeof Symbol === "function") {
          jQuery2.fn[Symbol.iterator] = arr[Symbol.iterator];
        }
        jQuery2.each(
          "Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),
          function(_i2, name) {
            class2type["[object " + name + "]"] = name.toLowerCase();
          }
        );
        function isArrayLike(obj) {
          var length = !!obj && "length" in obj && obj.length, type = toType(obj);
          if (isFunction(obj) || isWindow(obj)) {
            return false;
          }
          return type === "array" || length === 0 || typeof length === "number" && length > 0 && length - 1 in obj;
        }
        function nodeName(elem, name) {
          return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
        }
        var pop = arr.pop;
        var sort = arr.sort;
        var splice = arr.splice;
        var whitespace = "[\\x20\\t\\r\\n\\f]";
        var rtrimCSS = new RegExp(
          "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$",
          "g"
        );
        jQuery2.contains = function(a, b) {
          var bup = b && b.parentNode;
          return a === bup || !!(bup && bup.nodeType === 1 && // Support: IE 9 - 11+
          // IE doesn't have `contains` on SVG.
          (a.contains ? a.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));
        };
        var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
        function fcssescape(ch, asCodePoint) {
          if (asCodePoint) {
            if (ch === "\0") {
              return "\uFFFD";
            }
            return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
          }
          return "\\" + ch;
        }
        jQuery2.escapeSelector = function(sel) {
          return (sel + "").replace(rcssescape, fcssescape);
        };
        var preferredDoc = document2, pushNative = push;
        (function() {
          var i2, Expr, outermostContext, sortInput, hasDuplicate, push2 = pushNative, document3, documentElement2, documentIsHTML, rbuggyQSA, matches, expando = jQuery2.expando, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), nonnativeSelectorCache = createCache(), sortOrder = function(a, b) {
            if (a === b) {
              hasDuplicate = true;
            }
            return 0;
          }, booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + // Operator (capture 2)
          "*([*^$|!~]?=)" + whitespace + // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
          `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + identifier + "))|)" + whitespace + "*\\]", pseudos = ":(" + identifier + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + attributes + ")*)|.*)\\)|)", rwhitespace = new RegExp(whitespace + "+", "g"), rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"), rleadingCombinator = new RegExp("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*"), rdescend = new RegExp(whitespace + "|>"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
            ID: new RegExp("^#(" + identifier + ")"),
            CLASS: new RegExp("^\\.(" + identifier + ")"),
            TAG: new RegExp("^(" + identifier + "|[*])"),
            ATTR: new RegExp("^" + attributes),
            PSEUDO: new RegExp("^" + pseudos),
            CHILD: new RegExp(
              "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)",
              "i"
            ),
            bool: new RegExp("^(?:" + booleans + ")$", "i"),
            // For use in libraries implementing .is()
            // We use this for POS matching in `select`
            needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
          }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rquickExpr2 = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp("\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g"), funescape = function(escape, nonHex) {
            var high = "0x" + escape.slice(1) - 65536;
            if (nonHex) {
              return nonHex;
            }
            return high < 0 ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);
          }, unloadHandler = function() {
            setDocument();
          }, inDisabledFieldset = addCombinator(
            function(elem) {
              return elem.disabled === true && nodeName(elem, "fieldset");
            },
            { dir: "parentNode", next: "legend" }
          );
          function safeActiveElement() {
            try {
              return document3.activeElement;
            } catch (err) {
            }
          }
          try {
            push2.apply(
              arr = slice.call(preferredDoc.childNodes),
              preferredDoc.childNodes
            );
            arr[preferredDoc.childNodes.length].nodeType;
          } catch (e3) {
            push2 = {
              apply: function(target, els) {
                pushNative.apply(target, slice.call(els));
              },
              call: function(target) {
                pushNative.apply(target, slice.call(arguments, 1));
              }
            };
          }
          function find(selector3, context3, results, seed) {
            var m, i3, elem, nid, match, groups, newSelector, newContext = context3 && context3.ownerDocument, nodeType = context3 ? context3.nodeType : 9;
            results = results || [];
            if (typeof selector3 !== "string" || !selector3 || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {
              return results;
            }
            if (!seed) {
              setDocument(context3);
              context3 = context3 || document3;
              if (documentIsHTML) {
                if (nodeType !== 11 && (match = rquickExpr2.exec(selector3))) {
                  if (m = match[1]) {
                    if (nodeType === 9) {
                      if (elem = context3.getElementById(m)) {
                        if (elem.id === m) {
                          push2.call(results, elem);
                          return results;
                        }
                      } else {
                        return results;
                      }
                    } else {
                      if (newContext && (elem = newContext.getElementById(m)) && find.contains(context3, elem) && elem.id === m) {
                        push2.call(results, elem);
                        return results;
                      }
                    }
                  } else if (match[2]) {
                    push2.apply(results, context3.getElementsByTagName(selector3));
                    return results;
                  } else if ((m = match[3]) && context3.getElementsByClassName) {
                    push2.apply(results, context3.getElementsByClassName(m));
                    return results;
                  }
                }
                if (!nonnativeSelectorCache[selector3 + " "] && (!rbuggyQSA || !rbuggyQSA.test(selector3))) {
                  newSelector = selector3;
                  newContext = context3;
                  if (nodeType === 1 && (rdescend.test(selector3) || rleadingCombinator.test(selector3))) {
                    newContext = rsibling.test(selector3) && testContext(context3.parentNode) || context3;
                    if (newContext != context3 || !support2.scope) {
                      if (nid = context3.getAttribute("id")) {
                        nid = jQuery2.escapeSelector(nid);
                      } else {
                        context3.setAttribute("id", nid = expando);
                      }
                    }
                    groups = tokenize(selector3);
                    i3 = groups.length;
                    while (i3--) {
                      groups[i3] = (nid ? "#" + nid : ":scope") + " " + toSelector(groups[i3]);
                    }
                    newSelector = groups.join(",");
                  }
                  try {
                    push2.apply(
                      results,
                      newContext.querySelectorAll(newSelector)
                    );
                    return results;
                  } catch (qsaError) {
                    nonnativeSelectorCache(selector3, true);
                  } finally {
                    if (nid === expando) {
                      context3.removeAttribute("id");
                    }
                  }
                }
              }
            }
            return select(selector3.replace(rtrimCSS, "$1"), context3, results, seed);
          }
          function createCache() {
            var keys = [];
            function cache(key, value) {
              if (keys.push(key + " ") > Expr.cacheLength) {
                delete cache[keys.shift()];
              }
              return cache[key + " "] = value;
            }
            return cache;
          }
          function markFunction(fn) {
            fn[expando] = true;
            return fn;
          }
          function assert(fn) {
            var el = document3.createElement("fieldset");
            try {
              return !!fn(el);
            } catch (e3) {
              return false;
            } finally {
              if (el.parentNode) {
                el.parentNode.removeChild(el);
              }
              el = null;
            }
          }
          function createInputPseudo(type) {
            return function(elem) {
              return nodeName(elem, "input") && elem.type === type;
            };
          }
          function createButtonPseudo(type) {
            return function(elem) {
              return (nodeName(elem, "input") || nodeName(elem, "button")) && elem.type === type;
            };
          }
          function createDisabledPseudo(disabled) {
            return function(elem) {
              if ("form" in elem) {
                if (elem.parentNode && elem.disabled === false) {
                  if ("label" in elem) {
                    if ("label" in elem.parentNode) {
                      return elem.parentNode.disabled === disabled;
                    } else {
                      return elem.disabled === disabled;
                    }
                  }
                  return elem.isDisabled === disabled || // Where there is no isDisabled, check manually
                  elem.isDisabled !== !disabled && inDisabledFieldset(elem) === disabled;
                }
                return elem.disabled === disabled;
              } else if ("label" in elem) {
                return elem.disabled === disabled;
              }
              return false;
            };
          }
          function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
              argument = +argument;
              return markFunction(function(seed, matches2) {
                var j, matchIndexes = fn([], seed.length, argument), i3 = matchIndexes.length;
                while (i3--) {
                  if (seed[j = matchIndexes[i3]]) {
                    seed[j] = !(matches2[j] = seed[j]);
                  }
                }
              });
            });
          }
          function testContext(context3) {
            return context3 && typeof context3.getElementsByTagName !== "undefined" && context3;
          }
          function setDocument(node) {
            var subWindow, doc = node ? node.ownerDocument || node : preferredDoc;
            if (doc == document3 || doc.nodeType !== 9 || !doc.documentElement) {
              return document3;
            }
            document3 = doc;
            documentElement2 = document3.documentElement;
            documentIsHTML = !jQuery2.isXMLDoc(document3);
            matches = documentElement2.matches || documentElement2.webkitMatchesSelector || documentElement2.msMatchesSelector;
            if (documentElement2.msMatchesSelector && // Support: IE 11+, Edge 17 - 18+
            // IE/Edge sometimes throw a "Permission denied" error when strict-comparing
            // two documents; shallow comparisons work.
            // eslint-disable-next-line eqeqeq
            preferredDoc != document3 && (subWindow = document3.defaultView) && subWindow.top !== subWindow) {
              subWindow.addEventListener("unload", unloadHandler);
            }
            support2.getById = assert(function(el) {
              documentElement2.appendChild(el).id = jQuery2.expando;
              return !document3.getElementsByName || !document3.getElementsByName(jQuery2.expando).length;
            });
            support2.disconnectedMatch = assert(function(el) {
              return matches.call(el, "*");
            });
            support2.scope = assert(function() {
              return document3.querySelectorAll(":scope");
            });
            support2.cssHas = assert(function() {
              try {
                document3.querySelector(":has(*,:jqfake)");
                return false;
              } catch (e3) {
                return true;
              }
            });
            if (support2.getById) {
              Expr.filter.ID = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                  return elem.getAttribute("id") === attrId;
                };
              };
              Expr.find.ID = function(id, context3) {
                if (typeof context3.getElementById !== "undefined" && documentIsHTML) {
                  var elem = context3.getElementById(id);
                  return elem ? [elem] : [];
                }
              };
            } else {
              Expr.filter.ID = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                  var node2 = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                  return node2 && node2.value === attrId;
                };
              };
              Expr.find.ID = function(id, context3) {
                if (typeof context3.getElementById !== "undefined" && documentIsHTML) {
                  var node2, i3, elems, elem = context3.getElementById(id);
                  if (elem) {
                    node2 = elem.getAttributeNode("id");
                    if (node2 && node2.value === id) {
                      return [elem];
                    }
                    elems = context3.getElementsByName(id);
                    i3 = 0;
                    while (elem = elems[i3++]) {
                      node2 = elem.getAttributeNode("id");
                      if (node2 && node2.value === id) {
                        return [elem];
                      }
                    }
                  }
                  return [];
                }
              };
            }
            Expr.find.TAG = function(tag, context3) {
              if (typeof context3.getElementsByTagName !== "undefined") {
                return context3.getElementsByTagName(tag);
              } else {
                return context3.querySelectorAll(tag);
              }
            };
            Expr.find.CLASS = function(className, context3) {
              if (typeof context3.getElementsByClassName !== "undefined" && documentIsHTML) {
                return context3.getElementsByClassName(className);
              }
            };
            rbuggyQSA = [];
            assert(function(el) {
              var input;
              documentElement2.appendChild(el).innerHTML = "<a id='" + expando + "' href='' disabled='disabled'></a><select id='" + expando + "-\r\\' disabled='disabled'><option selected=''></option></select>";
              if (!el.querySelectorAll("[selected]").length) {
                rbuggyQSA.push("\\[" + whitespace + "*(?:value|" + booleans + ")");
              }
              if (!el.querySelectorAll("[id~=" + expando + "-]").length) {
                rbuggyQSA.push("~=");
              }
              if (!el.querySelectorAll("a#" + expando + "+*").length) {
                rbuggyQSA.push(".#.+[+~]");
              }
              if (!el.querySelectorAll(":checked").length) {
                rbuggyQSA.push(":checked");
              }
              input = document3.createElement("input");
              input.setAttribute("type", "hidden");
              el.appendChild(input).setAttribute("name", "D");
              documentElement2.appendChild(el).disabled = true;
              if (el.querySelectorAll(":disabled").length !== 2) {
                rbuggyQSA.push(":enabled", ":disabled");
              }
              input = document3.createElement("input");
              input.setAttribute("name", "");
              el.appendChild(input);
              if (!el.querySelectorAll("[name='']").length) {
                rbuggyQSA.push("\\[" + whitespace + "*name" + whitespace + "*=" + whitespace + `*(?:''|"")`);
              }
            });
            if (!support2.cssHas) {
              rbuggyQSA.push(":has");
            }
            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join("|"));
            sortOrder = function(a, b) {
              if (a === b) {
                hasDuplicate = true;
                return 0;
              }
              var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
              if (compare) {
                return compare;
              }
              compare = (a.ownerDocument || a) == (b.ownerDocument || b) ? a.compareDocumentPosition(b) : (
                // Otherwise we know they are disconnected
                1
              );
              if (compare & 1 || !support2.sortDetached && b.compareDocumentPosition(a) === compare) {
                if (a === document3 || a.ownerDocument == preferredDoc && find.contains(preferredDoc, a)) {
                  return -1;
                }
                if (b === document3 || b.ownerDocument == preferredDoc && find.contains(preferredDoc, b)) {
                  return 1;
                }
                return sortInput ? indexOf.call(sortInput, a) - indexOf.call(sortInput, b) : 0;
              }
              return compare & 4 ? -1 : 1;
            };
            return document3;
          }
          find.matches = function(expr, elements) {
            return find(expr, null, null, elements);
          };
          find.matchesSelector = function(elem, expr) {
            setDocument(elem);
            if (documentIsHTML && !nonnativeSelectorCache[expr + " "] && (!rbuggyQSA || !rbuggyQSA.test(expr))) {
              try {
                var ret = matches.call(elem, expr);
                if (ret || support2.disconnectedMatch || // As well, disconnected nodes are said to be in a document
                // fragment in IE 9
                elem.document && elem.document.nodeType !== 11) {
                  return ret;
                }
              } catch (e3) {
                nonnativeSelectorCache(expr, true);
              }
            }
            return find(expr, document3, null, [elem]).length > 0;
          };
          find.contains = function(context3, elem) {
            if ((context3.ownerDocument || context3) != document3) {
              setDocument(context3);
            }
            return jQuery2.contains(context3, elem);
          };
          find.attr = function(elem, name) {
            if ((elem.ownerDocument || elem) != document3) {
              setDocument(elem);
            }
            var fn = Expr.attrHandle[name.toLowerCase()], val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : void 0;
            if (val !== void 0) {
              return val;
            }
            return elem.getAttribute(name);
          };
          find.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
          };
          jQuery2.uniqueSort = function(results) {
            var elem, duplicates = [], j = 0, i3 = 0;
            hasDuplicate = !support2.sortStable;
            sortInput = !support2.sortStable && slice.call(results, 0);
            sort.call(results, sortOrder);
            if (hasDuplicate) {
              while (elem = results[i3++]) {
                if (elem === results[i3]) {
                  j = duplicates.push(i3);
                }
              }
              while (j--) {
                splice.call(results, duplicates[j], 1);
              }
            }
            sortInput = null;
            return results;
          };
          jQuery2.fn.uniqueSort = function() {
            return this.pushStack(jQuery2.uniqueSort(slice.apply(this)));
          };
          Expr = jQuery2.expr = {
            // Can be adjusted by the user
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            attrHandle: {},
            find: {},
            relative: {
              ">": { dir: "parentNode", first: true },
              " ": { dir: "parentNode" },
              "+": { dir: "previousSibling", first: true },
              "~": { dir: "previousSibling" }
            },
            preFilter: {
              ATTR: function(match) {
                match[1] = match[1].replace(runescape, funescape);
                match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
                if (match[2] === "~=") {
                  match[3] = " " + match[3] + " ";
                }
                return match.slice(0, 4);
              },
              CHILD: function(match) {
                match[1] = match[1].toLowerCase();
                if (match[1].slice(0, 3) === "nth") {
                  if (!match[3]) {
                    find.error(match[0]);
                  }
                  match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === "even" || match[3] === "odd"));
                  match[5] = +(match[7] + match[8] || match[3] === "odd");
                } else if (match[3]) {
                  find.error(match[0]);
                }
                return match;
              },
              PSEUDO: function(match) {
                var excess, unquoted = !match[6] && match[2];
                if (matchExpr.CHILD.test(match[0])) {
                  return null;
                }
                if (match[3]) {
                  match[2] = match[4] || match[5] || "";
                } else if (unquoted && rpseudo.test(unquoted) && // Get excess from tokenize (recursively)
                (excess = tokenize(unquoted, true)) && // advance to the next closing parenthesis
                (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length)) {
                  match[0] = match[0].slice(0, excess);
                  match[2] = unquoted.slice(0, excess);
                }
                return match.slice(0, 3);
              }
            },
            filter: {
              TAG: function(nodeNameSelector) {
                var expectedNodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
                return nodeNameSelector === "*" ? function() {
                  return true;
                } : function(elem) {
                  return nodeName(elem, expectedNodeName);
                };
              },
              CLASS: function(className) {
                var pattern = classCache[className + " "];
                return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
                  return pattern.test(
                    typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || ""
                  );
                });
              },
              ATTR: function(name, operator, check) {
                return function(elem) {
                  var result = find.attr(elem, name);
                  if (result == null) {
                    return operator === "!=";
                  }
                  if (!operator) {
                    return true;
                  }
                  result += "";
                  if (operator === "=") {
                    return result === check;
                  }
                  if (operator === "!=") {
                    return result !== check;
                  }
                  if (operator === "^=") {
                    return check && result.indexOf(check) === 0;
                  }
                  if (operator === "*=") {
                    return check && result.indexOf(check) > -1;
                  }
                  if (operator === "$=") {
                    return check && result.slice(-check.length) === check;
                  }
                  if (operator === "~=") {
                    return (" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1;
                  }
                  if (operator === "|=") {
                    return result === check || result.slice(0, check.length + 1) === check + "-";
                  }
                  return false;
                };
              },
              CHILD: function(type, what, _argument, first, last) {
                var simple = type.slice(0, 3) !== "nth", forward = type.slice(-4) !== "last", ofType = what === "of-type";
                return first === 1 && last === 0 ? (
                  // Shortcut for :nth-*(n)
                  function(elem) {
                    return !!elem.parentNode;
                  }
                ) : function(elem, _context4, xml) {
                  var cache, outerCache, node, nodeIndex, start, dir2 = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;
                  if (parent) {
                    if (simple) {
                      while (dir2) {
                        node = elem;
                        while (node = node[dir2]) {
                          if (ofType ? nodeName(node, name) : node.nodeType === 1) {
                            return false;
                          }
                        }
                        start = dir2 = type === "only" && !start && "nextSibling";
                      }
                      return true;
                    }
                    start = [forward ? parent.firstChild : parent.lastChild];
                    if (forward && useCache) {
                      outerCache = parent[expando] || (parent[expando] = {});
                      cache = outerCache[type] || [];
                      nodeIndex = cache[0] === dirruns && cache[1];
                      diff = nodeIndex && cache[2];
                      node = nodeIndex && parent.childNodes[nodeIndex];
                      while (node = ++nodeIndex && node && node[dir2] || // Fallback to seeking `elem` from the start
                      (diff = nodeIndex = 0) || start.pop()) {
                        if (node.nodeType === 1 && ++diff && node === elem) {
                          outerCache[type] = [dirruns, nodeIndex, diff];
                          break;
                        }
                      }
                    } else {
                      if (useCache) {
                        outerCache = elem[expando] || (elem[expando] = {});
                        cache = outerCache[type] || [];
                        nodeIndex = cache[0] === dirruns && cache[1];
                        diff = nodeIndex;
                      }
                      if (diff === false) {
                        while (node = ++nodeIndex && node && node[dir2] || (diff = nodeIndex = 0) || start.pop()) {
                          if ((ofType ? nodeName(node, name) : node.nodeType === 1) && ++diff) {
                            if (useCache) {
                              outerCache = node[expando] || (node[expando] = {});
                              outerCache[type] = [dirruns, diff];
                            }
                            if (node === elem) {
                              break;
                            }
                          }
                        }
                      }
                    }
                    diff -= last;
                    return diff === first || diff % first === 0 && diff / first >= 0;
                  }
                };
              },
              PSEUDO: function(pseudo, argument) {
                var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || find.error("unsupported pseudo: " + pseudo);
                if (fn[expando]) {
                  return fn(argument);
                }
                if (fn.length > 1) {
                  args = [pseudo, pseudo, "", argument];
                  return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches2) {
                    var idx, matched = fn(seed, argument), i3 = matched.length;
                    while (i3--) {
                      idx = indexOf.call(seed, matched[i3]);
                      seed[idx] = !(matches2[idx] = matched[i3]);
                    }
                  }) : function(elem) {
                    return fn(elem, 0, args);
                  };
                }
                return fn;
              }
            },
            pseudos: {
              // Potentially complex pseudos
              not: markFunction(function(selector3) {
                var input = [], results = [], matcher = compile(selector3.replace(rtrimCSS, "$1"));
                return matcher[expando] ? markFunction(function(seed, matches2, _context4, xml) {
                  var elem, unmatched = matcher(seed, null, xml, []), i3 = seed.length;
                  while (i3--) {
                    if (elem = unmatched[i3]) {
                      seed[i3] = !(matches2[i3] = elem);
                    }
                  }
                }) : function(elem, _context4, xml) {
                  input[0] = elem;
                  matcher(input, null, xml, results);
                  input[0] = null;
                  return !results.pop();
                };
              }),
              has: markFunction(function(selector3) {
                return function(elem) {
                  return find(selector3, elem).length > 0;
                };
              }),
              contains: markFunction(function(text) {
                text = text.replace(runescape, funescape);
                return function(elem) {
                  return (elem.textContent || jQuery2.text(elem)).indexOf(text) > -1;
                };
              }),
              // "Whether an element is represented by a :lang() selector
              // is based solely on the element's language value
              // being equal to the identifier C,
              // or beginning with the identifier C immediately followed by "-".
              // The matching of C against the element's language value is performed case-insensitively.
              // The identifier C does not have to be a valid language name."
              // https://www.w3.org/TR/selectors/#lang-pseudo
              lang: markFunction(function(lang) {
                if (!ridentifier.test(lang || "")) {
                  find.error("unsupported lang: " + lang);
                }
                lang = lang.replace(runescape, funescape).toLowerCase();
                return function(elem) {
                  var elemLang;
                  do {
                    if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute("xml:lang") || elem.getAttribute("lang")) {
                      elemLang = elemLang.toLowerCase();
                      return elemLang === lang || elemLang.indexOf(lang + "-") === 0;
                    }
                  } while ((elem = elem.parentNode) && elem.nodeType === 1);
                  return false;
                };
              }),
              // Miscellaneous
              target: function(elem) {
                var hash = window2.location && window2.location.hash;
                return hash && hash.slice(1) === elem.id;
              },
              root: function(elem) {
                return elem === documentElement2;
              },
              focus: function(elem) {
                return elem === safeActiveElement() && document3.hasFocus() && !!(elem.type || elem.href || ~elem.tabIndex);
              },
              // Boolean properties
              enabled: createDisabledPseudo(false),
              disabled: createDisabledPseudo(true),
              checked: function(elem) {
                return nodeName(elem, "input") && !!elem.checked || nodeName(elem, "option") && !!elem.selected;
              },
              selected: function(elem) {
                if (elem.parentNode) {
                  elem.parentNode.selectedIndex;
                }
                return elem.selected === true;
              },
              // Contents
              empty: function(elem) {
                for (elem = elem.firstChild; elem; elem = elem.nextSibling) {
                  if (elem.nodeType < 6) {
                    return false;
                  }
                }
                return true;
              },
              parent: function(elem) {
                return !Expr.pseudos.empty(elem);
              },
              // Element/input types
              header: function(elem) {
                return rheader.test(elem.nodeName);
              },
              input: function(elem) {
                return rinputs.test(elem.nodeName);
              },
              button: function(elem) {
                return nodeName(elem, "input") && elem.type === "button" || nodeName(elem, "button");
              },
              text: function(elem) {
                var attr;
                return nodeName(elem, "input") && elem.type === "text" && // Support: IE <10 only
                // New HTML5 attribute values (e.g., "search") appear
                // with elem.type === "text"
                ((attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text");
              },
              // Position-in-collection
              first: createPositionalPseudo(function() {
                return [0];
              }),
              last: createPositionalPseudo(function(_matchIndexes, length) {
                return [length - 1];
              }),
              eq: createPositionalPseudo(function(_matchIndexes, length, argument) {
                return [argument < 0 ? argument + length : argument];
              }),
              even: createPositionalPseudo(function(matchIndexes, length) {
                var i3 = 0;
                for (; i3 < length; i3 += 2) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              }),
              odd: createPositionalPseudo(function(matchIndexes, length) {
                var i3 = 1;
                for (; i3 < length; i3 += 2) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              }),
              lt: createPositionalPseudo(function(matchIndexes, length, argument) {
                var i3;
                if (argument < 0) {
                  i3 = argument + length;
                } else if (argument > length) {
                  i3 = length;
                } else {
                  i3 = argument;
                }
                for (; --i3 >= 0; ) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              }),
              gt: createPositionalPseudo(function(matchIndexes, length, argument) {
                var i3 = argument < 0 ? argument + length : argument;
                for (; ++i3 < length; ) {
                  matchIndexes.push(i3);
                }
                return matchIndexes;
              })
            }
          };
          Expr.pseudos.nth = Expr.pseudos.eq;
          for (i2 in { radio: true, checkbox: true, file: true, password: true, image: true }) {
            Expr.pseudos[i2] = createInputPseudo(i2);
          }
          for (i2 in { submit: true, reset: true }) {
            Expr.pseudos[i2] = createButtonPseudo(i2);
          }
          function setFilters() {
          }
          setFilters.prototype = Expr.filters = Expr.pseudos;
          Expr.setFilters = new setFilters();
          function tokenize(selector3, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector3 + " "];
            if (cached) {
              return parseOnly ? 0 : cached.slice(0);
            }
            soFar = selector3;
            groups = [];
            preFilters = Expr.preFilter;
            while (soFar) {
              if (!matched || (match = rcomma.exec(soFar))) {
                if (match) {
                  soFar = soFar.slice(match[0].length) || soFar;
                }
                groups.push(tokens = []);
              }
              matched = false;
              if (match = rleadingCombinator.exec(soFar)) {
                matched = match.shift();
                tokens.push({
                  value: matched,
                  // Cast descendant combinators to space
                  type: match[0].replace(rtrimCSS, " ")
                });
                soFar = soFar.slice(matched.length);
              }
              for (type in Expr.filter) {
                if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {
                  matched = match.shift();
                  tokens.push({
                    value: matched,
                    type,
                    matches: match
                  });
                  soFar = soFar.slice(matched.length);
                }
              }
              if (!matched) {
                break;
              }
            }
            if (parseOnly) {
              return soFar.length;
            }
            return soFar ? find.error(selector3) : (
              // Cache the tokens
              tokenCache(selector3, groups).slice(0)
            );
          }
          function toSelector(tokens) {
            var i3 = 0, len = tokens.length, selector3 = "";
            for (; i3 < len; i3++) {
              selector3 += tokens[i3].value;
            }
            return selector3;
          }
          function addCombinator(matcher, combinator, base) {
            var dir2 = combinator.dir, skip = combinator.next, key = skip || dir2, checkNonElements = base && key === "parentNode", doneName = done++;
            return combinator.first ? (
              // Check against closest ancestor/preceding element
              function(elem, context3, xml) {
                while (elem = elem[dir2]) {
                  if (elem.nodeType === 1 || checkNonElements) {
                    return matcher(elem, context3, xml);
                  }
                }
                return false;
              }
            ) : (
              // Check against all ancestor/preceding elements
              function(elem, context3, xml) {
                var oldCache, outerCache, newCache = [dirruns, doneName];
                if (xml) {
                  while (elem = elem[dir2]) {
                    if (elem.nodeType === 1 || checkNonElements) {
                      if (matcher(elem, context3, xml)) {
                        return true;
                      }
                    }
                  }
                } else {
                  while (elem = elem[dir2]) {
                    if (elem.nodeType === 1 || checkNonElements) {
                      outerCache = elem[expando] || (elem[expando] = {});
                      if (skip && nodeName(elem, skip)) {
                        elem = elem[dir2] || elem;
                      } else if ((oldCache = outerCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {
                        return newCache[2] = oldCache[2];
                      } else {
                        outerCache[key] = newCache;
                        if (newCache[2] = matcher(elem, context3, xml)) {
                          return true;
                        }
                      }
                    }
                  }
                }
                return false;
              }
            );
          }
          function elementMatcher(matchers) {
            return matchers.length > 1 ? function(elem, context3, xml) {
              var i3 = matchers.length;
              while (i3--) {
                if (!matchers[i3](elem, context3, xml)) {
                  return false;
                }
              }
              return true;
            } : matchers[0];
          }
          function multipleContexts(selector3, contexts, results) {
            var i3 = 0, len = contexts.length;
            for (; i3 < len; i3++) {
              find(selector3, contexts[i3], results);
            }
            return results;
          }
          function condense(unmatched, map, filter, context3, xml) {
            var elem, newUnmatched = [], i3 = 0, len = unmatched.length, mapped = map != null;
            for (; i3 < len; i3++) {
              if (elem = unmatched[i3]) {
                if (!filter || filter(elem, context3, xml)) {
                  newUnmatched.push(elem);
                  if (mapped) {
                    map.push(i3);
                  }
                }
              }
            }
            return newUnmatched;
          }
          function setMatcher(preFilter, selector3, matcher, postFilter, postFinder, postSelector) {
            if (postFilter && !postFilter[expando]) {
              postFilter = setMatcher(postFilter);
            }
            if (postFinder && !postFinder[expando]) {
              postFinder = setMatcher(postFinder, postSelector);
            }
            return markFunction(function(seed, results, context3, xml) {
              var temp, i3, elem, matcherOut, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(
                selector3 || "*",
                context3.nodeType ? [context3] : context3,
                []
              ), matcherIn = preFilter && (seed || !selector3) ? condense(elems, preMap, preFilter, context3, xml) : elems;
              if (matcher) {
                matcherOut = postFinder || (seed ? preFilter : preexisting || postFilter) ? (
                  // ...intermediate processing is necessary
                  []
                ) : (
                  // ...otherwise use results directly
                  results
                );
                matcher(matcherIn, matcherOut, context3, xml);
              } else {
                matcherOut = matcherIn;
              }
              if (postFilter) {
                temp = condense(matcherOut, postMap);
                postFilter(temp, [], context3, xml);
                i3 = temp.length;
                while (i3--) {
                  if (elem = temp[i3]) {
                    matcherOut[postMap[i3]] = !(matcherIn[postMap[i3]] = elem);
                  }
                }
              }
              if (seed) {
                if (postFinder || preFilter) {
                  if (postFinder) {
                    temp = [];
                    i3 = matcherOut.length;
                    while (i3--) {
                      if (elem = matcherOut[i3]) {
                        temp.push(matcherIn[i3] = elem);
                      }
                    }
                    postFinder(null, matcherOut = [], temp, xml);
                  }
                  i3 = matcherOut.length;
                  while (i3--) {
                    if ((elem = matcherOut[i3]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i3]) > -1) {
                      seed[temp] = !(results[temp] = elem);
                    }
                  }
                }
              } else {
                matcherOut = condense(
                  matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut
                );
                if (postFinder) {
                  postFinder(null, results, matcherOut, xml);
                } else {
                  push2.apply(results, matcherOut);
                }
              }
            });
          }
          function matcherFromTokens(tokens) {
            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i3 = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
              return elem === checkContext;
            }, implicitRelative, true), matchAnyContext = addCombinator(function(elem) {
              return indexOf.call(checkContext, elem) > -1;
            }, implicitRelative, true), matchers = [function(elem, context3, xml) {
              var ret = !leadingRelative && (xml || context3 != outermostContext) || ((checkContext = context3).nodeType ? matchContext(elem, context3, xml) : matchAnyContext(elem, context3, xml));
              checkContext = null;
              return ret;
            }];
            for (; i3 < len; i3++) {
              if (matcher = Expr.relative[tokens[i3].type]) {
                matchers = [addCombinator(elementMatcher(matchers), matcher)];
              } else {
                matcher = Expr.filter[tokens[i3].type].apply(null, tokens[i3].matches);
                if (matcher[expando]) {
                  j = ++i3;
                  for (; j < len; j++) {
                    if (Expr.relative[tokens[j].type]) {
                      break;
                    }
                  }
                  return setMatcher(
                    i3 > 1 && elementMatcher(matchers),
                    i3 > 1 && toSelector(
                      // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                      tokens.slice(0, i3 - 1).concat({ value: tokens[i3 - 2].type === " " ? "*" : "" })
                    ).replace(rtrimCSS, "$1"),
                    matcher,
                    i3 < j && matcherFromTokens(tokens.slice(i3, j)),
                    j < len && matcherFromTokens(tokens = tokens.slice(j)),
                    j < len && toSelector(tokens)
                  );
                }
                matchers.push(matcher);
              }
            }
            return elementMatcher(matchers);
          }
          function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context3, xml, results, outermost) {
              var elem, j, matcher, matchedCount = 0, i3 = "0", unmatched = seed && [], setMatched = [], contextBackup = outermostContext, elems = seed || byElement && Expr.find.TAG("*", outermost), dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;
              if (outermost) {
                outermostContext = context3 == document3 || context3 || outermost;
              }
              for (; i3 !== len && (elem = elems[i3]) != null; i3++) {
                if (byElement && elem) {
                  j = 0;
                  if (!context3 && elem.ownerDocument != document3) {
                    setDocument(elem);
                    xml = !documentIsHTML;
                  }
                  while (matcher = elementMatchers[j++]) {
                    if (matcher(elem, context3 || document3, xml)) {
                      push2.call(results, elem);
                      break;
                    }
                  }
                  if (outermost) {
                    dirruns = dirrunsUnique;
                  }
                }
                if (bySet) {
                  if (elem = !matcher && elem) {
                    matchedCount--;
                  }
                  if (seed) {
                    unmatched.push(elem);
                  }
                }
              }
              matchedCount += i3;
              if (bySet && i3 !== matchedCount) {
                j = 0;
                while (matcher = setMatchers[j++]) {
                  matcher(unmatched, setMatched, context3, xml);
                }
                if (seed) {
                  if (matchedCount > 0) {
                    while (i3--) {
                      if (!(unmatched[i3] || setMatched[i3])) {
                        setMatched[i3] = pop.call(results);
                      }
                    }
                  }
                  setMatched = condense(setMatched);
                }
                push2.apply(results, setMatched);
                if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {
                  jQuery2.uniqueSort(results);
                }
              }
              if (outermost) {
                dirruns = dirrunsUnique;
                outermostContext = contextBackup;
              }
              return unmatched;
            };
            return bySet ? markFunction(superMatcher) : superMatcher;
          }
          function compile(selector3, match) {
            var i3, setMatchers = [], elementMatchers = [], cached = compilerCache[selector3 + " "];
            if (!cached) {
              if (!match) {
                match = tokenize(selector3);
              }
              i3 = match.length;
              while (i3--) {
                cached = matcherFromTokens(match[i3]);
                if (cached[expando]) {
                  setMatchers.push(cached);
                } else {
                  elementMatchers.push(cached);
                }
              }
              cached = compilerCache(
                selector3,
                matcherFromGroupMatchers(elementMatchers, setMatchers)
              );
              cached.selector = selector3;
            }
            return cached;
          }
          function select(selector3, context3, results, seed) {
            var i3, tokens, token, type, find2, compiled = typeof selector3 === "function" && selector3, match = !seed && tokenize(selector3 = compiled.selector || selector3);
            results = results || [];
            if (match.length === 1) {
              tokens = match[0] = match[0].slice(0);
              if (tokens.length > 2 && (token = tokens[0]).type === "ID" && context3.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {
                context3 = (Expr.find.ID(
                  token.matches[0].replace(runescape, funescape),
                  context3
                ) || [])[0];
                if (!context3) {
                  return results;
                } else if (compiled) {
                  context3 = context3.parentNode;
                }
                selector3 = selector3.slice(tokens.shift().value.length);
              }
              i3 = matchExpr.needsContext.test(selector3) ? 0 : tokens.length;
              while (i3--) {
                token = tokens[i3];
                if (Expr.relative[type = token.type]) {
                  break;
                }
                if (find2 = Expr.find[type]) {
                  if (seed = find2(
                    token.matches[0].replace(runescape, funescape),
                    rsibling.test(tokens[0].type) && testContext(context3.parentNode) || context3
                  )) {
                    tokens.splice(i3, 1);
                    selector3 = seed.length && toSelector(tokens);
                    if (!selector3) {
                      push2.apply(results, seed);
                      return results;
                    }
                    break;
                  }
                }
              }
            }
            (compiled || compile(selector3, match))(
              seed,
              context3,
              !documentIsHTML,
              results,
              !context3 || rsibling.test(selector3) && testContext(context3.parentNode) || context3
            );
            return results;
          }
          support2.sortStable = expando.split("").sort(sortOrder).join("") === expando;
          setDocument();
          support2.sortDetached = assert(function(el) {
            return el.compareDocumentPosition(document3.createElement("fieldset")) & 1;
          });
          jQuery2.find = find;
          jQuery2.expr[":"] = jQuery2.expr.pseudos;
          jQuery2.unique = jQuery2.uniqueSort;
          find.compile = compile;
          find.select = select;
          find.setDocument = setDocument;
          find.tokenize = tokenize;
          find.escape = jQuery2.escapeSelector;
          find.getText = jQuery2.text;
          find.isXML = jQuery2.isXMLDoc;
          find.selectors = jQuery2.expr;
          find.support = jQuery2.support;
          find.uniqueSort = jQuery2.uniqueSort;
        })();
        var dir = function(elem, dir2, until) {
          var matched = [], truncate = until !== void 0;
          while ((elem = elem[dir2]) && elem.nodeType !== 9) {
            if (elem.nodeType === 1) {
              if (truncate && jQuery2(elem).is(until)) {
                break;
              }
              matched.push(elem);
            }
          }
          return matched;
        };
        var siblings = function(n2, elem) {
          var matched = [];
          for (; n2; n2 = n2.nextSibling) {
            if (n2.nodeType === 1 && n2 !== elem) {
              matched.push(n2);
            }
          }
          return matched;
        };
        var rneedsContext = jQuery2.expr.match.needsContext;
        var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
        function winnow(elements, qualifier, not) {
          if (isFunction(qualifier)) {
            return jQuery2.grep(elements, function(elem, i2) {
              return !!qualifier.call(elem, i2, elem) !== not;
            });
          }
          if (qualifier.nodeType) {
            return jQuery2.grep(elements, function(elem) {
              return elem === qualifier !== not;
            });
          }
          if (typeof qualifier !== "string") {
            return jQuery2.grep(elements, function(elem) {
              return indexOf.call(qualifier, elem) > -1 !== not;
            });
          }
          return jQuery2.filter(qualifier, elements, not);
        }
        jQuery2.filter = function(expr, elems, not) {
          var elem = elems[0];
          if (not) {
            expr = ":not(" + expr + ")";
          }
          if (elems.length === 1 && elem.nodeType === 1) {
            return jQuery2.find.matchesSelector(elem, expr) ? [elem] : [];
          }
          return jQuery2.find.matches(expr, jQuery2.grep(elems, function(elem2) {
            return elem2.nodeType === 1;
          }));
        };
        jQuery2.fn.extend({
          find: function(selector3) {
            var i2, ret, len = this.length, self2 = this;
            if (typeof selector3 !== "string") {
              return this.pushStack(jQuery2(selector3).filter(function() {
                for (i2 = 0; i2 < len; i2++) {
                  if (jQuery2.contains(self2[i2], this)) {
                    return true;
                  }
                }
              }));
            }
            ret = this.pushStack([]);
            for (i2 = 0; i2 < len; i2++) {
              jQuery2.find(selector3, self2[i2], ret);
            }
            return len > 1 ? jQuery2.uniqueSort(ret) : ret;
          },
          filter: function(selector3) {
            return this.pushStack(winnow(this, selector3 || [], false));
          },
          not: function(selector3) {
            return this.pushStack(winnow(this, selector3 || [], true));
          },
          is: function(selector3) {
            return !!winnow(
              this,
              // If this is a positional/relative selector, check membership in the returned set
              // so $("p:first").is("p:last") won't return true for a doc with two "p".
              typeof selector3 === "string" && rneedsContext.test(selector3) ? jQuery2(selector3) : selector3 || [],
              false
            ).length;
          }
        });
        var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, init4 = jQuery2.fn.init = function(selector3, context3, root) {
          var match, elem;
          if (!selector3) {
            return this;
          }
          root = root || rootjQuery;
          if (typeof selector3 === "string") {
            if (selector3[0] === "<" && selector3[selector3.length - 1] === ">" && selector3.length >= 3) {
              match = [null, selector3, null];
            } else {
              match = rquickExpr.exec(selector3);
            }
            if (match && (match[1] || !context3)) {
              if (match[1]) {
                context3 = context3 instanceof jQuery2 ? context3[0] : context3;
                jQuery2.merge(this, jQuery2.parseHTML(
                  match[1],
                  context3 && context3.nodeType ? context3.ownerDocument || context3 : document2,
                  true
                ));
                if (rsingleTag.test(match[1]) && jQuery2.isPlainObject(context3)) {
                  for (match in context3) {
                    if (isFunction(this[match])) {
                      this[match](context3[match]);
                    } else {
                      this.attr(match, context3[match]);
                    }
                  }
                }
                return this;
              } else {
                elem = document2.getElementById(match[2]);
                if (elem) {
                  this[0] = elem;
                  this.length = 1;
                }
                return this;
              }
            } else if (!context3 || context3.jquery) {
              return (context3 || root).find(selector3);
            } else {
              return this.constructor(context3).find(selector3);
            }
          } else if (selector3.nodeType) {
            this[0] = selector3;
            this.length = 1;
            return this;
          } else if (isFunction(selector3)) {
            return root.ready !== void 0 ? root.ready(selector3) : (
              // Execute immediately if ready is not present
              selector3(jQuery2)
            );
          }
          return jQuery2.makeArray(selector3, this);
        };
        init4.prototype = jQuery2.fn;
        rootjQuery = jQuery2(document2);
        var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {
          children: true,
          contents: true,
          next: true,
          prev: true
        };
        jQuery2.fn.extend({
          has: function(target) {
            var targets = jQuery2(target, this), l = targets.length;
            return this.filter(function() {
              var i2 = 0;
              for (; i2 < l; i2++) {
                if (jQuery2.contains(this, targets[i2])) {
                  return true;
                }
              }
            });
          },
          closest: function(selectors, context3) {
            var cur, i2 = 0, l = this.length, matched = [], targets = typeof selectors !== "string" && jQuery2(selectors);
            if (!rneedsContext.test(selectors)) {
              for (; i2 < l; i2++) {
                for (cur = this[i2]; cur && cur !== context3; cur = cur.parentNode) {
                  if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : (
                    // Don't pass non-elements to jQuery#find
                    cur.nodeType === 1 && jQuery2.find.matchesSelector(cur, selectors)
                  ))) {
                    matched.push(cur);
                    break;
                  }
                }
              }
            }
            return this.pushStack(matched.length > 1 ? jQuery2.uniqueSort(matched) : matched);
          },
          // Determine the position of an element within the set
          index: function(elem) {
            if (!elem) {
              return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
            }
            if (typeof elem === "string") {
              return indexOf.call(jQuery2(elem), this[0]);
            }
            return indexOf.call(
              this,
              // If it receives a jQuery object, the first element is used
              elem.jquery ? elem[0] : elem
            );
          },
          add: function(selector3, context3) {
            return this.pushStack(
              jQuery2.uniqueSort(
                jQuery2.merge(this.get(), jQuery2(selector3, context3))
              )
            );
          },
          addBack: function(selector3) {
            return this.add(
              selector3 == null ? this.prevObject : this.prevObject.filter(selector3)
            );
          }
        });
        function sibling(cur, dir2) {
          while ((cur = cur[dir2]) && cur.nodeType !== 1) {
          }
          return cur;
        }
        jQuery2.each({
          parent: function(elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null;
          },
          parents: function(elem) {
            return dir(elem, "parentNode");
          },
          parentsUntil: function(elem, _i2, until) {
            return dir(elem, "parentNode", until);
          },
          next: function(elem) {
            return sibling(elem, "nextSibling");
          },
          prev: function(elem) {
            return sibling(elem, "previousSibling");
          },
          nextAll: function(elem) {
            return dir(elem, "nextSibling");
          },
          prevAll: function(elem) {
            return dir(elem, "previousSibling");
          },
          nextUntil: function(elem, _i2, until) {
            return dir(elem, "nextSibling", until);
          },
          prevUntil: function(elem, _i2, until) {
            return dir(elem, "previousSibling", until);
          },
          siblings: function(elem) {
            return siblings((elem.parentNode || {}).firstChild, elem);
          },
          children: function(elem) {
            return siblings(elem.firstChild);
          },
          contents: function(elem) {
            if (elem.contentDocument != null && // Support: IE 11+
            // <object> elements with no `data` attribute has an object
            // `contentDocument` with a `null` prototype.
            getProto(elem.contentDocument)) {
              return elem.contentDocument;
            }
            if (nodeName(elem, "template")) {
              elem = elem.content || elem;
            }
            return jQuery2.merge([], elem.childNodes);
          }
        }, function(name, fn) {
          jQuery2.fn[name] = function(until, selector3) {
            var matched = jQuery2.map(this, fn, until);
            if (name.slice(-5) !== "Until") {
              selector3 = until;
            }
            if (selector3 && typeof selector3 === "string") {
              matched = jQuery2.filter(selector3, matched);
            }
            if (this.length > 1) {
              if (!guaranteedUnique[name]) {
                jQuery2.uniqueSort(matched);
              }
              if (rparentsprev.test(name)) {
                matched.reverse();
              }
            }
            return this.pushStack(matched);
          };
        });
        var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
        function createOptions(options) {
          var object = {};
          jQuery2.each(options.match(rnothtmlwhite) || [], function(_, flag) {
            object[flag] = true;
          });
          return object;
        }
        jQuery2.Callbacks = function(options) {
          options = typeof options === "string" ? createOptions(options) : jQuery2.extend({}, options);
          var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = function() {
            locked = locked || options.once;
            fired = firing = true;
            for (; queue.length; firingIndex = -1) {
              memory = queue.shift();
              while (++firingIndex < list.length) {
                if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {
                  firingIndex = list.length;
                  memory = false;
                }
              }
            }
            if (!options.memory) {
              memory = false;
            }
            firing = false;
            if (locked) {
              if (memory) {
                list = [];
              } else {
                list = "";
              }
            }
          }, self2 = {
            // Add a callback or a collection of callbacks to the list
            add: function() {
              if (list) {
                if (memory && !firing) {
                  firingIndex = list.length - 1;
                  queue.push(memory);
                }
                (function add(args) {
                  jQuery2.each(args, function(_, arg) {
                    if (isFunction(arg)) {
                      if (!options.unique || !self2.has(arg)) {
                        list.push(arg);
                      }
                    } else if (arg && arg.length && toType(arg) !== "string") {
                      add(arg);
                    }
                  });
                })(arguments);
                if (memory && !firing) {
                  fire();
                }
              }
              return this;
            },
            // Remove a callback from the list
            remove: function() {
              jQuery2.each(arguments, function(_, arg) {
                var index;
                while ((index = jQuery2.inArray(arg, list, index)) > -1) {
                  list.splice(index, 1);
                  if (index <= firingIndex) {
                    firingIndex--;
                  }
                }
              });
              return this;
            },
            // Check if a given callback is in the list.
            // If no argument is given, return whether or not list has callbacks attached.
            has: function(fn) {
              return fn ? jQuery2.inArray(fn, list) > -1 : list.length > 0;
            },
            // Remove all callbacks from the list
            empty: function() {
              if (list) {
                list = [];
              }
              return this;
            },
            // Disable .fire and .add
            // Abort any current/pending executions
            // Clear all callbacks and values
            disable: function() {
              locked = queue = [];
              list = memory = "";
              return this;
            },
            disabled: function() {
              return !list;
            },
            // Disable .fire
            // Also disable .add unless we have memory (since it would have no effect)
            // Abort any pending executions
            lock: function() {
              locked = queue = [];
              if (!memory && !firing) {
                list = memory = "";
              }
              return this;
            },
            locked: function() {
              return !!locked;
            },
            // Call all callbacks with the given context and arguments
            fireWith: function(context3, args) {
              if (!locked) {
                args = args || [];
                args = [context3, args.slice ? args.slice() : args];
                queue.push(args);
                if (!firing) {
                  fire();
                }
              }
              return this;
            },
            // Call all the callbacks with the given arguments
            fire: function() {
              self2.fireWith(this, arguments);
              return this;
            },
            // To know if the callbacks have already been called at least once
            fired: function() {
              return !!fired;
            }
          };
          return self2;
        };
        function Identity(v) {
          return v;
        }
        function Thrower(ex) {
          throw ex;
        }
        function adoptValue(value, resolve, reject, noValue) {
          var method;
          try {
            if (value && isFunction(method = value.promise)) {
              method.call(value).done(resolve).fail(reject);
            } else if (value && isFunction(method = value.then)) {
              method.call(value, resolve, reject);
            } else {
              resolve.apply(void 0, [value].slice(noValue));
            }
          } catch (value2) {
            reject.apply(void 0, [value2]);
          }
        }
        jQuery2.extend({
          Deferred: function(func) {
            var tuples = [
              // action, add listener, callbacks,
              // ... .then handlers, argument index, [final state]
              [
                "notify",
                "progress",
                jQuery2.Callbacks("memory"),
                jQuery2.Callbacks("memory"),
                2
              ],
              [
                "resolve",
                "done",
                jQuery2.Callbacks("once memory"),
                jQuery2.Callbacks("once memory"),
                0,
                "resolved"
              ],
              [
                "reject",
                "fail",
                jQuery2.Callbacks("once memory"),
                jQuery2.Callbacks("once memory"),
                1,
                "rejected"
              ]
            ], state = "pending", promise = {
              state: function() {
                return state;
              },
              always: function() {
                deferred.done(arguments).fail(arguments);
                return this;
              },
              "catch": function(fn) {
                return promise.then(null, fn);
              },
              // Keep pipe for back-compat
              pipe: function() {
                var fns = arguments;
                return jQuery2.Deferred(function(newDefer) {
                  jQuery2.each(tuples, function(_i2, tuple) {
                    var fn = isFunction(fns[tuple[4]]) && fns[tuple[4]];
                    deferred[tuple[1]](function() {
                      var returned = fn && fn.apply(this, arguments);
                      if (returned && isFunction(returned.promise)) {
                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
                      } else {
                        newDefer[tuple[0] + "With"](
                          this,
                          fn ? [returned] : arguments
                        );
                      }
                    });
                  });
                  fns = null;
                }).promise();
              },
              then: function(onFulfilled, onRejected, onProgress) {
                var maxDepth = 0;
                function resolve(depth, deferred2, handler, special) {
                  return function() {
                    var that = this, args = arguments, mightThrow = function() {
                      var returned, then;
                      if (depth < maxDepth) {
                        return;
                      }
                      returned = handler.apply(that, args);
                      if (returned === deferred2.promise()) {
                        throw new TypeError("Thenable self-resolution");
                      }
                      then = returned && // Support: Promises/A+ section 2.3.4
                      // https://promisesaplus.com/#point-64
                      // Only check objects and functions for thenability
                      (typeof returned === "object" || typeof returned === "function") && returned.then;
                      if (isFunction(then)) {
                        if (special) {
                          then.call(
                            returned,
                            resolve(maxDepth, deferred2, Identity, special),
                            resolve(maxDepth, deferred2, Thrower, special)
                          );
                        } else {
                          maxDepth++;
                          then.call(
                            returned,
                            resolve(maxDepth, deferred2, Identity, special),
                            resolve(maxDepth, deferred2, Thrower, special),
                            resolve(
                              maxDepth,
                              deferred2,
                              Identity,
                              deferred2.notifyWith
                            )
                          );
                        }
                      } else {
                        if (handler !== Identity) {
                          that = void 0;
                          args = [returned];
                        }
                        (special || deferred2.resolveWith)(that, args);
                      }
                    }, process = special ? mightThrow : function() {
                      try {
                        mightThrow();
                      } catch (e3) {
                        if (jQuery2.Deferred.exceptionHook) {
                          jQuery2.Deferred.exceptionHook(
                            e3,
                            process.error
                          );
                        }
                        if (depth + 1 >= maxDepth) {
                          if (handler !== Thrower) {
                            that = void 0;
                            args = [e3];
                          }
                          deferred2.rejectWith(that, args);
                        }
                      }
                    };
                    if (depth) {
                      process();
                    } else {
                      if (jQuery2.Deferred.getErrorHook) {
                        process.error = jQuery2.Deferred.getErrorHook();
                      } else if (jQuery2.Deferred.getStackHook) {
                        process.error = jQuery2.Deferred.getStackHook();
                      }
                      window2.setTimeout(process);
                    }
                  };
                }
                return jQuery2.Deferred(function(newDefer) {
                  tuples[0][3].add(
                    resolve(
                      0,
                      newDefer,
                      isFunction(onProgress) ? onProgress : Identity,
                      newDefer.notifyWith
                    )
                  );
                  tuples[1][3].add(
                    resolve(
                      0,
                      newDefer,
                      isFunction(onFulfilled) ? onFulfilled : Identity
                    )
                  );
                  tuples[2][3].add(
                    resolve(
                      0,
                      newDefer,
                      isFunction(onRejected) ? onRejected : Thrower
                    )
                  );
                }).promise();
              },
              // Get a promise for this deferred
              // If obj is provided, the promise aspect is added to the object
              promise: function(obj) {
                return obj != null ? jQuery2.extend(obj, promise) : promise;
              }
            }, deferred = {};
            jQuery2.each(tuples, function(i2, tuple) {
              var list = tuple[2], stateString = tuple[5];
              promise[tuple[1]] = list.add;
              if (stateString) {
                list.add(
                  function() {
                    state = stateString;
                  },
                  // rejected_callbacks.disable
                  // fulfilled_callbacks.disable
                  tuples[3 - i2][2].disable,
                  // rejected_handlers.disable
                  // fulfilled_handlers.disable
                  tuples[3 - i2][3].disable,
                  // progress_callbacks.lock
                  tuples[0][2].lock,
                  // progress_handlers.lock
                  tuples[0][3].lock
                );
              }
              list.add(tuple[3].fire);
              deferred[tuple[0]] = function() {
                deferred[tuple[0] + "With"](this === deferred ? void 0 : this, arguments);
                return this;
              };
              deferred[tuple[0] + "With"] = list.fireWith;
            });
            promise.promise(deferred);
            if (func) {
              func.call(deferred, deferred);
            }
            return deferred;
          },
          // Deferred helper
          when: function(singleValue) {
            var remaining = arguments.length, i2 = remaining, resolveContexts = Array(i2), resolveValues = slice.call(arguments), primary = jQuery2.Deferred(), updateFunc = function(i3) {
              return function(value) {
                resolveContexts[i3] = this;
                resolveValues[i3] = arguments.length > 1 ? slice.call(arguments) : value;
                if (!--remaining) {
                  primary.resolveWith(resolveContexts, resolveValues);
                }
              };
            };
            if (remaining <= 1) {
              adoptValue(
                singleValue,
                primary.done(updateFunc(i2)).resolve,
                primary.reject,
                !remaining
              );
              if (primary.state() === "pending" || isFunction(resolveValues[i2] && resolveValues[i2].then)) {
                return primary.then();
              }
            }
            while (i2--) {
              adoptValue(resolveValues[i2], updateFunc(i2), primary.reject);
            }
            return primary.promise();
          }
        });
        var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
        jQuery2.Deferred.exceptionHook = function(error, asyncError) {
          if (window2.console && window2.console.warn && error && rerrorNames.test(error.name)) {
            window2.console.warn(
              "jQuery.Deferred exception: " + error.message,
              error.stack,
              asyncError
            );
          }
        };
        jQuery2.readyException = function(error) {
          window2.setTimeout(function() {
            throw error;
          });
        };
        var readyList = jQuery2.Deferred();
        jQuery2.fn.ready = function(fn) {
          readyList.then(fn).catch(function(error) {
            jQuery2.readyException(error);
          });
          return this;
        };
        jQuery2.extend({
          // Is the DOM ready to be used? Set to true once it occurs.
          isReady: false,
          // A counter to track how many items to wait for before
          // the ready event fires. See trac-6781
          readyWait: 1,
          // Handle when the DOM is ready
          ready: function(wait) {
            if (wait === true ? --jQuery2.readyWait : jQuery2.isReady) {
              return;
            }
            jQuery2.isReady = true;
            if (wait !== true && --jQuery2.readyWait > 0) {
              return;
            }
            readyList.resolveWith(document2, [jQuery2]);
          }
        });
        jQuery2.ready.then = readyList.then;
        function completed() {
          document2.removeEventListener("DOMContentLoaded", completed);
          window2.removeEventListener("load", completed);
          jQuery2.ready();
        }
        if (document2.readyState === "complete" || document2.readyState !== "loading" && !document2.documentElement.doScroll) {
          window2.setTimeout(jQuery2.ready);
        } else {
          document2.addEventListener("DOMContentLoaded", completed);
          window2.addEventListener("load", completed);
        }
        var access = function(elems, fn, key, value, chainable, emptyGet, raw) {
          var i2 = 0, len = elems.length, bulk = key == null;
          if (toType(key) === "object") {
            chainable = true;
            for (i2 in key) {
              access(elems, fn, i2, key[i2], true, emptyGet, raw);
            }
          } else if (value !== void 0) {
            chainable = true;
            if (!isFunction(value)) {
              raw = true;
            }
            if (bulk) {
              if (raw) {
                fn.call(elems, value);
                fn = null;
              } else {
                bulk = fn;
                fn = function(elem, _key, value2) {
                  return bulk.call(jQuery2(elem), value2);
                };
              }
            }
            if (fn) {
              for (; i2 < len; i2++) {
                fn(
                  elems[i2],
                  key,
                  raw ? value : value.call(elems[i2], i2, fn(elems[i2], key))
                );
              }
            }
          }
          if (chainable) {
            return elems;
          }
          if (bulk) {
            return fn.call(elems);
          }
          return len ? fn(elems[0], key) : emptyGet;
        };
        var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
        function fcamelCase(_all, letter) {
          return letter.toUpperCase();
        }
        function camelCase(string) {
          return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
        }
        var acceptData = function(owner) {
          return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;
        };
        function Data() {
          this.expando = jQuery2.expando + Data.uid++;
        }
        Data.uid = 1;
        Data.prototype = {
          cache: function(owner) {
            var value = owner[this.expando];
            if (!value) {
              value = {};
              if (acceptData(owner)) {
                if (owner.nodeType) {
                  owner[this.expando] = value;
                } else {
                  Object.defineProperty(owner, this.expando, {
                    value,
                    configurable: true
                  });
                }
              }
            }
            return value;
          },
          set: function(owner, data, value) {
            var prop, cache = this.cache(owner);
            if (typeof data === "string") {
              cache[camelCase(data)] = value;
            } else {
              for (prop in data) {
                cache[camelCase(prop)] = data[prop];
              }
            }
            return cache;
          },
          get: function(owner, key) {
            return key === void 0 ? this.cache(owner) : (
              // Always use camelCase key (gh-2257)
              owner[this.expando] && owner[this.expando][camelCase(key)]
            );
          },
          access: function(owner, key, value) {
            if (key === void 0 || key && typeof key === "string" && value === void 0) {
              return this.get(owner, key);
            }
            this.set(owner, key, value);
            return value !== void 0 ? value : key;
          },
          remove: function(owner, key) {
            var i2, cache = owner[this.expando];
            if (cache === void 0) {
              return;
            }
            if (key !== void 0) {
              if (Array.isArray(key)) {
                key = key.map(camelCase);
              } else {
                key = camelCase(key);
                key = key in cache ? [key] : key.match(rnothtmlwhite) || [];
              }
              i2 = key.length;
              while (i2--) {
                delete cache[key[i2]];
              }
            }
            if (key === void 0 || jQuery2.isEmptyObject(cache)) {
              if (owner.nodeType) {
                owner[this.expando] = void 0;
              } else {
                delete owner[this.expando];
              }
            }
          },
          hasData: function(owner) {
            var cache = owner[this.expando];
            return cache !== void 0 && !jQuery2.isEmptyObject(cache);
          }
        };
        var dataPriv = new Data();
        var dataUser = new Data();
        var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
        function getData(data) {
          if (data === "true") {
            return true;
          }
          if (data === "false") {
            return false;
          }
          if (data === "null") {
            return null;
          }
          if (data === +data + "") {
            return +data;
          }
          if (rbrace.test(data)) {
            return JSON.parse(data);
          }
          return data;
        }
        function dataAttr(elem, key, data) {
          var name;
          if (data === void 0 && elem.nodeType === 1) {
            name = "data-" + key.replace(rmultiDash, "-$&").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
              try {
                data = getData(data);
              } catch (e3) {
              }
              dataUser.set(elem, key, data);
            } else {
              data = void 0;
            }
          }
          return data;
        }
        jQuery2.extend({
          hasData: function(elem) {
            return dataUser.hasData(elem) || dataPriv.hasData(elem);
          },
          data: function(elem, name, data) {
            return dataUser.access(elem, name, data);
          },
          removeData: function(elem, name) {
            dataUser.remove(elem, name);
          },
          // TODO: Now that all calls to _data and _removeData have been replaced
          // with direct calls to dataPriv methods, these can be deprecated.
          _data: function(elem, name, data) {
            return dataPriv.access(elem, name, data);
          },
          _removeData: function(elem, name) {
            dataPriv.remove(elem, name);
          }
        });
        jQuery2.fn.extend({
          data: function(key, value) {
            var i2, name, data, elem = this[0], attrs = elem && elem.attributes;
            if (key === void 0) {
              if (this.length) {
                data = dataUser.get(elem);
                if (elem.nodeType === 1 && !dataPriv.get(elem, "hasDataAttrs")) {
                  i2 = attrs.length;
                  while (i2--) {
                    if (attrs[i2]) {
                      name = attrs[i2].name;
                      if (name.indexOf("data-") === 0) {
                        name = camelCase(name.slice(5));
                        dataAttr(elem, name, data[name]);
                      }
                    }
                  }
                  dataPriv.set(elem, "hasDataAttrs", true);
                }
              }
              return data;
            }
            if (typeof key === "object") {
              return this.each(function() {
                dataUser.set(this, key);
              });
            }
            return access(this, function(value2) {
              var data2;
              if (elem && value2 === void 0) {
                data2 = dataUser.get(elem, key);
                if (data2 !== void 0) {
                  return data2;
                }
                data2 = dataAttr(elem, key);
                if (data2 !== void 0) {
                  return data2;
                }
                return;
              }
              this.each(function() {
                dataUser.set(this, key, value2);
              });
            }, null, value, arguments.length > 1, null, true);
          },
          removeData: function(key) {
            return this.each(function() {
              dataUser.remove(this, key);
            });
          }
        });
        jQuery2.extend({
          queue: function(elem, type, data) {
            var queue;
            if (elem) {
              type = (type || "fx") + "queue";
              queue = dataPriv.get(elem, type);
              if (data) {
                if (!queue || Array.isArray(data)) {
                  queue = dataPriv.access(elem, type, jQuery2.makeArray(data));
                } else {
                  queue.push(data);
                }
              }
              return queue || [];
            }
          },
          dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery2.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery2._queueHooks(elem, type), next = function() {
              jQuery2.dequeue(elem, type);
            };
            if (fn === "inprogress") {
              fn = queue.shift();
              startLength--;
            }
            if (fn) {
              if (type === "fx") {
                queue.unshift("inprogress");
              }
              delete hooks.stop;
              fn.call(elem, next, hooks);
            }
            if (!startLength && hooks) {
              hooks.empty.fire();
            }
          },
          // Not public - generate a queueHooks object, or return the current one
          _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {
              empty: jQuery2.Callbacks("once memory").add(function() {
                dataPriv.remove(elem, [type + "queue", key]);
              })
            });
          }
        });
        jQuery2.fn.extend({
          queue: function(type, data) {
            var setter = 2;
            if (typeof type !== "string") {
              data = type;
              type = "fx";
              setter--;
            }
            if (arguments.length < setter) {
              return jQuery2.queue(this[0], type);
            }
            return data === void 0 ? this : this.each(function() {
              var queue = jQuery2.queue(this, type, data);
              jQuery2._queueHooks(this, type);
              if (type === "fx" && queue[0] !== "inprogress") {
                jQuery2.dequeue(this, type);
              }
            });
          },
          dequeue: function(type) {
            return this.each(function() {
              jQuery2.dequeue(this, type);
            });
          },
          clearQueue: function(type) {
            return this.queue(type || "fx", []);
          },
          // Get a promise resolved when queues of a certain type
          // are emptied (fx is the type by default)
          promise: function(type, obj) {
            var tmp, count = 1, defer = jQuery2.Deferred(), elements = this, i2 = this.length, resolve = function() {
              if (!--count) {
                defer.resolveWith(elements, [elements]);
              }
            };
            if (typeof type !== "string") {
              obj = type;
              type = void 0;
            }
            type = type || "fx";
            while (i2--) {
              tmp = dataPriv.get(elements[i2], type + "queueHooks");
              if (tmp && tmp.empty) {
                count++;
                tmp.empty.add(resolve);
              }
            }
            resolve();
            return defer.promise(obj);
          }
        });
        var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
        var rcssNum = new RegExp("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i");
        var cssExpand = ["Top", "Right", "Bottom", "Left"];
        var documentElement = document2.documentElement;
        var isAttached = function(elem) {
          return jQuery2.contains(elem.ownerDocument, elem);
        }, composed = { composed: true };
        if (documentElement.getRootNode) {
          isAttached = function(elem) {
            return jQuery2.contains(elem.ownerDocument, elem) || elem.getRootNode(composed) === elem.ownerDocument;
          };
        }
        var isHiddenWithinTree = function(elem, el) {
          elem = el || elem;
          return elem.style.display === "none" || elem.style.display === "" && // Otherwise, check computed style
          // Support: Firefox <=43 - 45
          // Disconnected elements can have computed display: none, so first confirm that elem is
          // in the document.
          isAttached(elem) && jQuery2.css(elem, "display") === "none";
        };
        function adjustCSS(elem, prop, valueParts, tween) {
          var adjusted, scale, maxIterations = 20, currentValue = tween ? function() {
            return tween.cur();
          } : function() {
            return jQuery2.css(elem, prop, "");
          }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery2.cssNumber[prop] ? "" : "px"), initialInUnit = elem.nodeType && (jQuery2.cssNumber[prop] || unit !== "px" && +initial) && rcssNum.exec(jQuery2.css(elem, prop));
          if (initialInUnit && initialInUnit[3] !== unit) {
            initial = initial / 2;
            unit = unit || initialInUnit[3];
            initialInUnit = +initial || 1;
            while (maxIterations--) {
              jQuery2.style(elem, prop, initialInUnit + unit);
              if ((1 - scale) * (1 - (scale = currentValue() / initial || 0.5)) <= 0) {
                maxIterations = 0;
              }
              initialInUnit = initialInUnit / scale;
            }
            initialInUnit = initialInUnit * 2;
            jQuery2.style(elem, prop, initialInUnit + unit);
            valueParts = valueParts || [];
          }
          if (valueParts) {
            initialInUnit = +initialInUnit || +initial || 0;
            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];
            if (tween) {
              tween.unit = unit;
              tween.start = initialInUnit;
              tween.end = adjusted;
            }
          }
          return adjusted;
        }
        var defaultDisplayMap = {};
        function getDefaultDisplay(elem) {
          var temp, doc = elem.ownerDocument, nodeName2 = elem.nodeName, display = defaultDisplayMap[nodeName2];
          if (display) {
            return display;
          }
          temp = doc.body.appendChild(doc.createElement(nodeName2));
          display = jQuery2.css(temp, "display");
          temp.parentNode.removeChild(temp);
          if (display === "none") {
            display = "block";
          }
          defaultDisplayMap[nodeName2] = display;
          return display;
        }
        function showHide(elements, show) {
          var display, elem, values = [], index = 0, length = elements.length;
          for (; index < length; index++) {
            elem = elements[index];
            if (!elem.style) {
              continue;
            }
            display = elem.style.display;
            if (show) {
              if (display === "none") {
                values[index] = dataPriv.get(elem, "display") || null;
                if (!values[index]) {
                  elem.style.display = "";
                }
              }
              if (elem.style.display === "" && isHiddenWithinTree(elem)) {
                values[index] = getDefaultDisplay(elem);
              }
            } else {
              if (display !== "none") {
                values[index] = "none";
                dataPriv.set(elem, "display", display);
              }
            }
          }
          for (index = 0; index < length; index++) {
            if (values[index] != null) {
              elements[index].style.display = values[index];
            }
          }
          return elements;
        }
        jQuery2.fn.extend({
          show: function() {
            return showHide(this, true);
          },
          hide: function() {
            return showHide(this);
          },
          toggle: function(state) {
            if (typeof state === "boolean") {
              return state ? this.show() : this.hide();
            }
            return this.each(function() {
              if (isHiddenWithinTree(this)) {
                jQuery2(this).show();
              } else {
                jQuery2(this).hide();
              }
            });
          }
        });
        var rcheckableType = /^(?:checkbox|radio)$/i;
        var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i;
        var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;
        (function() {
          var fragment = document2.createDocumentFragment(), div = fragment.appendChild(document2.createElement("div")), input = document2.createElement("input");
          input.setAttribute("type", "radio");
          input.setAttribute("checked", "checked");
          input.setAttribute("name", "t");
          div.appendChild(input);
          support2.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
          div.innerHTML = "<textarea>x</textarea>";
          support2.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;
          div.innerHTML = "<option></option>";
          support2.option = !!div.lastChild;
        })();
        var wrapMap = {
          // XHTML parsers do not magically insert elements in the
          // same way that tag soup parsers do. So we cannot shorten
          // this by omitting <tbody> or other required elements.
          thead: [1, "<table>", "</table>"],
          col: [2, "<table><colgroup>", "</colgroup></table>"],
          tr: [2, "<table><tbody>", "</tbody></table>"],
          td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
          _default: [0, "", ""]
        };
        wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
        wrapMap.th = wrapMap.td;
        if (!support2.option) {
          wrapMap.optgroup = wrapMap.option = [1, "<select multiple='multiple'>", "</select>"];
        }
        function getAll(context3, tag) {
          var ret;
          if (typeof context3.getElementsByTagName !== "undefined") {
            ret = context3.getElementsByTagName(tag || "*");
          } else if (typeof context3.querySelectorAll !== "undefined") {
            ret = context3.querySelectorAll(tag || "*");
          } else {
            ret = [];
          }
          if (tag === void 0 || tag && nodeName(context3, tag)) {
            return jQuery2.merge([context3], ret);
          }
          return ret;
        }
        function setGlobalEval(elems, refElements) {
          var i2 = 0, l = elems.length;
          for (; i2 < l; i2++) {
            dataPriv.set(
              elems[i2],
              "globalEval",
              !refElements || dataPriv.get(refElements[i2], "globalEval")
            );
          }
        }
        var rhtml = /<|&#?\w+;/;
        function buildFragment(elems, context3, scripts, selection, ignored) {
          var elem, tmp, tag, wrap3, attached, j, fragment = context3.createDocumentFragment(), nodes = [], i2 = 0, l = elems.length;
          for (; i2 < l; i2++) {
            elem = elems[i2];
            if (elem || elem === 0) {
              if (toType(elem) === "object") {
                jQuery2.merge(nodes, elem.nodeType ? [elem] : elem);
              } else if (!rhtml.test(elem)) {
                nodes.push(context3.createTextNode(elem));
              } else {
                tmp = tmp || fragment.appendChild(context3.createElement("div"));
                tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
                wrap3 = wrapMap[tag] || wrapMap._default;
                tmp.innerHTML = wrap3[1] + jQuery2.htmlPrefilter(elem) + wrap3[2];
                j = wrap3[0];
                while (j--) {
                  tmp = tmp.lastChild;
                }
                jQuery2.merge(nodes, tmp.childNodes);
                tmp = fragment.firstChild;
                tmp.textContent = "";
              }
            }
          }
          fragment.textContent = "";
          i2 = 0;
          while (elem = nodes[i2++]) {
            if (selection && jQuery2.inArray(elem, selection) > -1) {
              if (ignored) {
                ignored.push(elem);
              }
              continue;
            }
            attached = isAttached(elem);
            tmp = getAll(fragment.appendChild(elem), "script");
            if (attached) {
              setGlobalEval(tmp);
            }
            if (scripts) {
              j = 0;
              while (elem = tmp[j++]) {
                if (rscriptType.test(elem.type || "")) {
                  scripts.push(elem);
                }
              }
            }
          }
          return fragment;
        }
        var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
        function returnTrue() {
          return true;
        }
        function returnFalse() {
          return false;
        }
        function on(elem, types, selector3, data, fn, one) {
          var origFn, type;
          if (typeof types === "object") {
            if (typeof selector3 !== "string") {
              data = data || selector3;
              selector3 = void 0;
            }
            for (type in types) {
              on(elem, type, selector3, data, types[type], one);
            }
            return elem;
          }
          if (data == null && fn == null) {
            fn = selector3;
            data = selector3 = void 0;
          } else if (fn == null) {
            if (typeof selector3 === "string") {
              fn = data;
              data = void 0;
            } else {
              fn = data;
              data = selector3;
              selector3 = void 0;
            }
          }
          if (fn === false) {
            fn = returnFalse;
          } else if (!fn) {
            return elem;
          }
          if (one === 1) {
            origFn = fn;
            fn = function(event2) {
              jQuery2().off(event2);
              return origFn.apply(this, arguments);
            };
            fn.guid = origFn.guid || (origFn.guid = jQuery2.guid++);
          }
          return elem.each(function() {
            jQuery2.event.add(this, types, fn, data, selector3);
          });
        }
        jQuery2.event = {
          global: {},
          add: function(elem, types, handler, data, selector3) {
            var handleObjIn, eventHandle, tmp, events2, t2, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
            if (!acceptData(elem)) {
              return;
            }
            if (handler.handler) {
              handleObjIn = handler;
              handler = handleObjIn.handler;
              selector3 = handleObjIn.selector;
            }
            if (selector3) {
              jQuery2.find.matchesSelector(documentElement, selector3);
            }
            if (!handler.guid) {
              handler.guid = jQuery2.guid++;
            }
            if (!(events2 = elemData.events)) {
              events2 = elemData.events = /* @__PURE__ */ Object.create(null);
            }
            if (!(eventHandle = elemData.handle)) {
              eventHandle = elemData.handle = function(e3) {
                return typeof jQuery2 !== "undefined" && jQuery2.event.triggered !== e3.type ? jQuery2.event.dispatch.apply(elem, arguments) : void 0;
              };
            }
            types = (types || "").match(rnothtmlwhite) || [""];
            t2 = types.length;
            while (t2--) {
              tmp = rtypenamespace.exec(types[t2]) || [];
              type = origType = tmp[1];
              namespaces = (tmp[2] || "").split(".").sort();
              if (!type) {
                continue;
              }
              special = jQuery2.event.special[type] || {};
              type = (selector3 ? special.delegateType : special.bindType) || type;
              special = jQuery2.event.special[type] || {};
              handleObj = jQuery2.extend({
                type,
                origType,
                data,
                handler,
                guid: handler.guid,
                selector: selector3,
                needsContext: selector3 && jQuery2.expr.match.needsContext.test(selector3),
                namespace: namespaces.join(".")
              }, handleObjIn);
              if (!(handlers = events2[type])) {
                handlers = events2[type] = [];
                handlers.delegateCount = 0;
                if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                  if (elem.addEventListener) {
                    elem.addEventListener(type, eventHandle);
                  }
                }
              }
              if (special.add) {
                special.add.call(elem, handleObj);
                if (!handleObj.handler.guid) {
                  handleObj.handler.guid = handler.guid;
                }
              }
              if (selector3) {
                handlers.splice(handlers.delegateCount++, 0, handleObj);
              } else {
                handlers.push(handleObj);
              }
              jQuery2.event.global[type] = true;
            }
          },
          // Detach an event or set of events from an element
          remove: function(elem, types, handler, selector3, mappedTypes) {
            var j, origCount, tmp, events2, t2, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);
            if (!elemData || !(events2 = elemData.events)) {
              return;
            }
            types = (types || "").match(rnothtmlwhite) || [""];
            t2 = types.length;
            while (t2--) {
              tmp = rtypenamespace.exec(types[t2]) || [];
              type = origType = tmp[1];
              namespaces = (tmp[2] || "").split(".").sort();
              if (!type) {
                for (type in events2) {
                  jQuery2.event.remove(elem, type + types[t2], handler, selector3, true);
                }
                continue;
              }
              special = jQuery2.event.special[type] || {};
              type = (selector3 ? special.delegateType : special.bindType) || type;
              handlers = events2[type] || [];
              tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)");
              origCount = j = handlers.length;
              while (j--) {
                handleObj = handlers[j];
                if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector3 || selector3 === handleObj.selector || selector3 === "**" && handleObj.selector)) {
                  handlers.splice(j, 1);
                  if (handleObj.selector) {
                    handlers.delegateCount--;
                  }
                  if (special.remove) {
                    special.remove.call(elem, handleObj);
                  }
                }
              }
              if (origCount && !handlers.length) {
                if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {
                  jQuery2.removeEvent(elem, type, elemData.handle);
                }
                delete events2[type];
              }
            }
            if (jQuery2.isEmptyObject(events2)) {
              dataPriv.remove(elem, "handle events");
            }
          },
          dispatch: function(nativeEvent) {
            var i2, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), event2 = jQuery2.event.fix(nativeEvent), handlers = (dataPriv.get(this, "events") || /* @__PURE__ */ Object.create(null))[event2.type] || [], special = jQuery2.event.special[event2.type] || {};
            args[0] = event2;
            for (i2 = 1; i2 < arguments.length; i2++) {
              args[i2] = arguments[i2];
            }
            event2.delegateTarget = this;
            if (special.preDispatch && special.preDispatch.call(this, event2) === false) {
              return;
            }
            handlerQueue = jQuery2.event.handlers.call(this, event2, handlers);
            i2 = 0;
            while ((matched = handlerQueue[i2++]) && !event2.isPropagationStopped()) {
              event2.currentTarget = matched.elem;
              j = 0;
              while ((handleObj = matched.handlers[j++]) && !event2.isImmediatePropagationStopped()) {
                if (!event2.rnamespace || handleObj.namespace === false || event2.rnamespace.test(handleObj.namespace)) {
                  event2.handleObj = handleObj;
                  event2.data = handleObj.data;
                  ret = ((jQuery2.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
                  if (ret !== void 0) {
                    if ((event2.result = ret) === false) {
                      event2.preventDefault();
                      event2.stopPropagation();
                    }
                  }
                }
              }
            }
            if (special.postDispatch) {
              special.postDispatch.call(this, event2);
            }
            return event2.result;
          },
          handlers: function(event2, handlers) {
            var i2, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event2.target;
            if (delegateCount && // Support: IE <=9
            // Black-hole SVG <use> instance trees (trac-13180)
            cur.nodeType && // Support: Firefox <=42
            // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
            // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
            // Support: IE 11 only
            // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
            !(event2.type === "click" && event2.button >= 1)) {
              for (; cur !== this; cur = cur.parentNode || this) {
                if (cur.nodeType === 1 && !(event2.type === "click" && cur.disabled === true)) {
                  matchedHandlers = [];
                  matchedSelectors = {};
                  for (i2 = 0; i2 < delegateCount; i2++) {
                    handleObj = handlers[i2];
                    sel = handleObj.selector + " ";
                    if (matchedSelectors[sel] === void 0) {
                      matchedSelectors[sel] = handleObj.needsContext ? jQuery2(sel, this).index(cur) > -1 : jQuery2.find(sel, this, null, [cur]).length;
                    }
                    if (matchedSelectors[sel]) {
                      matchedHandlers.push(handleObj);
                    }
                  }
                  if (matchedHandlers.length) {
                    handlerQueue.push({ elem: cur, handlers: matchedHandlers });
                  }
                }
              }
            }
            cur = this;
            if (delegateCount < handlers.length) {
              handlerQueue.push({ elem: cur, handlers: handlers.slice(delegateCount) });
            }
            return handlerQueue;
          },
          addProp: function(name, hook) {
            Object.defineProperty(jQuery2.Event.prototype, name, {
              enumerable: true,
              configurable: true,
              get: isFunction(hook) ? function() {
                if (this.originalEvent) {
                  return hook(this.originalEvent);
                }
              } : function() {
                if (this.originalEvent) {
                  return this.originalEvent[name];
                }
              },
              set: function(value) {
                Object.defineProperty(this, name, {
                  enumerable: true,
                  configurable: true,
                  writable: true,
                  value
                });
              }
            });
          },
          fix: function(originalEvent) {
            return originalEvent[jQuery2.expando] ? originalEvent : new jQuery2.Event(originalEvent);
          },
          special: {
            load: {
              // Prevent triggered image.load events from bubbling to window.load
              noBubble: true
            },
            click: {
              // Utilize native event to ensure correct state for checkable inputs
              setup: function(data) {
                var el = this || data;
                if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                  leverageNative(el, "click", true);
                }
                return false;
              },
              trigger: function(data) {
                var el = this || data;
                if (rcheckableType.test(el.type) && el.click && nodeName(el, "input")) {
                  leverageNative(el, "click");
                }
                return true;
              },
              // For cross-browser consistency, suppress native .click() on links
              // Also prevent it if we're currently inside a leveraged native-event stack
              _default: function(event2) {
                var target = event2.target;
                return rcheckableType.test(target.type) && target.click && nodeName(target, "input") && dataPriv.get(target, "click") || nodeName(target, "a");
              }
            },
            beforeunload: {
              postDispatch: function(event2) {
                if (event2.result !== void 0 && event2.originalEvent) {
                  event2.originalEvent.returnValue = event2.result;
                }
              }
            }
          }
        };
        function leverageNative(el, type, isSetup) {
          if (!isSetup) {
            if (dataPriv.get(el, type) === void 0) {
              jQuery2.event.add(el, type, returnTrue);
            }
            return;
          }
          dataPriv.set(el, type, false);
          jQuery2.event.add(el, type, {
            namespace: false,
            handler: function(event2) {
              var result, saved = dataPriv.get(this, type);
              if (event2.isTrigger & 1 && this[type]) {
                if (!saved) {
                  saved = slice.call(arguments);
                  dataPriv.set(this, type, saved);
                  this[type]();
                  result = dataPriv.get(this, type);
                  dataPriv.set(this, type, false);
                  if (saved !== result) {
                    event2.stopImmediatePropagation();
                    event2.preventDefault();
                    return result;
                  }
                } else if ((jQuery2.event.special[type] || {}).delegateType) {
                  event2.stopPropagation();
                }
              } else if (saved) {
                dataPriv.set(this, type, jQuery2.event.trigger(
                  saved[0],
                  saved.slice(1),
                  this
                ));
                event2.stopPropagation();
                event2.isImmediatePropagationStopped = returnTrue;
              }
            }
          });
        }
        jQuery2.removeEvent = function(elem, type, handle) {
          if (elem.removeEventListener) {
            elem.removeEventListener(type, handle);
          }
        };
        jQuery2.Event = function(src, props) {
          if (!(this instanceof jQuery2.Event)) {
            return new jQuery2.Event(src, props);
          }
          if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === void 0 && // Support: Android <=2.3 only
            src.returnValue === false ? returnTrue : returnFalse;
            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;
            this.currentTarget = src.currentTarget;
            this.relatedTarget = src.relatedTarget;
          } else {
            this.type = src;
          }
          if (props) {
            jQuery2.extend(this, props);
          }
          this.timeStamp = src && src.timeStamp || Date.now();
          this[jQuery2.expando] = true;
        };
        jQuery2.Event.prototype = {
          constructor: jQuery2.Event,
          isDefaultPrevented: returnFalse,
          isPropagationStopped: returnFalse,
          isImmediatePropagationStopped: returnFalse,
          isSimulated: false,
          preventDefault: function() {
            var e3 = this.originalEvent;
            this.isDefaultPrevented = returnTrue;
            if (e3 && !this.isSimulated) {
              e3.preventDefault();
            }
          },
          stopPropagation: function() {
            var e3 = this.originalEvent;
            this.isPropagationStopped = returnTrue;
            if (e3 && !this.isSimulated) {
              e3.stopPropagation();
            }
          },
          stopImmediatePropagation: function() {
            var e3 = this.originalEvent;
            this.isImmediatePropagationStopped = returnTrue;
            if (e3 && !this.isSimulated) {
              e3.stopImmediatePropagation();
            }
            this.stopPropagation();
          }
        };
        jQuery2.each({
          altKey: true,
          bubbles: true,
          cancelable: true,
          changedTouches: true,
          ctrlKey: true,
          detail: true,
          eventPhase: true,
          metaKey: true,
          pageX: true,
          pageY: true,
          shiftKey: true,
          view: true,
          "char": true,
          code: true,
          charCode: true,
          key: true,
          keyCode: true,
          button: true,
          buttons: true,
          clientX: true,
          clientY: true,
          offsetX: true,
          offsetY: true,
          pointerId: true,
          pointerType: true,
          screenX: true,
          screenY: true,
          targetTouches: true,
          toElement: true,
          touches: true,
          which: true
        }, jQuery2.event.addProp);
        jQuery2.each({ focus: "focusin", blur: "focusout" }, function(type, delegateType) {
          function focusMappedHandler(nativeEvent) {
            if (document2.documentMode) {
              var handle = dataPriv.get(this, "handle"), event2 = jQuery2.event.fix(nativeEvent);
              event2.type = nativeEvent.type === "focusin" ? "focus" : "blur";
              event2.isSimulated = true;
              handle(nativeEvent);
              if (event2.target === event2.currentTarget) {
                handle(event2);
              }
            } else {
              jQuery2.event.simulate(
                delegateType,
                nativeEvent.target,
                jQuery2.event.fix(nativeEvent)
              );
            }
          }
          jQuery2.event.special[type] = {
            // Utilize native event if possible so blur/focus sequence is correct
            setup: function() {
              var attaches;
              leverageNative(this, type, true);
              if (document2.documentMode) {
                attaches = dataPriv.get(this, delegateType);
                if (!attaches) {
                  this.addEventListener(delegateType, focusMappedHandler);
                }
                dataPriv.set(this, delegateType, (attaches || 0) + 1);
              } else {
                return false;
              }
            },
            trigger: function() {
              leverageNative(this, type);
              return true;
            },
            teardown: function() {
              var attaches;
              if (document2.documentMode) {
                attaches = dataPriv.get(this, delegateType) - 1;
                if (!attaches) {
                  this.removeEventListener(delegateType, focusMappedHandler);
                  dataPriv.remove(this, delegateType);
                } else {
                  dataPriv.set(this, delegateType, attaches);
                }
              } else {
                return false;
              }
            },
            // Suppress native focus or blur if we're currently inside
            // a leveraged native-event stack
            _default: function(event2) {
              return dataPriv.get(event2.target, type);
            },
            delegateType
          };
          jQuery2.event.special[delegateType] = {
            setup: function() {
              var doc = this.ownerDocument || this.document || this, dataHolder = document2.documentMode ? this : doc, attaches = dataPriv.get(dataHolder, delegateType);
              if (!attaches) {
                if (document2.documentMode) {
                  this.addEventListener(delegateType, focusMappedHandler);
                } else {
                  doc.addEventListener(type, focusMappedHandler, true);
                }
              }
              dataPriv.set(dataHolder, delegateType, (attaches || 0) + 1);
            },
            teardown: function() {
              var doc = this.ownerDocument || this.document || this, dataHolder = document2.documentMode ? this : doc, attaches = dataPriv.get(dataHolder, delegateType) - 1;
              if (!attaches) {
                if (document2.documentMode) {
                  this.removeEventListener(delegateType, focusMappedHandler);
                } else {
                  doc.removeEventListener(type, focusMappedHandler, true);
                }
                dataPriv.remove(dataHolder, delegateType);
              } else {
                dataPriv.set(dataHolder, delegateType, attaches);
              }
            }
          };
        });
        jQuery2.each({
          mouseenter: "mouseover",
          mouseleave: "mouseout",
          pointerenter: "pointerover",
          pointerleave: "pointerout"
        }, function(orig, fix) {
          jQuery2.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event2) {
              var ret, target = this, related = event2.relatedTarget, handleObj = event2.handleObj;
              if (!related || related !== target && !jQuery2.contains(target, related)) {
                event2.type = handleObj.origType;
                ret = handleObj.handler.apply(this, arguments);
                event2.type = fix;
              }
              return ret;
            }
          };
        });
        jQuery2.fn.extend({
          on: function(types, selector3, data, fn) {
            return on(this, types, selector3, data, fn);
          },
          one: function(types, selector3, data, fn) {
            return on(this, types, selector3, data, fn, 1);
          },
          off: function(types, selector3, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) {
              handleObj = types.handleObj;
              jQuery2(types.delegateTarget).off(
                handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
                handleObj.selector,
                handleObj.handler
              );
              return this;
            }
            if (typeof types === "object") {
              for (type in types) {
                this.off(type, selector3, types[type]);
              }
              return this;
            }
            if (selector3 === false || typeof selector3 === "function") {
              fn = selector3;
              selector3 = void 0;
            }
            if (fn === false) {
              fn = returnFalse;
            }
            return this.each(function() {
              jQuery2.event.remove(this, types, fn, selector3);
            });
          }
        });
        var rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!\[CDATA\[|\]\]>\s*$/g;
        function manipulationTarget(elem, content) {
          if (nodeName(elem, "table") && nodeName(content.nodeType !== 11 ? content : content.firstChild, "tr")) {
            return jQuery2(elem).children("tbody")[0] || elem;
          }
          return elem;
        }
        function disableScript(elem) {
          elem.type = (elem.getAttribute("type") !== null) + "/" + elem.type;
          return elem;
        }
        function restoreScript(elem) {
          if ((elem.type || "").slice(0, 5) === "true/") {
            elem.type = elem.type.slice(5);
          } else {
            elem.removeAttribute("type");
          }
          return elem;
        }
        function cloneCopyEvent(src, dest) {
          var i2, l, type, pdataOld, udataOld, udataCur, events2;
          if (dest.nodeType !== 1) {
            return;
          }
          if (dataPriv.hasData(src)) {
            pdataOld = dataPriv.get(src);
            events2 = pdataOld.events;
            if (events2) {
              dataPriv.remove(dest, "handle events");
              for (type in events2) {
                for (i2 = 0, l = events2[type].length; i2 < l; i2++) {
                  jQuery2.event.add(dest, type, events2[type][i2]);
                }
              }
            }
          }
          if (dataUser.hasData(src)) {
            udataOld = dataUser.access(src);
            udataCur = jQuery2.extend({}, udataOld);
            dataUser.set(dest, udataCur);
          }
        }
        function fixInput(src, dest) {
          var nodeName2 = dest.nodeName.toLowerCase();
          if (nodeName2 === "input" && rcheckableType.test(src.type)) {
            dest.checked = src.checked;
          } else if (nodeName2 === "input" || nodeName2 === "textarea") {
            dest.defaultValue = src.defaultValue;
          }
        }
        function domManip(collection, args, callback, ignored) {
          args = flat(args);
          var fragment, first, scripts, hasScripts, node, doc, i2 = 0, l = collection.length, iNoClone = l - 1, value = args[0], valueIsFunction = isFunction(value);
          if (valueIsFunction || l > 1 && typeof value === "string" && !support2.checkClone && rchecked.test(value)) {
            return collection.each(function(index) {
              var self2 = collection.eq(index);
              if (valueIsFunction) {
                args[0] = value.call(this, index, self2.html());
              }
              domManip(self2, args, callback, ignored);
            });
          }
          if (l) {
            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
            first = fragment.firstChild;
            if (fragment.childNodes.length === 1) {
              fragment = first;
            }
            if (first || ignored) {
              scripts = jQuery2.map(getAll(fragment, "script"), disableScript);
              hasScripts = scripts.length;
              for (; i2 < l; i2++) {
                node = fragment;
                if (i2 !== iNoClone) {
                  node = jQuery2.clone(node, true, true);
                  if (hasScripts) {
                    jQuery2.merge(scripts, getAll(node, "script"));
                  }
                }
                callback.call(collection[i2], node, i2);
              }
              if (hasScripts) {
                doc = scripts[scripts.length - 1].ownerDocument;
                jQuery2.map(scripts, restoreScript);
                for (i2 = 0; i2 < hasScripts; i2++) {
                  node = scripts[i2];
                  if (rscriptType.test(node.type || "") && !dataPriv.access(node, "globalEval") && jQuery2.contains(doc, node)) {
                    if (node.src && (node.type || "").toLowerCase() !== "module") {
                      if (jQuery2._evalUrl && !node.noModule) {
                        jQuery2._evalUrl(node.src, {
                          nonce: node.nonce || node.getAttribute("nonce")
                        }, doc);
                      }
                    } else {
                      DOMEval(node.textContent.replace(rcleanScript, ""), node, doc);
                    }
                  }
                }
              }
            }
          }
          return collection;
        }
        function remove(elem, selector3, keepData) {
          var node, nodes = selector3 ? jQuery2.filter(selector3, elem) : elem, i2 = 0;
          for (; (node = nodes[i2]) != null; i2++) {
            if (!keepData && node.nodeType === 1) {
              jQuery2.cleanData(getAll(node));
            }
            if (node.parentNode) {
              if (keepData && isAttached(node)) {
                setGlobalEval(getAll(node, "script"));
              }
              node.parentNode.removeChild(node);
            }
          }
          return elem;
        }
        jQuery2.extend({
          htmlPrefilter: function(html) {
            return html;
          },
          clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var i2, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = isAttached(elem);
            if (!support2.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery2.isXMLDoc(elem)) {
              destElements = getAll(clone);
              srcElements = getAll(elem);
              for (i2 = 0, l = srcElements.length; i2 < l; i2++) {
                fixInput(srcElements[i2], destElements[i2]);
              }
            }
            if (dataAndEvents) {
              if (deepDataAndEvents) {
                srcElements = srcElements || getAll(elem);
                destElements = destElements || getAll(clone);
                for (i2 = 0, l = srcElements.length; i2 < l; i2++) {
                  cloneCopyEvent(srcElements[i2], destElements[i2]);
                }
              } else {
                cloneCopyEvent(elem, clone);
              }
            }
            destElements = getAll(clone, "script");
            if (destElements.length > 0) {
              setGlobalEval(destElements, !inPage && getAll(elem, "script"));
            }
            return clone;
          },
          cleanData: function(elems) {
            var data, elem, type, special = jQuery2.event.special, i2 = 0;
            for (; (elem = elems[i2]) !== void 0; i2++) {
              if (acceptData(elem)) {
                if (data = elem[dataPriv.expando]) {
                  if (data.events) {
                    for (type in data.events) {
                      if (special[type]) {
                        jQuery2.event.remove(elem, type);
                      } else {
                        jQuery2.removeEvent(elem, type, data.handle);
                      }
                    }
                  }
                  elem[dataPriv.expando] = void 0;
                }
                if (elem[dataUser.expando]) {
                  elem[dataUser.expando] = void 0;
                }
              }
            }
          }
        });
        jQuery2.fn.extend({
          detach: function(selector3) {
            return remove(this, selector3, true);
          },
          remove: function(selector3) {
            return remove(this, selector3);
          },
          text: function(value) {
            return access(this, function(value2) {
              return value2 === void 0 ? jQuery2.text(this) : this.empty().each(function() {
                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                  this.textContent = value2;
                }
              });
            }, null, value, arguments.length);
          },
          append: function() {
            return domManip(this, arguments, function(elem) {
              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.appendChild(elem);
              }
            });
          },
          prepend: function() {
            return domManip(this, arguments, function(elem) {
              if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
                var target = manipulationTarget(this, elem);
                target.insertBefore(elem, target.firstChild);
              }
            });
          },
          before: function() {
            return domManip(this, arguments, function(elem) {
              if (this.parentNode) {
                this.parentNode.insertBefore(elem, this);
              }
            });
          },
          after: function() {
            return domManip(this, arguments, function(elem) {
              if (this.parentNode) {
                this.parentNode.insertBefore(elem, this.nextSibling);
              }
            });
          },
          empty: function() {
            var elem, i2 = 0;
            for (; (elem = this[i2]) != null; i2++) {
              if (elem.nodeType === 1) {
                jQuery2.cleanData(getAll(elem, false));
                elem.textContent = "";
              }
            }
            return this;
          },
          clone: function(dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function() {
              return jQuery2.clone(this, dataAndEvents, deepDataAndEvents);
            });
          },
          html: function(value) {
            return access(this, function(value2) {
              var elem = this[0] || {}, i2 = 0, l = this.length;
              if (value2 === void 0 && elem.nodeType === 1) {
                return elem.innerHTML;
              }
              if (typeof value2 === "string" && !rnoInnerhtml.test(value2) && !wrapMap[(rtagName.exec(value2) || ["", ""])[1].toLowerCase()]) {
                value2 = jQuery2.htmlPrefilter(value2);
                try {
                  for (; i2 < l; i2++) {
                    elem = this[i2] || {};
                    if (elem.nodeType === 1) {
                      jQuery2.cleanData(getAll(elem, false));
                      elem.innerHTML = value2;
                    }
                  }
                  elem = 0;
                } catch (e3) {
                }
              }
              if (elem) {
                this.empty().append(value2);
              }
            }, null, value, arguments.length);
          },
          replaceWith: function() {
            var ignored = [];
            return domManip(this, arguments, function(elem) {
              var parent = this.parentNode;
              if (jQuery2.inArray(this, ignored) < 0) {
                jQuery2.cleanData(getAll(this));
                if (parent) {
                  parent.replaceChild(elem, this);
                }
              }
            }, ignored);
          }
        });
        jQuery2.each({
          appendTo: "append",
          prependTo: "prepend",
          insertBefore: "before",
          insertAfter: "after",
          replaceAll: "replaceWith"
        }, function(name, original) {
          jQuery2.fn[name] = function(selector3) {
            var elems, ret = [], insert = jQuery2(selector3), last = insert.length - 1, i2 = 0;
            for (; i2 <= last; i2++) {
              elems = i2 === last ? this : this.clone(true);
              jQuery2(insert[i2])[original](elems);
              push.apply(ret, elems.get());
            }
            return this.pushStack(ret);
          };
        });
        var rnumnonpx = new RegExp("^(" + pnum + ")(?!px)[a-z%]+$", "i");
        var rcustomProp = /^--/;
        var getStyles = function(elem) {
          var view = elem.ownerDocument.defaultView;
          if (!view || !view.opener) {
            view = window2;
          }
          return view.getComputedStyle(elem);
        };
        var swap = function(elem, options, callback) {
          var ret, name, old = {};
          for (name in options) {
            old[name] = elem.style[name];
            elem.style[name] = options[name];
          }
          ret = callback.call(elem);
          for (name in options) {
            elem.style[name] = old[name];
          }
          return ret;
        };
        var rboxStyle = new RegExp(cssExpand.join("|"), "i");
        (function() {
          function computeStyleTests() {
            if (!div) {
              return;
            }
            container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
            div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
            documentElement.appendChild(container).appendChild(div);
            var divStyle = window2.getComputedStyle(div);
            pixelPositionVal = divStyle.top !== "1%";
            reliableMarginLeftVal = roundPixelMeasures(divStyle.marginLeft) === 12;
            div.style.right = "60%";
            pixelBoxStylesVal = roundPixelMeasures(divStyle.right) === 36;
            boxSizingReliableVal = roundPixelMeasures(divStyle.width) === 36;
            div.style.position = "absolute";
            scrollboxSizeVal = roundPixelMeasures(div.offsetWidth / 3) === 12;
            documentElement.removeChild(container);
            div = null;
          }
          function roundPixelMeasures(measure) {
            return Math.round(parseFloat(measure));
          }
          var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableTrDimensionsVal, reliableMarginLeftVal, container = document2.createElement("div"), div = document2.createElement("div");
          if (!div.style) {
            return;
          }
          div.style.backgroundClip = "content-box";
          div.cloneNode(true).style.backgroundClip = "";
          support2.clearCloneStyle = div.style.backgroundClip === "content-box";
          jQuery2.extend(support2, {
            boxSizingReliable: function() {
              computeStyleTests();
              return boxSizingReliableVal;
            },
            pixelBoxStyles: function() {
              computeStyleTests();
              return pixelBoxStylesVal;
            },
            pixelPosition: function() {
              computeStyleTests();
              return pixelPositionVal;
            },
            reliableMarginLeft: function() {
              computeStyleTests();
              return reliableMarginLeftVal;
            },
            scrollboxSize: function() {
              computeStyleTests();
              return scrollboxSizeVal;
            },
            // Support: IE 9 - 11+, Edge 15 - 18+
            // IE/Edge misreport `getComputedStyle` of table rows with width/height
            // set in CSS while `offset*` properties report correct values.
            // Behavior in IE 9 is more subtle than in newer versions & it passes
            // some versions of this test; make sure not to make it pass there!
            //
            // Support: Firefox 70+
            // Only Firefox includes border widths
            // in computed dimensions. (gh-4529)
            reliableTrDimensions: function() {
              var table, tr, trChild, trStyle;
              if (reliableTrDimensionsVal == null) {
                table = document2.createElement("table");
                tr = document2.createElement("tr");
                trChild = document2.createElement("div");
                table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
                tr.style.cssText = "box-sizing:content-box;border:1px solid";
                tr.style.height = "1px";
                trChild.style.height = "9px";
                trChild.style.display = "block";
                documentElement.appendChild(table).appendChild(tr).appendChild(trChild);
                trStyle = window2.getComputedStyle(tr);
                reliableTrDimensionsVal = parseInt(trStyle.height, 10) + parseInt(trStyle.borderTopWidth, 10) + parseInt(trStyle.borderBottomWidth, 10) === tr.offsetHeight;
                documentElement.removeChild(table);
              }
              return reliableTrDimensionsVal;
            }
          });
        })();
        function curCSS(elem, name, computed) {
          var width2, minWidth, maxWidth, ret, isCustomProp = rcustomProp.test(name), style = elem.style;
          computed = computed || getStyles(elem);
          if (computed) {
            ret = computed.getPropertyValue(name) || computed[name];
            if (isCustomProp && ret) {
              ret = ret.replace(rtrimCSS, "$1") || void 0;
            }
            if (ret === "" && !isAttached(elem)) {
              ret = jQuery2.style(elem, name);
            }
            if (!support2.pixelBoxStyles() && rnumnonpx.test(ret) && rboxStyle.test(name)) {
              width2 = style.width;
              minWidth = style.minWidth;
              maxWidth = style.maxWidth;
              style.minWidth = style.maxWidth = style.width = ret;
              ret = computed.width;
              style.width = width2;
              style.minWidth = minWidth;
              style.maxWidth = maxWidth;
            }
          }
          return ret !== void 0 ? (
            // Support: IE <=9 - 11 only
            // IE returns zIndex value as an integer.
            ret + ""
          ) : ret;
        }
        function addGetHookIf(conditionFn, hookFn) {
          return {
            get: function() {
              if (conditionFn()) {
                delete this.get;
                return;
              }
              return (this.get = hookFn).apply(this, arguments);
            }
          };
        }
        var cssPrefixes = ["Webkit", "Moz", "ms"], emptyStyle = document2.createElement("div").style, vendorProps = {};
        function vendorPropName(name) {
          var capName = name[0].toUpperCase() + name.slice(1), i2 = cssPrefixes.length;
          while (i2--) {
            name = cssPrefixes[i2] + capName;
            if (name in emptyStyle) {
              return name;
            }
          }
        }
        function finalPropName(name) {
          var final = jQuery2.cssProps[name] || vendorProps[name];
          if (final) {
            return final;
          }
          if (name in emptyStyle) {
            return name;
          }
          return vendorProps[name] = vendorPropName(name) || name;
        }
        var rdisplayswap = /^(none|table(?!-c[ea]).+)/, cssShow = { position: "absolute", visibility: "hidden", display: "block" }, cssNormalTransform = {
          letterSpacing: "0",
          fontWeight: "400"
        };
        function setPositiveNumber(_elem, value, subtract) {
          var matches = rcssNum.exec(value);
          return matches ? (
            // Guard against undefined "subtract", e.g., when used as in cssHooks
            Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || "px")
          ) : value;
        }
        function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
          var i2 = dimension === "width" ? 1 : 0, extra = 0, delta = 0, marginDelta = 0;
          if (box === (isBorderBox ? "border" : "content")) {
            return 0;
          }
          for (; i2 < 4; i2 += 2) {
            if (box === "margin") {
              marginDelta += jQuery2.css(elem, box + cssExpand[i2], true, styles);
            }
            if (!isBorderBox) {
              delta += jQuery2.css(elem, "padding" + cssExpand[i2], true, styles);
              if (box !== "padding") {
                delta += jQuery2.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
              } else {
                extra += jQuery2.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
              }
            } else {
              if (box === "content") {
                delta -= jQuery2.css(elem, "padding" + cssExpand[i2], true, styles);
              }
              if (box !== "margin") {
                delta -= jQuery2.css(elem, "border" + cssExpand[i2] + "Width", true, styles);
              }
            }
          }
          if (!isBorderBox && computedVal >= 0) {
            delta += Math.max(0, Math.ceil(
              elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - computedVal - delta - extra - 0.5
              // If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
              // Use an explicit zero to avoid NaN (gh-3964)
            )) || 0;
          }
          return delta + marginDelta;
        }
        function getWidthOrHeight(elem, dimension, extra) {
          var styles = getStyles(elem), boxSizingNeeded = !support2.boxSizingReliable() || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", valueIsBorderBox = isBorderBox, val = curCSS(elem, dimension, styles), offsetProp = "offset" + dimension[0].toUpperCase() + dimension.slice(1);
          if (rnumnonpx.test(val)) {
            if (!extra) {
              return val;
            }
            val = "auto";
          }
          if ((!support2.boxSizingReliable() && isBorderBox || // Support: IE 10 - 11+, Edge 15 - 18+
          // IE/Edge misreport `getComputedStyle` of table rows with width/height
          // set in CSS while `offset*` properties report correct values.
          // Interestingly, in some cases IE 9 doesn't suffer from this issue.
          !support2.reliableTrDimensions() && nodeName(elem, "tr") || // Fall back to offsetWidth/offsetHeight when value is "auto"
          // This happens for inline elements with no explicit setting (gh-3571)
          val === "auto" || // Support: Android <=4.1 - 4.3 only
          // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
          !parseFloat(val) && jQuery2.css(elem, "display", false, styles) === "inline") && // Make sure the element is visible & connected
          elem.getClientRects().length) {
            isBorderBox = jQuery2.css(elem, "boxSizing", false, styles) === "border-box";
            valueIsBorderBox = offsetProp in elem;
            if (valueIsBorderBox) {
              val = elem[offsetProp];
            }
          }
          val = parseFloat(val) || 0;
          return val + boxModelAdjustment(
            elem,
            dimension,
            extra || (isBorderBox ? "border" : "content"),
            valueIsBorderBox,
            styles,
            // Provide the current computed size to request scroll gutter calculation (gh-3589)
            val
          ) + "px";
        }
        jQuery2.extend({
          // Add in style property hooks for overriding the default
          // behavior of getting and setting a style property
          cssHooks: {
            opacity: {
              get: function(elem, computed) {
                if (computed) {
                  var ret = curCSS(elem, "opacity");
                  return ret === "" ? "1" : ret;
                }
              }
            }
          },
          // Don't automatically add "px" to these possibly-unitless properties
          cssNumber: {
            animationIterationCount: true,
            aspectRatio: true,
            borderImageSlice: true,
            columnCount: true,
            flexGrow: true,
            flexShrink: true,
            fontWeight: true,
            gridArea: true,
            gridColumn: true,
            gridColumnEnd: true,
            gridColumnStart: true,
            gridRow: true,
            gridRowEnd: true,
            gridRowStart: true,
            lineHeight: true,
            opacity: true,
            order: true,
            orphans: true,
            scale: true,
            widows: true,
            zIndex: true,
            zoom: true,
            // SVG-related
            fillOpacity: true,
            floodOpacity: true,
            stopOpacity: true,
            strokeMiterlimit: true,
            strokeOpacity: true
          },
          // Add in properties whose names you wish to fix before
          // setting or getting the value
          cssProps: {},
          // Get and set the style property on a DOM Node
          style: function(elem, name, value, extra) {
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
              return;
            }
            var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
            if (!isCustomProp) {
              name = finalPropName(origName);
            }
            hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
            if (value !== void 0) {
              type = typeof value;
              if (type === "string" && (ret = rcssNum.exec(value)) && ret[1]) {
                value = adjustCSS(elem, name, ret);
                type = "number";
              }
              if (value == null || value !== value) {
                return;
              }
              if (type === "number" && !isCustomProp) {
                value += ret && ret[3] || (jQuery2.cssNumber[origName] ? "" : "px");
              }
              if (!support2.clearCloneStyle && value === "" && name.indexOf("background") === 0) {
                style[name] = "inherit";
              }
              if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value, extra)) !== void 0) {
                if (isCustomProp) {
                  style.setProperty(name, value);
                } else {
                  style[name] = value;
                }
              }
            } else {
              if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== void 0) {
                return ret;
              }
              return style[name];
            }
          },
          css: function(elem, name, extra, styles) {
            var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);
            if (!isCustomProp) {
              name = finalPropName(origName);
            }
            hooks = jQuery2.cssHooks[name] || jQuery2.cssHooks[origName];
            if (hooks && "get" in hooks) {
              val = hooks.get(elem, true, extra);
            }
            if (val === void 0) {
              val = curCSS(elem, name, styles);
            }
            if (val === "normal" && name in cssNormalTransform) {
              val = cssNormalTransform[name];
            }
            if (extra === "" || extra) {
              num = parseFloat(val);
              return extra === true || isFinite(num) ? num || 0 : val;
            }
            return val;
          }
        });
        jQuery2.each(["height", "width"], function(_i2, dimension) {
          jQuery2.cssHooks[dimension] = {
            get: function(elem, computed, extra) {
              if (computed) {
                return rdisplayswap.test(jQuery2.css(elem, "display")) && // Support: Safari 8+
                // Table columns in Safari have non-zero offsetWidth & zero
                // getBoundingClientRect().width unless display is changed.
                // Support: IE <=11 only
                // Running getBoundingClientRect on a disconnected node
                // in IE throws an error.
                (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function() {
                  return getWidthOrHeight(elem, dimension, extra);
                }) : getWidthOrHeight(elem, dimension, extra);
              }
            },
            set: function(elem, value, extra) {
              var matches, styles = getStyles(elem), scrollboxSizeBuggy = !support2.scrollboxSize() && styles.position === "absolute", boxSizingNeeded = scrollboxSizeBuggy || extra, isBorderBox = boxSizingNeeded && jQuery2.css(elem, "boxSizing", false, styles) === "border-box", subtract = extra ? boxModelAdjustment(
                elem,
                dimension,
                extra,
                isBorderBox,
                styles
              ) : 0;
              if (isBorderBox && scrollboxSizeBuggy) {
                subtract -= Math.ceil(
                  elem["offset" + dimension[0].toUpperCase() + dimension.slice(1)] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5
                );
              }
              if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || "px") !== "px") {
                elem.style[dimension] = value;
                value = jQuery2.css(elem, dimension);
              }
              return setPositiveNumber(elem, value, subtract);
            }
          };
        });
        jQuery2.cssHooks.marginLeft = addGetHookIf(
          support2.reliableMarginLeft,
          function(elem, computed) {
            if (computed) {
              return (parseFloat(curCSS(elem, "marginLeft")) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function() {
                return elem.getBoundingClientRect().left;
              })) + "px";
            }
          }
        );
        jQuery2.each({
          margin: "",
          padding: "",
          border: "Width"
        }, function(prefix, suffix) {
          jQuery2.cssHooks[prefix + suffix] = {
            expand: function(value) {
              var i2 = 0, expanded = {}, parts = typeof value === "string" ? value.split(" ") : [value];
              for (; i2 < 4; i2++) {
                expanded[prefix + cssExpand[i2] + suffix] = parts[i2] || parts[i2 - 2] || parts[0];
              }
              return expanded;
            }
          };
          if (prefix !== "margin") {
            jQuery2.cssHooks[prefix + suffix].set = setPositiveNumber;
          }
        });
        jQuery2.fn.extend({
          css: function(name, value) {
            return access(this, function(elem, name2, value2) {
              var styles, len, map = {}, i2 = 0;
              if (Array.isArray(name2)) {
                styles = getStyles(elem);
                len = name2.length;
                for (; i2 < len; i2++) {
                  map[name2[i2]] = jQuery2.css(elem, name2[i2], false, styles);
                }
                return map;
              }
              return value2 !== void 0 ? jQuery2.style(elem, name2, value2) : jQuery2.css(elem, name2);
            }, name, value, arguments.length > 1);
          }
        });
        function Tween2(elem, options, prop, end, easing) {
          return new Tween2.prototype.init(elem, options, prop, end, easing);
        }
        jQuery2.Tween = Tween2;
        Tween2.prototype = {
          constructor: Tween2,
          init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem;
            this.prop = prop;
            this.easing = easing || jQuery2.easing._default;
            this.options = options;
            this.start = this.now = this.cur();
            this.end = end;
            this.unit = unit || (jQuery2.cssNumber[prop] ? "" : "px");
          },
          cur: function() {
            var hooks = Tween2.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween2.propHooks._default.get(this);
          },
          run: function(percent) {
            var eased, hooks = Tween2.propHooks[this.prop];
            if (this.options.duration) {
              this.pos = eased = jQuery2.easing[this.easing](
                percent,
                this.options.duration * percent,
                0,
                1,
                this.options.duration
              );
            } else {
              this.pos = eased = percent;
            }
            this.now = (this.end - this.start) * eased + this.start;
            if (this.options.step) {
              this.options.step.call(this.elem, this.now, this);
            }
            if (hooks && hooks.set) {
              hooks.set(this);
            } else {
              Tween2.propHooks._default.set(this);
            }
            return this;
          }
        };
        Tween2.prototype.init.prototype = Tween2.prototype;
        Tween2.propHooks = {
          _default: {
            get: function(tween) {
              var result;
              if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {
                return tween.elem[tween.prop];
              }
              result = jQuery2.css(tween.elem, tween.prop, "");
              return !result || result === "auto" ? 0 : result;
            },
            set: function(tween) {
              if (jQuery2.fx.step[tween.prop]) {
                jQuery2.fx.step[tween.prop](tween);
              } else if (tween.elem.nodeType === 1 && (jQuery2.cssHooks[tween.prop] || tween.elem.style[finalPropName(tween.prop)] != null)) {
                jQuery2.style(tween.elem, tween.prop, tween.now + tween.unit);
              } else {
                tween.elem[tween.prop] = tween.now;
              }
            }
          }
        };
        Tween2.propHooks.scrollTop = Tween2.propHooks.scrollLeft = {
          set: function(tween) {
            if (tween.elem.nodeType && tween.elem.parentNode) {
              tween.elem[tween.prop] = tween.now;
            }
          }
        };
        jQuery2.easing = {
          linear: function(p) {
            return p;
          },
          swing: function(p) {
            return 0.5 - Math.cos(p * Math.PI) / 2;
          },
          _default: "swing"
        };
        jQuery2.fx = Tween2.prototype.init;
        jQuery2.fx.step = {};
        var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
        function schedule() {
          if (inProgress) {
            if (document2.hidden === false && window2.requestAnimationFrame) {
              window2.requestAnimationFrame(schedule);
            } else {
              window2.setTimeout(schedule, jQuery2.fx.interval);
            }
            jQuery2.fx.tick();
          }
        }
        function createFxNow() {
          window2.setTimeout(function() {
            fxNow = void 0;
          });
          return fxNow = Date.now();
        }
        function genFx(type, includeWidth) {
          var which, i2 = 0, attrs = { height: type };
          includeWidth = includeWidth ? 1 : 0;
          for (; i2 < 4; i2 += 2 - includeWidth) {
            which = cssExpand[i2];
            attrs["margin" + which] = attrs["padding" + which] = type;
          }
          if (includeWidth) {
            attrs.opacity = attrs.width = type;
          }
          return attrs;
        }
        function createTween(value, prop, animation) {
          var tween, collection = (Animation2.tweeners[prop] || []).concat(Animation2.tweeners["*"]), index = 0, length = collection.length;
          for (; index < length; index++) {
            if (tween = collection[index].call(animation, prop, value)) {
              return tween;
            }
          }
        }
        function defaultPrefilter(elem, props, opts) {
          var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = "width" in props || "height" in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, "fxshow");
          if (!opts.queue) {
            hooks = jQuery2._queueHooks(elem, "fx");
            if (hooks.unqueued == null) {
              hooks.unqueued = 0;
              oldfire = hooks.empty.fire;
              hooks.empty.fire = function() {
                if (!hooks.unqueued) {
                  oldfire();
                }
              };
            }
            hooks.unqueued++;
            anim.always(function() {
              anim.always(function() {
                hooks.unqueued--;
                if (!jQuery2.queue(elem, "fx").length) {
                  hooks.empty.fire();
                }
              });
            });
          }
          for (prop in props) {
            value = props[prop];
            if (rfxtypes.test(value)) {
              delete props[prop];
              toggle = toggle || value === "toggle";
              if (value === (hidden ? "hide" : "show")) {
                if (value === "show" && dataShow && dataShow[prop] !== void 0) {
                  hidden = true;
                } else {
                  continue;
                }
              }
              orig[prop] = dataShow && dataShow[prop] || jQuery2.style(elem, prop);
            }
          }
          propTween = !jQuery2.isEmptyObject(props);
          if (!propTween && jQuery2.isEmptyObject(orig)) {
            return;
          }
          if (isBox && elem.nodeType === 1) {
            opts.overflow = [style.overflow, style.overflowX, style.overflowY];
            restoreDisplay = dataShow && dataShow.display;
            if (restoreDisplay == null) {
              restoreDisplay = dataPriv.get(elem, "display");
            }
            display = jQuery2.css(elem, "display");
            if (display === "none") {
              if (restoreDisplay) {
                display = restoreDisplay;
              } else {
                showHide([elem], true);
                restoreDisplay = elem.style.display || restoreDisplay;
                display = jQuery2.css(elem, "display");
                showHide([elem]);
              }
            }
            if (display === "inline" || display === "inline-block" && restoreDisplay != null) {
              if (jQuery2.css(elem, "float") === "none") {
                if (!propTween) {
                  anim.done(function() {
                    style.display = restoreDisplay;
                  });
                  if (restoreDisplay == null) {
                    display = style.display;
                    restoreDisplay = display === "none" ? "" : display;
                  }
                }
                style.display = "inline-block";
              }
            }
          }
          if (opts.overflow) {
            style.overflow = "hidden";
            anim.always(function() {
              style.overflow = opts.overflow[0];
              style.overflowX = opts.overflow[1];
              style.overflowY = opts.overflow[2];
            });
          }
          propTween = false;
          for (prop in orig) {
            if (!propTween) {
              if (dataShow) {
                if ("hidden" in dataShow) {
                  hidden = dataShow.hidden;
                }
              } else {
                dataShow = dataPriv.access(elem, "fxshow", { display: restoreDisplay });
              }
              if (toggle) {
                dataShow.hidden = !hidden;
              }
              if (hidden) {
                showHide([elem], true);
              }
              anim.done(function() {
                if (!hidden) {
                  showHide([elem]);
                }
                dataPriv.remove(elem, "fxshow");
                for (prop in orig) {
                  jQuery2.style(elem, prop, orig[prop]);
                }
              });
            }
            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);
            if (!(prop in dataShow)) {
              dataShow[prop] = propTween.start;
              if (hidden) {
                propTween.end = propTween.start;
                propTween.start = 0;
              }
            }
          }
        }
        function propFilter(props, specialEasing) {
          var index, name, easing, value, hooks;
          for (index in props) {
            name = camelCase(index);
            easing = specialEasing[name];
            value = props[index];
            if (Array.isArray(value)) {
              easing = value[1];
              value = props[index] = value[0];
            }
            if (index !== name) {
              props[name] = value;
              delete props[index];
            }
            hooks = jQuery2.cssHooks[name];
            if (hooks && "expand" in hooks) {
              value = hooks.expand(value);
              delete props[name];
              for (index in value) {
                if (!(index in props)) {
                  props[index] = value[index];
                  specialEasing[index] = easing;
                }
              }
            } else {
              specialEasing[name] = easing;
            }
          }
        }
        function Animation2(elem, properties, options) {
          var result, stopped, index = 0, length = Animation2.prefilters.length, deferred = jQuery2.Deferred().always(function() {
            delete tick.elem;
          }), tick = function() {
            if (stopped) {
              return false;
            }
            var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index2 = 0, length2 = animation.tweens.length;
            for (; index2 < length2; index2++) {
              animation.tweens[index2].run(percent);
            }
            deferred.notifyWith(elem, [animation, percent, remaining]);
            if (percent < 1 && length2) {
              return remaining;
            }
            if (!length2) {
              deferred.notifyWith(elem, [animation, 1, 0]);
            }
            deferred.resolveWith(elem, [animation]);
            return false;
          }, animation = deferred.promise({
            elem,
            props: jQuery2.extend({}, properties),
            opts: jQuery2.extend(true, {
              specialEasing: {},
              easing: jQuery2.easing._default
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function(prop, end) {
              var tween = jQuery2.Tween(
                elem,
                animation.opts,
                prop,
                end,
                animation.opts.specialEasing[prop] || animation.opts.easing
              );
              animation.tweens.push(tween);
              return tween;
            },
            stop: function(gotoEnd) {
              var index2 = 0, length2 = gotoEnd ? animation.tweens.length : 0;
              if (stopped) {
                return this;
              }
              stopped = true;
              for (; index2 < length2; index2++) {
                animation.tweens[index2].run(1);
              }
              if (gotoEnd) {
                deferred.notifyWith(elem, [animation, 1, 0]);
                deferred.resolveWith(elem, [animation, gotoEnd]);
              } else {
                deferred.rejectWith(elem, [animation, gotoEnd]);
              }
              return this;
            }
          }), props = animation.props;
          propFilter(props, animation.opts.specialEasing);
          for (; index < length; index++) {
            result = Animation2.prefilters[index].call(animation, elem, props, animation.opts);
            if (result) {
              if (isFunction(result.stop)) {
                jQuery2._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
              }
              return result;
            }
          }
          jQuery2.map(props, createTween, animation);
          if (isFunction(animation.opts.start)) {
            animation.opts.start.call(elem, animation);
          }
          animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
          jQuery2.fx.timer(
            jQuery2.extend(tick, {
              elem,
              anim: animation,
              queue: animation.opts.queue
            })
          );
          return animation;
        }
        jQuery2.Animation = jQuery2.extend(Animation2, {
          tweeners: {
            "*": [function(prop, value) {
              var tween = this.createTween(prop, value);
              adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
              return tween;
            }]
          },
          tweener: function(props, callback) {
            if (isFunction(props)) {
              callback = props;
              props = ["*"];
            } else {
              props = props.match(rnothtmlwhite);
            }
            var prop, index = 0, length = props.length;
            for (; index < length; index++) {
              prop = props[index];
              Animation2.tweeners[prop] = Animation2.tweeners[prop] || [];
              Animation2.tweeners[prop].unshift(callback);
            }
          },
          prefilters: [defaultPrefilter],
          prefilter: function(callback, prepend) {
            if (prepend) {
              Animation2.prefilters.unshift(callback);
            } else {
              Animation2.prefilters.push(callback);
            }
          }
        });
        jQuery2.speed = function(speed, easing, fn) {
          var opt = speed && typeof speed === "object" ? jQuery2.extend({}, speed) : {
            complete: fn || !fn && easing || isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !isFunction(easing) && easing
          };
          if (jQuery2.fx.off) {
            opt.duration = 0;
          } else {
            if (typeof opt.duration !== "number") {
              if (opt.duration in jQuery2.fx.speeds) {
                opt.duration = jQuery2.fx.speeds[opt.duration];
              } else {
                opt.duration = jQuery2.fx.speeds._default;
              }
            }
          }
          if (opt.queue == null || opt.queue === true) {
            opt.queue = "fx";
          }
          opt.old = opt.complete;
          opt.complete = function() {
            if (isFunction(opt.old)) {
              opt.old.call(this);
            }
            if (opt.queue) {
              jQuery2.dequeue(this, opt.queue);
            }
          };
          return opt;
        };
        jQuery2.fn.extend({
          fadeTo: function(speed, to, easing, callback) {
            return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({ opacity: to }, speed, easing, callback);
          },
          animate: function(prop, speed, easing, callback) {
            var empty = jQuery2.isEmptyObject(prop), optall = jQuery2.speed(speed, easing, callback), doAnimation = function() {
              var anim = Animation2(this, jQuery2.extend({}, prop), optall);
              if (empty || dataPriv.get(this, "finish")) {
                anim.stop(true);
              }
            };
            doAnimation.finish = doAnimation;
            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
          },
          stop: function(type, clearQueue, gotoEnd) {
            var stopQueue = function(hooks) {
              var stop = hooks.stop;
              delete hooks.stop;
              stop(gotoEnd);
            };
            if (typeof type !== "string") {
              gotoEnd = clearQueue;
              clearQueue = type;
              type = void 0;
            }
            if (clearQueue) {
              this.queue(type || "fx", []);
            }
            return this.each(function() {
              var dequeue = true, index = type != null && type + "queueHooks", timers = jQuery2.timers, data = dataPriv.get(this);
              if (index) {
                if (data[index] && data[index].stop) {
                  stopQueue(data[index]);
                }
              } else {
                for (index in data) {
                  if (data[index] && data[index].stop && rrun.test(index)) {
                    stopQueue(data[index]);
                  }
                }
              }
              for (index = timers.length; index--; ) {
                if (timers[index].elem === this && (type == null || timers[index].queue === type)) {
                  timers[index].anim.stop(gotoEnd);
                  dequeue = false;
                  timers.splice(index, 1);
                }
              }
              if (dequeue || !gotoEnd) {
                jQuery2.dequeue(this, type);
              }
            });
          },
          finish: function(type) {
            if (type !== false) {
              type = type || "fx";
            }
            return this.each(function() {
              var index, data = dataPriv.get(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery2.timers, length = queue ? queue.length : 0;
              data.finish = true;
              jQuery2.queue(this, type, []);
              if (hooks && hooks.stop) {
                hooks.stop.call(this, true);
              }
              for (index = timers.length; index--; ) {
                if (timers[index].elem === this && timers[index].queue === type) {
                  timers[index].anim.stop(true);
                  timers.splice(index, 1);
                }
              }
              for (index = 0; index < length; index++) {
                if (queue[index] && queue[index].finish) {
                  queue[index].finish.call(this);
                }
              }
              delete data.finish;
            });
          }
        });
        jQuery2.each(["toggle", "show", "hide"], function(_i2, name) {
          var cssFn = jQuery2.fn[name];
          jQuery2.fn[name] = function(speed, easing, callback) {
            return speed == null || typeof speed === "boolean" ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);
          };
        });
        jQuery2.each({
          slideDown: genFx("show"),
          slideUp: genFx("hide"),
          slideToggle: genFx("toggle"),
          fadeIn: { opacity: "show" },
          fadeOut: { opacity: "hide" },
          fadeToggle: { opacity: "toggle" }
        }, function(name, props) {
          jQuery2.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
          };
        });
        jQuery2.timers = [];
        jQuery2.fx.tick = function() {
          var timer, i2 = 0, timers = jQuery2.timers;
          fxNow = Date.now();
          for (; i2 < timers.length; i2++) {
            timer = timers[i2];
            if (!timer() && timers[i2] === timer) {
              timers.splice(i2--, 1);
            }
          }
          if (!timers.length) {
            jQuery2.fx.stop();
          }
          fxNow = void 0;
        };
        jQuery2.fx.timer = function(timer) {
          jQuery2.timers.push(timer);
          jQuery2.fx.start();
        };
        jQuery2.fx.interval = 13;
        jQuery2.fx.start = function() {
          if (inProgress) {
            return;
          }
          inProgress = true;
          schedule();
        };
        jQuery2.fx.stop = function() {
          inProgress = null;
        };
        jQuery2.fx.speeds = {
          slow: 600,
          fast: 200,
          // Default speed
          _default: 400
        };
        jQuery2.fn.delay = function(time, type) {
          time = jQuery2.fx ? jQuery2.fx.speeds[time] || time : time;
          type = type || "fx";
          return this.queue(type, function(next, hooks) {
            var timeout = window2.setTimeout(next, time);
            hooks.stop = function() {
              window2.clearTimeout(timeout);
            };
          });
        };
        (function() {
          var input = document2.createElement("input"), select = document2.createElement("select"), opt = select.appendChild(document2.createElement("option"));
          input.type = "checkbox";
          support2.checkOn = input.value !== "";
          support2.optSelected = opt.selected;
          input = document2.createElement("input");
          input.value = "t";
          input.type = "radio";
          support2.radioValue = input.value === "t";
        })();
        var boolHook, attrHandle = jQuery2.expr.attrHandle;
        jQuery2.fn.extend({
          attr: function(name, value) {
            return access(this, jQuery2.attr, name, value, arguments.length > 1);
          },
          removeAttr: function(name) {
            return this.each(function() {
              jQuery2.removeAttr(this, name);
            });
          }
        });
        jQuery2.extend({
          attr: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
              return;
            }
            if (typeof elem.getAttribute === "undefined") {
              return jQuery2.prop(elem, name, value);
            }
            if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
              hooks = jQuery2.attrHooks[name.toLowerCase()] || (jQuery2.expr.match.bool.test(name) ? boolHook : void 0);
            }
            if (value !== void 0) {
              if (value === null) {
                jQuery2.removeAttr(elem, name);
                return;
              }
              if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
                return ret;
              }
              elem.setAttribute(name, value + "");
              return value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
              return ret;
            }
            ret = jQuery2.find.attr(elem, name);
            return ret == null ? void 0 : ret;
          },
          attrHooks: {
            type: {
              set: function(elem, value) {
                if (!support2.radioValue && value === "radio" && nodeName(elem, "input")) {
                  var val = elem.value;
                  elem.setAttribute("type", value);
                  if (val) {
                    elem.value = val;
                  }
                  return value;
                }
              }
            }
          },
          removeAttr: function(elem, value) {
            var name, i2 = 0, attrNames = value && value.match(rnothtmlwhite);
            if (attrNames && elem.nodeType === 1) {
              while (name = attrNames[i2++]) {
                elem.removeAttribute(name);
              }
            }
          }
        });
        boolHook = {
          set: function(elem, value, name) {
            if (value === false) {
              jQuery2.removeAttr(elem, name);
            } else {
              elem.setAttribute(name, name);
            }
            return name;
          }
        };
        jQuery2.each(jQuery2.expr.match.bool.source.match(/\w+/g), function(_i2, name) {
          var getter = attrHandle[name] || jQuery2.find.attr;
          attrHandle[name] = function(elem, name2, isXML) {
            var ret, handle, lowercaseName = name2.toLowerCase();
            if (!isXML) {
              handle = attrHandle[lowercaseName];
              attrHandle[lowercaseName] = ret;
              ret = getter(elem, name2, isXML) != null ? lowercaseName : null;
              attrHandle[lowercaseName] = handle;
            }
            return ret;
          };
        });
        var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;
        jQuery2.fn.extend({
          prop: function(name, value) {
            return access(this, jQuery2.prop, name, value, arguments.length > 1);
          },
          removeProp: function(name) {
            return this.each(function() {
              delete this[jQuery2.propFix[name] || name];
            });
          }
        });
        jQuery2.extend({
          prop: function(elem, name, value) {
            var ret, hooks, nType = elem.nodeType;
            if (nType === 3 || nType === 8 || nType === 2) {
              return;
            }
            if (nType !== 1 || !jQuery2.isXMLDoc(elem)) {
              name = jQuery2.propFix[name] || name;
              hooks = jQuery2.propHooks[name];
            }
            if (value !== void 0) {
              if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== void 0) {
                return ret;
              }
              return elem[name] = value;
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== null) {
              return ret;
            }
            return elem[name];
          },
          propHooks: {
            tabIndex: {
              get: function(elem) {
                var tabindex = jQuery2.find.attr(elem, "tabindex");
                if (tabindex) {
                  return parseInt(tabindex, 10);
                }
                if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {
                  return 0;
                }
                return -1;
              }
            }
          },
          propFix: {
            "for": "htmlFor",
            "class": "className"
          }
        });
        if (!support2.optSelected) {
          jQuery2.propHooks.selected = {
            get: function(elem) {
              var parent = elem.parentNode;
              if (parent && parent.parentNode) {
                parent.parentNode.selectedIndex;
              }
              return null;
            },
            set: function(elem) {
              var parent = elem.parentNode;
              if (parent) {
                parent.selectedIndex;
                if (parent.parentNode) {
                  parent.parentNode.selectedIndex;
                }
              }
            }
          };
        }
        jQuery2.each([
          "tabIndex",
          "readOnly",
          "maxLength",
          "cellSpacing",
          "cellPadding",
          "rowSpan",
          "colSpan",
          "useMap",
          "frameBorder",
          "contentEditable"
        ], function() {
          jQuery2.propFix[this.toLowerCase()] = this;
        });
        function stripAndCollapse(value) {
          var tokens = value.match(rnothtmlwhite) || [];
          return tokens.join(" ");
        }
        function getClass(elem) {
          return elem.getAttribute && elem.getAttribute("class") || "";
        }
        function classesToArray(value) {
          if (Array.isArray(value)) {
            return value;
          }
          if (typeof value === "string") {
            return value.match(rnothtmlwhite) || [];
          }
          return [];
        }
        jQuery2.fn.extend({
          addClass: function(value) {
            var classNames, cur, curValue, className, i2, finalValue;
            if (isFunction(value)) {
              return this.each(function(j) {
                jQuery2(this).addClass(value.call(this, j, getClass(this)));
              });
            }
            classNames = classesToArray(value);
            if (classNames.length) {
              return this.each(function() {
                curValue = getClass(this);
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                  for (i2 = 0; i2 < classNames.length; i2++) {
                    className = classNames[i2];
                    if (cur.indexOf(" " + className + " ") < 0) {
                      cur += className + " ";
                    }
                  }
                  finalValue = stripAndCollapse(cur);
                  if (curValue !== finalValue) {
                    this.setAttribute("class", finalValue);
                  }
                }
              });
            }
            return this;
          },
          removeClass: function(value) {
            var classNames, cur, curValue, className, i2, finalValue;
            if (isFunction(value)) {
              return this.each(function(j) {
                jQuery2(this).removeClass(value.call(this, j, getClass(this)));
              });
            }
            if (!arguments.length) {
              return this.attr("class", "");
            }
            classNames = classesToArray(value);
            if (classNames.length) {
              return this.each(function() {
                curValue = getClass(this);
                cur = this.nodeType === 1 && " " + stripAndCollapse(curValue) + " ";
                if (cur) {
                  for (i2 = 0; i2 < classNames.length; i2++) {
                    className = classNames[i2];
                    while (cur.indexOf(" " + className + " ") > -1) {
                      cur = cur.replace(" " + className + " ", " ");
                    }
                  }
                  finalValue = stripAndCollapse(cur);
                  if (curValue !== finalValue) {
                    this.setAttribute("class", finalValue);
                  }
                }
              });
            }
            return this;
          },
          toggleClass: function(value, stateVal) {
            var classNames, className, i2, self2, type = typeof value, isValidValue = type === "string" || Array.isArray(value);
            if (isFunction(value)) {
              return this.each(function(i3) {
                jQuery2(this).toggleClass(
                  value.call(this, i3, getClass(this), stateVal),
                  stateVal
                );
              });
            }
            if (typeof stateVal === "boolean" && isValidValue) {
              return stateVal ? this.addClass(value) : this.removeClass(value);
            }
            classNames = classesToArray(value);
            return this.each(function() {
              if (isValidValue) {
                self2 = jQuery2(this);
                for (i2 = 0; i2 < classNames.length; i2++) {
                  className = classNames[i2];
                  if (self2.hasClass(className)) {
                    self2.removeClass(className);
                  } else {
                    self2.addClass(className);
                  }
                }
              } else if (value === void 0 || type === "boolean") {
                className = getClass(this);
                if (className) {
                  dataPriv.set(this, "__className__", className);
                }
                if (this.setAttribute) {
                  this.setAttribute(
                    "class",
                    className || value === false ? "" : dataPriv.get(this, "__className__") || ""
                  );
                }
              }
            });
          },
          hasClass: function(selector3) {
            var className, elem, i2 = 0;
            className = " " + selector3 + " ";
            while (elem = this[i2++]) {
              if (elem.nodeType === 1 && (" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1) {
                return true;
              }
            }
            return false;
          }
        });
        var rreturn = /\r/g;
        jQuery2.fn.extend({
          val: function(value) {
            var hooks, ret, valueIsFunction, elem = this[0];
            if (!arguments.length) {
              if (elem) {
                hooks = jQuery2.valHooks[elem.type] || jQuery2.valHooks[elem.nodeName.toLowerCase()];
                if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== void 0) {
                  return ret;
                }
                ret = elem.value;
                if (typeof ret === "string") {
                  return ret.replace(rreturn, "");
                }
                return ret == null ? "" : ret;
              }
              return;
            }
            valueIsFunction = isFunction(value);
            return this.each(function(i2) {
              var val;
              if (this.nodeType !== 1) {
                return;
              }
              if (valueIsFunction) {
                val = value.call(this, i2, jQuery2(this).val());
              } else {
                val = value;
              }
              if (val == null) {
                val = "";
              } else if (typeof val === "number") {
                val += "";
              } else if (Array.isArray(val)) {
                val = jQuery2.map(val, function(value2) {
                  return value2 == null ? "" : value2 + "";
                });
              }
              hooks = jQuery2.valHooks[this.type] || jQuery2.valHooks[this.nodeName.toLowerCase()];
              if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === void 0) {
                this.value = val;
              }
            });
          }
        });
        jQuery2.extend({
          valHooks: {
            option: {
              get: function(elem) {
                var val = jQuery2.find.attr(elem, "value");
                return val != null ? val : (
                  // Support: IE <=10 - 11 only
                  // option.text throws exceptions (trac-14686, trac-14858)
                  // Strip and collapse whitespace
                  // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                  stripAndCollapse(jQuery2.text(elem))
                );
              }
            },
            select: {
              get: function(elem) {
                var value, option, i2, options = elem.options, index = elem.selectedIndex, one = elem.type === "select-one", values = one ? null : [], max2 = one ? index + 1 : options.length;
                if (index < 0) {
                  i2 = max2;
                } else {
                  i2 = one ? index : 0;
                }
                for (; i2 < max2; i2++) {
                  option = options[i2];
                  if ((option.selected || i2 === index) && // Don't return options that are disabled or in a disabled optgroup
                  !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, "optgroup"))) {
                    value = jQuery2(option).val();
                    if (one) {
                      return value;
                    }
                    values.push(value);
                  }
                }
                return values;
              },
              set: function(elem, value) {
                var optionSet, option, options = elem.options, values = jQuery2.makeArray(value), i2 = options.length;
                while (i2--) {
                  option = options[i2];
                  if (option.selected = jQuery2.inArray(jQuery2.valHooks.option.get(option), values) > -1) {
                    optionSet = true;
                  }
                }
                if (!optionSet) {
                  elem.selectedIndex = -1;
                }
                return values;
              }
            }
          }
        });
        jQuery2.each(["radio", "checkbox"], function() {
          jQuery2.valHooks[this] = {
            set: function(elem, value) {
              if (Array.isArray(value)) {
                return elem.checked = jQuery2.inArray(jQuery2(elem).val(), value) > -1;
              }
            }
          };
          if (!support2.checkOn) {
            jQuery2.valHooks[this].get = function(elem) {
              return elem.getAttribute("value") === null ? "on" : elem.value;
            };
          }
        });
        var location2 = window2.location;
        var nonce = { guid: Date.now() };
        var rquery = /\?/;
        jQuery2.parseXML = function(data) {
          var xml, parserErrorElem;
          if (!data || typeof data !== "string") {
            return null;
          }
          try {
            xml = new window2.DOMParser().parseFromString(data, "text/xml");
          } catch (e3) {
          }
          parserErrorElem = xml && xml.getElementsByTagName("parsererror")[0];
          if (!xml || parserErrorElem) {
            jQuery2.error("Invalid XML: " + (parserErrorElem ? jQuery2.map(parserErrorElem.childNodes, function(el) {
              return el.textContent;
            }).join("\n") : data));
          }
          return xml;
        };
        var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = function(e3) {
          e3.stopPropagation();
        };
        jQuery2.extend(jQuery2.event, {
          trigger: function(event2, data, elem, onlyHandlers) {
            var i2, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [elem || document2], type = hasOwn.call(event2, "type") ? event2.type : event2, namespaces = hasOwn.call(event2, "namespace") ? event2.namespace.split(".") : [];
            cur = lastElement = tmp = elem = elem || document2;
            if (elem.nodeType === 3 || elem.nodeType === 8) {
              return;
            }
            if (rfocusMorph.test(type + jQuery2.event.triggered)) {
              return;
            }
            if (type.indexOf(".") > -1) {
              namespaces = type.split(".");
              type = namespaces.shift();
              namespaces.sort();
            }
            ontype = type.indexOf(":") < 0 && "on" + type;
            event2 = event2[jQuery2.expando] ? event2 : new jQuery2.Event(type, typeof event2 === "object" && event2);
            event2.isTrigger = onlyHandlers ? 2 : 3;
            event2.namespace = namespaces.join(".");
            event2.rnamespace = event2.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null;
            event2.result = void 0;
            if (!event2.target) {
              event2.target = elem;
            }
            data = data == null ? [event2] : jQuery2.makeArray(data, [event2]);
            special = jQuery2.event.special[type] || {};
            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {
              return;
            }
            if (!onlyHandlers && !special.noBubble && !isWindow(elem)) {
              bubbleType = special.delegateType || type;
              if (!rfocusMorph.test(bubbleType + type)) {
                cur = cur.parentNode;
              }
              for (; cur; cur = cur.parentNode) {
                eventPath.push(cur);
                tmp = cur;
              }
              if (tmp === (elem.ownerDocument || document2)) {
                eventPath.push(tmp.defaultView || tmp.parentWindow || window2);
              }
            }
            i2 = 0;
            while ((cur = eventPath[i2++]) && !event2.isPropagationStopped()) {
              lastElement = cur;
              event2.type = i2 > 1 ? bubbleType : special.bindType || type;
              handle = (dataPriv.get(cur, "events") || /* @__PURE__ */ Object.create(null))[event2.type] && dataPriv.get(cur, "handle");
              if (handle) {
                handle.apply(cur, data);
              }
              handle = ontype && cur[ontype];
              if (handle && handle.apply && acceptData(cur)) {
                event2.result = handle.apply(cur, data);
                if (event2.result === false) {
                  event2.preventDefault();
                }
              }
            }
            event2.type = type;
            if (!onlyHandlers && !event2.isDefaultPrevented()) {
              if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {
                if (ontype && isFunction(elem[type]) && !isWindow(elem)) {
                  tmp = elem[ontype];
                  if (tmp) {
                    elem[ontype] = null;
                  }
                  jQuery2.event.triggered = type;
                  if (event2.isPropagationStopped()) {
                    lastElement.addEventListener(type, stopPropagationCallback);
                  }
                  elem[type]();
                  if (event2.isPropagationStopped()) {
                    lastElement.removeEventListener(type, stopPropagationCallback);
                  }
                  jQuery2.event.triggered = void 0;
                  if (tmp) {
                    elem[ontype] = tmp;
                  }
                }
              }
            }
            return event2.result;
          },
          // Piggyback on a donor event to simulate a different one
          // Used only for `focus(in | out)` events
          simulate: function(type, elem, event2) {
            var e3 = jQuery2.extend(
              new jQuery2.Event(),
              event2,
              {
                type,
                isSimulated: true
              }
            );
            jQuery2.event.trigger(e3, null, elem);
          }
        });
        jQuery2.fn.extend({
          trigger: function(type, data) {
            return this.each(function() {
              jQuery2.event.trigger(type, data, this);
            });
          },
          triggerHandler: function(type, data) {
            var elem = this[0];
            if (elem) {
              return jQuery2.event.trigger(type, data, elem, true);
            }
          }
        });
        var rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
        function buildParams(prefix, obj, traditional, add) {
          var name;
          if (Array.isArray(obj)) {
            jQuery2.each(obj, function(i2, v) {
              if (traditional || rbracket.test(prefix)) {
                add(prefix, v);
              } else {
                buildParams(
                  prefix + "[" + (typeof v === "object" && v != null ? i2 : "") + "]",
                  v,
                  traditional,
                  add
                );
              }
            });
          } else if (!traditional && toType(obj) === "object") {
            for (name in obj) {
              buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
            }
          } else {
            add(prefix, obj);
          }
        }
        jQuery2.param = function(a, traditional) {
          var prefix, s2 = [], add = function(key, valueOrFunction) {
            var value = isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;
            s2[s2.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value == null ? "" : value);
          };
          if (a == null) {
            return "";
          }
          if (Array.isArray(a) || a.jquery && !jQuery2.isPlainObject(a)) {
            jQuery2.each(a, function() {
              add(this.name, this.value);
            });
          } else {
            for (prefix in a) {
              buildParams(prefix, a[prefix], traditional, add);
            }
          }
          return s2.join("&");
        };
        jQuery2.fn.extend({
          serialize: function() {
            return jQuery2.param(this.serializeArray());
          },
          serializeArray: function() {
            return this.map(function() {
              var elements = jQuery2.prop(this, "elements");
              return elements ? jQuery2.makeArray(elements) : this;
            }).filter(function() {
              var type = this.type;
              return this.name && !jQuery2(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));
            }).map(function(_i2, elem) {
              var val = jQuery2(this).val();
              if (val == null) {
                return null;
              }
              if (Array.isArray(val)) {
                return jQuery2.map(val, function(val2) {
                  return { name: elem.name, value: val2.replace(rCRLF, "\r\n") };
                });
              }
              return { name: elem.name, value: val.replace(rCRLF, "\r\n") };
            }).get();
          }
        });
        var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, prefilters = {}, transports = {}, allTypes = "*/".concat("*"), originAnchor = document2.createElement("a");
        originAnchor.href = location2.href;
        function addToPrefiltersOrTransports(structure) {
          return function(dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
              func = dataTypeExpression;
              dataTypeExpression = "*";
            }
            var dataType, i2 = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];
            if (isFunction(func)) {
              while (dataType = dataTypes[i2++]) {
                if (dataType[0] === "+") {
                  dataType = dataType.slice(1) || "*";
                  (structure[dataType] = structure[dataType] || []).unshift(func);
                } else {
                  (structure[dataType] = structure[dataType] || []).push(func);
                }
              }
            }
          };
        }
        function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
          var inspected = {}, seekingTransport = structure === transports;
          function inspect(dataType) {
            var selected;
            inspected[dataType] = true;
            jQuery2.each(structure[dataType] || [], function(_, prefilterOrFactory) {
              var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
              if (typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[dataTypeOrTransport]) {
                options.dataTypes.unshift(dataTypeOrTransport);
                inspect(dataTypeOrTransport);
                return false;
              } else if (seekingTransport) {
                return !(selected = dataTypeOrTransport);
              }
            });
            return selected;
          }
          return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
        }
        function ajaxExtend(target, src) {
          var key, deep, flatOptions = jQuery2.ajaxSettings.flatOptions || {};
          for (key in src) {
            if (src[key] !== void 0) {
              (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];
            }
          }
          if (deep) {
            jQuery2.extend(true, target, deep);
          }
          return target;
        }
        function ajaxHandleResponses(s2, jqXHR, responses) {
          var ct, type, finalDataType, firstDataType, contents = s2.contents, dataTypes = s2.dataTypes;
          while (dataTypes[0] === "*") {
            dataTypes.shift();
            if (ct === void 0) {
              ct = s2.mimeType || jqXHR.getResponseHeader("Content-Type");
            }
          }
          if (ct) {
            for (type in contents) {
              if (contents[type] && contents[type].test(ct)) {
                dataTypes.unshift(type);
                break;
              }
            }
          }
          if (dataTypes[0] in responses) {
            finalDataType = dataTypes[0];
          } else {
            for (type in responses) {
              if (!dataTypes[0] || s2.converters[type + " " + dataTypes[0]]) {
                finalDataType = type;
                break;
              }
              if (!firstDataType) {
                firstDataType = type;
              }
            }
            finalDataType = finalDataType || firstDataType;
          }
          if (finalDataType) {
            if (finalDataType !== dataTypes[0]) {
              dataTypes.unshift(finalDataType);
            }
            return responses[finalDataType];
          }
        }
        function ajaxConvert(s2, response, jqXHR, isSuccess) {
          var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s2.dataTypes.slice();
          if (dataTypes[1]) {
            for (conv in s2.converters) {
              converters[conv.toLowerCase()] = s2.converters[conv];
            }
          }
          current = dataTypes.shift();
          while (current) {
            if (s2.responseFields[current]) {
              jqXHR[s2.responseFields[current]] = response;
            }
            if (!prev && isSuccess && s2.dataFilter) {
              response = s2.dataFilter(response, s2.dataType);
            }
            prev = current;
            current = dataTypes.shift();
            if (current) {
              if (current === "*") {
                current = prev;
              } else if (prev !== "*" && prev !== current) {
                conv = converters[prev + " " + current] || converters["* " + current];
                if (!conv) {
                  for (conv2 in converters) {
                    tmp = conv2.split(" ");
                    if (tmp[1] === current) {
                      conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]];
                      if (conv) {
                        if (conv === true) {
                          conv = converters[conv2];
                        } else if (converters[conv2] !== true) {
                          current = tmp[0];
                          dataTypes.unshift(tmp[1]);
                        }
                        break;
                      }
                    }
                  }
                }
                if (conv !== true) {
                  if (conv && s2.throws) {
                    response = conv(response);
                  } else {
                    try {
                      response = conv(response);
                    } catch (e3) {
                      return {
                        state: "parsererror",
                        error: conv ? e3 : "No conversion from " + prev + " to " + current
                      };
                    }
                  }
                }
              }
            }
          }
          return { state: "success", data: response };
        }
        jQuery2.extend({
          // Counter for holding the number of active queries
          active: 0,
          // Last-Modified header cache for next request
          lastModified: {},
          etag: {},
          ajaxSettings: {
            url: location2.href,
            type: "GET",
            isLocal: rlocalProtocol.test(location2.protocol),
            global: true,
            processData: true,
            async: true,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            /*
            timeout: 0,
            data: null,
            dataType: null,
            username: null,
            password: null,
            cache: null,
            throws: false,
            traditional: false,
            headers: {},
            */
            accepts: {
              "*": allTypes,
              text: "text/plain",
              html: "text/html",
              xml: "application/xml, text/xml",
              json: "application/json, text/javascript"
            },
            contents: {
              xml: /\bxml\b/,
              html: /\bhtml/,
              json: /\bjson\b/
            },
            responseFields: {
              xml: "responseXML",
              text: "responseText",
              json: "responseJSON"
            },
            // Data converters
            // Keys separate source (or catchall "*") and destination types with a single space
            converters: {
              // Convert anything to text
              "* text": String,
              // Text to html (true = no transformation)
              "text html": true,
              // Evaluate text as a json expression
              "text json": JSON.parse,
              // Parse text as xml
              "text xml": jQuery2.parseXML
            },
            // For options that shouldn't be deep extended:
            // you can add your own custom options here if
            // and when you create one that shouldn't be
            // deep extended (see ajaxExtend)
            flatOptions: {
              url: true,
              context: true
            }
          },
          // Creates a full fledged settings object into target
          // with both ajaxSettings and settings fields.
          // If target is omitted, writes into ajaxSettings.
          ajaxSetup: function(target, settings) {
            return settings ? (
              // Building a settings object
              ajaxExtend(ajaxExtend(target, jQuery2.ajaxSettings), settings)
            ) : (
              // Extending ajaxSettings
              ajaxExtend(jQuery2.ajaxSettings, target)
            );
          },
          ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
          ajaxTransport: addToPrefiltersOrTransports(transports),
          // Main method
          ajax: function(url, options) {
            if (typeof url === "object") {
              options = url;
              url = void 0;
            }
            options = options || {};
            var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed2, fireGlobals, i2, uncached, s2 = jQuery2.ajaxSetup({}, options), callbackContext = s2.context || s2, globalEventContext = s2.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery2(callbackContext) : jQuery2.event, deferred = jQuery2.Deferred(), completeDeferred = jQuery2.Callbacks("once memory"), statusCode = s2.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, strAbort = "canceled", jqXHR = {
              readyState: 0,
              // Builds headers hashtable if needed
              getResponseHeader: function(key) {
                var match;
                if (completed2) {
                  if (!responseHeaders) {
                    responseHeaders = {};
                    while (match = rheaders.exec(responseHeadersString)) {
                      responseHeaders[match[1].toLowerCase() + " "] = (responseHeaders[match[1].toLowerCase() + " "] || []).concat(match[2]);
                    }
                  }
                  match = responseHeaders[key.toLowerCase() + " "];
                }
                return match == null ? null : match.join(", ");
              },
              // Raw string
              getAllResponseHeaders: function() {
                return completed2 ? responseHeadersString : null;
              },
              // Caches the header
              setRequestHeader: function(name, value) {
                if (completed2 == null) {
                  name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;
                  requestHeaders[name] = value;
                }
                return this;
              },
              // Overrides response content-type header
              overrideMimeType: function(type) {
                if (completed2 == null) {
                  s2.mimeType = type;
                }
                return this;
              },
              // Status-dependent callbacks
              statusCode: function(map) {
                var code;
                if (map) {
                  if (completed2) {
                    jqXHR.always(map[jqXHR.status]);
                  } else {
                    for (code in map) {
                      statusCode[code] = [statusCode[code], map[code]];
                    }
                  }
                }
                return this;
              },
              // Cancel the request
              abort: function(statusText) {
                var finalText = statusText || strAbort;
                if (transport) {
                  transport.abort(finalText);
                }
                done(0, finalText);
                return this;
              }
            };
            deferred.promise(jqXHR);
            s2.url = ((url || s2.url || location2.href) + "").replace(rprotocol, location2.protocol + "//");
            s2.type = options.method || options.type || s2.method || s2.type;
            s2.dataTypes = (s2.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""];
            if (s2.crossDomain == null) {
              urlAnchor = document2.createElement("a");
              try {
                urlAnchor.href = s2.url;
                urlAnchor.href = urlAnchor.href;
                s2.crossDomain = originAnchor.protocol + "//" + originAnchor.host !== urlAnchor.protocol + "//" + urlAnchor.host;
              } catch (e3) {
                s2.crossDomain = true;
              }
            }
            if (s2.data && s2.processData && typeof s2.data !== "string") {
              s2.data = jQuery2.param(s2.data, s2.traditional);
            }
            inspectPrefiltersOrTransports(prefilters, s2, options, jqXHR);
            if (completed2) {
              return jqXHR;
            }
            fireGlobals = jQuery2.event && s2.global;
            if (fireGlobals && jQuery2.active++ === 0) {
              jQuery2.event.trigger("ajaxStart");
            }
            s2.type = s2.type.toUpperCase();
            s2.hasContent = !rnoContent.test(s2.type);
            cacheURL = s2.url.replace(rhash, "");
            if (!s2.hasContent) {
              uncached = s2.url.slice(cacheURL.length);
              if (s2.data && (s2.processData || typeof s2.data === "string")) {
                cacheURL += (rquery.test(cacheURL) ? "&" : "?") + s2.data;
                delete s2.data;
              }
              if (s2.cache === false) {
                cacheURL = cacheURL.replace(rantiCache, "$1");
                uncached = (rquery.test(cacheURL) ? "&" : "?") + "_=" + nonce.guid++ + uncached;
              }
              s2.url = cacheURL + uncached;
            } else if (s2.data && s2.processData && (s2.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) {
              s2.data = s2.data.replace(r20, "+");
            }
            if (s2.ifModified) {
              if (jQuery2.lastModified[cacheURL]) {
                jqXHR.setRequestHeader("If-Modified-Since", jQuery2.lastModified[cacheURL]);
              }
              if (jQuery2.etag[cacheURL]) {
                jqXHR.setRequestHeader("If-None-Match", jQuery2.etag[cacheURL]);
              }
            }
            if (s2.data && s2.hasContent && s2.contentType !== false || options.contentType) {
              jqXHR.setRequestHeader("Content-Type", s2.contentType);
            }
            jqXHR.setRequestHeader(
              "Accept",
              s2.dataTypes[0] && s2.accepts[s2.dataTypes[0]] ? s2.accepts[s2.dataTypes[0]] + (s2.dataTypes[0] !== "*" ? ", " + allTypes + "; q=0.01" : "") : s2.accepts["*"]
            );
            for (i2 in s2.headers) {
              jqXHR.setRequestHeader(i2, s2.headers[i2]);
            }
            if (s2.beforeSend && (s2.beforeSend.call(callbackContext, jqXHR, s2) === false || completed2)) {
              return jqXHR.abort();
            }
            strAbort = "abort";
            completeDeferred.add(s2.complete);
            jqXHR.done(s2.success);
            jqXHR.fail(s2.error);
            transport = inspectPrefiltersOrTransports(transports, s2, options, jqXHR);
            if (!transport) {
              done(-1, "No Transport");
            } else {
              jqXHR.readyState = 1;
              if (fireGlobals) {
                globalEventContext.trigger("ajaxSend", [jqXHR, s2]);
              }
              if (completed2) {
                return jqXHR;
              }
              if (s2.async && s2.timeout > 0) {
                timeoutTimer = window2.setTimeout(function() {
                  jqXHR.abort("timeout");
                }, s2.timeout);
              }
              try {
                completed2 = false;
                transport.send(requestHeaders, done);
              } catch (e3) {
                if (completed2) {
                  throw e3;
                }
                done(-1, e3);
              }
            }
            function done(status, nativeStatusText, responses, headers) {
              var isSuccess, success, error, response, modified, statusText = nativeStatusText;
              if (completed2) {
                return;
              }
              completed2 = true;
              if (timeoutTimer) {
                window2.clearTimeout(timeoutTimer);
              }
              transport = void 0;
              responseHeadersString = headers || "";
              jqXHR.readyState = status > 0 ? 4 : 0;
              isSuccess = status >= 200 && status < 300 || status === 304;
              if (responses) {
                response = ajaxHandleResponses(s2, jqXHR, responses);
              }
              if (!isSuccess && jQuery2.inArray("script", s2.dataTypes) > -1 && jQuery2.inArray("json", s2.dataTypes) < 0) {
                s2.converters["text script"] = function() {
                };
              }
              response = ajaxConvert(s2, response, jqXHR, isSuccess);
              if (isSuccess) {
                if (s2.ifModified) {
                  modified = jqXHR.getResponseHeader("Last-Modified");
                  if (modified) {
                    jQuery2.lastModified[cacheURL] = modified;
                  }
                  modified = jqXHR.getResponseHeader("etag");
                  if (modified) {
                    jQuery2.etag[cacheURL] = modified;
                  }
                }
                if (status === 204 || s2.type === "HEAD") {
                  statusText = "nocontent";
                } else if (status === 304) {
                  statusText = "notmodified";
                } else {
                  statusText = response.state;
                  success = response.data;
                  error = response.error;
                  isSuccess = !error;
                }
              } else {
                error = statusText;
                if (status || !statusText) {
                  statusText = "error";
                  if (status < 0) {
                    status = 0;
                  }
                }
              }
              jqXHR.status = status;
              jqXHR.statusText = (nativeStatusText || statusText) + "";
              if (isSuccess) {
                deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
              } else {
                deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
              }
              jqXHR.statusCode(statusCode);
              statusCode = void 0;
              if (fireGlobals) {
                globalEventContext.trigger(
                  isSuccess ? "ajaxSuccess" : "ajaxError",
                  [jqXHR, s2, isSuccess ? success : error]
                );
              }
              completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
              if (fireGlobals) {
                globalEventContext.trigger("ajaxComplete", [jqXHR, s2]);
                if (!--jQuery2.active) {
                  jQuery2.event.trigger("ajaxStop");
                }
              }
            }
            return jqXHR;
          },
          getJSON: function(url, data, callback) {
            return jQuery2.get(url, data, callback, "json");
          },
          getScript: function(url, callback) {
            return jQuery2.get(url, void 0, callback, "script");
          }
        });
        jQuery2.each(["get", "post"], function(_i2, method) {
          jQuery2[method] = function(url, data, callback, type) {
            if (isFunction(data)) {
              type = type || callback;
              callback = data;
              data = void 0;
            }
            return jQuery2.ajax(jQuery2.extend({
              url,
              type: method,
              dataType: type,
              data,
              success: callback
            }, jQuery2.isPlainObject(url) && url));
          };
        });
        jQuery2.ajaxPrefilter(function(s2) {
          var i2;
          for (i2 in s2.headers) {
            if (i2.toLowerCase() === "content-type") {
              s2.contentType = s2.headers[i2] || "";
            }
          }
        });
        jQuery2._evalUrl = function(url, options, doc) {
          return jQuery2.ajax({
            url,
            // Make this explicit, since user can override this through ajaxSetup (trac-11264)
            type: "GET",
            dataType: "script",
            cache: true,
            async: false,
            global: false,
            // Only evaluate the response if it is successful (gh-4126)
            // dataFilter is not invoked for failure responses, so using it instead
            // of the default converter is kludgy but it works.
            converters: {
              "text script": function() {
              }
            },
            dataFilter: function(response) {
              jQuery2.globalEval(response, options, doc);
            }
          });
        };
        jQuery2.fn.extend({
          wrapAll: function(html) {
            var wrap3;
            if (this[0]) {
              if (isFunction(html)) {
                html = html.call(this[0]);
              }
              wrap3 = jQuery2(html, this[0].ownerDocument).eq(0).clone(true);
              if (this[0].parentNode) {
                wrap3.insertBefore(this[0]);
              }
              wrap3.map(function() {
                var elem = this;
                while (elem.firstElementChild) {
                  elem = elem.firstElementChild;
                }
                return elem;
              }).append(this);
            }
            return this;
          },
          wrapInner: function(html) {
            if (isFunction(html)) {
              return this.each(function(i2) {
                jQuery2(this).wrapInner(html.call(this, i2));
              });
            }
            return this.each(function() {
              var self2 = jQuery2(this), contents = self2.contents();
              if (contents.length) {
                contents.wrapAll(html);
              } else {
                self2.append(html);
              }
            });
          },
          wrap: function(html) {
            var htmlIsFunction = isFunction(html);
            return this.each(function(i2) {
              jQuery2(this).wrapAll(htmlIsFunction ? html.call(this, i2) : html);
            });
          },
          unwrap: function(selector3) {
            this.parent(selector3).not("body").each(function() {
              jQuery2(this).replaceWith(this.childNodes);
            });
            return this;
          }
        });
        jQuery2.expr.pseudos.hidden = function(elem) {
          return !jQuery2.expr.pseudos.visible(elem);
        };
        jQuery2.expr.pseudos.visible = function(elem) {
          return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);
        };
        jQuery2.ajaxSettings.xhr = function() {
          try {
            return new window2.XMLHttpRequest();
          } catch (e3) {
          }
        };
        var xhrSuccessStatus = {
          // File protocol always yields status code 0, assume 200
          0: 200,
          // Support: IE <=9 only
          // trac-1450: sometimes IE returns 1223 when it should be 204
          1223: 204
        }, xhrSupported = jQuery2.ajaxSettings.xhr();
        support2.cors = !!xhrSupported && "withCredentials" in xhrSupported;
        support2.ajax = xhrSupported = !!xhrSupported;
        jQuery2.ajaxTransport(function(options) {
          var callback, errorCallback;
          if (support2.cors || xhrSupported && !options.crossDomain) {
            return {
              send: function(headers, complete) {
                var i2, xhr = options.xhr();
                xhr.open(
                  options.type,
                  options.url,
                  options.async,
                  options.username,
                  options.password
                );
                if (options.xhrFields) {
                  for (i2 in options.xhrFields) {
                    xhr[i2] = options.xhrFields[i2];
                  }
                }
                if (options.mimeType && xhr.overrideMimeType) {
                  xhr.overrideMimeType(options.mimeType);
                }
                if (!options.crossDomain && !headers["X-Requested-With"]) {
                  headers["X-Requested-With"] = "XMLHttpRequest";
                }
                for (i2 in headers) {
                  xhr.setRequestHeader(i2, headers[i2]);
                }
                callback = function(type) {
                  return function() {
                    if (callback) {
                      callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.ontimeout = xhr.onreadystatechange = null;
                      if (type === "abort") {
                        xhr.abort();
                      } else if (type === "error") {
                        if (typeof xhr.status !== "number") {
                          complete(0, "error");
                        } else {
                          complete(
                            // File: protocol always yields status 0; see trac-8605, trac-14207
                            xhr.status,
                            xhr.statusText
                          );
                        }
                      } else {
                        complete(
                          xhrSuccessStatus[xhr.status] || xhr.status,
                          xhr.statusText,
                          // Support: IE <=9 only
                          // IE9 has no XHR2 but throws on binary (trac-11426)
                          // For XHR2 non-text, let the caller handle it (gh-2498)
                          (xhr.responseType || "text") !== "text" || typeof xhr.responseText !== "string" ? { binary: xhr.response } : { text: xhr.responseText },
                          xhr.getAllResponseHeaders()
                        );
                      }
                    }
                  };
                };
                xhr.onload = callback();
                errorCallback = xhr.onerror = xhr.ontimeout = callback("error");
                if (xhr.onabort !== void 0) {
                  xhr.onabort = errorCallback;
                } else {
                  xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4) {
                      window2.setTimeout(function() {
                        if (callback) {
                          errorCallback();
                        }
                      });
                    }
                  };
                }
                callback = callback("abort");
                try {
                  xhr.send(options.hasContent && options.data || null);
                } catch (e3) {
                  if (callback) {
                    throw e3;
                  }
                }
              },
              abort: function() {
                if (callback) {
                  callback();
                }
              }
            };
          }
        });
        jQuery2.ajaxPrefilter(function(s2) {
          if (s2.crossDomain) {
            s2.contents.script = false;
          }
        });
        jQuery2.ajaxSetup({
          accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
          },
          contents: {
            script: /\b(?:java|ecma)script\b/
          },
          converters: {
            "text script": function(text) {
              jQuery2.globalEval(text);
              return text;
            }
          }
        });
        jQuery2.ajaxPrefilter("script", function(s2) {
          if (s2.cache === void 0) {
            s2.cache = false;
          }
          if (s2.crossDomain) {
            s2.type = "GET";
          }
        });
        jQuery2.ajaxTransport("script", function(s2) {
          if (s2.crossDomain || s2.scriptAttrs) {
            var script, callback;
            return {
              send: function(_, complete) {
                script = jQuery2("<script>").attr(s2.scriptAttrs || {}).prop({ charset: s2.scriptCharset, src: s2.url }).on("load error", callback = function(evt) {
                  script.remove();
                  callback = null;
                  if (evt) {
                    complete(evt.type === "error" ? 404 : 200, evt.type);
                  }
                });
                document2.head.appendChild(script[0]);
              },
              abort: function() {
                if (callback) {
                  callback();
                }
              }
            };
          }
        });
        var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
        jQuery2.ajaxSetup({
          jsonp: "callback",
          jsonpCallback: function() {
            var callback = oldCallbacks.pop() || jQuery2.expando + "_" + nonce.guid++;
            this[callback] = true;
            return callback;
          }
        });
        jQuery2.ajaxPrefilter("json jsonp", function(s2, originalSettings, jqXHR) {
          var callbackName, overwritten, responseContainer, jsonProp = s2.jsonp !== false && (rjsonp.test(s2.url) ? "url" : typeof s2.data === "string" && (s2.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && rjsonp.test(s2.data) && "data");
          if (jsonProp || s2.dataTypes[0] === "jsonp") {
            callbackName = s2.jsonpCallback = isFunction(s2.jsonpCallback) ? s2.jsonpCallback() : s2.jsonpCallback;
            if (jsonProp) {
              s2[jsonProp] = s2[jsonProp].replace(rjsonp, "$1" + callbackName);
            } else if (s2.jsonp !== false) {
              s2.url += (rquery.test(s2.url) ? "&" : "?") + s2.jsonp + "=" + callbackName;
            }
            s2.converters["script json"] = function() {
              if (!responseContainer) {
                jQuery2.error(callbackName + " was not called");
              }
              return responseContainer[0];
            };
            s2.dataTypes[0] = "json";
            overwritten = window2[callbackName];
            window2[callbackName] = function() {
              responseContainer = arguments;
            };
            jqXHR.always(function() {
              if (overwritten === void 0) {
                jQuery2(window2).removeProp(callbackName);
              } else {
                window2[callbackName] = overwritten;
              }
              if (s2[callbackName]) {
                s2.jsonpCallback = originalSettings.jsonpCallback;
                oldCallbacks.push(callbackName);
              }
              if (responseContainer && isFunction(overwritten)) {
                overwritten(responseContainer[0]);
              }
              responseContainer = overwritten = void 0;
            });
            return "script";
          }
        });
        support2.createHTMLDocument = function() {
          var body = document2.implementation.createHTMLDocument("").body;
          body.innerHTML = "<form></form><form></form>";
          return body.childNodes.length === 2;
        }();
        jQuery2.parseHTML = function(data, context3, keepScripts) {
          if (typeof data !== "string") {
            return [];
          }
          if (typeof context3 === "boolean") {
            keepScripts = context3;
            context3 = false;
          }
          var base, parsed, scripts;
          if (!context3) {
            if (support2.createHTMLDocument) {
              context3 = document2.implementation.createHTMLDocument("");
              base = context3.createElement("base");
              base.href = document2.location.href;
              context3.head.appendChild(base);
            } else {
              context3 = document2;
            }
          }
          parsed = rsingleTag.exec(data);
          scripts = !keepScripts && [];
          if (parsed) {
            return [context3.createElement(parsed[1])];
          }
          parsed = buildFragment([data], context3, scripts);
          if (scripts && scripts.length) {
            jQuery2(scripts).remove();
          }
          return jQuery2.merge([], parsed.childNodes);
        };
        jQuery2.fn.load = function(url, params, callback) {
          var selector3, type, response, self2 = this, off = url.indexOf(" ");
          if (off > -1) {
            selector3 = stripAndCollapse(url.slice(off));
            url = url.slice(0, off);
          }
          if (isFunction(params)) {
            callback = params;
            params = void 0;
          } else if (params && typeof params === "object") {
            type = "POST";
          }
          if (self2.length > 0) {
            jQuery2.ajax({
              url,
              // If "type" variable is undefined, then "GET" method will be used.
              // Make value of this field explicit since
              // user can override it through ajaxSetup method
              type: type || "GET",
              dataType: "html",
              data: params
            }).done(function(responseText) {
              response = arguments;
              self2.html(selector3 ? (
                // If a selector was specified, locate the right elements in a dummy div
                // Exclude scripts to avoid IE 'Permission Denied' errors
                jQuery2("<div>").append(jQuery2.parseHTML(responseText)).find(selector3)
              ) : (
                // Otherwise use the full result
                responseText
              ));
            }).always(callback && function(jqXHR, status) {
              self2.each(function() {
                callback.apply(this, response || [jqXHR.responseText, status, jqXHR]);
              });
            });
          }
          return this;
        };
        jQuery2.expr.pseudos.animated = function(elem) {
          return jQuery2.grep(jQuery2.timers, function(fn) {
            return elem === fn.elem;
          }).length;
        };
        jQuery2.offset = {
          setOffset: function(elem, options, i2) {
            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery2.css(elem, "position"), curElem = jQuery2(elem), props = {};
            if (position === "static") {
              elem.style.position = "relative";
            }
            curOffset = curElem.offset();
            curCSSTop = jQuery2.css(elem, "top");
            curCSSLeft = jQuery2.css(elem, "left");
            calculatePosition = (position === "absolute" || position === "fixed") && (curCSSTop + curCSSLeft).indexOf("auto") > -1;
            if (calculatePosition) {
              curPosition = curElem.position();
              curTop = curPosition.top;
              curLeft = curPosition.left;
            } else {
              curTop = parseFloat(curCSSTop) || 0;
              curLeft = parseFloat(curCSSLeft) || 0;
            }
            if (isFunction(options)) {
              options = options.call(elem, i2, jQuery2.extend({}, curOffset));
            }
            if (options.top != null) {
              props.top = options.top - curOffset.top + curTop;
            }
            if (options.left != null) {
              props.left = options.left - curOffset.left + curLeft;
            }
            if ("using" in options) {
              options.using.call(elem, props);
            } else {
              curElem.css(props);
            }
          }
        };
        jQuery2.fn.extend({
          // offset() relates an element's border box to the document origin
          offset: function(options) {
            if (arguments.length) {
              return options === void 0 ? this : this.each(function(i2) {
                jQuery2.offset.setOffset(this, options, i2);
              });
            }
            var rect2, win, elem = this[0];
            if (!elem) {
              return;
            }
            if (!elem.getClientRects().length) {
              return { top: 0, left: 0 };
            }
            rect2 = elem.getBoundingClientRect();
            win = elem.ownerDocument.defaultView;
            return {
              top: rect2.top + win.pageYOffset,
              left: rect2.left + win.pageXOffset
            };
          },
          // position() relates an element's margin box to its offset parent's padding box
          // This corresponds to the behavior of CSS absolute positioning
          position: function() {
            if (!this[0]) {
              return;
            }
            var offsetParent, offset, doc, elem = this[0], parentOffset = { top: 0, left: 0 };
            if (jQuery2.css(elem, "position") === "fixed") {
              offset = elem.getBoundingClientRect();
            } else {
              offset = this.offset();
              doc = elem.ownerDocument;
              offsetParent = elem.offsetParent || doc.documentElement;
              while (offsetParent && (offsetParent === doc.body || offsetParent === doc.documentElement) && jQuery2.css(offsetParent, "position") === "static") {
                offsetParent = offsetParent.parentNode;
              }
              if (offsetParent && offsetParent !== elem && offsetParent.nodeType === 1) {
                parentOffset = jQuery2(offsetParent).offset();
                parentOffset.top += jQuery2.css(offsetParent, "borderTopWidth", true);
                parentOffset.left += jQuery2.css(offsetParent, "borderLeftWidth", true);
              }
            }
            return {
              top: offset.top - parentOffset.top - jQuery2.css(elem, "marginTop", true),
              left: offset.left - parentOffset.left - jQuery2.css(elem, "marginLeft", true)
            };
          },
          // This method will return documentElement in the following cases:
          // 1) For the element inside the iframe without offsetParent, this method will return
          //    documentElement of the parent window
          // 2) For the hidden or detached element
          // 3) For body or html element, i.e. in case of the html node - it will return itself
          //
          // but those exceptions were never presented as a real life use-cases
          // and might be considered as more preferable results.
          //
          // This logic, however, is not guaranteed and can change at any point in the future
          offsetParent: function() {
            return this.map(function() {
              var offsetParent = this.offsetParent;
              while (offsetParent && jQuery2.css(offsetParent, "position") === "static") {
                offsetParent = offsetParent.offsetParent;
              }
              return offsetParent || documentElement;
            });
          }
        });
        jQuery2.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(method, prop) {
          var top = "pageYOffset" === prop;
          jQuery2.fn[method] = function(val) {
            return access(this, function(elem, method2, val2) {
              var win;
              if (isWindow(elem)) {
                win = elem;
              } else if (elem.nodeType === 9) {
                win = elem.defaultView;
              }
              if (val2 === void 0) {
                return win ? win[prop] : elem[method2];
              }
              if (win) {
                win.scrollTo(
                  !top ? val2 : win.pageXOffset,
                  top ? val2 : win.pageYOffset
                );
              } else {
                elem[method2] = val2;
              }
            }, method, val, arguments.length);
          };
        });
        jQuery2.each(["top", "left"], function(_i2, prop) {
          jQuery2.cssHooks[prop] = addGetHookIf(
            support2.pixelPosition,
            function(elem, computed) {
              if (computed) {
                computed = curCSS(elem, prop);
                return rnumnonpx.test(computed) ? jQuery2(elem).position()[prop] + "px" : computed;
              }
            }
          );
        });
        jQuery2.each({ Height: "height", Width: "width" }, function(name, type) {
          jQuery2.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
          }, function(defaultExtra, funcName) {
            jQuery2.fn[funcName] = function(margin, value) {
              var chainable = arguments.length && (defaultExtra || typeof margin !== "boolean"), extra = defaultExtra || (margin === true || value === true ? "margin" : "border");
              return access(this, function(elem, type2, value2) {
                var doc;
                if (isWindow(elem)) {
                  return funcName.indexOf("outer") === 0 ? elem["inner" + name] : elem.document.documentElement["client" + name];
                }
                if (elem.nodeType === 9) {
                  doc = elem.documentElement;
                  return Math.max(
                    elem.body["scroll" + name],
                    doc["scroll" + name],
                    elem.body["offset" + name],
                    doc["offset" + name],
                    doc["client" + name]
                  );
                }
                return value2 === void 0 ? (
                  // Get width or height on the element, requesting but not forcing parseFloat
                  jQuery2.css(elem, type2, extra)
                ) : (
                  // Set width or height on the element
                  jQuery2.style(elem, type2, value2, extra)
                );
              }, type, chainable ? margin : void 0, chainable);
            };
          });
        });
        jQuery2.each([
          "ajaxStart",
          "ajaxStop",
          "ajaxComplete",
          "ajaxError",
          "ajaxSuccess",
          "ajaxSend"
        ], function(_i2, type) {
          jQuery2.fn[type] = function(fn) {
            return this.on(type, fn);
          };
        });
        jQuery2.fn.extend({
          bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
          },
          unbind: function(types, fn) {
            return this.off(types, null, fn);
          },
          delegate: function(selector3, types, data, fn) {
            return this.on(types, selector3, data, fn);
          },
          undelegate: function(selector3, types, fn) {
            return arguments.length === 1 ? this.off(selector3, "**") : this.off(types, selector3 || "**", fn);
          },
          hover: function(fnOver, fnOut) {
            return this.on("mouseenter", fnOver).on("mouseleave", fnOut || fnOver);
          }
        });
        jQuery2.each(
          "blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),
          function(_i2, name) {
            jQuery2.fn[name] = function(data, fn) {
              return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
            };
          }
        );
        var rtrim = /^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;
        jQuery2.proxy = function(fn, context3) {
          var tmp, args, proxy;
          if (typeof context3 === "string") {
            tmp = fn[context3];
            context3 = fn;
            fn = tmp;
          }
          if (!isFunction(fn)) {
            return void 0;
          }
          args = slice.call(arguments, 2);
          proxy = function() {
            return fn.apply(context3 || this, args.concat(slice.call(arguments)));
          };
          proxy.guid = fn.guid = fn.guid || jQuery2.guid++;
          return proxy;
        };
        jQuery2.holdReady = function(hold) {
          if (hold) {
            jQuery2.readyWait++;
          } else {
            jQuery2.ready(true);
          }
        };
        jQuery2.isArray = Array.isArray;
        jQuery2.parseJSON = JSON.parse;
        jQuery2.nodeName = nodeName;
        jQuery2.isFunction = isFunction;
        jQuery2.isWindow = isWindow;
        jQuery2.camelCase = camelCase;
        jQuery2.type = toType;
        jQuery2.now = Date.now;
        jQuery2.isNumeric = function(obj) {
          var type = jQuery2.type(obj);
          return (type === "number" || type === "string") && // parseFloat NaNs numeric-cast false positives ("")
          // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
          // subtraction forces infinities to NaN
          !isNaN(obj - parseFloat(obj));
        };
        jQuery2.trim = function(text) {
          return text == null ? "" : (text + "").replace(rtrim, "$1");
        };
        if (typeof define === "function" && define.amd) {
          define("jquery", [], function() {
            return jQuery2;
          });
        }
        var _jQuery = window2.jQuery, _$ = window2.$;
        jQuery2.noConflict = function(deep) {
          if (window2.$ === jQuery2) {
            window2.$ = _$;
          }
          if (deep && window2.jQuery === jQuery2) {
            window2.jQuery = _jQuery;
          }
          return jQuery2;
        };
        if (typeof noGlobal === "undefined") {
          window2.jQuery = window2.$ = jQuery2;
        }
        return jQuery2;
      });
    }
  });

  // node_modules/.pnpm/p5@1.7.0/node_modules/p5/lib/p5.min.js
  var require_p5_min = __commonJS({
    "node_modules/.pnpm/p5@1.7.0/node_modules/p5/lib/p5.min.js"(exports, module) {
      init_live_reload();
      !function(e3) {
        "object" == typeof exports && "undefined" != typeof module ? module.exports = e3() : "function" == typeof define && define.amd ? define([], e3) : ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).p5 = e3();
      }(function() {
        var s2, t2, r2;
        return function o2(n2, s3, i2) {
          function a(t3, e4) {
            if (!s3[t3]) {
              if (!n2[t3]) {
                var r3 = "function" == typeof __require && __require;
                if (!e4 && r3)
                  return r3(t3, true);
                if (l)
                  return l(t3, true);
                throw (e4 = new Error("Cannot find module '" + t3 + "'")).code = "MODULE_NOT_FOUND", e4;
              }
              r3 = s3[t3] = { exports: {} }, n2[t3][0].call(r3.exports, function(e5) {
                return a(n2[t3][1][e5] || e5);
              }, r3, r3.exports, o2, n2, s3, i2);
            }
            return s3[t3].exports;
          }
          for (var l = "function" == typeof __require && __require, e3 = 0; e3 < i2.length; e3++)
            a(i2[e3]);
          return a;
        }({ 1: [function(e3, t3, r3) {
          "use strict";
          r3.byteLength = function(e4) {
            var e4 = c(e4), t4 = e4[0], e4 = e4[1];
            return 3 * (t4 + e4) / 4 - e4;
          }, r3.toByteArray = function(e4) {
            var t4, r4, o3 = c(e4), n3 = o3[0], o3 = o3[1], s4 = new u(function(e5, t5) {
              return 3 * (e5 + t5) / 4 - t5;
            }(n3, o3)), i2 = 0, a2 = 0 < o3 ? n3 - 4 : n3;
            for (r4 = 0; r4 < a2; r4 += 4)
              t4 = l[e4.charCodeAt(r4)] << 18 | l[e4.charCodeAt(r4 + 1)] << 12 | l[e4.charCodeAt(r4 + 2)] << 6 | l[e4.charCodeAt(r4 + 3)], s4[i2++] = t4 >> 16 & 255, s4[i2++] = t4 >> 8 & 255, s4[i2++] = 255 & t4;
            2 === o3 && (t4 = l[e4.charCodeAt(r4)] << 2 | l[e4.charCodeAt(r4 + 1)] >> 4, s4[i2++] = 255 & t4);
            1 === o3 && (t4 = l[e4.charCodeAt(r4)] << 10 | l[e4.charCodeAt(r4 + 1)] << 4 | l[e4.charCodeAt(r4 + 2)] >> 2, s4[i2++] = t4 >> 8 & 255, s4[i2++] = 255 & t4);
            return s4;
          }, r3.fromByteArray = function(e4) {
            for (var t4, r4 = e4.length, o3 = r4 % 3, n3 = [], s4 = 0, i2 = r4 - o3; s4 < i2; s4 += 16383)
              n3.push(function(e5, t5, r5) {
                for (var o4, n4 = [], s5 = t5; s5 < r5; s5 += 3)
                  o4 = (e5[s5] << 16 & 16711680) + (e5[s5 + 1] << 8 & 65280) + (255 & e5[s5 + 2]), n4.push(function(e6) {
                    return a[e6 >> 18 & 63] + a[e6 >> 12 & 63] + a[e6 >> 6 & 63] + a[63 & e6];
                  }(o4));
                return n4.join("");
              }(e4, s4, i2 < s4 + 16383 ? i2 : s4 + 16383));
            1 == o3 ? (t4 = e4[r4 - 1], n3.push(a[t4 >> 2] + a[t4 << 4 & 63] + "==")) : 2 == o3 && (t4 = (e4[r4 - 2] << 8) + e4[r4 - 1], n3.push(a[t4 >> 10] + a[t4 >> 4 & 63] + a[t4 << 2 & 63] + "="));
            return n3.join("");
          };
          for (var a = [], l = [], u = "undefined" != typeof Uint8Array ? Uint8Array : Array, o2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", n2 = 0, s3 = o2.length; n2 < s3; ++n2)
            a[n2] = o2[n2], l[o2.charCodeAt(n2)] = n2;
          function c(e4) {
            var t4 = e4.length;
            if (0 < t4 % 4)
              throw new Error("Invalid string. Length must be a multiple of 4");
            e4 = e4.indexOf("="), t4 = (e4 = -1 === e4 ? t4 : e4) === t4 ? 0 : 4 - e4 % 4;
            return [e4, t4];
          }
          l["-".charCodeAt(0)] = 62, l["_".charCodeAt(0)] = 63;
        }, {}], 2: [function(e3, t3, r3) {
        }, {}], 3: [function(e3, t3, r3) {
          arguments[4][2][0].apply(r3, arguments);
        }, { dup: 2 }], 4: [function(P, e3, L) {
          !function(d) {
            "use strict";
            var S = P("base64-js"), s3 = P("ieee754"), e4 = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null, t3 = (L.Buffer = d, L.SlowBuffer = function(e5) {
              +e5 != e5 && (e5 = 0);
              return d.alloc(+e5);
            }, L.INSPECT_MAX_BYTES = 50, 2147483647);
            function l(e5) {
              if (t3 < e5)
                throw new RangeError('The value "' + e5 + '" is invalid for option "size"');
              e5 = new Uint8Array(e5);
              return Object.setPrototypeOf(e5, d.prototype), e5;
            }
            function d(e5, t4, r4) {
              if ("number" != typeof e5)
                return o2(e5, t4, r4);
              if ("string" == typeof t4)
                throw new TypeError('The "string" argument must be of type string. Received type number');
              return i2(e5);
            }
            function o2(e5, t4, r4) {
              if ("string" == typeof e5) {
                var o3 = e5, n3 = t4;
                if (d.isEncoding(n3 = "string" == typeof n3 && "" !== n3 ? n3 : "utf8"))
                  return s4 = 0 | f(o3, n3), i3 = l(s4), i3 = (o3 = i3.write(o3, n3)) !== s4 ? i3.slice(0, o3) : i3;
                throw new TypeError("Unknown encoding: " + n3);
              }
              if (ArrayBuffer.isView(e5))
                return u(e5);
              if (null != e5) {
                if (O(e5, ArrayBuffer) || e5 && O(e5.buffer, ArrayBuffer)) {
                  var s4 = e5, o3 = t4, i3 = r4;
                  if (o3 < 0 || s4.byteLength < o3)
                    throw new RangeError('"offset" is outside of buffer bounds');
                  if (s4.byteLength < o3 + (i3 || 0))
                    throw new RangeError('"length" is outside of buffer bounds');
                  return s4 = void 0 === o3 && void 0 === i3 ? new Uint8Array(s4) : void 0 === i3 ? new Uint8Array(s4, o3) : new Uint8Array(s4, o3, i3), Object.setPrototypeOf(s4, d.prototype), s4;
                }
                if ("number" == typeof e5)
                  throw new TypeError('The "value" argument must not be of type number. Received type number');
                n3 = e5.valueOf && e5.valueOf();
                if (null != n3 && n3 !== e5)
                  return d.from(n3, t4, r4);
                var a2 = function(e6) {
                  {
                    var t5, r5;
                    if (d.isBuffer(e6))
                      return t5 = 0 | c(e6.length), 0 !== (r5 = l(t5)).length && e6.copy(r5, 0, 0, t5), r5;
                  }
                  if (void 0 !== e6.length)
                    return "number" != typeof e6.length || C(e6.length) ? l(0) : u(e6);
                  if ("Buffer" === e6.type && Array.isArray(e6.data))
                    return u(e6.data);
                }(e5);
                if (a2)
                  return a2;
                if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e5[Symbol.toPrimitive])
                  return d.from(e5[Symbol.toPrimitive]("string"), t4, r4);
              }
              throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e5);
            }
            function n2(e5) {
              if ("number" != typeof e5)
                throw new TypeError('"size" argument must be of type number');
              if (e5 < 0)
                throw new RangeError('The value "' + e5 + '" is invalid for option "size"');
            }
            function i2(e5) {
              return n2(e5), l(e5 < 0 ? 0 : 0 | c(e5));
            }
            function u(e5) {
              for (var t4 = e5.length < 0 ? 0 : 0 | c(e5.length), r4 = l(t4), o3 = 0; o3 < t4; o3 += 1)
                r4[o3] = 255 & e5[o3];
              return r4;
            }
            function c(e5) {
              if (t3 <= e5)
                throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + t3.toString(16) + " bytes");
              return 0 | e5;
            }
            function f(e5, t4) {
              if (d.isBuffer(e5))
                return e5.length;
              if (ArrayBuffer.isView(e5) || O(e5, ArrayBuffer))
                return e5.byteLength;
              if ("string" != typeof e5)
                throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e5);
              var r4 = e5.length, o3 = 2 < arguments.length && true === arguments[2];
              if (!o3 && 0 === r4)
                return 0;
              for (var n3 = false; ; )
                switch (t4) {
                  case "ascii":
                  case "latin1":
                  case "binary":
                    return r4;
                  case "utf8":
                  case "utf-8":
                    return M(e5).length;
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return 2 * r4;
                  case "hex":
                    return r4 >>> 1;
                  case "base64":
                    return T(e5).length;
                  default:
                    if (n3)
                      return o3 ? -1 : M(e5).length;
                    t4 = ("" + t4).toLowerCase(), n3 = true;
                }
            }
            function r3(e5, t4, r4) {
              var o3, n3 = false;
              if ((t4 = void 0 === t4 || t4 < 0 ? 0 : t4) > this.length)
                return "";
              if ((r4 = void 0 === r4 || r4 > this.length ? this.length : r4) <= 0)
                return "";
              if ((r4 >>>= 0) <= (t4 >>>= 0))
                return "";
              for (e5 = e5 || "utf8"; ; )
                switch (e5) {
                  case "hex":
                    var s4 = this, i3 = t4, a2 = r4, l2 = s4.length;
                    (!a2 || a2 < 0 || l2 < a2) && (a2 = l2);
                    for (var u2 = "", c2 = i3 = !i3 || i3 < 0 ? 0 : i3; c2 < a2; ++c2)
                      u2 += A[s4[c2]];
                    return u2;
                  case "utf8":
                  case "utf-8":
                    return E(this, t4, r4);
                  case "ascii":
                    var d2 = this, l2 = t4, f2 = r4, h2 = "";
                    f2 = Math.min(d2.length, f2);
                    for (var p2 = l2; p2 < f2; ++p2)
                      h2 += String.fromCharCode(127 & d2[p2]);
                    return h2;
                  case "latin1":
                  case "binary":
                    var m2 = this, i3 = t4, y2 = r4, g2 = "";
                    y2 = Math.min(m2.length, y2);
                    for (var v2 = i3; v2 < y2; ++v2)
                      g2 += String.fromCharCode(m2[v2]);
                    return g2;
                  case "base64":
                    return b2 = this, o3 = r4, 0 === (j2 = t4) && o3 === b2.length ? S.fromByteArray(b2) : S.fromByteArray(b2.slice(j2, o3));
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    for (var b2 = t4, j2 = r4, _2 = this.slice(b2, j2), x2 = "", w2 = 0; w2 < _2.length; w2 += 2)
                      x2 += String.fromCharCode(_2[w2] + 256 * _2[w2 + 1]);
                    return x2;
                  default:
                    if (n3)
                      throw new TypeError("Unknown encoding: " + e5);
                    e5 = (e5 + "").toLowerCase(), n3 = true;
                }
            }
            function a(e5, t4, r4) {
              var o3 = e5[t4];
              e5[t4] = e5[r4], e5[r4] = o3;
            }
            function h(e5, t4, r4, o3, n3) {
              if (0 === e5.length)
                return -1;
              if ("string" == typeof r4 ? (o3 = r4, r4 = 0) : 2147483647 < r4 ? r4 = 2147483647 : r4 < -2147483648 && (r4 = -2147483648), (r4 = (r4 = C(r4 = +r4) ? n3 ? 0 : e5.length - 1 : r4) < 0 ? e5.length + r4 : r4) >= e5.length) {
                if (n3)
                  return -1;
                r4 = e5.length - 1;
              } else if (r4 < 0) {
                if (!n3)
                  return -1;
                r4 = 0;
              }
              if ("string" == typeof t4 && (t4 = d.from(t4, o3)), d.isBuffer(t4))
                return 0 === t4.length ? -1 : p(e5, t4, r4, o3, n3);
              if ("number" == typeof t4)
                return t4 &= 255, "function" == typeof Uint8Array.prototype.indexOf ? (n3 ? Uint8Array.prototype.indexOf : Uint8Array.prototype.lastIndexOf).call(e5, t4, r4) : p(e5, [t4], r4, o3, n3);
              throw new TypeError("val must be string, number or Buffer");
            }
            function p(e5, t4, r4, o3, n3) {
              var s4 = 1, i3 = e5.length, a2 = t4.length;
              if (void 0 !== o3 && ("ucs2" === (o3 = String(o3).toLowerCase()) || "ucs-2" === o3 || "utf16le" === o3 || "utf-16le" === o3)) {
                if (e5.length < 2 || t4.length < 2)
                  return -1;
                i3 /= s4 = 2, a2 /= 2, r4 /= 2;
              }
              function l2(e6, t5) {
                return 1 === s4 ? e6[t5] : e6.readUInt16BE(t5 * s4);
              }
              if (n3)
                for (var u2 = -1, c2 = r4; c2 < i3; c2++)
                  if (l2(e5, c2) === l2(t4, -1 === u2 ? 0 : c2 - u2)) {
                    if (c2 - (u2 = -1 === u2 ? c2 : u2) + 1 === a2)
                      return u2 * s4;
                  } else
                    -1 !== u2 && (c2 -= c2 - u2), u2 = -1;
              else
                for (c2 = r4 = i3 < r4 + a2 ? i3 - a2 : r4; 0 <= c2; c2--) {
                  for (var d2 = true, f2 = 0; f2 < a2; f2++)
                    if (l2(e5, c2 + f2) !== l2(t4, f2)) {
                      d2 = false;
                      break;
                    }
                  if (d2)
                    return c2;
                }
              return -1;
            }
            function y(e5, t4, r4, o3) {
              return k(function(e6) {
                for (var t5 = [], r5 = 0; r5 < e6.length; ++r5)
                  t5.push(255 & e6.charCodeAt(r5));
                return t5;
              }(t4), e5, r4, o3);
            }
            function g(e5, t4, r4, o3) {
              return k(function(e6, t5) {
                for (var r5, o4, n3 = [], s4 = 0; s4 < e6.length && !((t5 -= 2) < 0); ++s4)
                  o4 = e6.charCodeAt(s4), r5 = o4 >> 8, o4 = o4 % 256, n3.push(o4), n3.push(r5);
                return n3;
              }(t4, e5.length - r4), e5, r4, o3);
            }
            function E(e5, t4, r4) {
              r4 = Math.min(e5.length, r4);
              for (var o3 = [], n3 = t4; n3 < r4; ) {
                var s4, i3, a2, l2, u2 = e5[n3], c2 = null, d2 = 239 < u2 ? 4 : 223 < u2 ? 3 : 191 < u2 ? 2 : 1;
                if (n3 + d2 <= r4)
                  switch (d2) {
                    case 1:
                      u2 < 128 && (c2 = u2);
                      break;
                    case 2:
                      128 == (192 & (s4 = e5[n3 + 1])) && 127 < (l2 = (31 & u2) << 6 | 63 & s4) && (c2 = l2);
                      break;
                    case 3:
                      s4 = e5[n3 + 1], i3 = e5[n3 + 2], 128 == (192 & s4) && 128 == (192 & i3) && 2047 < (l2 = (15 & u2) << 12 | (63 & s4) << 6 | 63 & i3) && (l2 < 55296 || 57343 < l2) && (c2 = l2);
                      break;
                    case 4:
                      s4 = e5[n3 + 1], i3 = e5[n3 + 2], a2 = e5[n3 + 3], 128 == (192 & s4) && 128 == (192 & i3) && 128 == (192 & a2) && 65535 < (l2 = (15 & u2) << 18 | (63 & s4) << 12 | (63 & i3) << 6 | 63 & a2) && l2 < 1114112 && (c2 = l2);
                  }
                null === c2 ? (c2 = 65533, d2 = 1) : 65535 < c2 && (c2 -= 65536, o3.push(c2 >>> 10 & 1023 | 55296), c2 = 56320 | 1023 & c2), o3.push(c2), n3 += d2;
              }
              var f2 = o3, h2 = f2.length;
              if (h2 <= v)
                return String.fromCharCode.apply(String, f2);
              for (var p2 = "", m2 = 0; m2 < h2; )
                p2 += String.fromCharCode.apply(String, f2.slice(m2, m2 += v));
              return p2;
            }
            L.kMaxLength = t3, (d.TYPED_ARRAY_SUPPORT = function() {
              try {
                var e5 = new Uint8Array(1), t4 = { foo: function() {
                  return 42;
                } };
                return Object.setPrototypeOf(t4, Uint8Array.prototype), Object.setPrototypeOf(e5, t4), 42 === e5.foo();
              } catch (e6) {
                return false;
              }
            }()) || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(d.prototype, "parent", { enumerable: true, get: function() {
              if (d.isBuffer(this))
                return this.buffer;
            } }), Object.defineProperty(d.prototype, "offset", { enumerable: true, get: function() {
              if (d.isBuffer(this))
                return this.byteOffset;
            } }), "undefined" != typeof Symbol && null != Symbol.species && d[Symbol.species] === d && Object.defineProperty(d, Symbol.species, { value: null, configurable: true, enumerable: false, writable: false }), d.poolSize = 8192, d.from = o2, Object.setPrototypeOf(d.prototype, Uint8Array.prototype), Object.setPrototypeOf(d, Uint8Array), d.alloc = function(e5, t4, r4) {
              return t4 = t4, r4 = r4, n2(e5 = e5), !(e5 <= 0) && void 0 !== t4 ? "string" == typeof r4 ? l(e5).fill(t4, r4) : l(e5).fill(t4) : l(e5);
            }, d.allocUnsafe = i2, d.allocUnsafeSlow = i2, d.isBuffer = function(e5) {
              return null != e5 && true === e5._isBuffer && e5 !== d.prototype;
            }, d.compare = function(e5, t4) {
              if (O(e5, Uint8Array) && (e5 = d.from(e5, e5.offset, e5.byteLength)), O(t4, Uint8Array) && (t4 = d.from(t4, t4.offset, t4.byteLength)), !d.isBuffer(e5) || !d.isBuffer(t4))
                throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
              if (e5 === t4)
                return 0;
              for (var r4 = e5.length, o3 = t4.length, n3 = 0, s4 = Math.min(r4, o3); n3 < s4; ++n3)
                if (e5[n3] !== t4[n3]) {
                  r4 = e5[n3], o3 = t4[n3];
                  break;
                }
              return r4 < o3 ? -1 : o3 < r4 ? 1 : 0;
            }, d.isEncoding = function(e5) {
              switch (String(e5).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                  return true;
                default:
                  return false;
              }
            }, d.concat = function(e5, t4) {
              if (!Array.isArray(e5))
                throw new TypeError('"list" argument must be an Array of Buffers');
              if (0 === e5.length)
                return d.alloc(0);
              if (void 0 === t4)
                for (n3 = t4 = 0; n3 < e5.length; ++n3)
                  t4 += e5[n3].length;
              for (var r4 = d.allocUnsafe(t4), o3 = 0, n3 = 0; n3 < e5.length; ++n3) {
                var s4 = e5[n3];
                if (O(s4, Uint8Array) && (s4 = d.from(s4)), !d.isBuffer(s4))
                  throw new TypeError('"list" argument must be an Array of Buffers');
                s4.copy(r4, o3), o3 += s4.length;
              }
              return r4;
            }, d.byteLength = f, d.prototype._isBuffer = true, d.prototype.swap16 = function() {
              var e5 = this.length;
              if (e5 % 2 != 0)
                throw new RangeError("Buffer size must be a multiple of 16-bits");
              for (var t4 = 0; t4 < e5; t4 += 2)
                a(this, t4, t4 + 1);
              return this;
            }, d.prototype.swap32 = function() {
              var e5 = this.length;
              if (e5 % 4 != 0)
                throw new RangeError("Buffer size must be a multiple of 32-bits");
              for (var t4 = 0; t4 < e5; t4 += 4)
                a(this, t4, t4 + 3), a(this, t4 + 1, t4 + 2);
              return this;
            }, d.prototype.swap64 = function() {
              var e5 = this.length;
              if (e5 % 8 != 0)
                throw new RangeError("Buffer size must be a multiple of 64-bits");
              for (var t4 = 0; t4 < e5; t4 += 8)
                a(this, t4, t4 + 7), a(this, t4 + 1, t4 + 6), a(this, t4 + 2, t4 + 5), a(this, t4 + 3, t4 + 4);
              return this;
            }, d.prototype.toLocaleString = d.prototype.toString = function() {
              var e5 = this.length;
              return 0 === e5 ? "" : 0 === arguments.length ? E(this, 0, e5) : r3.apply(this, arguments);
            }, d.prototype.equals = function(e5) {
              if (d.isBuffer(e5))
                return this === e5 || 0 === d.compare(this, e5);
              throw new TypeError("Argument must be a Buffer");
            }, d.prototype.inspect = function() {
              var e5 = "", t4 = L.INSPECT_MAX_BYTES, e5 = this.toString("hex", 0, t4).replace(/(.{2})/g, "$1 ").trim();
              return this.length > t4 && (e5 += " ... "), "<Buffer " + e5 + ">";
            }, e4 && (d.prototype[e4] = d.prototype.inspect), d.prototype.compare = function(e5, t4, r4, o3, n3) {
              if (O(e5, Uint8Array) && (e5 = d.from(e5, e5.offset, e5.byteLength)), !d.isBuffer(e5))
                throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e5);
              if (void 0 === r4 && (r4 = e5 ? e5.length : 0), void 0 === o3 && (o3 = 0), void 0 === n3 && (n3 = this.length), (t4 = void 0 === t4 ? 0 : t4) < 0 || r4 > e5.length || o3 < 0 || n3 > this.length)
                throw new RangeError("out of range index");
              if (n3 <= o3 && r4 <= t4)
                return 0;
              if (n3 <= o3)
                return -1;
              if (r4 <= t4)
                return 1;
              if (this === e5)
                return 0;
              for (var s4 = (n3 >>>= 0) - (o3 >>>= 0), i3 = (r4 >>>= 0) - (t4 >>>= 0), a2 = Math.min(s4, i3), l2 = this.slice(o3, n3), u2 = e5.slice(t4, r4), c2 = 0; c2 < a2; ++c2)
                if (l2[c2] !== u2[c2]) {
                  s4 = l2[c2], i3 = u2[c2];
                  break;
                }
              return s4 < i3 ? -1 : i3 < s4 ? 1 : 0;
            }, d.prototype.includes = function(e5, t4, r4) {
              return -1 !== this.indexOf(e5, t4, r4);
            }, d.prototype.indexOf = function(e5, t4, r4) {
              return h(this, e5, t4, r4, true);
            }, d.prototype.lastIndexOf = function(e5, t4, r4) {
              return h(this, e5, t4, r4, false);
            }, d.prototype.write = function(e5, t4, r4, o3) {
              if (void 0 === t4)
                o3 = "utf8", r4 = this.length, t4 = 0;
              else if (void 0 === r4 && "string" == typeof t4)
                o3 = t4, r4 = this.length, t4 = 0;
              else {
                if (!isFinite(t4))
                  throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                t4 >>>= 0, isFinite(r4) ? (r4 >>>= 0, void 0 === o3 && (o3 = "utf8")) : (o3 = r4, r4 = void 0);
              }
              var n3 = this.length - t4;
              if ((void 0 === r4 || n3 < r4) && (r4 = n3), 0 < e5.length && (r4 < 0 || t4 < 0) || t4 > this.length)
                throw new RangeError("Attempt to write outside buffer bounds");
              o3 = o3 || "utf8";
              for (var s4, i3, a2, l2 = false; ; )
                switch (o3) {
                  case "hex":
                    var u2 = this, c2 = e5, d2 = t4, f2 = r4, h2 = (d2 = Number(d2) || 0, u2.length - d2);
                    (!f2 || h2 < (f2 = Number(f2))) && (f2 = h2), (h2 = c2.length) / 2 < f2 && (f2 = h2 / 2);
                    for (var p2 = 0; p2 < f2; ++p2) {
                      var m2 = parseInt(c2.substr(2 * p2, 2), 16);
                      if (C(m2))
                        return p2;
                      u2[d2 + p2] = m2;
                    }
                    return p2;
                  case "utf8":
                  case "utf-8":
                    return h2 = t4, a2 = r4, k(M(e5, (i3 = this).length - h2), i3, h2, a2);
                  case "ascii":
                    return y(this, e5, t4, r4);
                  case "latin1":
                  case "binary":
                    return y(this, e5, t4, r4);
                  case "base64":
                    return i3 = this, a2 = t4, s4 = r4, k(T(e5), i3, a2, s4);
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return g(this, e5, t4, r4);
                  default:
                    if (l2)
                      throw new TypeError("Unknown encoding: " + o3);
                    o3 = ("" + o3).toLowerCase(), l2 = true;
                }
            }, d.prototype.toJSON = function() {
              return { type: "Buffer", data: Array.prototype.slice.call(this._arr || this, 0) };
            };
            var v = 4096;
            function m(e5, t4, r4) {
              if (e5 % 1 != 0 || e5 < 0)
                throw new RangeError("offset is not uint");
              if (r4 < e5 + t4)
                throw new RangeError("Trying to access beyond buffer length");
            }
            function b(e5, t4, r4, o3, n3, s4) {
              if (!d.isBuffer(e5))
                throw new TypeError('"buffer" argument must be a Buffer instance');
              if (n3 < t4 || t4 < s4)
                throw new RangeError('"value" argument is out of bounds');
              if (r4 + o3 > e5.length)
                throw new RangeError("Index out of range");
            }
            function j(e5, t4, r4, o3) {
              if (r4 + o3 > e5.length)
                throw new RangeError("Index out of range");
              if (r4 < 0)
                throw new RangeError("Index out of range");
            }
            function _(e5, t4, r4, o3, n3) {
              return t4 = +t4, r4 >>>= 0, n3 || j(e5, 0, r4, 4), s3.write(e5, t4, r4, o3, 23, 4), r4 + 4;
            }
            function x(e5, t4, r4, o3, n3) {
              return t4 = +t4, r4 >>>= 0, n3 || j(e5, 0, r4, 8), s3.write(e5, t4, r4, o3, 52, 8), r4 + 8;
            }
            d.prototype.slice = function(e5, t4) {
              var r4 = this.length, r4 = ((e5 = ~~e5) < 0 ? (e5 += r4) < 0 && (e5 = 0) : r4 < e5 && (e5 = r4), (t4 = void 0 === t4 ? r4 : ~~t4) < 0 ? (t4 += r4) < 0 && (t4 = 0) : r4 < t4 && (t4 = r4), t4 < e5 && (t4 = e5), this.subarray(e5, t4));
              return Object.setPrototypeOf(r4, d.prototype), r4;
            }, d.prototype.readUIntLE = function(e5, t4, r4) {
              e5 >>>= 0, t4 >>>= 0, r4 || m(e5, t4, this.length);
              for (var o3 = this[e5], n3 = 1, s4 = 0; ++s4 < t4 && (n3 *= 256); )
                o3 += this[e5 + s4] * n3;
              return o3;
            }, d.prototype.readUIntBE = function(e5, t4, r4) {
              e5 >>>= 0, t4 >>>= 0, r4 || m(e5, t4, this.length);
              for (var o3 = this[e5 + --t4], n3 = 1; 0 < t4 && (n3 *= 256); )
                o3 += this[e5 + --t4] * n3;
              return o3;
            }, d.prototype.readUInt8 = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 1, this.length), this[e5];
            }, d.prototype.readUInt16LE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 2, this.length), this[e5] | this[e5 + 1] << 8;
            }, d.prototype.readUInt16BE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 2, this.length), this[e5] << 8 | this[e5 + 1];
            }, d.prototype.readUInt32LE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 4, this.length), (this[e5] | this[e5 + 1] << 8 | this[e5 + 2] << 16) + 16777216 * this[e5 + 3];
            }, d.prototype.readUInt32BE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 4, this.length), 16777216 * this[e5] + (this[e5 + 1] << 16 | this[e5 + 2] << 8 | this[e5 + 3]);
            }, d.prototype.readIntLE = function(e5, t4, r4) {
              e5 >>>= 0, t4 >>>= 0, r4 || m(e5, t4, this.length);
              for (var o3 = this[e5], n3 = 1, s4 = 0; ++s4 < t4 && (n3 *= 256); )
                o3 += this[e5 + s4] * n3;
              return (n3 *= 128) <= o3 && (o3 -= Math.pow(2, 8 * t4)), o3;
            }, d.prototype.readIntBE = function(e5, t4, r4) {
              e5 >>>= 0, t4 >>>= 0, r4 || m(e5, t4, this.length);
              for (var o3 = t4, n3 = 1, s4 = this[e5 + --o3]; 0 < o3 && (n3 *= 256); )
                s4 += this[e5 + --o3] * n3;
              return (n3 *= 128) <= s4 && (s4 -= Math.pow(2, 8 * t4)), s4;
            }, d.prototype.readInt8 = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 1, this.length), 128 & this[e5] ? -1 * (255 - this[e5] + 1) : this[e5];
            }, d.prototype.readInt16LE = function(e5, t4) {
              e5 >>>= 0, t4 || m(e5, 2, this.length);
              t4 = this[e5] | this[e5 + 1] << 8;
              return 32768 & t4 ? 4294901760 | t4 : t4;
            }, d.prototype.readInt16BE = function(e5, t4) {
              e5 >>>= 0, t4 || m(e5, 2, this.length);
              t4 = this[e5 + 1] | this[e5] << 8;
              return 32768 & t4 ? 4294901760 | t4 : t4;
            }, d.prototype.readInt32LE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 4, this.length), this[e5] | this[e5 + 1] << 8 | this[e5 + 2] << 16 | this[e5 + 3] << 24;
            }, d.prototype.readInt32BE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 4, this.length), this[e5] << 24 | this[e5 + 1] << 16 | this[e5 + 2] << 8 | this[e5 + 3];
            }, d.prototype.readFloatLE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 4, this.length), s3.read(this, e5, true, 23, 4);
            }, d.prototype.readFloatBE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 4, this.length), s3.read(this, e5, false, 23, 4);
            }, d.prototype.readDoubleLE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 8, this.length), s3.read(this, e5, true, 52, 8);
            }, d.prototype.readDoubleBE = function(e5, t4) {
              return e5 >>>= 0, t4 || m(e5, 8, this.length), s3.read(this, e5, false, 52, 8);
            }, d.prototype.writeUIntLE = function(e5, t4, r4, o3) {
              e5 = +e5, t4 >>>= 0, r4 >>>= 0, o3 || b(this, e5, t4, r4, Math.pow(2, 8 * r4) - 1, 0);
              var n3 = 1, s4 = 0;
              for (this[t4] = 255 & e5; ++s4 < r4 && (n3 *= 256); )
                this[t4 + s4] = e5 / n3 & 255;
              return t4 + r4;
            }, d.prototype.writeUIntBE = function(e5, t4, r4, o3) {
              e5 = +e5, t4 >>>= 0, r4 >>>= 0, o3 || b(this, e5, t4, r4, Math.pow(2, 8 * r4) - 1, 0);
              var n3 = r4 - 1, s4 = 1;
              for (this[t4 + n3] = 255 & e5; 0 <= --n3 && (s4 *= 256); )
                this[t4 + n3] = e5 / s4 & 255;
              return t4 + r4;
            }, d.prototype.writeUInt8 = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 1, 255, 0), this[t4] = 255 & e5, t4 + 1;
            }, d.prototype.writeUInt16LE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 2, 65535, 0), this[t4] = 255 & e5, this[t4 + 1] = e5 >>> 8, t4 + 2;
            }, d.prototype.writeUInt16BE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 2, 65535, 0), this[t4] = e5 >>> 8, this[t4 + 1] = 255 & e5, t4 + 2;
            }, d.prototype.writeUInt32LE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 4, 4294967295, 0), this[t4 + 3] = e5 >>> 24, this[t4 + 2] = e5 >>> 16, this[t4 + 1] = e5 >>> 8, this[t4] = 255 & e5, t4 + 4;
            }, d.prototype.writeUInt32BE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 4, 4294967295, 0), this[t4] = e5 >>> 24, this[t4 + 1] = e5 >>> 16, this[t4 + 2] = e5 >>> 8, this[t4 + 3] = 255 & e5, t4 + 4;
            }, d.prototype.writeIntLE = function(e5, t4, r4, o3) {
              e5 = +e5, t4 >>>= 0, o3 || b(this, e5, t4, r4, (o3 = Math.pow(2, 8 * r4 - 1)) - 1, -o3);
              var n3 = 0, s4 = 1, i3 = 0;
              for (this[t4] = 255 & e5; ++n3 < r4 && (s4 *= 256); )
                e5 < 0 && 0 === i3 && 0 !== this[t4 + n3 - 1] && (i3 = 1), this[t4 + n3] = (e5 / s4 >> 0) - i3 & 255;
              return t4 + r4;
            }, d.prototype.writeIntBE = function(e5, t4, r4, o3) {
              e5 = +e5, t4 >>>= 0, o3 || b(this, e5, t4, r4, (o3 = Math.pow(2, 8 * r4 - 1)) - 1, -o3);
              var n3 = r4 - 1, s4 = 1, i3 = 0;
              for (this[t4 + n3] = 255 & e5; 0 <= --n3 && (s4 *= 256); )
                e5 < 0 && 0 === i3 && 0 !== this[t4 + n3 + 1] && (i3 = 1), this[t4 + n3] = (e5 / s4 >> 0) - i3 & 255;
              return t4 + r4;
            }, d.prototype.writeInt8 = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 1, 127, -128), this[t4] = 255 & (e5 = e5 < 0 ? 255 + e5 + 1 : e5), t4 + 1;
            }, d.prototype.writeInt16LE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 2, 32767, -32768), this[t4] = 255 & e5, this[t4 + 1] = e5 >>> 8, t4 + 2;
            }, d.prototype.writeInt16BE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 2, 32767, -32768), this[t4] = e5 >>> 8, this[t4 + 1] = 255 & e5, t4 + 2;
            }, d.prototype.writeInt32LE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 4, 2147483647, -2147483648), this[t4] = 255 & e5, this[t4 + 1] = e5 >>> 8, this[t4 + 2] = e5 >>> 16, this[t4 + 3] = e5 >>> 24, t4 + 4;
            }, d.prototype.writeInt32BE = function(e5, t4, r4) {
              return e5 = +e5, t4 >>>= 0, r4 || b(this, e5, t4, 4, 2147483647, -2147483648), this[t4] = (e5 = e5 < 0 ? 4294967295 + e5 + 1 : e5) >>> 24, this[t4 + 1] = e5 >>> 16, this[t4 + 2] = e5 >>> 8, this[t4 + 3] = 255 & e5, t4 + 4;
            }, d.prototype.writeFloatLE = function(e5, t4, r4) {
              return _(this, e5, t4, true, r4);
            }, d.prototype.writeFloatBE = function(e5, t4, r4) {
              return _(this, e5, t4, false, r4);
            }, d.prototype.writeDoubleLE = function(e5, t4, r4) {
              return x(this, e5, t4, true, r4);
            }, d.prototype.writeDoubleBE = function(e5, t4, r4) {
              return x(this, e5, t4, false, r4);
            }, d.prototype.copy = function(e5, t4, r4, o3) {
              if (!d.isBuffer(e5))
                throw new TypeError("argument should be a Buffer");
              if (r4 = r4 || 0, o3 || 0 === o3 || (o3 = this.length), t4 >= e5.length && (t4 = e5.length), (o3 = 0 < o3 && o3 < r4 ? r4 : o3) === r4)
                return 0;
              if (0 === e5.length || 0 === this.length)
                return 0;
              if ((t4 = t4 || 0) < 0)
                throw new RangeError("targetStart out of bounds");
              if (r4 < 0 || r4 >= this.length)
                throw new RangeError("Index out of range");
              if (o3 < 0)
                throw new RangeError("sourceEnd out of bounds");
              o3 > this.length && (o3 = this.length);
              var n3 = (o3 = e5.length - t4 < o3 - r4 ? e5.length - t4 + r4 : o3) - r4;
              if (this === e5 && "function" == typeof Uint8Array.prototype.copyWithin)
                this.copyWithin(t4, r4, o3);
              else if (this === e5 && r4 < t4 && t4 < o3)
                for (var s4 = n3 - 1; 0 <= s4; --s4)
                  e5[s4 + t4] = this[s4 + r4];
              else
                Uint8Array.prototype.set.call(e5, this.subarray(r4, o3), t4);
              return n3;
            }, d.prototype.fill = function(e5, t4, r4, o3) {
              if ("string" == typeof e5) {
                if ("string" == typeof t4 ? (o3 = t4, t4 = 0, r4 = this.length) : "string" == typeof r4 && (o3 = r4, r4 = this.length), void 0 !== o3 && "string" != typeof o3)
                  throw new TypeError("encoding must be a string");
                if ("string" == typeof o3 && !d.isEncoding(o3))
                  throw new TypeError("Unknown encoding: " + o3);
                var n3;
                1 === e5.length && (n3 = e5.charCodeAt(0), ("utf8" === o3 && n3 < 128 || "latin1" === o3) && (e5 = n3));
              } else
                "number" == typeof e5 ? e5 &= 255 : "boolean" == typeof e5 && (e5 = Number(e5));
              if (t4 < 0 || this.length < t4 || this.length < r4)
                throw new RangeError("Out of range index");
              var s4;
              if (!(r4 <= t4))
                if (t4 >>>= 0, r4 = void 0 === r4 ? this.length : r4 >>> 0, "number" == typeof (e5 = e5 || 0))
                  for (s4 = t4; s4 < r4; ++s4)
                    this[s4] = e5;
                else {
                  var i3 = d.isBuffer(e5) ? e5 : d.from(e5, o3), a2 = i3.length;
                  if (0 === a2)
                    throw new TypeError('The value "' + e5 + '" is invalid for argument "value"');
                  for (s4 = 0; s4 < r4 - t4; ++s4)
                    this[s4 + t4] = i3[s4 % a2];
                }
              return this;
            };
            var w = /[^+/0-9A-Za-z-_]/g;
            function M(e5, t4) {
              t4 = t4 || 1 / 0;
              for (var r4, o3 = e5.length, n3 = null, s4 = [], i3 = 0; i3 < o3; ++i3) {
                if (55295 < (r4 = e5.charCodeAt(i3)) && r4 < 57344) {
                  if (!n3) {
                    if (56319 < r4) {
                      -1 < (t4 -= 3) && s4.push(239, 191, 189);
                      continue;
                    }
                    if (i3 + 1 === o3) {
                      -1 < (t4 -= 3) && s4.push(239, 191, 189);
                      continue;
                    }
                    n3 = r4;
                    continue;
                  }
                  if (r4 < 56320) {
                    -1 < (t4 -= 3) && s4.push(239, 191, 189), n3 = r4;
                    continue;
                  }
                  r4 = 65536 + (n3 - 55296 << 10 | r4 - 56320);
                } else
                  n3 && -1 < (t4 -= 3) && s4.push(239, 191, 189);
                if (n3 = null, r4 < 128) {
                  if (--t4 < 0)
                    break;
                  s4.push(r4);
                } else if (r4 < 2048) {
                  if ((t4 -= 2) < 0)
                    break;
                  s4.push(r4 >> 6 | 192, 63 & r4 | 128);
                } else if (r4 < 65536) {
                  if ((t4 -= 3) < 0)
                    break;
                  s4.push(r4 >> 12 | 224, r4 >> 6 & 63 | 128, 63 & r4 | 128);
                } else {
                  if (!(r4 < 1114112))
                    throw new Error("Invalid code point");
                  if ((t4 -= 4) < 0)
                    break;
                  s4.push(r4 >> 18 | 240, r4 >> 12 & 63 | 128, r4 >> 6 & 63 | 128, 63 & r4 | 128);
                }
              }
              return s4;
            }
            function T(e5) {
              return S.toByteArray(function(e6) {
                if ((e6 = (e6 = e6.split("=")[0]).trim().replace(w, "")).length < 2)
                  return "";
                for (; e6.length % 4 != 0; )
                  e6 += "=";
                return e6;
              }(e5));
            }
            function k(e5, t4, r4, o3) {
              for (var n3 = 0; n3 < o3 && !(n3 + r4 >= t4.length || n3 >= e5.length); ++n3)
                t4[n3 + r4] = e5[n3];
              return n3;
            }
            function O(e5, t4) {
              return e5 instanceof t4 || null != e5 && null != e5.constructor && null != e5.constructor.name && e5.constructor.name === t4.name;
            }
            function C(e5) {
              return e5 != e5;
            }
            var A = function() {
              for (var e5 = "0123456789abcdef", t4 = new Array(256), r4 = 0; r4 < 16; ++r4)
                for (var o3 = 16 * r4, n3 = 0; n3 < 16; ++n3)
                  t4[o3 + n3] = e5[r4] + e5[n3];
              return t4;
            }();
          }.call(this, P("buffer").Buffer);
        }, { "base64-js": 1, buffer: 4, ieee754: 244 }], 5: [function(e3, t3, r3) {
          t3.exports = function(e4) {
            if ("function" != typeof e4)
              throw TypeError(String(e4) + " is not a function");
            return e4;
          };
        }, {}], 6: [function(e3, t3, r3) {
          var o2 = e3("../internals/is-object");
          t3.exports = function(e4) {
            if (o2(e4) || null === e4)
              return e4;
            throw TypeError("Can't set " + String(e4) + " as a prototype");
          };
        }, { "../internals/is-object": 74 }], 7: [function(e3, t3, r3) {
          var o2 = e3("../internals/well-known-symbol"), n2 = e3("../internals/object-create"), e3 = e3("../internals/object-define-property"), s3 = o2("unscopables"), i2 = Array.prototype;
          null == i2[s3] && e3.f(i2, s3, { configurable: true, value: n2(null) }), t3.exports = function(e4) {
            i2[s3][e4] = true;
          };
        }, { "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/well-known-symbol": 148 }], 8: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/string-multibyte").charAt;
          t3.exports = function(e4, t4, r4) {
            return t4 + (r4 ? o2(e4, t4).length : 1);
          };
        }, { "../internals/string-multibyte": 123 }], 9: [function(e3, t3, r3) {
          t3.exports = function(e4, t4, r4) {
            if (e4 instanceof t4)
              return e4;
            throw TypeError("Incorrect " + (r4 ? r4 + " " : "") + "invocation");
          };
        }, {}], 10: [function(e3, t3, r3) {
          var o2 = e3("../internals/is-object");
          t3.exports = function(e4) {
            if (o2(e4))
              return e4;
            throw TypeError(String(e4) + " is not an object");
          };
        }, { "../internals/is-object": 74 }], 11: [function(e3, t3, r3) {
          t3.exports = "undefined" != typeof ArrayBuffer && "undefined" != typeof DataView;
        }, {}], 12: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return l(e4) && u(M, c(e4));
          }
          var n2, s3 = e3("../internals/array-buffer-native"), i2 = e3("../internals/descriptors"), a = e3("../internals/global"), l = e3("../internals/is-object"), u = e3("../internals/has"), c = e3("../internals/classof"), d = e3("../internals/create-non-enumerable-property"), f = e3("../internals/redefine"), h = e3("../internals/object-define-property").f, p = e3("../internals/object-get-prototype-of"), m = e3("../internals/object-set-prototype-of"), y = e3("../internals/well-known-symbol"), e3 = e3("../internals/uid"), g = a.Int8Array, v = g && g.prototype, b = a.Uint8ClampedArray, b = b && b.prototype, j = g && p(g), _ = v && p(v), x = Object.prototype, w = x.isPrototypeOf, y = y("toStringTag"), S = e3("TYPED_ARRAY_TAG"), E = s3 && !!m && "Opera" !== c(a.opera), e3 = false, M = { Int8Array: 1, Uint8Array: 1, Uint8ClampedArray: 1, Int16Array: 2, Uint16Array: 2, Int32Array: 4, Uint32Array: 4, Float32Array: 4, Float64Array: 8 };
          for (n2 in M)
            a[n2] || (E = false);
          if ((!E || "function" != typeof j || j === Function.prototype) && (j = function() {
            throw TypeError("Incorrect invocation");
          }, E))
            for (n2 in M)
              a[n2] && m(a[n2], j);
          if ((!E || !_ || _ === x) && (_ = j.prototype, E))
            for (n2 in M)
              a[n2] && m(a[n2].prototype, _);
          if (E && p(b) !== _ && m(b, _), i2 && !u(_, y))
            for (n2 in e3 = true, h(_, y, { get: function() {
              return l(this) ? this[S] : void 0;
            } }), M)
              a[n2] && d(a[n2], S, n2);
          t3.exports = { NATIVE_ARRAY_BUFFER_VIEWS: E, TYPED_ARRAY_TAG: e3 && S, aTypedArray: function(e4) {
            if (o2(e4))
              return e4;
            throw TypeError("Target is not a typed array");
          }, aTypedArrayConstructor: function(e4) {
            if (m) {
              if (w.call(j, e4))
                return e4;
            } else
              for (var t4 in M)
                if (u(M, n2)) {
                  t4 = a[t4];
                  if (t4 && (e4 === t4 || w.call(t4, e4)))
                    return e4;
                }
            throw TypeError("Target is not a typed array constructor");
          }, exportTypedArrayMethod: function(e4, t4, r4) {
            if (i2) {
              if (r4)
                for (var o3 in M) {
                  o3 = a[o3];
                  o3 && u(o3.prototype, e4) && delete o3.prototype[e4];
                }
              _[e4] && !r4 || f(_, e4, !r4 && E && v[e4] || t4);
            }
          }, exportTypedArrayStaticMethod: function(e4, t4, r4) {
            var o3, n3;
            if (i2) {
              if (m) {
                if (r4)
                  for (o3 in M)
                    (n3 = a[o3]) && u(n3, e4) && delete n3[e4];
                if (j[e4] && !r4)
                  return;
                try {
                  return f(j, e4, !r4 && E && g[e4] || t4);
                } catch (e5) {
                }
              }
              for (o3 in M)
                !(n3 = a[o3]) || n3[e4] && !r4 || f(n3, e4, t4);
            }
          }, isView: function(e4) {
            e4 = c(e4);
            return "DataView" === e4 || u(M, e4);
          }, isTypedArray: o2, TypedArray: j, TypedArrayPrototype: _ };
        }, { "../internals/array-buffer-native": 11, "../internals/classof": 29, "../internals/create-non-enumerable-property": 38, "../internals/descriptors": 43, "../internals/global": 59, "../internals/has": 60, "../internals/is-object": 74, "../internals/object-define-property": 92, "../internals/object-get-prototype-of": 97, "../internals/object-set-prototype-of": 101, "../internals/redefine": 108, "../internals/uid": 145, "../internals/well-known-symbol": 148 }], 13: [function(e3, t3, D) {
          "use strict";
          function r3(e4) {
            return [255 & e4];
          }
          function o2(e4) {
            return [255 & e4, e4 >> 8 & 255];
          }
          function n2(e4) {
            return [255 & e4, e4 >> 8 & 255, e4 >> 16 & 255, e4 >> 24 & 255];
          }
          function s3(e4) {
            return e4[3] << 24 | e4[2] << 16 | e4[1] << 8 | e4[0];
          }
          function i2(e4) {
            return C(e4, 23, 4);
          }
          function F(e4) {
            return C(e4, 52, 8);
          }
          function a(e4, t4) {
            H(e4[w], t4, { get: function() {
              return b(this)[t4];
            } });
          }
          function l(e4, t4, r4, o3) {
            if (r4 = m(r4), e4 = b(e4), r4 + t4 > e4.byteLength)
              throw O(S);
            var n3 = b(e4.buffer).bytes, r4 = r4 + e4.byteOffset, e4 = n3.slice(r4, r4 + t4);
            return o3 ? e4 : e4.reverse();
          }
          function u(e4, t4, r4, o3, n3, s4) {
            if (r4 = m(r4), e4 = b(e4), r4 + t4 > e4.byteLength)
              throw O(S);
            for (var i3 = b(e4.buffer).bytes, a2 = r4 + e4.byteOffset, l2 = o3(+n3), u2 = 0; u2 < t4; u2++)
              i3[a2 + u2] = l2[s4 ? u2 : t4 - u2 - 1];
          }
          var c = e3("../internals/global"), d = e3("../internals/descriptors"), U = e3("../internals/array-buffer-native"), N = e3("../internals/create-non-enumerable-property"), f = e3("../internals/redefine-all"), h = e3("../internals/fails"), p = e3("../internals/an-instance"), B = e3("../internals/to-integer"), G = e3("../internals/to-length"), m = e3("../internals/to-index"), y = e3("../internals/ieee754"), V = e3("../internals/object-get-prototype-of"), g = e3("../internals/object-set-prototype-of"), z = e3("../internals/object-get-own-property-names").f, H = e3("../internals/object-define-property").f, W = e3("../internals/array-fill"), v = e3("../internals/set-to-string-tag"), e3 = e3("../internals/internal-state"), b = e3.get, j = e3.set, _ = "ArrayBuffer", x = "DataView", w = "prototype", S = "Wrong index", E = c[_], M = E, T = c[x], e3 = T && T[w], k = Object.prototype, O = c.RangeError, C = y.pack, A = y.unpack;
          if (U) {
            if (!h(function() {
              E(1);
            }) || !h(function() {
              new E(-1);
            }) || h(function() {
              return new E(), new E(1.5), new E(NaN), E.name != _;
            })) {
              for (var P, c = (M = function(e4) {
                return p(this, M), new E(m(e4));
              })[w] = E[w], L = z(E), R = 0; L.length > R; )
                (P = L[R++]) in M || N(M, P, E[P]);
              c.constructor = M;
            }
            g && V(e3) !== k && g(e3, k);
            var y = new T(new M(2)), I = e3.setInt8;
            y.setInt8(0, 2147483648), y.setInt8(1, 2147483649), !y.getInt8(0) && y.getInt8(1) || f(e3, { setInt8: function(e4, t4) {
              I.call(this, e4, t4 << 24 >> 24);
            }, setUint8: function(e4, t4) {
              I.call(this, e4, t4 << 24 >> 24);
            } }, { unsafe: true });
          } else
            M = function(e4) {
              p(this, M, _);
              e4 = m(e4);
              j(this, { bytes: W.call(new Array(e4), 0), byteLength: e4 }), d || (this.byteLength = e4);
            }, T = function(e4, t4, r4) {
              p(this, T, x), p(e4, M, x);
              var o3 = b(e4).byteLength, t4 = B(t4);
              if (t4 < 0 || o3 < t4)
                throw O("Wrong offset");
              if (o3 < t4 + (r4 = void 0 === r4 ? o3 - t4 : G(r4)))
                throw O("Wrong length");
              j(this, { buffer: e4, byteLength: r4, byteOffset: t4 }), d || (this.buffer = e4, this.byteLength = r4, this.byteOffset = t4);
            }, d && (a(M, "byteLength"), a(T, "buffer"), a(T, "byteLength"), a(T, "byteOffset")), f(T[w], { getInt8: function(e4) {
              return l(this, 1, e4)[0] << 24 >> 24;
            }, getUint8: function(e4) {
              return l(this, 1, e4)[0];
            }, getInt16: function(e4) {
              e4 = l(this, 2, e4, 1 < arguments.length ? arguments[1] : void 0);
              return (e4[1] << 8 | e4[0]) << 16 >> 16;
            }, getUint16: function(e4) {
              e4 = l(this, 2, e4, 1 < arguments.length ? arguments[1] : void 0);
              return e4[1] << 8 | e4[0];
            }, getInt32: function(e4) {
              return s3(l(this, 4, e4, 1 < arguments.length ? arguments[1] : void 0));
            }, getUint32: function(e4) {
              return s3(l(this, 4, e4, 1 < arguments.length ? arguments[1] : void 0)) >>> 0;
            }, getFloat32: function(e4) {
              return A(l(this, 4, e4, 1 < arguments.length ? arguments[1] : void 0), 23);
            }, getFloat64: function(e4) {
              return A(l(this, 8, e4, 1 < arguments.length ? arguments[1] : void 0), 52);
            }, setInt8: function(e4, t4) {
              u(this, 1, e4, r3, t4);
            }, setUint8: function(e4, t4) {
              u(this, 1, e4, r3, t4);
            }, setInt16: function(e4, t4) {
              u(this, 2, e4, o2, t4, 2 < arguments.length ? arguments[2] : void 0);
            }, setUint16: function(e4, t4) {
              u(this, 2, e4, o2, t4, 2 < arguments.length ? arguments[2] : void 0);
            }, setInt32: function(e4, t4) {
              u(this, 4, e4, n2, t4, 2 < arguments.length ? arguments[2] : void 0);
            }, setUint32: function(e4, t4) {
              u(this, 4, e4, n2, t4, 2 < arguments.length ? arguments[2] : void 0);
            }, setFloat32: function(e4, t4) {
              u(this, 4, e4, i2, t4, 2 < arguments.length ? arguments[2] : void 0);
            }, setFloat64: function(e4, t4) {
              u(this, 8, e4, F, t4, 2 < arguments.length ? arguments[2] : void 0);
            } });
          v(M, _), v(T, x), t3.exports = { ArrayBuffer: M, DataView: T };
        }, { "../internals/an-instance": 9, "../internals/array-buffer-native": 11, "../internals/array-fill": 15, "../internals/create-non-enumerable-property": 38, "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 59, "../internals/ieee754": 65, "../internals/internal-state": 70, "../internals/object-define-property": 92, "../internals/object-get-own-property-names": 95, "../internals/object-get-prototype-of": 97, "../internals/object-set-prototype-of": 101, "../internals/redefine-all": 107, "../internals/set-to-string-tag": 117, "../internals/to-index": 133, "../internals/to-integer": 135, "../internals/to-length": 136 }], 14: [function(e3, t3, r3) {
          "use strict";
          var l = e3("../internals/to-object"), u = e3("../internals/to-absolute-index"), c = e3("../internals/to-length"), d = Math.min;
          t3.exports = [].copyWithin || function(e4, t4) {
            var r4 = l(this), o2 = c(r4.length), n2 = u(e4, o2), s3 = u(t4, o2), e4 = 2 < arguments.length ? arguments[2] : void 0, i2 = d((void 0 === e4 ? o2 : u(e4, o2)) - s3, o2 - n2), a = 1;
            for (s3 < n2 && n2 < s3 + i2 && (a = -1, s3 += i2 - 1, n2 += i2 - 1); 0 < i2--; )
              s3 in r4 ? r4[n2] = r4[s3] : delete r4[n2], n2 += a, s3 += a;
            return r4;
          };
        }, { "../internals/to-absolute-index": 132, "../internals/to-length": 136, "../internals/to-object": 137 }], 15: [function(e3, t3, r3) {
          "use strict";
          var i2 = e3("../internals/to-object"), a = e3("../internals/to-absolute-index"), l = e3("../internals/to-length");
          t3.exports = function(e4) {
            for (var t4 = i2(this), r4 = l(t4.length), o2 = arguments.length, n2 = a(1 < o2 ? arguments[1] : void 0, r4), o2 = 2 < o2 ? arguments[2] : void 0, s3 = void 0 === o2 ? r4 : a(o2, r4); n2 < s3; )
              t4[n2++] = e4;
            return t4;
          };
        }, { "../internals/to-absolute-index": 132, "../internals/to-length": 136, "../internals/to-object": 137 }], 16: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-iteration").forEach, n2 = e3("../internals/array-method-is-strict"), e3 = e3("../internals/array-method-uses-to-length"), n2 = n2("forEach"), e3 = e3("forEach");
          t3.exports = n2 && e3 ? [].forEach : function(e4) {
            return o2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          };
        }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23 }], 17: [function(e3, t3, r3) {
          "use strict";
          var h = e3("../internals/function-bind-context"), p = e3("../internals/to-object"), m = e3("../internals/call-with-safe-iteration-closing"), y = e3("../internals/is-array-iterator-method"), g = e3("../internals/to-length"), v = e3("../internals/create-property"), b = e3("../internals/get-iterator-method");
          t3.exports = function(e4) {
            var t4, r4, o2, n2, s3, i2, a = p(e4), e4 = "function" == typeof this ? this : Array, l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = b(a), f = 0;
            if (c && (u = h(u, 2 < l ? arguments[2] : void 0, 2)), null == d || e4 == Array && y(d))
              for (r4 = new e4(t4 = g(a.length)); f < t4; f++)
                i2 = c ? u(a[f], f) : a[f], v(r4, f, i2);
            else
              for (s3 = (n2 = d.call(a)).next, r4 = new e4(); !(o2 = s3.call(n2)).done; f++)
                i2 = c ? m(n2, u, [o2.value, f], true) : o2.value, v(r4, f, i2);
            return r4.length = f, r4;
          };
        }, { "../internals/call-with-safe-iteration-closing": 26, "../internals/create-property": 40, "../internals/function-bind-context": 54, "../internals/get-iterator-method": 57, "../internals/is-array-iterator-method": 71, "../internals/to-length": 136, "../internals/to-object": 137 }], 18: [function(e3, t3, r3) {
          function o2(a) {
            return function(e4, t4, r4) {
              var o3, n2 = l(e4), s3 = u(n2.length), i2 = c(r4, s3);
              if (a && t4 != t4) {
                for (; i2 < s3; )
                  if ((o3 = n2[i2++]) != o3)
                    return true;
              } else
                for (; i2 < s3; i2++)
                  if ((a || i2 in n2) && n2[i2] === t4)
                    return a || i2 || 0;
              return !a && -1;
            };
          }
          var l = e3("../internals/to-indexed-object"), u = e3("../internals/to-length"), c = e3("../internals/to-absolute-index");
          t3.exports = { includes: o2(true), indexOf: o2(false) };
        }, { "../internals/to-absolute-index": 132, "../internals/to-indexed-object": 134, "../internals/to-length": 136 }], 19: [function(e3, t3, r3) {
          function o2(f) {
            var h = 1 == f, p = 2 == f, m = 3 == f, y = 4 == f, g = 6 == f, v = 5 == f || g;
            return function(e4, t4, r4, o3) {
              for (var n2, s3, i2 = _(e4), a = j(i2), l = b(t4, r4, 3), u = x(a.length), c = 0, t4 = o3 || w, d = h ? t4(e4, u) : p ? t4(e4, 0) : void 0; c < u; c++)
                if ((v || c in a) && (s3 = l(n2 = a[c], c, i2), f)) {
                  if (h)
                    d[c] = s3;
                  else if (s3)
                    switch (f) {
                      case 3:
                        return true;
                      case 5:
                        return n2;
                      case 6:
                        return c;
                      case 2:
                        S.call(d, n2);
                    }
                  else if (y)
                    return false;
                }
              return g ? -1 : m || y ? y : d;
            };
          }
          var b = e3("../internals/function-bind-context"), j = e3("../internals/indexed-object"), _ = e3("../internals/to-object"), x = e3("../internals/to-length"), w = e3("../internals/array-species-create"), S = [].push;
          t3.exports = { forEach: o2(0), map: o2(1), filter: o2(2), some: o2(3), every: o2(4), find: o2(5), findIndex: o2(6) };
        }, { "../internals/array-species-create": 25, "../internals/function-bind-context": 54, "../internals/indexed-object": 66, "../internals/to-length": 136, "../internals/to-object": 137 }], 20: [function(e3, t3, r3) {
          "use strict";
          var n2 = e3("../internals/to-indexed-object"), s3 = e3("../internals/to-integer"), i2 = e3("../internals/to-length"), o2 = e3("../internals/array-method-is-strict"), e3 = e3("../internals/array-method-uses-to-length"), a = Math.min, l = [].lastIndexOf, u = !!l && 1 / [1].lastIndexOf(1, -0) < 0, o2 = o2("lastIndexOf"), e3 = e3("indexOf", { ACCESSORS: true, 1: 0 });
          t3.exports = u || !o2 || !e3 ? function(e4) {
            if (u)
              return l.apply(this, arguments) || 0;
            var t4 = n2(this), r4 = i2(t4.length), o3 = r4 - 1;
            for ((o3 = 1 < arguments.length ? a(o3, s3(arguments[1])) : o3) < 0 && (o3 = r4 + o3); 0 <= o3; o3--)
              if (o3 in t4 && t4[o3] === e4)
                return o3 || 0;
            return -1;
          } : l;
        }, { "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/to-indexed-object": 134, "../internals/to-integer": 135, "../internals/to-length": 136 }], 21: [function(e3, t3, r3) {
          var o2 = e3("../internals/fails"), n2 = e3("../internals/well-known-symbol"), s3 = e3("../internals/engine-v8-version"), i2 = n2("species");
          t3.exports = function(t4) {
            return 51 <= s3 || !o2(function() {
              var e4 = [];
              return (e4.constructor = {})[i2] = function() {
                return { foo: 1 };
              }, 1 !== e4[t4](Boolean).foo;
            });
          };
        }, { "../internals/engine-v8-version": 48, "../internals/fails": 51, "../internals/well-known-symbol": 148 }], 22: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/fails");
          t3.exports = function(e4, t4) {
            var r4 = [][e4];
            return !!r4 && o2(function() {
              r4.call(null, t4 || function() {
                throw 1;
              }, 1);
            });
          };
        }, { "../internals/fails": 51 }], 23: [function(e3, t3, r3) {
          function i2(e4) {
            throw e4;
          }
          var a = e3("../internals/descriptors"), l = e3("../internals/fails"), u = e3("../internals/has"), c = Object.defineProperty, d = {};
          t3.exports = function(e4, t4) {
            var r4, o2, n2, s3;
            return u(d, e4) ? d[e4] : (r4 = [][e4], o2 = !!u(t4 = t4 || {}, "ACCESSORS") && t4.ACCESSORS, n2 = u(t4, 0) ? t4[0] : i2, s3 = u(t4, 1) ? t4[1] : void 0, d[e4] = !!r4 && !l(function() {
              if (o2 && !a)
                return true;
              var e5 = { length: -1 };
              o2 ? c(e5, 1, { enumerable: true, get: i2 }) : e5[1] = 1, r4.call(e5, n2, s3);
            }));
          };
        }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/has": 60 }], 24: [function(e3, t3, r3) {
          function o2(u) {
            return function(e4, t4, r4, o3) {
              c(t4);
              var n2 = d(e4), s3 = f(n2), i2 = h(n2.length), a = u ? i2 - 1 : 0, l = u ? -1 : 1;
              if (r4 < 2)
                for (; ; ) {
                  if (a in s3) {
                    o3 = s3[a], a += l;
                    break;
                  }
                  if (a += l, u ? a < 0 : i2 <= a)
                    throw TypeError("Reduce of empty array with no initial value");
                }
              for (; u ? 0 <= a : a < i2; a += l)
                a in s3 && (o3 = t4(o3, s3[a], a, n2));
              return o3;
            };
          }
          var c = e3("../internals/a-function"), d = e3("../internals/to-object"), f = e3("../internals/indexed-object"), h = e3("../internals/to-length");
          t3.exports = { left: o2(false), right: o2(true) };
        }, { "../internals/a-function": 5, "../internals/indexed-object": 66, "../internals/to-length": 136, "../internals/to-object": 137 }], 25: [function(e3, t3, r3) {
          var o2 = e3("../internals/is-object"), n2 = e3("../internals/is-array"), s3 = e3("../internals/well-known-symbol")("species");
          t3.exports = function(e4, t4) {
            var r4;
            return new (void 0 === (r4 = n2(e4) && ("function" == typeof (r4 = e4.constructor) && (r4 === Array || n2(r4.prototype)) || o2(r4) && null === (r4 = r4[s3])) ? void 0 : r4) ? Array : r4)(0 === t4 ? 0 : t4);
          };
        }, { "../internals/is-array": 72, "../internals/is-object": 74, "../internals/well-known-symbol": 148 }], 26: [function(e3, t3, r3) {
          var n2 = e3("../internals/an-object");
          t3.exports = function(t4, e4, r4, o2) {
            try {
              return o2 ? e4(n2(r4)[0], r4[1]) : e4(r4);
            } catch (e5) {
              o2 = t4.return;
              throw void 0 !== o2 && n2(o2.call(t4)), e5;
            }
          };
        }, { "../internals/an-object": 10 }], 27: [function(e3, t3, r3) {
          var n2 = e3("../internals/well-known-symbol")("iterator"), s3 = false;
          try {
            var o2 = 0, i2 = { next: function() {
              return { done: !!o2++ };
            }, return: function() {
              s3 = true;
            } };
            i2[n2] = function() {
              return this;
            }, Array.from(i2, function() {
              throw 2;
            });
          } catch (e4) {
          }
          t3.exports = function(e4, t4) {
            if (!t4 && !s3)
              return false;
            var r4 = false;
            try {
              var o3 = {};
              o3[n2] = function() {
                return { next: function() {
                  return { done: r4 = true };
                } };
              }, e4(o3);
            } catch (e5) {
            }
            return r4;
          };
        }, { "../internals/well-known-symbol": 148 }], 28: [function(e3, t3, r3) {
          var o2 = {}.toString;
          t3.exports = function(e4) {
            return o2.call(e4).slice(8, -1);
          };
        }, {}], 29: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-string-tag-support"), n2 = e3("../internals/classof-raw"), s3 = e3("../internals/well-known-symbol")("toStringTag"), i2 = "Arguments" == n2(function() {
            return arguments;
          }());
          t3.exports = o2 ? n2 : function(e4) {
            var t4;
            return void 0 === e4 ? "Undefined" : null === e4 ? "Null" : "string" == typeof (t4 = function(e5, t5) {
              try {
                return e5[t5];
              } catch (e6) {
              }
            }(e4 = Object(e4), s3)) ? t4 : i2 ? n2(e4) : "Object" == (t4 = n2(e4)) && "function" == typeof e4.callee ? "Arguments" : t4;
          };
        }, { "../internals/classof-raw": 28, "../internals/to-string-tag-support": 141, "../internals/well-known-symbol": 148 }], 30: [function(e3, t3, r3) {
          "use strict";
          var u = e3("../internals/object-define-property").f, c = e3("../internals/object-create"), d = e3("../internals/redefine-all"), f = e3("../internals/function-bind-context"), h = e3("../internals/an-instance"), p = e3("../internals/iterate"), i2 = e3("../internals/define-iterator"), a = e3("../internals/set-species"), m = e3("../internals/descriptors"), y = e3("../internals/internal-metadata").fastKey, e3 = e3("../internals/internal-state"), g = e3.set, v = e3.getterFor;
          t3.exports = { getConstructor: function(e4, r4, o2, n2) {
            function s3(e5, t4, r5) {
              var o3, n3 = l(e5), s4 = i3(e5, t4);
              return s4 ? s4.value = r5 : (n3.last = s4 = { index: o3 = y(t4, true), key: t4, value: r5, previous: t4 = n3.last, next: void 0, removed: false }, n3.first || (n3.first = s4), t4 && (t4.next = s4), m ? n3.size++ : e5.size++, "F" !== o3 && (n3.index[o3] = s4)), e5;
            }
            function i3(e5, t4) {
              var r5, e5 = l(e5), o3 = y(t4);
              if ("F" !== o3)
                return e5.index[o3];
              for (r5 = e5.first; r5; r5 = r5.next)
                if (r5.key == t4)
                  return r5;
            }
            var a2 = e4(function(e5, t4) {
              h(e5, a2, r4), g(e5, { type: r4, index: c(null), first: void 0, last: void 0, size: 0 }), m || (e5.size = 0), null != t4 && p(t4, e5[n2], e5, o2);
            }), l = v(r4);
            return d(a2.prototype, { clear: function() {
              for (var e5 = l(this), t4 = e5.index, r5 = e5.first; r5; )
                r5.removed = true, r5.previous && (r5.previous = r5.previous.next = void 0), delete t4[r5.index], r5 = r5.next;
              e5.first = e5.last = void 0, m ? e5.size = 0 : this.size = 0;
            }, delete: function(e5) {
              var t4, r5, o3 = l(this), e5 = i3(this, e5);
              return e5 && (t4 = e5.next, r5 = e5.previous, delete o3.index[e5.index], e5.removed = true, r5 && (r5.next = t4), t4 && (t4.previous = r5), o3.first == e5 && (o3.first = t4), o3.last == e5 && (o3.last = r5), m ? o3.size-- : this.size--), !!e5;
            }, forEach: function(e5) {
              for (var t4, r5 = l(this), o3 = f(e5, 1 < arguments.length ? arguments[1] : void 0, 3); t4 = t4 ? t4.next : r5.first; )
                for (o3(t4.value, t4.key, this); t4 && t4.removed; )
                  t4 = t4.previous;
            }, has: function(e5) {
              return !!i3(this, e5);
            } }), d(a2.prototype, o2 ? { get: function(e5) {
              e5 = i3(this, e5);
              return e5 && e5.value;
            }, set: function(e5, t4) {
              return s3(this, 0 === e5 ? 0 : e5, t4);
            } } : { add: function(e5) {
              return s3(this, e5 = 0 === e5 ? 0 : e5, e5);
            } }), m && u(a2.prototype, "size", { get: function() {
              return l(this).size;
            } }), a2;
          }, setStrong: function(e4, t4, r4) {
            var o2 = t4 + " Iterator", n2 = v(t4), s3 = v(o2);
            i2(e4, t4, function(e5, t5) {
              g(this, { type: o2, target: e5, state: n2(e5), kind: t5, last: void 0 });
            }, function() {
              for (var e5 = s3(this), t5 = e5.kind, r5 = e5.last; r5 && r5.removed; )
                r5 = r5.previous;
              return e5.target && (e5.last = r5 = r5 ? r5.next : e5.state.first) ? "keys" == t5 ? { value: r5.key, done: false } : "values" == t5 ? { value: r5.value, done: false } : { value: [r5.key, r5.value], done: false } : { value: e5.target = void 0, done: true };
            }, r4 ? "entries" : "values", !r4, true), a(t4);
          } };
        }, { "../internals/an-instance": 9, "../internals/define-iterator": 41, "../internals/descriptors": 43, "../internals/function-bind-context": 54, "../internals/internal-metadata": 69, "../internals/internal-state": 70, "../internals/iterate": 77, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/redefine-all": 107, "../internals/set-species": 116 }], 31: [function(e3, t3, r3) {
          "use strict";
          function l(e4) {
            return e4.frozen || (e4.frozen = new o2());
          }
          function o2() {
            this.entries = [];
          }
          function n2(e4, t4) {
            return i2(e4.entries, function(e5) {
              return e5[0] === t4;
            });
          }
          var u = e3("../internals/redefine-all"), c = e3("../internals/internal-metadata").getWeakData, d = e3("../internals/an-object"), f = e3("../internals/is-object"), h = e3("../internals/an-instance"), p = e3("../internals/iterate"), s3 = e3("../internals/array-iteration"), m = e3("../internals/has"), e3 = e3("../internals/internal-state"), y = e3.set, g = e3.getterFor, i2 = s3.find, a = s3.findIndex, v = 0;
          o2.prototype = { get: function(e4) {
            e4 = n2(this, e4);
            if (e4)
              return e4[1];
          }, has: function(e4) {
            return !!n2(this, e4);
          }, set: function(e4, t4) {
            var r4 = n2(this, e4);
            r4 ? r4[1] = t4 : this.entries.push([e4, t4]);
          }, delete: function(t4) {
            var e4 = a(this.entries, function(e5) {
              return e5[0] === t4;
            });
            return ~e4 && this.entries.splice(e4, 1), !!~e4;
          } }, t3.exports = { getConstructor: function(e4, r4, o3, n3) {
            function s4(e5, t4, r5) {
              var o4 = a2(e5), n4 = c(d(t4), true);
              return true === n4 ? l(o4).set(t4, r5) : n4[o4.id] = r5, e5;
            }
            var i3 = e4(function(e5, t4) {
              h(e5, i3, r4), y(e5, { type: r4, id: v++, frozen: void 0 }), null != t4 && p(t4, e5[n3], e5, o3);
            }), a2 = g(r4);
            return u(i3.prototype, { delete: function(e5) {
              var t4, r5 = a2(this);
              return !!f(e5) && (true === (t4 = c(e5)) ? l(r5).delete(e5) : t4 && m(t4, r5.id) && delete t4[r5.id]);
            }, has: function(e5) {
              var t4, r5 = a2(this);
              return !!f(e5) && (true === (t4 = c(e5)) ? l(r5).has(e5) : t4 && m(t4, r5.id));
            } }), u(i3.prototype, o3 ? { get: function(e5) {
              var t4, r5 = a2(this);
              if (f(e5))
                return true === (t4 = c(e5)) ? l(r5).get(e5) : t4 ? t4[r5.id] : void 0;
            }, set: function(e5, t4) {
              return s4(this, e5, t4);
            } } : { add: function(e5) {
              return s4(this, e5, true);
            } }), i3;
          } };
        }, { "../internals/an-instance": 9, "../internals/an-object": 10, "../internals/array-iteration": 19, "../internals/has": 60, "../internals/internal-metadata": 69, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/iterate": 77, "../internals/redefine-all": 107 }], 32: [function(e3, t3, r3) {
          "use strict";
          var y = e3("../internals/export"), g = e3("../internals/global"), v = e3("../internals/is-forced"), b = e3("../internals/redefine"), j = e3("../internals/internal-metadata"), _ = e3("../internals/iterate"), x = e3("../internals/an-instance"), w = e3("../internals/is-object"), S = e3("../internals/fails"), E = e3("../internals/check-correctness-of-iteration"), M = e3("../internals/set-to-string-tag"), T = e3("../internals/inherit-if-required");
          t3.exports = function(r4, e4, t4) {
            function o2(e5) {
              var r5 = h[e5];
              b(h, e5, "add" == e5 ? function(e6) {
                return r5.call(this, 0 === e6 ? 0 : e6), this;
              } : "delete" == e5 ? function(e6) {
                return !(c && !w(e6)) && r5.call(this, 0 === e6 ? 0 : e6);
              } : "get" == e5 ? function(e6) {
                return c && !w(e6) ? void 0 : r5.call(this, 0 === e6 ? 0 : e6);
              } : "has" == e5 ? function(e6) {
                return !(c && !w(e6)) && r5.call(this, 0 === e6 ? 0 : e6);
              } : function(e6, t5) {
                return r5.call(this, 0 === e6 ? 0 : e6, t5), this;
              });
            }
            var n2, s3, i2, a, l, u = -1 !== r4.indexOf("Map"), c = -1 !== r4.indexOf("Weak"), d = u ? "set" : "add", f = g[r4], h = f && f.prototype, p = f, m = {};
            return v(r4, "function" != typeof f || !(c || h.forEach && !S(function() {
              new f().entries().next();
            }))) ? (p = t4.getConstructor(e4, r4, u, d), j.REQUIRED = true) : v(r4, true) && (s3 = (n2 = new p())[d](c ? {} : -0, 1) != n2, i2 = S(function() {
              n2.has(1);
            }), a = E(function(e5) {
              new f(e5);
            }), l = !c && S(function() {
              for (var e5 = new f(), t5 = 5; t5--; )
                e5[d](t5, t5);
              return !e5.has(-0);
            }), a || (((p = e4(function(e5, t5) {
              x(e5, p, r4);
              e5 = T(new f(), e5, p);
              return null != t5 && _(t5, e5[d], e5, u), e5;
            })).prototype = h).constructor = p), (i2 || l) && (o2("delete"), o2("has"), u && o2("get")), (l || s3) && o2(d), c && h.clear && delete h.clear), m[r4] = p, y({ global: true, forced: p != f }, m), M(p, r4), c || t4.setStrong(p, r4, u), p;
          };
        }, { "../internals/an-instance": 9, "../internals/check-correctness-of-iteration": 27, "../internals/export": 50, "../internals/fails": 51, "../internals/global": 59, "../internals/inherit-if-required": 67, "../internals/internal-metadata": 69, "../internals/is-forced": 73, "../internals/is-object": 74, "../internals/iterate": 77, "../internals/redefine": 108, "../internals/set-to-string-tag": 117 }], 33: [function(e3, t3, r3) {
          var a = e3("../internals/has"), l = e3("../internals/own-keys"), u = e3("../internals/object-get-own-property-descriptor"), c = e3("../internals/object-define-property");
          t3.exports = function(e4, t4) {
            for (var r4 = l(t4), o2 = c.f, n2 = u.f, s3 = 0; s3 < r4.length; s3++) {
              var i2 = r4[s3];
              a(e4, i2) || o2(e4, i2, n2(t4, i2));
            }
          };
        }, { "../internals/has": 60, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/own-keys": 103 }], 34: [function(e3, t3, r3) {
          var o2 = e3("../internals/well-known-symbol")("match");
          t3.exports = function(t4) {
            var r4 = /./;
            try {
              "/./"[t4](r4);
            } catch (e4) {
              try {
                return r4[o2] = false, "/./"[t4](r4);
              } catch (e5) {
              }
            }
            return false;
          };
        }, { "../internals/well-known-symbol": 148 }], 35: [function(e3, t3, r3) {
          e3 = e3("../internals/fails");
          t3.exports = !e3(function() {
            function e4() {
            }
            return e4.prototype.constructor = null, Object.getPrototypeOf(new e4()) !== e4.prototype;
          });
        }, { "../internals/fails": 51 }], 36: [function(e3, t3, r3) {
          var s3 = e3("../internals/require-object-coercible"), i2 = /"/g;
          t3.exports = function(e4, t4, r4, o2) {
            var e4 = String(s3(e4)), n2 = "<" + t4;
            return "" !== r4 && (n2 += " " + r4 + '="' + String(o2).replace(i2, "&quot;") + '"'), n2 + ">" + e4 + "</" + t4 + ">";
          };
        }, { "../internals/require-object-coercible": 113 }], 37: [function(e3, t3, r3) {
          "use strict";
          function o2() {
            return this;
          }
          var n2 = e3("../internals/iterators-core").IteratorPrototype, s3 = e3("../internals/object-create"), i2 = e3("../internals/create-property-descriptor"), a = e3("../internals/set-to-string-tag"), l = e3("../internals/iterators");
          t3.exports = function(e4, t4, r4) {
            t4 += " Iterator";
            return e4.prototype = s3(n2, { next: i2(1, r4) }), a(e4, t4, false, true), l[t4] = o2, e4;
          };
        }, { "../internals/create-property-descriptor": 39, "../internals/iterators": 79, "../internals/iterators-core": 78, "../internals/object-create": 90, "../internals/set-to-string-tag": 117 }], 38: [function(e3, t3, r3) {
          var o2 = e3("../internals/descriptors"), n2 = e3("../internals/object-define-property"), s3 = e3("../internals/create-property-descriptor");
          t3.exports = o2 ? function(e4, t4, r4) {
            return n2.f(e4, t4, s3(1, r4));
          } : function(e4, t4, r4) {
            return e4[t4] = r4, e4;
          };
        }, { "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/object-define-property": 92 }], 39: [function(e3, t3, r3) {
          t3.exports = function(e4, t4) {
            return { enumerable: !(1 & e4), configurable: !(2 & e4), writable: !(4 & e4), value: t4 };
          };
        }, {}], 40: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/to-primitive"), n2 = e3("../internals/object-define-property"), s3 = e3("../internals/create-property-descriptor");
          t3.exports = function(e4, t4, r4) {
            t4 = o2(t4);
            t4 in e4 ? n2.f(e4, t4, s3(0, r4)) : e4[t4] = r4;
          };
        }, { "../internals/create-property-descriptor": 39, "../internals/object-define-property": 92, "../internals/to-primitive": 140 }], 41: [function(e3, t3, r3) {
          "use strict";
          function m() {
            return this;
          }
          var y = e3("../internals/export"), g = e3("../internals/create-iterator-constructor"), v = e3("../internals/object-get-prototype-of"), b = e3("../internals/object-set-prototype-of"), j = e3("../internals/set-to-string-tag"), _ = e3("../internals/create-non-enumerable-property"), x = e3("../internals/redefine"), o2 = e3("../internals/well-known-symbol"), w = e3("../internals/is-pure"), S = e3("../internals/iterators"), e3 = e3("../internals/iterators-core"), E = e3.IteratorPrototype, M = e3.BUGGY_SAFARI_ITERATORS, T = o2("iterator"), k = "values", O = "entries";
          t3.exports = function(e4, t4, r4, o3, n2, s3, i2) {
            g(r4, t4, o3);
            function a(e5) {
              if (e5 === n2 && h)
                return h;
              if (!M && e5 in d)
                return d[e5];
              switch (e5) {
                case "keys":
                case k:
                case O:
                  return function() {
                    return new r4(this, e5);
                  };
              }
              return function() {
                return new r4(this);
              };
            }
            var l, u, o3 = t4 + " Iterator", c = false, d = e4.prototype, f = d[T] || d["@@iterator"] || n2 && d[n2], h = !M && f || a(n2), p = "Array" == t4 && d.entries || f;
            if (p && (p = v(p.call(new e4())), E !== Object.prototype && p.next && (w || v(p) === E || (b ? b(p, E) : "function" != typeof p[T] && _(p, T, m)), j(p, o3, true, true), w && (S[o3] = m))), n2 == k && f && f.name !== k && (c = true, h = function() {
              return f.call(this);
            }), w && !i2 || d[T] === h || _(d, T, h), S[t4] = h, n2)
              if (l = { values: a(k), keys: s3 ? h : a("keys"), entries: a(O) }, i2)
                for (u in l)
                  !M && !c && u in d || x(d, u, l[u]);
              else
                y({ target: t4, proto: true, forced: M || c }, l);
            return l;
          };
        }, { "../internals/create-iterator-constructor": 37, "../internals/create-non-enumerable-property": 38, "../internals/export": 50, "../internals/is-pure": 75, "../internals/iterators": 79, "../internals/iterators-core": 78, "../internals/object-get-prototype-of": 97, "../internals/object-set-prototype-of": 101, "../internals/redefine": 108, "../internals/set-to-string-tag": 117, "../internals/well-known-symbol": 148 }], 42: [function(e3, t3, r3) {
          var o2 = e3("../internals/path"), n2 = e3("../internals/has"), s3 = e3("../internals/well-known-symbol-wrapped"), i2 = e3("../internals/object-define-property").f;
          t3.exports = function(e4) {
            var t4 = o2.Symbol || (o2.Symbol = {});
            n2(t4, e4) || i2(t4, e4, { value: s3.f(e4) });
          };
        }, { "../internals/has": 60, "../internals/object-define-property": 92, "../internals/path": 104, "../internals/well-known-symbol-wrapped": 147 }], 43: [function(e3, t3, r3) {
          e3 = e3("../internals/fails");
          t3.exports = !e3(function() {
            return 7 != Object.defineProperty({}, 1, { get: function() {
              return 7;
            } })[1];
          });
        }, { "../internals/fails": 51 }], 44: [function(e3, t3, r3) {
          var o2 = e3("../internals/global"), e3 = e3("../internals/is-object"), n2 = o2.document, s3 = e3(n2) && e3(n2.createElement);
          t3.exports = function(e4) {
            return s3 ? n2.createElement(e4) : {};
          };
        }, { "../internals/global": 59, "../internals/is-object": 74 }], 45: [function(e3, t3, r3) {
          t3.exports = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 };
        }, {}], 46: [function(e3, t3, r3) {
          e3 = e3("../internals/engine-user-agent");
          t3.exports = /(iphone|ipod|ipad).*applewebkit/i.test(e3);
        }, { "../internals/engine-user-agent": 47 }], 47: [function(e3, t3, r3) {
          e3 = e3("../internals/get-built-in");
          t3.exports = e3("navigator", "userAgent") || "";
        }, { "../internals/get-built-in": 56 }], 48: [function(e3, t3, r3) {
          var o2, n2, s3 = e3("../internals/global"), e3 = e3("../internals/engine-user-agent"), s3 = s3.process, s3 = s3 && s3.versions, s3 = s3 && s3.v8;
          s3 ? n2 = (o2 = s3.split("."))[0] + o2[1] : e3 && (!(o2 = e3.match(/Edge\/(\d+)/)) || 74 <= o2[1]) && (o2 = e3.match(/Chrome\/(\d+)/)) && (n2 = o2[1]), t3.exports = n2 && +n2;
        }, { "../internals/engine-user-agent": 47, "../internals/global": 59 }], 49: [function(e3, t3, r3) {
          t3.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
        }, {}], 50: [function(e3, t3, r3) {
          var u = e3("../internals/global"), c = e3("../internals/object-get-own-property-descriptor").f, d = e3("../internals/create-non-enumerable-property"), f = e3("../internals/redefine"), h = e3("../internals/set-global"), p = e3("../internals/copy-constructor-properties"), m = e3("../internals/is-forced");
          t3.exports = function(e4, t4) {
            var r4, o2, n2, s3 = e4.target, i2 = e4.global, a = e4.stat, l = i2 ? u : a ? u[s3] || h(s3, {}) : (u[s3] || {}).prototype;
            if (l)
              for (r4 in t4) {
                if (o2 = t4[r4], n2 = e4.noTargetGet ? (n2 = c(l, r4)) && n2.value : l[r4], !m(i2 ? r4 : s3 + (a ? "." : "#") + r4, e4.forced) && void 0 !== n2) {
                  if (typeof o2 == typeof n2)
                    continue;
                  p(o2, n2);
                }
                (e4.sham || n2 && n2.sham) && d(o2, "sham", true), f(l, r4, o2, e4);
              }
          };
        }, { "../internals/copy-constructor-properties": 33, "../internals/create-non-enumerable-property": 38, "../internals/global": 59, "../internals/is-forced": 73, "../internals/object-get-own-property-descriptor": 93, "../internals/redefine": 108, "../internals/set-global": 115 }], 51: [function(e3, t3, r3) {
          t3.exports = function(e4) {
            try {
              return !!e4();
            } catch (e5) {
              return true;
            }
          };
        }, {}], 52: [function(e3, t3, r3) {
          "use strict";
          e3("../modules/es.regexp.exec");
          var u = e3("../internals/redefine"), c = e3("../internals/fails"), d = e3("../internals/well-known-symbol"), f = e3("../internals/regexp-exec"), h = e3("../internals/create-non-enumerable-property"), p = d("species"), m = !c(function() {
            var e4 = /./;
            return e4.exec = function() {
              var e5 = [];
              return e5.groups = { a: "7" }, e5;
            }, "7" !== "".replace(e4, "$<a>");
          }), y = "$0" === "a".replace(/./, "$0"), e3 = d("replace"), g = !!/./[e3] && "" === /./[e3]("a", "$0"), v = !c(function() {
            var e4 = /(?:)/, t4 = e4.exec, e4 = (e4.exec = function() {
              return t4.apply(this, arguments);
            }, "ab".split(e4));
            return 2 !== e4.length || "a" !== e4[0] || "b" !== e4[1];
          });
          t3.exports = function(r4, e4, t4, o2) {
            var s3, n2, i2 = d(r4), a = !c(function() {
              var e5 = {};
              return e5[i2] = function() {
                return 7;
              }, 7 != ""[r4](e5);
            }), l = a && !c(function() {
              var e5 = false, t5 = /a/;
              return "split" === r4 && ((t5 = { constructor: {} }).constructor[p] = function() {
                return t5;
              }, t5.flags = "", t5[i2] = /./[i2]), t5.exec = function() {
                return e5 = true, null;
              }, t5[i2](""), !e5;
            });
            a && l && ("replace" !== r4 || m && y && !g) && ("split" !== r4 || v) || (s3 = /./[i2], t4 = (l = t4(i2, ""[r4], function(e5, t5, r5, o3, n3) {
              return t5.exec === f ? a && !n3 ? { done: true, value: s3.call(t5, r5, o3) } : { done: true, value: e5.call(r5, t5, o3) } : { done: false };
            }, { REPLACE_KEEPS_$0: y, REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: g }))[0], n2 = l[1], u(String.prototype, r4, t4), u(RegExp.prototype, i2, 2 == e4 ? function(e5, t5) {
              return n2.call(e5, this, t5);
            } : function(e5) {
              return n2.call(e5, this);
            })), o2 && h(RegExp.prototype[i2], "sham", true);
          };
        }, { "../internals/create-non-enumerable-property": 38, "../internals/fails": 51, "../internals/redefine": 108, "../internals/regexp-exec": 110, "../internals/well-known-symbol": 148, "../modules/es.regexp.exec": 185 }], 53: [function(e3, t3, r3) {
          e3 = e3("../internals/fails");
          t3.exports = !e3(function() {
            return Object.isExtensible(Object.preventExtensions({}));
          });
        }, { "../internals/fails": 51 }], 54: [function(e3, t3, r3) {
          var s3 = e3("../internals/a-function");
          t3.exports = function(o2, n2, e4) {
            if (s3(o2), void 0 === n2)
              return o2;
            switch (e4) {
              case 0:
                return function() {
                  return o2.call(n2);
                };
              case 1:
                return function(e5) {
                  return o2.call(n2, e5);
                };
              case 2:
                return function(e5, t4) {
                  return o2.call(n2, e5, t4);
                };
              case 3:
                return function(e5, t4, r4) {
                  return o2.call(n2, e5, t4, r4);
                };
            }
            return function() {
              return o2.apply(n2, arguments);
            };
          };
        }, { "../internals/a-function": 5 }], 55: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/a-function"), n2 = e3("../internals/is-object"), c = [].slice, d = {};
          t3.exports = Function.bind || function(i2) {
            var a = o2(this), l = c.call(arguments, 1), u = function() {
              var e4 = l.concat(c.call(arguments));
              if (this instanceof u) {
                var t4 = a, r4 = e4.length, o3 = e4;
                if (!(r4 in d)) {
                  for (var n3 = [], s3 = 0; s3 < r4; s3++)
                    n3[s3] = "a[" + s3 + "]";
                  d[r4] = Function("C,a", "return new C(" + n3.join(",") + ")");
                }
                return d[r4](t4, o3);
              }
              return a.apply(i2, e4);
            };
            return n2(a.prototype) && (u.prototype = a.prototype), u;
          };
        }, { "../internals/a-function": 5, "../internals/is-object": 74 }], 56: [function(e3, t3, r3) {
          function o2(e4) {
            return "function" == typeof e4 ? e4 : void 0;
          }
          var n2 = e3("../internals/path"), s3 = e3("../internals/global");
          t3.exports = function(e4, t4) {
            return arguments.length < 2 ? o2(n2[e4]) || o2(s3[e4]) : n2[e4] && n2[e4][t4] || s3[e4] && s3[e4][t4];
          };
        }, { "../internals/global": 59, "../internals/path": 104 }], 57: [function(e3, t3, r3) {
          var o2 = e3("../internals/classof"), n2 = e3("../internals/iterators"), s3 = e3("../internals/well-known-symbol")("iterator");
          t3.exports = function(e4) {
            if (null != e4)
              return e4[s3] || e4["@@iterator"] || n2[o2(e4)];
          };
        }, { "../internals/classof": 29, "../internals/iterators": 79, "../internals/well-known-symbol": 148 }], 58: [function(e3, t3, r3) {
          var o2 = e3("../internals/an-object"), n2 = e3("../internals/get-iterator-method");
          t3.exports = function(e4) {
            var t4 = n2(e4);
            if ("function" != typeof t4)
              throw TypeError(String(e4) + " is not iterable");
            return o2(t4.call(e4));
          };
        }, { "../internals/an-object": 10, "../internals/get-iterator-method": 57 }], 59: [function(e3, r3, t3) {
          !function(e4) {
            function t4(e5) {
              return e5 && e5.Math == Math && e5;
            }
            r3.exports = t4("object" == typeof globalThis && globalThis) || t4("object" == typeof window && window) || t4("object" == typeof self && self) || t4("object" == typeof e4 && e4) || Function("return this")();
          }.call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, {}], 60: [function(e3, t3, r3) {
          var o2 = {}.hasOwnProperty;
          t3.exports = function(e4, t4) {
            return o2.call(e4, t4);
          };
        }, {}], 61: [function(e3, t3, r3) {
          t3.exports = {};
        }, {}], 62: [function(e3, t3, r3) {
          var o2 = e3("../internals/global");
          t3.exports = function(e4, t4) {
            var r4 = o2.console;
            r4 && r4.error && (1 === arguments.length ? r4.error(e4) : r4.error(e4, t4));
          };
        }, { "../internals/global": 59 }], 63: [function(e3, t3, r3) {
          e3 = e3("../internals/get-built-in");
          t3.exports = e3("document", "documentElement");
        }, { "../internals/get-built-in": 56 }], 64: [function(e3, t3, r3) {
          var o2 = e3("../internals/descriptors"), n2 = e3("../internals/fails"), s3 = e3("../internals/document-create-element");
          t3.exports = !o2 && !n2(function() {
            return 7 != Object.defineProperty(s3("div"), "a", { get: function() {
              return 7;
            } }).a;
          });
        }, { "../internals/descriptors": 43, "../internals/document-create-element": 44, "../internals/fails": 51 }], 65: [function(e3, t3, r3) {
          var f = Math.abs, h = Math.pow, p = Math.floor, m = Math.log, y = Math.LN2;
          t3.exports = { pack: function(e4, t4, r4) {
            var o2, n2, s3, i2 = new Array(r4), a = 8 * r4 - t4 - 1, r4 = (1 << a) - 1, l = r4 >> 1, u = 23 === t4 ? h(2, -24) - h(2, -77) : 0, c = e4 < 0 || 0 === e4 && 1 / e4 < 0 ? 1 : 0, d = 0;
            for ((e4 = f(e4)) != e4 || e4 === 1 / 0 ? (n2 = e4 != e4 ? 1 : 0, o2 = r4) : (o2 = p(m(e4) / y), e4 * (s3 = h(2, -o2)) < 1 && (o2--, s3 *= 2), 2 <= (e4 += 1 <= o2 + l ? u / s3 : u * h(2, 1 - l)) * s3 && (o2++, s3 /= 2), r4 <= o2 + l ? (n2 = 0, o2 = r4) : 1 <= o2 + l ? (n2 = (e4 * s3 - 1) * h(2, t4), o2 += l) : (n2 = e4 * h(2, l - 1) * h(2, t4), o2 = 0)); 8 <= t4; i2[d++] = 255 & n2, n2 /= 256, t4 -= 8)
              ;
            for (o2 = o2 << t4 | n2, a += t4; 0 < a; i2[d++] = 255 & o2, o2 /= 256, a -= 8)
              ;
            return i2[--d] |= 128 * c, i2;
          }, unpack: function(e4, t4) {
            var r4, o2 = e4.length, n2 = 8 * o2 - t4 - 1, s3 = (1 << n2) - 1, i2 = s3 >> 1, a = n2 - 7, l = o2 - 1, n2 = e4[l--], u = 127 & n2;
            for (n2 >>= 7; 0 < a; u = 256 * u + e4[l], l--, a -= 8)
              ;
            for (r4 = u & (1 << -a) - 1, u >>= -a, a += t4; 0 < a; r4 = 256 * r4 + e4[l], l--, a -= 8)
              ;
            if (0 === u)
              u = 1 - i2;
            else {
              if (u === s3)
                return r4 ? NaN : n2 ? -1 / 0 : 1 / 0;
              r4 += h(2, t4), u -= i2;
            }
            return (n2 ? -1 : 1) * r4 * h(2, u - t4);
          } };
        }, {}], 66: [function(e3, t3, r3) {
          var o2 = e3("../internals/fails"), n2 = e3("../internals/classof-raw"), s3 = "".split;
          t3.exports = o2(function() {
            return !Object("z").propertyIsEnumerable(0);
          }) ? function(e4) {
            return "String" == n2(e4) ? s3.call(e4, "") : Object(e4);
          } : Object;
        }, { "../internals/classof-raw": 28, "../internals/fails": 51 }], 67: [function(e3, t3, r3) {
          var o2 = e3("../internals/is-object"), n2 = e3("../internals/object-set-prototype-of");
          t3.exports = function(e4, t4, r4) {
            return n2 && "function" == typeof (t4 = t4.constructor) && t4 !== r4 && o2(t4 = t4.prototype) && t4 !== r4.prototype && n2(e4, t4), e4;
          };
        }, { "../internals/is-object": 74, "../internals/object-set-prototype-of": 101 }], 68: [function(e3, t3, r3) {
          var e3 = e3("../internals/shared-store"), o2 = Function.toString;
          "function" != typeof e3.inspectSource && (e3.inspectSource = function(e4) {
            return o2.call(e4);
          }), t3.exports = e3.inspectSource;
        }, { "../internals/shared-store": 119 }], 69: [function(e3, t3, r3) {
          function o2(e4) {
            a(e4, c, { value: { objectID: "O" + ++d, weakData: {} } });
          }
          var n2 = e3("../internals/hidden-keys"), s3 = e3("../internals/is-object"), i2 = e3("../internals/has"), a = e3("../internals/object-define-property").f, l = e3("../internals/uid"), u = e3("../internals/freezing"), c = l("meta"), d = 0, f = Object.isExtensible || function() {
            return true;
          }, h = t3.exports = { REQUIRED: false, fastKey: function(e4, t4) {
            if (!s3(e4))
              return "symbol" == typeof e4 ? e4 : ("string" == typeof e4 ? "S" : "P") + e4;
            if (!i2(e4, c)) {
              if (!f(e4))
                return "F";
              if (!t4)
                return "E";
              o2(e4);
            }
            return e4[c].objectID;
          }, getWeakData: function(e4, t4) {
            if (!i2(e4, c)) {
              if (!f(e4))
                return true;
              if (!t4)
                return false;
              o2(e4);
            }
            return e4[c].weakData;
          }, onFreeze: function(e4) {
            return u && h.REQUIRED && f(e4) && !i2(e4, c) && o2(e4), e4;
          } };
          n2[c] = true;
        }, { "../internals/freezing": 53, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/is-object": 74, "../internals/object-define-property": 92, "../internals/uid": 145 }], 70: [function(e3, t3, r3) {
          var o2, n2, s3, i2, a, l, u, c, d = e3("../internals/native-weak-map"), f = e3("../internals/global"), h = e3("../internals/is-object"), p = e3("../internals/create-non-enumerable-property"), m = e3("../internals/has"), y = e3("../internals/shared-key"), e3 = e3("../internals/hidden-keys"), f = f.WeakMap;
          u = d ? (o2 = new f(), n2 = o2.get, s3 = o2.has, i2 = o2.set, a = function(e4, t4) {
            return i2.call(o2, e4, t4), t4;
          }, l = function(e4) {
            return n2.call(o2, e4) || {};
          }, function(e4) {
            return s3.call(o2, e4);
          }) : (e3[c = y("state")] = true, a = function(e4, t4) {
            return p(e4, c, t4), t4;
          }, l = function(e4) {
            return m(e4, c) ? e4[c] : {};
          }, function(e4) {
            return m(e4, c);
          }), t3.exports = { set: a, get: l, has: u, enforce: function(e4) {
            return u(e4) ? l(e4) : a(e4, {});
          }, getterFor: function(t4) {
            return function(e4) {
              if (h(e4) && (e4 = l(e4)).type === t4)
                return e4;
              throw TypeError("Incompatible receiver, " + t4 + " required");
            };
          } };
        }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 59, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/is-object": 74, "../internals/native-weak-map": 85, "../internals/shared-key": 118 }], 71: [function(e3, t3, r3) {
          var o2 = e3("../internals/well-known-symbol"), n2 = e3("../internals/iterators"), s3 = o2("iterator"), i2 = Array.prototype;
          t3.exports = function(e4) {
            return void 0 !== e4 && (n2.Array === e4 || i2[s3] === e4);
          };
        }, { "../internals/iterators": 79, "../internals/well-known-symbol": 148 }], 72: [function(e3, t3, r3) {
          var o2 = e3("../internals/classof-raw");
          t3.exports = Array.isArray || function(e4) {
            return "Array" == o2(e4);
          };
        }, { "../internals/classof-raw": 28 }], 73: [function(e3, t3, r3) {
          function o2(e4, t4) {
            return (e4 = a[i2(e4)]) == u || e4 != l && ("function" == typeof t4 ? n2(t4) : !!t4);
          }
          var n2 = e3("../internals/fails"), s3 = /#|\.prototype\./, i2 = o2.normalize = function(e4) {
            return String(e4).replace(s3, ".").toLowerCase();
          }, a = o2.data = {}, l = o2.NATIVE = "N", u = o2.POLYFILL = "P";
          t3.exports = o2;
        }, { "../internals/fails": 51 }], 74: [function(e3, t3, r3) {
          t3.exports = function(e4) {
            return "object" == typeof e4 ? null !== e4 : "function" == typeof e4;
          };
        }, {}], 75: [function(e3, t3, r3) {
          t3.exports = false;
        }, {}], 76: [function(e3, t3, r3) {
          var o2 = e3("../internals/is-object"), n2 = e3("../internals/classof-raw"), s3 = e3("../internals/well-known-symbol")("match");
          t3.exports = function(e4) {
            var t4;
            return o2(e4) && (void 0 !== (t4 = e4[s3]) ? !!t4 : "RegExp" == n2(e4));
          };
        }, { "../internals/classof-raw": 28, "../internals/is-object": 74, "../internals/well-known-symbol": 148 }], 77: [function(e3, t3, r3) {
          function f(e4, t4) {
            this.stopped = e4, this.result = t4;
          }
          var h = e3("../internals/an-object"), p = e3("../internals/is-array-iterator-method"), m = e3("../internals/to-length"), y = e3("../internals/function-bind-context"), g = e3("../internals/get-iterator-method"), v = e3("../internals/call-with-safe-iteration-closing");
          (t3.exports = function(e4, t4, r4, o2, n2) {
            var s3, i2, a, l, u, c, d = y(t4, r4, o2 ? 2 : 1);
            if (n2)
              s3 = e4;
            else {
              if ("function" != typeof (t4 = g(e4)))
                throw TypeError("Target is not iterable");
              if (p(t4)) {
                for (i2 = 0, a = m(e4.length); i2 < a; i2++)
                  if ((l = o2 ? d(h(c = e4[i2])[0], c[1]) : d(e4[i2])) && l instanceof f)
                    return l;
                return new f(false);
              }
              s3 = t4.call(e4);
            }
            for (u = s3.next; !(c = u.call(s3)).done; )
              if ("object" == typeof (l = v(s3, d, c.value, o2)) && l && l instanceof f)
                return l;
            return new f(false);
          }).stop = function(e4) {
            return new f(true, e4);
          };
        }, { "../internals/an-object": 10, "../internals/call-with-safe-iteration-closing": 26, "../internals/function-bind-context": 54, "../internals/get-iterator-method": 57, "../internals/is-array-iterator-method": 71, "../internals/to-length": 136 }], 78: [function(e3, t3, r3) {
          "use strict";
          var o2, n2, s3 = e3("../internals/object-get-prototype-of"), i2 = e3("../internals/create-non-enumerable-property"), a = e3("../internals/has"), l = e3("../internals/well-known-symbol"), e3 = e3("../internals/is-pure"), l = l("iterator"), u = false;
          [].keys && ("next" in (n2 = [].keys()) ? (s3 = s3(s3(n2))) !== Object.prototype && (o2 = s3) : u = true), null == o2 && (o2 = {}), e3 || a(o2, l) || i2(o2, l, function() {
            return this;
          }), t3.exports = { IteratorPrototype: o2, BUGGY_SAFARI_ITERATORS: u };
        }, { "../internals/create-non-enumerable-property": 38, "../internals/has": 60, "../internals/is-pure": 75, "../internals/object-get-prototype-of": 97, "../internals/well-known-symbol": 148 }], 79: [function(e3, t3, r3) {
          t3.exports = {};
        }, {}], 80: [function(e3, t3, r3) {
          t3.exports = Math.sign || function(e4) {
            return 0 == (e4 = +e4) || e4 != e4 ? e4 : e4 < 0 ? -1 : 1;
          };
        }, {}], 81: [function(e3, t3, r3) {
          var o2, n2, s3, i2, a, l, u, c, d = e3("../internals/global"), f = e3("../internals/object-get-own-property-descriptor").f, h = e3("../internals/classof-raw"), p = e3("../internals/task").set, e3 = e3("../internals/engine-is-ios"), m = d.MutationObserver || d.WebKitMutationObserver, y = d.process, g = d.Promise, v = "process" == h(y), h = f(d, "queueMicrotask"), f = h && h.value;
          f || (o2 = function() {
            var e4, t4;
            for (v && (e4 = y.domain) && e4.exit(); n2; ) {
              t4 = n2.fn, n2 = n2.next;
              try {
                t4();
              } catch (e5) {
                throw n2 ? i2() : s3 = void 0, e5;
              }
            }
            s3 = void 0, e4 && e4.enter();
          }, i2 = v ? function() {
            y.nextTick(o2);
          } : m && !e3 ? (a = true, l = document.createTextNode(""), new m(o2).observe(l, { characterData: true }), function() {
            l.data = a = !a;
          }) : g && g.resolve ? (u = g.resolve(void 0), c = u.then, function() {
            c.call(u, o2);
          }) : function() {
            p.call(d, o2);
          }), t3.exports = f || function(e4) {
            e4 = { fn: e4, next: void 0 };
            s3 && (s3.next = e4), n2 || (n2 = e4, i2()), s3 = e4;
          };
        }, { "../internals/classof-raw": 28, "../internals/engine-is-ios": 46, "../internals/global": 59, "../internals/object-get-own-property-descriptor": 93, "../internals/task": 130 }], 82: [function(e3, t3, r3) {
          e3 = e3("../internals/global");
          t3.exports = e3.Promise;
        }, { "../internals/global": 59 }], 83: [function(e3, t3, r3) {
          e3 = e3("../internals/fails");
          t3.exports = !!Object.getOwnPropertySymbols && !e3(function() {
            return !String(Symbol());
          });
        }, { "../internals/fails": 51 }], 84: [function(e3, t3, r3) {
          var o2 = e3("../internals/fails"), n2 = e3("../internals/well-known-symbol"), s3 = e3("../internals/is-pure"), i2 = n2("iterator");
          t3.exports = !o2(function() {
            var e4 = new URL("b?a=1&b=2&c=3", "http://a"), r4 = e4.searchParams, o3 = "";
            return e4.pathname = "c%20d", r4.forEach(function(e5, t4) {
              r4.delete("b"), o3 += t4 + e5;
            }), s3 && !e4.toJSON || !r4.sort || "http://a/c%20d?a=1&c=3" !== e4.href || "3" !== r4.get("c") || "a=1" !== String(new URLSearchParams("?a=1")) || !r4[i2] || "a" !== new URL("https://a@b").username || "b" !== new URLSearchParams(new URLSearchParams("a=b")).get("a") || "xn--e1aybc" !== new URL("http://\u0442\u0435\u0441\u0442").host || "#%D0%B1" !== new URL("http://a#\u0431").hash || "a1c3" !== o3 || "x" !== new URL("http://x", void 0).host;
          });
        }, { "../internals/fails": 51, "../internals/is-pure": 75, "../internals/well-known-symbol": 148 }], 85: [function(e3, t3, r3) {
          var o2 = e3("../internals/global"), e3 = e3("../internals/inspect-source"), o2 = o2.WeakMap;
          t3.exports = "function" == typeof o2 && /native code/.test(e3(o2));
        }, { "../internals/global": 59, "../internals/inspect-source": 68 }], 86: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            var r4, o3;
            this.promise = new e4(function(e5, t4) {
              if (void 0 !== r4 || void 0 !== o3)
                throw TypeError("Bad Promise constructor");
              r4 = e5, o3 = t4;
            }), this.resolve = n2(r4), this.reject = n2(o3);
          }
          var n2 = e3("../internals/a-function");
          t3.exports.f = function(e4) {
            return new o2(e4);
          };
        }, { "../internals/a-function": 5 }], 87: [function(e3, t3, r3) {
          var o2 = e3("../internals/is-regexp");
          t3.exports = function(e4) {
            if (o2(e4))
              throw TypeError("The method doesn't accept regular expressions");
            return e4;
          };
        }, { "../internals/is-regexp": 76 }], 88: [function(e3, t3, r3) {
          var o2 = e3("../internals/global").isFinite;
          t3.exports = Number.isFinite || function(e4) {
            return "number" == typeof e4 && o2(e4);
          };
        }, { "../internals/global": 59 }], 89: [function(e3, t3, r3) {
          "use strict";
          var f = e3("../internals/descriptors"), o2 = e3("../internals/fails"), h = e3("../internals/object-keys"), p = e3("../internals/object-get-own-property-symbols"), m = e3("../internals/object-property-is-enumerable"), y = e3("../internals/to-object"), g = e3("../internals/indexed-object"), n2 = Object.assign, s3 = Object.defineProperty;
          t3.exports = !n2 || o2(function() {
            var e4, t4, r4, o3;
            return !(!f || 1 === n2({ b: 1 }, n2(s3({}, "a", { enumerable: true, get: function() {
              s3(this, "b", { value: 3, enumerable: false });
            } }), { b: 2 })).b) || (t4 = {}, o3 = "abcdefghijklmnopqrst", (e4 = {})[r4 = Symbol()] = 7, o3.split("").forEach(function(e5) {
              t4[e5] = e5;
            }), 7 != n2({}, e4)[r4] || h(n2({}, t4)).join("") != o3);
          }) ? function(e4, t4) {
            for (var r4 = y(e4), o3 = arguments.length, n3 = 1, s4 = p.f, i2 = m.f; n3 < o3; )
              for (var a, l = g(arguments[n3++]), u = s4 ? h(l).concat(s4(l)) : h(l), c = u.length, d = 0; d < c; )
                a = u[d++], f && !i2.call(l, a) || (r4[a] = l[a]);
            return r4;
          } : n2;
        }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/indexed-object": 66, "../internals/object-get-own-property-symbols": 96, "../internals/object-keys": 99, "../internals/object-property-is-enumerable": 100, "../internals/to-object": 137 }], 90: [function(e3, t3, r3) {
          function o2() {
          }
          var n2, s3 = e3("../internals/an-object"), i2 = e3("../internals/object-define-properties"), a = e3("../internals/enum-bug-keys"), l = e3("../internals/hidden-keys"), u = e3("../internals/html"), c = e3("../internals/document-create-element"), e3 = e3("../internals/shared-key"), d = "prototype", f = "script", h = e3("IE_PROTO"), p = function(e4) {
            return "<" + f + ">" + e4 + "</" + f + ">";
          }, m = function() {
            try {
              n2 = document.domain && new ActiveXObject("htmlfile");
            } catch (e5) {
            }
            m = n2 ? ((e4 = n2).write(p("")), e4.close(), t4 = e4.parentWindow.Object, e4 = null, t4) : (e4 = c("iframe"), t4 = "java" + f + ":", e4.style.display = "none", u.appendChild(e4), e4.src = String(t4), (t4 = e4.contentWindow.document).open(), t4.write(p("document.F=Object")), t4.close(), t4.F);
            for (var e4, t4, r4 = a.length; r4--; )
              delete m[d][a[r4]];
            return m();
          };
          l[h] = true, t3.exports = Object.create || function(e4, t4) {
            var r4;
            return null !== e4 ? (o2[d] = s3(e4), r4 = new o2(), o2[d] = null, r4[h] = e4) : r4 = m(), void 0 === t4 ? r4 : i2(r4, t4);
          };
        }, { "../internals/an-object": 10, "../internals/document-create-element": 44, "../internals/enum-bug-keys": 49, "../internals/hidden-keys": 61, "../internals/html": 63, "../internals/object-define-properties": 91, "../internals/shared-key": 118 }], 91: [function(e3, t3, r3) {
          var o2 = e3("../internals/descriptors"), i2 = e3("../internals/object-define-property"), a = e3("../internals/an-object"), l = e3("../internals/object-keys");
          t3.exports = o2 ? Object.defineProperties : function(e4, t4) {
            a(e4);
            for (var r4, o3 = l(t4), n2 = o3.length, s3 = 0; s3 < n2; )
              i2.f(e4, r4 = o3[s3++], t4[r4]);
            return e4;
          };
        }, { "../internals/an-object": 10, "../internals/descriptors": 43, "../internals/object-define-property": 92, "../internals/object-keys": 99 }], 92: [function(e3, t3, r3) {
          var o2 = e3("../internals/descriptors"), n2 = e3("../internals/ie8-dom-define"), s3 = e3("../internals/an-object"), i2 = e3("../internals/to-primitive"), a = Object.defineProperty;
          r3.f = o2 ? a : function(e4, t4, r4) {
            if (s3(e4), t4 = i2(t4, true), s3(r4), n2)
              try {
                return a(e4, t4, r4);
              } catch (e5) {
              }
            if ("get" in r4 || "set" in r4)
              throw TypeError("Accessors not supported");
            return "value" in r4 && (e4[t4] = r4.value), e4;
          };
        }, { "../internals/an-object": 10, "../internals/descriptors": 43, "../internals/ie8-dom-define": 64, "../internals/to-primitive": 140 }], 93: [function(e3, t3, r3) {
          var o2 = e3("../internals/descriptors"), n2 = e3("../internals/object-property-is-enumerable"), s3 = e3("../internals/create-property-descriptor"), i2 = e3("../internals/to-indexed-object"), a = e3("../internals/to-primitive"), l = e3("../internals/has"), u = e3("../internals/ie8-dom-define"), c = Object.getOwnPropertyDescriptor;
          r3.f = o2 ? c : function(e4, t4) {
            if (e4 = i2(e4), t4 = a(t4, true), u)
              try {
                return c(e4, t4);
              } catch (e5) {
              }
            if (l(e4, t4))
              return s3(!n2.f.call(e4, t4), e4[t4]);
          };
        }, { "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/has": 60, "../internals/ie8-dom-define": 64, "../internals/object-property-is-enumerable": 100, "../internals/to-indexed-object": 134, "../internals/to-primitive": 140 }], 94: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-indexed-object"), n2 = e3("../internals/object-get-own-property-names").f, s3 = {}.toString, i2 = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
          t3.exports.f = function(e4) {
            if (!i2 || "[object Window]" != s3.call(e4))
              return n2(o2(e4));
            try {
              return n2(e4);
            } catch (e5) {
              return i2.slice();
            }
          };
        }, { "../internals/object-get-own-property-names": 95, "../internals/to-indexed-object": 134 }], 95: [function(e3, t3, r3) {
          var o2 = e3("../internals/object-keys-internal"), n2 = e3("../internals/enum-bug-keys").concat("length", "prototype");
          r3.f = Object.getOwnPropertyNames || function(e4) {
            return o2(e4, n2);
          };
        }, { "../internals/enum-bug-keys": 49, "../internals/object-keys-internal": 98 }], 96: [function(e3, t3, r3) {
          r3.f = Object.getOwnPropertySymbols;
        }, {}], 97: [function(e3, t3, r3) {
          var o2 = e3("../internals/has"), n2 = e3("../internals/to-object"), s3 = e3("../internals/shared-key"), e3 = e3("../internals/correct-prototype-getter"), i2 = s3("IE_PROTO"), a = Object.prototype;
          t3.exports = e3 ? Object.getPrototypeOf : function(e4) {
            return e4 = n2(e4), o2(e4, i2) ? e4[i2] : "function" == typeof e4.constructor && e4 instanceof e4.constructor ? e4.constructor.prototype : e4 instanceof Object ? a : null;
          };
        }, { "../internals/correct-prototype-getter": 35, "../internals/has": 60, "../internals/shared-key": 118, "../internals/to-object": 137 }], 98: [function(e3, t3, r3) {
          var i2 = e3("../internals/has"), a = e3("../internals/to-indexed-object"), l = e3("../internals/array-includes").indexOf, u = e3("../internals/hidden-keys");
          t3.exports = function(e4, t4) {
            var r4, o2 = a(e4), n2 = 0, s3 = [];
            for (r4 in o2)
              !i2(u, r4) && i2(o2, r4) && s3.push(r4);
            for (; t4.length > n2; )
              !i2(o2, r4 = t4[n2++]) || ~l(s3, r4) || s3.push(r4);
            return s3;
          };
        }, { "../internals/array-includes": 18, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/to-indexed-object": 134 }], 99: [function(e3, t3, r3) {
          var o2 = e3("../internals/object-keys-internal"), n2 = e3("../internals/enum-bug-keys");
          t3.exports = Object.keys || function(e4) {
            return o2(e4, n2);
          };
        }, { "../internals/enum-bug-keys": 49, "../internals/object-keys-internal": 98 }], 100: [function(e3, t3, r3) {
          "use strict";
          var o2 = {}.propertyIsEnumerable, n2 = Object.getOwnPropertyDescriptor, s3 = n2 && !o2.call({ 1: 2 }, 1);
          r3.f = s3 ? function(e4) {
            e4 = n2(this, e4);
            return !!e4 && e4.enumerable;
          } : o2;
        }, {}], 101: [function(e3, t3, r3) {
          var n2 = e3("../internals/an-object"), s3 = e3("../internals/a-possible-prototype");
          t3.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
            var r4, o2 = false, e4 = {};
            try {
              (r4 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(e4, []), o2 = e4 instanceof Array;
            } catch (e5) {
            }
            return function(e5, t4) {
              return n2(e5), s3(t4), o2 ? r4.call(e5, t4) : e5.__proto__ = t4, e5;
            };
          }() : void 0);
        }, { "../internals/a-possible-prototype": 6, "../internals/an-object": 10 }], 102: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/to-string-tag-support"), n2 = e3("../internals/classof");
          t3.exports = o2 ? {}.toString : function() {
            return "[object " + n2(this) + "]";
          };
        }, { "../internals/classof": 29, "../internals/to-string-tag-support": 141 }], 103: [function(e3, t3, r3) {
          var o2 = e3("../internals/get-built-in"), n2 = e3("../internals/object-get-own-property-names"), s3 = e3("../internals/object-get-own-property-symbols"), i2 = e3("../internals/an-object");
          t3.exports = o2("Reflect", "ownKeys") || function(e4) {
            var t4 = n2.f(i2(e4)), r4 = s3.f;
            return r4 ? t4.concat(r4(e4)) : t4;
          };
        }, { "../internals/an-object": 10, "../internals/get-built-in": 56, "../internals/object-get-own-property-names": 95, "../internals/object-get-own-property-symbols": 96 }], 104: [function(e3, t3, r3) {
          e3 = e3("../internals/global");
          t3.exports = e3;
        }, { "../internals/global": 59 }], 105: [function(e3, t3, r3) {
          t3.exports = function(e4) {
            try {
              return { error: false, value: e4() };
            } catch (e5) {
              return { error: true, value: e5 };
            }
          };
        }, {}], 106: [function(e3, t3, r3) {
          var o2 = e3("../internals/an-object"), n2 = e3("../internals/is-object"), s3 = e3("../internals/new-promise-capability");
          t3.exports = function(e4, t4) {
            return o2(e4), n2(t4) && t4.constructor === e4 ? t4 : ((0, (e4 = s3.f(e4)).resolve)(t4), e4.promise);
          };
        }, { "../internals/an-object": 10, "../internals/is-object": 74, "../internals/new-promise-capability": 86 }], 107: [function(e3, t3, r3) {
          var n2 = e3("../internals/redefine");
          t3.exports = function(e4, t4, r4) {
            for (var o2 in t4)
              n2(e4, o2, t4[o2], r4);
            return e4;
          };
        }, { "../internals/redefine": 108 }], 108: [function(e3, t3, r3) {
          var i2 = e3("../internals/global"), a = e3("../internals/create-non-enumerable-property"), l = e3("../internals/has"), u = e3("../internals/set-global"), o2 = e3("../internals/inspect-source"), e3 = e3("../internals/internal-state"), n2 = e3.get, c = e3.enforce, d = String(String).split("String");
          (t3.exports = function(e4, t4, r4, o3) {
            var n3 = !!o3 && !!o3.unsafe, s3 = !!o3 && !!o3.enumerable, o3 = !!o3 && !!o3.noTargetGet;
            "function" == typeof r4 && ("string" != typeof t4 || l(r4, "name") || a(r4, "name", t4), c(r4).source = d.join("string" == typeof t4 ? t4 : "")), e4 === i2 ? s3 ? e4[t4] = r4 : u(t4, r4) : (n3 ? !o3 && e4[t4] && (s3 = true) : delete e4[t4], s3 ? e4[t4] = r4 : a(e4, t4, r4));
          })(Function.prototype, "toString", function() {
            return "function" == typeof this && n2(this).source || o2(this);
          });
        }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 59, "../internals/has": 60, "../internals/inspect-source": 68, "../internals/internal-state": 70, "../internals/set-global": 115 }], 109: [function(e3, t3, r3) {
          var o2 = e3("./classof-raw"), n2 = e3("./regexp-exec");
          t3.exports = function(e4, t4) {
            var r4 = e4.exec;
            if ("function" == typeof r4) {
              r4 = r4.call(e4, t4);
              if ("object" != typeof r4)
                throw TypeError("RegExp exec method returned something other than an Object or null");
              return r4;
            }
            if ("RegExp" !== o2(e4))
              throw TypeError("RegExp#exec called on incompatible receiver");
            return n2.call(e4, t4);
          };
        }, { "./classof-raw": 28, "./regexp-exec": 110 }], 110: [function(e3, t3, r3) {
          "use strict";
          var o2, n2, d = e3("./regexp-flags"), e3 = e3("./regexp-sticky-helpers"), f = RegExp.prototype.exec, h = String.prototype.replace, s3 = f, p = (o2 = /a/, n2 = /b*/g, f.call(o2, "a"), f.call(n2, "a"), 0 !== o2.lastIndex || 0 !== n2.lastIndex), m = e3.UNSUPPORTED_Y || e3.BROKEN_CARET, y = void 0 !== /()??/.exec("")[1];
          t3.exports = s3 = p || y || m ? function(e4) {
            var t4, r4, o3, n3, s4 = this, i2 = m && s4.sticky, a = d.call(s4), l = s4.source, u = 0, c = e4;
            return i2 && (-1 === (a = a.replace("y", "")).indexOf("g") && (a += "g"), c = String(e4).slice(s4.lastIndex), 0 < s4.lastIndex && (!s4.multiline || s4.multiline && "\n" !== e4[s4.lastIndex - 1]) && (l = "(?: " + l + ")", c = " " + c, u++), r4 = new RegExp("^(?:" + l + ")", a)), y && (r4 = new RegExp("^" + l + "$(?!\\s)", a)), p && (t4 = s4.lastIndex), o3 = f.call(i2 ? r4 : s4, c), i2 ? o3 ? (o3.input = o3.input.slice(u), o3[0] = o3[0].slice(u), o3.index = s4.lastIndex, s4.lastIndex += o3[0].length) : s4.lastIndex = 0 : p && o3 && (s4.lastIndex = s4.global ? o3.index + o3[0].length : t4), y && o3 && 1 < o3.length && h.call(o3[0], r4, function() {
              for (n3 = 1; n3 < arguments.length - 2; n3++)
                void 0 === arguments[n3] && (o3[n3] = void 0);
            }), o3;
          } : s3;
        }, { "./regexp-flags": 111, "./regexp-sticky-helpers": 112 }], 111: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/an-object");
          t3.exports = function() {
            var e4 = o2(this), t4 = "";
            return e4.global && (t4 += "g"), e4.ignoreCase && (t4 += "i"), e4.multiline && (t4 += "m"), e4.dotAll && (t4 += "s"), e4.unicode && (t4 += "u"), e4.sticky && (t4 += "y"), t4;
          };
        }, { "../internals/an-object": 10 }], 112: [function(e3, t3, r3) {
          "use strict";
          e3 = e3("./fails");
          function o2(e4, t4) {
            return RegExp(e4, t4);
          }
          r3.UNSUPPORTED_Y = e3(function() {
            var e4 = o2("a", "y");
            return e4.lastIndex = 2, null != e4.exec("abcd");
          }), r3.BROKEN_CARET = e3(function() {
            var e4 = o2("^r", "gy");
            return e4.lastIndex = 2, null != e4.exec("str");
          });
        }, { "./fails": 51 }], 113: [function(e3, t3, r3) {
          t3.exports = function(e4) {
            if (null == e4)
              throw TypeError("Can't call method on " + e4);
            return e4;
          };
        }, {}], 114: [function(e3, t3, r3) {
          t3.exports = Object.is || function(e4, t4) {
            return e4 === t4 ? 0 !== e4 || 1 / e4 == 1 / t4 : e4 != e4 && t4 != t4;
          };
        }, {}], 115: [function(e3, t3, r3) {
          var o2 = e3("../internals/global"), n2 = e3("../internals/create-non-enumerable-property");
          t3.exports = function(t4, r4) {
            try {
              n2(o2, t4, r4);
            } catch (e4) {
              o2[t4] = r4;
            }
            return r4;
          };
        }, { "../internals/create-non-enumerable-property": 38, "../internals/global": 59 }], 116: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/get-built-in"), n2 = e3("../internals/object-define-property"), s3 = e3("../internals/well-known-symbol"), i2 = e3("../internals/descriptors"), a = s3("species");
          t3.exports = function(e4) {
            var e4 = o2(e4), t4 = n2.f;
            i2 && e4 && !e4[a] && t4(e4, a, { configurable: true, get: function() {
              return this;
            } });
          };
        }, { "../internals/descriptors": 43, "../internals/get-built-in": 56, "../internals/object-define-property": 92, "../internals/well-known-symbol": 148 }], 117: [function(e3, t3, r3) {
          var o2 = e3("../internals/object-define-property").f, n2 = e3("../internals/has"), s3 = e3("../internals/well-known-symbol")("toStringTag");
          t3.exports = function(e4, t4, r4) {
            e4 && !n2(e4 = r4 ? e4 : e4.prototype, s3) && o2(e4, s3, { configurable: true, value: t4 });
          };
        }, { "../internals/has": 60, "../internals/object-define-property": 92, "../internals/well-known-symbol": 148 }], 118: [function(e3, t3, r3) {
          var o2 = e3("../internals/shared"), n2 = e3("../internals/uid"), s3 = o2("keys");
          t3.exports = function(e4) {
            return s3[e4] || (s3[e4] = n2(e4));
          };
        }, { "../internals/shared": 120, "../internals/uid": 145 }], 119: [function(e3, t3, r3) {
          var o2 = e3("../internals/global"), e3 = e3("../internals/set-global"), n2 = "__core-js_shared__", o2 = o2[n2] || e3(n2, {});
          t3.exports = o2;
        }, { "../internals/global": 59, "../internals/set-global": 115 }], 120: [function(e3, t3, r3) {
          var o2 = e3("../internals/is-pure"), n2 = e3("../internals/shared-store");
          (t3.exports = function(e4, t4) {
            return n2[e4] || (n2[e4] = void 0 !== t4 ? t4 : {});
          })("versions", []).push({ version: "3.6.5", mode: o2 ? "pure" : "global", copyright: "\xA9 2020 Denis Pushkarev (zloirock.ru)" });
        }, { "../internals/is-pure": 75, "../internals/shared-store": 119 }], 121: [function(e3, t3, r3) {
          var o2 = e3("../internals/an-object"), n2 = e3("../internals/a-function"), s3 = e3("../internals/well-known-symbol")("species");
          t3.exports = function(e4, t4) {
            var e4 = o2(e4).constructor;
            return void 0 === e4 || null == (e4 = o2(e4)[s3]) ? t4 : n2(e4);
          };
        }, { "../internals/a-function": 5, "../internals/an-object": 10, "../internals/well-known-symbol": 148 }], 122: [function(e3, t3, r3) {
          var o2 = e3("../internals/fails");
          t3.exports = function(t4) {
            return o2(function() {
              var e4 = ""[t4]('"');
              return e4 !== e4.toLowerCase() || 3 < e4.split('"').length;
            });
          };
        }, { "../internals/fails": 51 }], 123: [function(e3, t3, r3) {
          function o2(n2) {
            return function(e4, t4) {
              var r4, e4 = String(i2(e4)), t4 = s3(t4), o3 = e4.length;
              return t4 < 0 || o3 <= t4 ? n2 ? "" : void 0 : (r4 = e4.charCodeAt(t4)) < 55296 || 56319 < r4 || t4 + 1 === o3 || (o3 = e4.charCodeAt(t4 + 1)) < 56320 || 57343 < o3 ? n2 ? e4.charAt(t4) : r4 : n2 ? e4.slice(t4, t4 + 2) : o3 - 56320 + (r4 - 55296 << 10) + 65536;
            };
          }
          var s3 = e3("../internals/to-integer"), i2 = e3("../internals/require-object-coercible");
          t3.exports = { codeAt: o2(false), charAt: o2(true) };
        }, { "../internals/require-object-coercible": 113, "../internals/to-integer": 135 }], 124: [function(e3, t3, r3) {
          e3 = e3("../internals/engine-user-agent");
          t3.exports = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(e3);
        }, { "../internals/engine-user-agent": 47 }], 125: [function(e3, t3, r3) {
          function o2(n2) {
            return function(e4, t4, r4) {
              var e4 = String(a(e4)), o3 = e4.length, r4 = void 0 === r4 ? " " : String(r4), t4 = s3(t4);
              return t4 <= o3 || "" == r4 ? e4 : ((o3 = i2.call(r4, l((t4 = t4 - o3) / r4.length))).length > t4 && (o3 = o3.slice(0, t4)), n2 ? e4 + o3 : o3 + e4);
            };
          }
          var s3 = e3("../internals/to-length"), i2 = e3("../internals/string-repeat"), a = e3("../internals/require-object-coercible"), l = Math.ceil;
          t3.exports = { start: o2(false), end: o2(true) };
        }, { "../internals/require-object-coercible": 113, "../internals/string-repeat": 127, "../internals/to-length": 136 }], 126: [function(e3, t3, r3) {
          "use strict";
          function g(e4) {
            return e4 + 22 + 75 * (e4 < 26);
          }
          function s3(e4) {
            var t4, r4 = [], o2 = (e4 = function(e5) {
              for (var t5 = [], r5 = 0, o3 = e5.length; r5 < o3; ) {
                var n3, s5 = e5.charCodeAt(r5++);
                55296 <= s5 && s5 <= 56319 && r5 < o3 ? 56320 == (64512 & (n3 = e5.charCodeAt(r5++))) ? t5.push(((1023 & s5) << 10) + (1023 & n3) + 65536) : (t5.push(s5), r5--) : t5.push(s5);
              }
              return t5;
            }(e4)).length, n2 = 128, s4 = 0, i3 = 72;
            for (c = 0; c < e4.length; c++)
              (t4 = e4[c]) < 128 && r4.push(M(t4));
            var a2 = r4.length, l = a2;
            for (a2 && r4.push("-"); l < o2; ) {
              for (var u = v, c = 0; c < e4.length; c++)
                n2 <= (t4 = e4[c]) && t4 < u && (u = t4);
              var d = l + 1;
              if (u - n2 > E((v - s4) / d))
                throw RangeError(w);
              for (s4 += (u - n2) * d, n2 = u, c = 0; c < e4.length; c++) {
                if ((t4 = e4[c]) < n2 && ++s4 > v)
                  throw RangeError(w);
                if (t4 == n2) {
                  for (var f = s4, h = b; ; h += b) {
                    var p = h <= i3 ? 1 : i3 + j <= h ? j : h - i3;
                    if (f < p)
                      break;
                    var m = f - p, y = b - p;
                    r4.push(M(g(p + m % y))), f = E(m / y);
                  }
                  r4.push(M(g(f))), i3 = function(e5, t5, r5) {
                    var o3 = 0;
                    for (e5 = r5 ? E(e5 / x) : e5 >> 1, e5 += E(e5 / t5); S * j >> 1 < e5; o3 += b)
                      e5 = E(e5 / S);
                    return E(o3 + (S + 1) * e5 / (e5 + _));
                  }(s4, d, l == a2), s4 = 0, ++l;
                }
              }
              ++s4, ++n2;
            }
            return r4.join("");
          }
          var v = 2147483647, b = 36, j = 26, _ = 38, x = 700, i2 = /[^\0-\u007E]/, a = /[.\u3002\uFF0E\uFF61]/g, w = "Overflow: input needs wider integers to process", S = b - 1, E = Math.floor, M = String.fromCharCode;
          t3.exports = function(e4) {
            for (var t4, r4 = [], o2 = e4.toLowerCase().replace(a, ".").split("."), n2 = 0; n2 < o2.length; n2++)
              t4 = o2[n2], r4.push(i2.test(t4) ? "xn--" + s3(t4) : t4);
            return r4.join(".");
          };
        }, {}], 127: [function(e3, t3, r3) {
          "use strict";
          var n2 = e3("../internals/to-integer"), s3 = e3("../internals/require-object-coercible");
          t3.exports = "".repeat || function(e4) {
            var t4 = String(s3(this)), r4 = "", o2 = n2(e4);
            if (o2 < 0 || o2 == 1 / 0)
              throw RangeError("Wrong number of repetitions");
            for (; 0 < o2; (o2 >>>= 1) && (t4 += t4))
              1 & o2 && (r4 += t4);
            return r4;
          };
        }, { "../internals/require-object-coercible": 113, "../internals/to-integer": 135 }], 128: [function(e3, t3, r3) {
          var o2 = e3("../internals/fails"), n2 = e3("../internals/whitespaces");
          t3.exports = function(e4) {
            return o2(function() {
              return !!n2[e4]() || "\u200B\x85\u180E" != "\u200B\x85\u180E"[e4]() || n2[e4].name !== e4;
            });
          };
        }, { "../internals/fails": 51, "../internals/whitespaces": 149 }], 129: [function(e3, t3, r3) {
          function o2(t4) {
            return function(e4) {
              e4 = String(n2(e4));
              return 1 & t4 && (e4 = e4.replace(s3, "")), e4 = 2 & t4 ? e4.replace(i2, "") : e4;
            };
          }
          var n2 = e3("../internals/require-object-coercible"), e3 = "[" + e3("../internals/whitespaces") + "]", s3 = RegExp("^" + e3 + e3 + "*"), i2 = RegExp(e3 + e3 + "*$");
          t3.exports = { start: o2(1), end: o2(2), trim: o2(3) };
        }, { "../internals/require-object-coercible": 113, "../internals/whitespaces": 149 }], 130: [function(e3, t3, r3) {
          function o2(e4) {
            return function() {
              x(e4);
            };
          }
          function n2(e4) {
            x(e4.data);
          }
          function s3(e4) {
            a.postMessage(e4 + "", h.protocol + "//" + h.host);
          }
          var i2, a = e3("../internals/global"), l = e3("../internals/fails"), u = e3("../internals/classof-raw"), c = e3("../internals/function-bind-context"), d = e3("../internals/html"), f = e3("../internals/document-create-element"), e3 = e3("../internals/engine-is-ios"), h = a.location, p = a.setImmediate, m = a.clearImmediate, y = a.process, g = a.MessageChannel, v = a.Dispatch, b = 0, j = {}, _ = "onreadystatechange", x = function(e4) {
            var t4;
            j.hasOwnProperty(e4) && (t4 = j[e4], delete j[e4], t4());
          };
          p && m || (p = function(e4) {
            for (var t4 = [], r4 = 1; r4 < arguments.length; )
              t4.push(arguments[r4++]);
            return j[++b] = function() {
              ("function" == typeof e4 ? e4 : Function(e4)).apply(void 0, t4);
            }, i2(b), b;
          }, m = function(e4) {
            delete j[e4];
          }, "process" == u(y) ? i2 = function(e4) {
            y.nextTick(o2(e4));
          } : v && v.now ? i2 = function(e4) {
            v.now(o2(e4));
          } : g && !e3 ? (e3 = (u = new g()).port2, u.port1.onmessage = n2, i2 = c(e3.postMessage, e3, 1)) : !a.addEventListener || "function" != typeof postMessage || a.importScripts || l(s3) || "file:" === h.protocol ? i2 = _ in f("script") ? function(e4) {
            d.appendChild(f("script"))[_] = function() {
              d.removeChild(this), x(e4);
            };
          } : function(e4) {
            setTimeout(o2(e4), 0);
          } : (i2 = s3, a.addEventListener("message", n2, false))), t3.exports = { set: p, clear: m };
        }, { "../internals/classof-raw": 28, "../internals/document-create-element": 44, "../internals/engine-is-ios": 46, "../internals/fails": 51, "../internals/function-bind-context": 54, "../internals/global": 59, "../internals/html": 63 }], 131: [function(e3, t3, r3) {
          var o2 = e3("../internals/classof-raw");
          t3.exports = function(e4) {
            if ("number" != typeof e4 && "Number" != o2(e4))
              throw TypeError("Incorrect invocation");
            return +e4;
          };
        }, { "../internals/classof-raw": 28 }], 132: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-integer"), n2 = Math.max, s3 = Math.min;
          t3.exports = function(e4, t4) {
            e4 = o2(e4);
            return e4 < 0 ? n2(e4 + t4, 0) : s3(e4, t4);
          };
        }, { "../internals/to-integer": 135 }], 133: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-integer"), n2 = e3("../internals/to-length");
          t3.exports = function(e4) {
            if (void 0 === e4)
              return 0;
            var e4 = o2(e4), t4 = n2(e4);
            if (e4 !== t4)
              throw RangeError("Wrong length or index");
            return t4;
          };
        }, { "../internals/to-integer": 135, "../internals/to-length": 136 }], 134: [function(e3, t3, r3) {
          var o2 = e3("../internals/indexed-object"), n2 = e3("../internals/require-object-coercible");
          t3.exports = function(e4) {
            return o2(n2(e4));
          };
        }, { "../internals/indexed-object": 66, "../internals/require-object-coercible": 113 }], 135: [function(e3, t3, r3) {
          var o2 = Math.ceil, n2 = Math.floor;
          t3.exports = function(e4) {
            return isNaN(e4 = +e4) ? 0 : (0 < e4 ? n2 : o2)(e4);
          };
        }, {}], 136: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-integer"), n2 = Math.min;
          t3.exports = function(e4) {
            return 0 < e4 ? n2(o2(e4), 9007199254740991) : 0;
          };
        }, { "../internals/to-integer": 135 }], 137: [function(e3, t3, r3) {
          var o2 = e3("../internals/require-object-coercible");
          t3.exports = function(e4) {
            return Object(o2(e4));
          };
        }, { "../internals/require-object-coercible": 113 }], 138: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-positive-integer");
          t3.exports = function(e4, t4) {
            e4 = o2(e4);
            if (e4 % t4)
              throw RangeError("Wrong offset");
            return e4;
          };
        }, { "../internals/to-positive-integer": 139 }], 139: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-integer");
          t3.exports = function(e4) {
            e4 = o2(e4);
            if (e4 < 0)
              throw RangeError("The argument can't be less than 0");
            return e4;
          };
        }, { "../internals/to-integer": 135 }], 140: [function(e3, t3, r3) {
          var n2 = e3("../internals/is-object");
          t3.exports = function(e4, t4) {
            if (!n2(e4))
              return e4;
            var r4, o2;
            if (t4 && "function" == typeof (r4 = e4.toString) && !n2(o2 = r4.call(e4)) || "function" == typeof (r4 = e4.valueOf) && !n2(o2 = r4.call(e4)) || !t4 && "function" == typeof (r4 = e4.toString) && !n2(o2 = r4.call(e4)))
              return o2;
            throw TypeError("Can't convert object to primitive value");
          };
        }, { "../internals/is-object": 74 }], 141: [function(e3, t3, r3) {
          var o2 = {};
          o2[e3("../internals/well-known-symbol")("toStringTag")] = "z", t3.exports = "[object z]" === String(o2);
        }, { "../internals/well-known-symbol": 148 }], 142: [function(e3, t3, D) {
          "use strict";
          function h(e4, t4) {
            for (var r4 = 0, o3 = t4.length, n3 = new (Q(e4))(o3); r4 < o3; )
              n3[r4] = t4[r4++];
            return n3;
          }
          function r3(e4, t4) {
            M(e4, t4, { get: function() {
              return E(this)[t4];
            } });
          }
          function p(e4) {
            return e4 instanceof k || "ArrayBuffer" == (e4 = B(e4)) || "SharedArrayBuffer" == e4;
          }
          function o2(e4, t4) {
            return L(e4) && "symbol" != typeof t4 && t4 in e4 && String(+t4) == String(t4);
          }
          function n2(e4, t4) {
            return o2(e4, t4 = d(t4, true)) ? U(2, e4[t4]) : X(e4, t4);
          }
          function s3(e4, t4, r4) {
            return !(o2(e4, t4 = d(t4, true)) && b(r4) && f(r4, "value")) || f(r4, "get") || f(r4, "set") || r4.configurable || f(r4, "writable") && !r4.writable || f(r4, "enumerable") && !r4.enumerable ? M(e4, t4, r4) : (e4[t4] = r4.value, e4);
          }
          var a = e3("../internals/export"), l = e3("../internals/global"), i2 = e3("../internals/descriptors"), F = e3("../internals/typed-array-constructors-require-wrappers"), u = e3("../internals/array-buffer-view-core"), c = e3("../internals/array-buffer"), m = e3("../internals/an-instance"), U = e3("../internals/create-property-descriptor"), y = e3("../internals/create-non-enumerable-property"), N = e3("../internals/to-length"), g = e3("../internals/to-index"), v = e3("../internals/to-offset"), d = e3("../internals/to-primitive"), f = e3("../internals/has"), B = e3("../internals/classof"), b = e3("../internals/is-object"), G = e3("../internals/object-create"), j = e3("../internals/object-set-prototype-of"), V = e3("../internals/object-get-own-property-names").f, _ = e3("../internals/typed-array-from"), z = e3("../internals/array-iteration").forEach, H = e3("../internals/set-species"), x = e3("../internals/object-define-property"), w = e3("../internals/object-get-own-property-descriptor"), S = e3("../internals/internal-state"), W = e3("../internals/inherit-if-required"), E = S.get, q = S.set, M = x.f, X = w.f, Y = Math.round, T = l.RangeError, k = c.ArrayBuffer, Z = c.DataView, O = u.NATIVE_ARRAY_BUFFER_VIEWS, C = u.TYPED_ARRAY_TAG, A = u.TypedArray, P = u.TypedArrayPrototype, Q = u.aTypedArrayConstructor, L = u.isTypedArray, R = "BYTES_PER_ELEMENT", I = "Wrong length";
          i2 ? (O || (w.f = n2, x.f = s3, r3(P, "buffer"), r3(P, "byteOffset"), r3(P, "byteLength"), r3(P, "length")), a({ target: "Object", stat: true, forced: !O }, { getOwnPropertyDescriptor: n2, defineProperty: s3 }), t3.exports = function(e4, t4, n3) {
            function u2(e5, o4) {
              M(e5, o4, { get: function() {
                var e6 = this, t5 = o4;
                return (e6 = E(e6)).view[r4](t5 * c2 + e6.byteOffset, true);
              }, set: function(e6) {
                var t5 = this, r5 = o4;
                t5 = E(t5), n3 && (e6 = (e6 = Y(e6)) < 0 ? 0 : 255 < e6 ? 255 : 255 & e6), t5.view[s4](r5 * c2 + t5.byteOffset, e6, true);
              }, enumerable: true });
            }
            var c2 = e4.match(/\d+$/)[0] / 8, d2 = e4 + (n3 ? "Clamped" : "") + "Array", r4 = "get" + e4, s4 = "set" + e4, i3 = l[d2], f2 = i3, e4 = f2 && f2.prototype, o3 = {};
            O ? F && (f2 = t4(function(e5, t5, r5, o4) {
              return m(e5, f2, d2), W(b(t5) ? p(t5) ? void 0 !== o4 ? new i3(t5, v(r5, c2), o4) : void 0 !== r5 ? new i3(t5, v(r5, c2)) : new i3(t5) : L(t5) ? h(f2, t5) : _.call(f2, t5) : new i3(g(t5)), e5, f2);
            }), j && j(f2, A), z(V(i3), function(e5) {
              e5 in f2 || y(f2, e5, i3[e5]);
            }), f2.prototype = e4) : (f2 = t4(function(e5, t5, r5, o4) {
              m(e5, f2, d2);
              var n4, s5, i4 = 0, a2 = 0;
              if (b(t5)) {
                if (!p(t5))
                  return L(t5) ? h(f2, t5) : _.call(f2, t5);
                var l2 = t5, a2 = v(r5, c2), r5 = t5.byteLength;
                if (void 0 === o4) {
                  if (r5 % c2)
                    throw T(I);
                  if ((n4 = r5 - a2) < 0)
                    throw T(I);
                } else if (r5 < (n4 = N(o4) * c2) + a2)
                  throw T(I);
                s5 = n4 / c2;
              } else
                s5 = g(t5), l2 = new k(n4 = s5 * c2);
              for (q(e5, { buffer: l2, byteOffset: a2, byteLength: n4, length: s5, view: new Z(l2) }); i4 < s5; )
                u2(e5, i4++);
            }), j && j(f2, A), e4 = f2.prototype = G(P)), e4.constructor !== f2 && y(e4, "constructor", f2), C && y(e4, C, d2), o3[d2] = f2, a({ global: true, forced: f2 != i3, sham: !O }, o3), R in f2 || y(f2, R, c2), R in e4 || y(e4, R, c2), H(d2);
          }) : t3.exports = function() {
          };
        }, { "../internals/an-instance": 9, "../internals/array-buffer": 13, "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/classof": 29, "../internals/create-non-enumerable-property": 38, "../internals/create-property-descriptor": 39, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 59, "../internals/has": 60, "../internals/inherit-if-required": 67, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-own-property-names": 95, "../internals/object-set-prototype-of": 101, "../internals/set-species": 116, "../internals/to-index": 133, "../internals/to-length": 136, "../internals/to-offset": 138, "../internals/to-primitive": 140, "../internals/typed-array-constructors-require-wrappers": 143, "../internals/typed-array-from": 144 }], 143: [function(e3, t3, r3) {
          var o2 = e3("../internals/global"), n2 = e3("../internals/fails"), s3 = e3("../internals/check-correctness-of-iteration"), e3 = e3("../internals/array-buffer-view-core").NATIVE_ARRAY_BUFFER_VIEWS, i2 = o2.ArrayBuffer, a = o2.Int8Array;
          t3.exports = !e3 || !n2(function() {
            a(1);
          }) || !n2(function() {
            new a(-1);
          }) || !s3(function(e4) {
            new a(), new a(null), new a(1.5), new a(e4);
          }, true) || n2(function() {
            return 1 !== new a(new i2(2), 1, void 0).length;
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/check-correctness-of-iteration": 27, "../internals/fails": 51, "../internals/global": 59 }], 144: [function(e3, t3, r3) {
          var f = e3("../internals/to-object"), h = e3("../internals/to-length"), p = e3("../internals/get-iterator-method"), m = e3("../internals/is-array-iterator-method"), y = e3("../internals/function-bind-context"), g = e3("../internals/array-buffer-view-core").aTypedArrayConstructor;
          t3.exports = function(e4) {
            var t4, r4, o2, n2, s3, i2, a = f(e4), l = arguments.length, u = 1 < l ? arguments[1] : void 0, c = void 0 !== u, d = p(a);
            if (null != d && !m(d))
              for (i2 = (s3 = d.call(a)).next, a = []; !(n2 = i2.call(s3)).done; )
                a.push(n2.value);
            for (c && 2 < l && (u = y(u, arguments[2], 2)), r4 = h(a.length), o2 = new (g(this))(r4), t4 = 0; t4 < r4; t4++)
              o2[t4] = c ? u(a[t4], t4) : a[t4];
            return o2;
          };
        }, { "../internals/array-buffer-view-core": 12, "../internals/function-bind-context": 54, "../internals/get-iterator-method": 57, "../internals/is-array-iterator-method": 71, "../internals/to-length": 136, "../internals/to-object": 137 }], 145: [function(e3, t3, r3) {
          var o2 = 0, n2 = Math.random();
          t3.exports = function(e4) {
            return "Symbol(" + String(void 0 === e4 ? "" : e4) + ")_" + (++o2 + n2).toString(36);
          };
        }, {}], 146: [function(e3, t3, r3) {
          e3 = e3("../internals/native-symbol");
          t3.exports = e3 && !Symbol.sham && "symbol" == typeof Symbol.iterator;
        }, { "../internals/native-symbol": 83 }], 147: [function(e3, t3, r3) {
          e3 = e3("../internals/well-known-symbol");
          r3.f = e3;
        }, { "../internals/well-known-symbol": 148 }], 148: [function(e3, t3, r3) {
          var o2 = e3("../internals/global"), n2 = e3("../internals/shared"), s3 = e3("../internals/has"), i2 = e3("../internals/uid"), a = e3("../internals/native-symbol"), e3 = e3("../internals/use-symbol-as-uid"), l = n2("wks"), u = o2.Symbol, c = e3 ? u : u && u.withoutSetter || i2;
          t3.exports = function(e4) {
            return s3(l, e4) || (a && s3(u, e4) ? l[e4] = u[e4] : l[e4] = c("Symbol." + e4)), l[e4];
          };
        }, { "../internals/global": 59, "../internals/has": 60, "../internals/native-symbol": 83, "../internals/shared": 120, "../internals/uid": 145, "../internals/use-symbol-as-uid": 146 }], 149: [function(e3, t3, r3) {
          t3.exports = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
        }, {}], 150: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/global"), s3 = e3("../internals/array-buffer"), e3 = e3("../internals/set-species"), i2 = "ArrayBuffer", s3 = s3[i2];
          o2({ global: true, forced: n2[i2] !== s3 }, { ArrayBuffer: s3 }), e3(i2);
        }, { "../internals/array-buffer": 13, "../internals/export": 50, "../internals/global": 59, "../internals/set-species": 116 }], 151: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/fails"), d = e3("../internals/is-array"), f = e3("../internals/is-object"), h = e3("../internals/to-object"), p = e3("../internals/to-length"), m = e3("../internals/create-property"), y = e3("../internals/array-species-create"), s3 = e3("../internals/array-method-has-species-support"), i2 = e3("../internals/well-known-symbol"), e3 = e3("../internals/engine-v8-version"), g = i2("isConcatSpreadable"), v = 9007199254740991, b = "Maximum allowed index exceeded", i2 = 51 <= e3 || !n2(function() {
            var e4 = [];
            return e4[g] = false, e4.concat()[0] !== e4;
          }), e3 = s3("concat");
          o2({ target: "Array", proto: true, forced: !i2 || !e3 }, { concat: function(e4) {
            for (var t4, r4, o3, n3, s4, i3 = h(this), a = y(i3, 0), l = 0, u = -1, c = arguments.length; u < c; u++)
              if (s4 = void 0, !f(n3 = o3 = -1 === u ? i3 : arguments[u]) || (void 0 !== (s4 = n3[g]) ? !s4 : !d(n3))) {
                if (v <= l)
                  throw TypeError(b);
                m(a, l++, o3);
              } else {
                if (r4 = p(o3.length), v < l + r4)
                  throw TypeError(b);
                for (t4 = 0; t4 < r4; t4++, l++)
                  t4 in o3 && m(a, l, o3[t4]);
              }
            return a.length = l, a;
          } });
        }, { "../internals/array-method-has-species-support": 21, "../internals/array-species-create": 25, "../internals/create-property": 40, "../internals/engine-v8-version": 48, "../internals/export": 50, "../internals/fails": 51, "../internals/is-array": 72, "../internals/is-object": 74, "../internals/to-length": 136, "../internals/to-object": 137, "../internals/well-known-symbol": 148 }], 152: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-copy-within"), e3 = e3("../internals/add-to-unscopables");
          o2({ target: "Array", proto: true }, { copyWithin: n2 }), e3("copyWithin");
        }, { "../internals/add-to-unscopables": 7, "../internals/array-copy-within": 14, "../internals/export": 50 }], 153: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-iteration").every, s3 = e3("../internals/array-method-is-strict"), e3 = e3("../internals/array-method-uses-to-length"), s3 = s3("every"), e3 = e3("every");
          o2({ target: "Array", proto: true, forced: !s3 || !e3 }, { every: function(e4) {
            return n2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          } });
        }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 154: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-fill"), e3 = e3("../internals/add-to-unscopables");
          o2({ target: "Array", proto: true }, { fill: n2 }), e3("fill");
        }, { "../internals/add-to-unscopables": 7, "../internals/array-fill": 15, "../internals/export": 50 }], 155: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-iteration").filter, s3 = e3("../internals/array-method-has-species-support"), e3 = e3("../internals/array-method-uses-to-length"), s3 = s3("filter"), e3 = e3("filter");
          o2({ target: "Array", proto: true, forced: !s3 || !e3 }, { filter: function(e4) {
            return n2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          } });
        }, { "../internals/array-iteration": 19, "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 156: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), e3 = e3("../internals/array-for-each");
          o2({ target: "Array", proto: true, forced: [].forEach != e3 }, { forEach: e3 });
        }, { "../internals/array-for-each": 16, "../internals/export": 50 }], 157: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-from");
          o2({ target: "Array", stat: true, forced: !e3("../internals/check-correctness-of-iteration")(function(e4) {
            Array.from(e4);
          }) }, { from: n2 });
        }, { "../internals/array-from": 17, "../internals/check-correctness-of-iteration": 27, "../internals/export": 50 }], 158: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-includes").includes, s3 = e3("../internals/add-to-unscopables");
          o2({ target: "Array", proto: true, forced: !e3("../internals/array-method-uses-to-length")("indexOf", { ACCESSORS: true, 1: 0 }) }, { includes: function(e4) {
            return n2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          } }), s3("includes");
        }, { "../internals/add-to-unscopables": 7, "../internals/array-includes": 18, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 159: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-includes").indexOf, s3 = e3("../internals/array-method-is-strict"), e3 = e3("../internals/array-method-uses-to-length"), i2 = [].indexOf, a = !!i2 && 1 / [1].indexOf(1, -0) < 0, s3 = s3("indexOf"), e3 = e3("indexOf", { ACCESSORS: true, 1: 0 });
          o2({ target: "Array", proto: true, forced: a || !s3 || !e3 }, { indexOf: function(e4) {
            return a ? i2.apply(this, arguments) || 0 : n2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          } });
        }, { "../internals/array-includes": 18, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 160: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/to-indexed-object"), n2 = e3("../internals/add-to-unscopables"), s3 = e3("../internals/iterators"), i2 = e3("../internals/internal-state"), e3 = e3("../internals/define-iterator"), a = "Array Iterator", l = i2.set, u = i2.getterFor(a);
          t3.exports = e3(Array, "Array", function(e4, t4) {
            l(this, { type: a, target: o2(e4), index: 0, kind: t4 });
          }, function() {
            var e4 = u(this), t4 = e4.target, r4 = e4.kind, o3 = e4.index++;
            return !t4 || o3 >= t4.length ? { value: e4.target = void 0, done: true } : "keys" == r4 ? { value: o3, done: false } : "values" == r4 ? { value: t4[o3], done: false } : { value: [o3, t4[o3]], done: false };
          }, "values"), s3.Arguments = s3.Array, n2("keys"), n2("values"), n2("entries");
        }, { "../internals/add-to-unscopables": 7, "../internals/define-iterator": 41, "../internals/internal-state": 70, "../internals/iterators": 79, "../internals/to-indexed-object": 134 }], 161: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/indexed-object"), s3 = e3("../internals/to-indexed-object"), e3 = e3("../internals/array-method-is-strict"), i2 = [].join, n2 = n2 != Object, e3 = e3("join", ",");
          o2({ target: "Array", proto: true, forced: n2 || !e3 }, { join: function(e4) {
            return i2.call(s3(this), void 0 === e4 ? "," : e4);
          } });
        }, { "../internals/array-method-is-strict": 22, "../internals/export": 50, "../internals/indexed-object": 66, "../internals/to-indexed-object": 134 }], 162: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), e3 = e3("../internals/array-last-index-of");
          o2({ target: "Array", proto: true, forced: e3 !== [].lastIndexOf }, { lastIndexOf: e3 });
        }, { "../internals/array-last-index-of": 20, "../internals/export": 50 }], 163: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-iteration").map, s3 = e3("../internals/array-method-has-species-support"), e3 = e3("../internals/array-method-uses-to-length"), s3 = s3("map"), e3 = e3("map");
          o2({ target: "Array", proto: true, forced: !s3 || !e3 }, { map: function(e4) {
            return n2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          } });
        }, { "../internals/array-iteration": 19, "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 164: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), u = e3("../internals/is-object"), c = e3("../internals/is-array"), d = e3("../internals/to-absolute-index"), f = e3("../internals/to-length"), h = e3("../internals/to-indexed-object"), p = e3("../internals/create-property"), n2 = e3("../internals/well-known-symbol"), s3 = e3("../internals/array-method-has-species-support"), e3 = e3("../internals/array-method-uses-to-length"), s3 = s3("slice"), e3 = e3("slice", { ACCESSORS: true, 0: 0, 1: 2 }), m = n2("species"), y = [].slice, g = Math.max;
          o2({ target: "Array", proto: true, forced: !s3 || !e3 }, { slice: function(e4, t4) {
            var r4, o3, n3, s4 = h(this), i2 = f(s4.length), a = d(e4, i2), l = d(void 0 === t4 ? i2 : t4, i2);
            if (c(s4) && ((r4 = "function" == typeof (r4 = s4.constructor) && (r4 === Array || c(r4.prototype)) || u(r4) && null === (r4 = r4[m]) ? void 0 : r4) === Array || void 0 === r4))
              return y.call(s4, a, l);
            for (o3 = new (void 0 === r4 ? Array : r4)(g(l - a, 0)), n3 = 0; a < l; a++, n3++)
              a in s4 && p(o3, n3, s4[a]);
            return o3.length = n3, o3;
          } });
        }, { "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/create-property": 40, "../internals/export": 50, "../internals/is-array": 72, "../internals/is-object": 74, "../internals/to-absolute-index": 132, "../internals/to-indexed-object": 134, "../internals/to-length": 136, "../internals/well-known-symbol": 148 }], 165: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/array-iteration").some, s3 = e3("../internals/array-method-is-strict"), e3 = e3("../internals/array-method-uses-to-length"), s3 = s3("some"), e3 = e3("some");
          o2({ target: "Array", proto: true, forced: !s3 || !e3 }, { some: function(e4) {
            return n2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          } });
        }, { "../internals/array-iteration": 19, "../internals/array-method-is-strict": 22, "../internals/array-method-uses-to-length": 23, "../internals/export": 50 }], 166: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), d = e3("../internals/to-absolute-index"), f = e3("../internals/to-integer"), h = e3("../internals/to-length"), p = e3("../internals/to-object"), m = e3("../internals/array-species-create"), y = e3("../internals/create-property"), n2 = e3("../internals/array-method-has-species-support"), e3 = e3("../internals/array-method-uses-to-length"), n2 = n2("splice"), e3 = e3("splice", { ACCESSORS: true, 0: 0, 1: 2 }), g = Math.max, v = Math.min;
          o2({ target: "Array", proto: true, forced: !n2 || !e3 }, { splice: function(e4, t4) {
            var r4, o3, n3, s3, i2, a, l = p(this), u = h(l.length), c = d(e4, u), e4 = arguments.length;
            if (0 === e4 ? r4 = o3 = 0 : o3 = 1 === e4 ? (r4 = 0, u - c) : (r4 = e4 - 2, v(g(f(t4), 0), u - c)), 9007199254740991 < u + r4 - o3)
              throw TypeError("Maximum allowed length exceeded");
            for (n3 = m(l, o3), s3 = 0; s3 < o3; s3++)
              (i2 = c + s3) in l && y(n3, s3, l[i2]);
            if (r4 < (n3.length = o3)) {
              for (s3 = c; s3 < u - o3; s3++)
                a = s3 + r4, (i2 = s3 + o3) in l ? l[a] = l[i2] : delete l[a];
              for (s3 = u; u - o3 + r4 < s3; s3--)
                delete l[s3 - 1];
            } else if (o3 < r4)
              for (s3 = u - o3; c < s3; s3--)
                a = s3 + r4 - 1, (i2 = s3 + o3 - 1) in l ? l[a] = l[i2] : delete l[a];
            for (s3 = 0; s3 < r4; s3++)
              l[s3 + c] = arguments[s3 + 2];
            return l.length = u - o3 + r4, n3;
          } });
        }, { "../internals/array-method-has-species-support": 21, "../internals/array-method-uses-to-length": 23, "../internals/array-species-create": 25, "../internals/create-property": 40, "../internals/export": 50, "../internals/to-absolute-index": 132, "../internals/to-integer": 135, "../internals/to-length": 136, "../internals/to-object": 137 }], 167: [function(e3, t3, r3) {
          var o2 = e3("../internals/descriptors"), e3 = e3("../internals/object-define-property").f, n2 = Function.prototype, s3 = n2.toString, i2 = /^\s*function ([^ (]*)/;
          !o2 || "name" in n2 || e3(n2, "name", { configurable: true, get: function() {
            try {
              return s3.call(this).match(i2)[1];
            } catch (e4) {
              return "";
            }
          } });
        }, { "../internals/descriptors": 43, "../internals/object-define-property": 92 }], 168: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/collection"), e3 = e3("../internals/collection-strong");
          t3.exports = o2("Map", function(e4) {
            return function() {
              return e4(this, arguments.length ? arguments[0] : void 0);
            };
          }, e3);
        }, { "../internals/collection": 32, "../internals/collection-strong": 30 }], 169: [function(e3, t3, r3) {
          var e3 = e3("../internals/export"), o2 = Math.hypot, l = Math.abs, u = Math.sqrt;
          e3({ target: "Math", stat: true, forced: !!o2 && o2(1 / 0, NaN) !== 1 / 0 }, { hypot: function(e4, t4) {
            for (var r4, o3, n2 = 0, s3 = 0, i2 = arguments.length, a = 0; s3 < i2; )
              a < (r4 = l(arguments[s3++])) ? (n2 = n2 * (o3 = a / r4) * o3 + 1, a = r4) : n2 += 0 < r4 ? (o3 = r4 / a) * o3 : r4;
            return a === 1 / 0 ? 1 / 0 : a * u(n2);
          } });
        }, { "../internals/export": 50 }], 170: [function(e3, t3, r3) {
          e3("../internals/export")({ target: "Math", stat: true }, { sign: e3("../internals/math-sign") });
        }, { "../internals/export": 50, "../internals/math-sign": 80 }], 171: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            var t4, r4, o3, n3, s4, i3, a2, l2 = d(e4, false);
            if ("string" == typeof l2 && 2 < l2.length) {
              if (43 === (e4 = (l2 = g(l2)).charCodeAt(0)) || 45 === e4) {
                if (88 === (t4 = l2.charCodeAt(2)) || 120 === t4)
                  return NaN;
              } else if (48 === e4) {
                switch (l2.charCodeAt(1)) {
                  case 66:
                  case 98:
                    r4 = 2, o3 = 49;
                    break;
                  case 79:
                  case 111:
                    r4 = 8, o3 = 55;
                    break;
                  default:
                    return +l2;
                }
                for (s4 = (n3 = l2.slice(2)).length, i3 = 0; i3 < s4; i3++)
                  if ((a2 = n3.charCodeAt(i3)) < 48 || o3 < a2)
                    return NaN;
                return parseInt(n3, r4);
              }
            }
            return +l2;
          }
          var n2 = e3("../internals/descriptors"), s3 = e3("../internals/global"), i2 = e3("../internals/is-forced"), a = e3("../internals/redefine"), l = e3("../internals/has"), u = e3("../internals/classof-raw"), c = e3("../internals/inherit-if-required"), d = e3("../internals/to-primitive"), f = e3("../internals/fails"), h = e3("../internals/object-create"), p = e3("../internals/object-get-own-property-names").f, m = e3("../internals/object-get-own-property-descriptor").f, y = e3("../internals/object-define-property").f, g = e3("../internals/string-trim").trim, v = "Number", b = s3[v], j = b.prototype, _ = u(h(j)) == v;
          if (i2(v, !b(" 0o1") || !b("0b1") || b("+0x1"))) {
            for (var x, w = function(e4) {
              var e4 = arguments.length < 1 ? 0 : e4, t4 = this;
              return t4 instanceof w && (_ ? f(function() {
                j.valueOf.call(t4);
              }) : u(t4) != v) ? c(new b(o2(e4)), t4, w) : o2(e4);
            }, S = n2 ? p(b) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","), E = 0; S.length > E; E++)
              l(b, x = S[E]) && !l(w, x) && y(w, x, m(b, x));
            (w.prototype = j).constructor = w, a(s3, v, w);
          }
        }, { "../internals/classof-raw": 28, "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 59, "../internals/has": 60, "../internals/inherit-if-required": 67, "../internals/is-forced": 73, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-own-property-names": 95, "../internals/redefine": 108, "../internals/string-trim": 129, "../internals/to-primitive": 140 }], 172: [function(e3, t3, r3) {
          e3("../internals/export")({ target: "Number", stat: true }, { isFinite: e3("../internals/number-is-finite") });
        }, { "../internals/export": 50, "../internals/number-is-finite": 88 }], 173: [function(e3, t3, r3) {
          "use strict";
          function c(e4, t4, r4) {
            return 0 === t4 ? r4 : t4 % 2 == 1 ? c(e4, t4 - 1, r4 * e4) : c(e4 * e4, t4 / 2, r4);
          }
          var o2 = e3("../internals/export"), d = e3("../internals/to-integer"), f = e3("../internals/this-number-value"), h = e3("../internals/string-repeat"), e3 = e3("../internals/fails"), n2 = 1 .toFixed, p = Math.floor;
          o2({ target: "Number", proto: true, forced: n2 && ("0.000" !== 8e-5.toFixed(3) || "1" !== 0.9.toFixed(0) || "1.25" !== 1.255.toFixed(2) || "1000000000000000128" !== 1000000000000000100 .toFixed(0)) || !e3(function() {
            n2.call({});
          }) }, { toFixed: function(e4) {
            function t4(e5, t5) {
              for (var r5 = -1, o4 = t5; ++r5 < 6; )
                o4 += e5 * a[r5], a[r5] = o4 % 1e7, o4 = p(o4 / 1e7);
            }
            function r4(e5) {
              for (var t5 = 6, r5 = 0; 0 <= --t5; )
                r5 += a[t5], a[t5] = p(r5 / e5), r5 = r5 % e5 * 1e7;
            }
            function o3() {
              for (var e5, t5 = 6, r5 = ""; 0 <= --t5; )
                "" === r5 && 0 !== t5 && 0 === a[t5] || (e5 = String(a[t5]), r5 = "" === r5 ? e5 : r5 + h.call("0", 7 - e5.length) + e5);
              return r5;
            }
            var n3, s3, i2 = f(this), e4 = d(e4), a = [0, 0, 0, 0, 0, 0], l = "", u = "0";
            if (e4 < 0 || 20 < e4)
              throw RangeError("Incorrect fraction digits");
            if (i2 != i2)
              return "NaN";
            if (i2 <= -1e21 || 1e21 <= i2)
              return String(i2);
            if (i2 < 0 && (l = "-", i2 = -i2), 1e-21 < i2)
              if (i2 = (n3 = function(e5) {
                for (var t5 = 0, r5 = e5; 4096 <= r5; )
                  t5 += 12, r5 /= 4096;
                for (; 2 <= r5; )
                  t5 += 1, r5 /= 2;
                return t5;
              }(i2 * c(2, 69, 1)) - 69) < 0 ? i2 * c(2, -n3, 1) : i2 / c(2, n3, 1), i2 *= 4503599627370496, 0 < (n3 = 52 - n3)) {
                for (t4(0, i2), s3 = e4; 7 <= s3; )
                  t4(1e7, 0), s3 -= 7;
                for (t4(c(10, s3, 1), 0), s3 = n3 - 1; 23 <= s3; )
                  r4(1 << 23), s3 -= 23;
                r4(1 << s3), t4(1, 1), r4(2), u = o3();
              } else
                t4(0, i2), t4(1 << -n3, 0), u = o3() + h.call("0", e4);
            return u = 0 < e4 ? l + ((i2 = u.length) <= e4 ? "0." + h.call("0", e4 - i2) + u : u.slice(0, i2 - e4) + "." + u.slice(i2 - e4)) : l + u;
          } });
        }, { "../internals/export": 50, "../internals/fails": 51, "../internals/string-repeat": 127, "../internals/this-number-value": 131, "../internals/to-integer": 135 }], 174: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), e3 = e3("../internals/object-assign");
          o2({ target: "Object", stat: true, forced: Object.assign !== e3 }, { assign: e3 });
        }, { "../internals/export": 50, "../internals/object-assign": 89 }], 175: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/iterate"), s3 = e3("../internals/create-property");
          o2({ target: "Object", stat: true }, { fromEntries: function(e4) {
            var r4 = {};
            return n2(e4, function(e5, t4) {
              s3(r4, e5, t4);
            }, void 0, true), r4;
          } });
        }, { "../internals/create-property": 40, "../internals/export": 50, "../internals/iterate": 77 }], 176: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/fails"), s3 = e3("../internals/to-indexed-object"), i2 = e3("../internals/object-get-own-property-descriptor").f, e3 = e3("../internals/descriptors"), n2 = n2(function() {
            i2(1);
          });
          o2({ target: "Object", stat: true, forced: !e3 || n2, sham: !e3 }, { getOwnPropertyDescriptor: function(e4, t4) {
            return i2(s3(e4), t4);
          } });
        }, { "../internals/descriptors": 43, "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-own-property-descriptor": 93, "../internals/to-indexed-object": 134 }], 177: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/fails"), e3 = e3("../internals/object-get-own-property-names-external").f;
          o2({ target: "Object", stat: true, forced: n2(function() {
            return !Object.getOwnPropertyNames(1);
          }) }, { getOwnPropertyNames: e3 });
        }, { "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-own-property-names-external": 94 }], 178: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/fails"), s3 = e3("../internals/to-object"), i2 = e3("../internals/object-get-prototype-of"), e3 = e3("../internals/correct-prototype-getter");
          o2({ target: "Object", stat: true, forced: n2(function() {
            i2(1);
          }), sham: !e3 }, { getPrototypeOf: function(e4) {
            return i2(s3(e4));
          } });
        }, { "../internals/correct-prototype-getter": 35, "../internals/export": 50, "../internals/fails": 51, "../internals/object-get-prototype-of": 97, "../internals/to-object": 137 }], 179: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/to-object"), s3 = e3("../internals/object-keys");
          o2({ target: "Object", stat: true, forced: e3("../internals/fails")(function() {
            s3(1);
          }) }, { keys: function(e4) {
            return s3(n2(e4));
          } });
        }, { "../internals/export": 50, "../internals/fails": 51, "../internals/object-keys": 99, "../internals/to-object": 137 }], 180: [function(e3, t3, r3) {
          var o2 = e3("../internals/to-string-tag-support"), n2 = e3("../internals/redefine"), e3 = e3("../internals/object-to-string");
          o2 || n2(Object.prototype, "toString", e3, { unsafe: true });
        }, { "../internals/object-to-string": 102, "../internals/redefine": 108, "../internals/to-string-tag-support": 141 }], 181: [function(e3, D, F) {
          "use strict";
          var r3, t3, o2, n2, s3 = e3("../internals/export"), i2 = e3("../internals/is-pure"), g = e3("../internals/global"), a = e3("../internals/get-built-in"), l = e3("../internals/native-promise-constructor"), U = e3("../internals/redefine"), N = e3("../internals/redefine-all"), B = e3("../internals/set-to-string-tag"), G = e3("../internals/set-species"), V = e3("../internals/is-object"), c = e3("../internals/a-function"), z = e3("../internals/an-instance"), H = e3("../internals/classof-raw"), W = e3("../internals/inspect-source"), d = e3("../internals/iterate"), q = e3("../internals/check-correctness-of-iteration"), X = e3("../internals/species-constructor"), v = e3("../internals/task").set, u = e3("../internals/microtask"), f = e3("../internals/promise-resolve"), Y = e3("../internals/host-report-errors"), h = e3("../internals/new-promise-capability"), b = e3("../internals/perform"), p = e3("../internals/internal-state"), Z = e3("../internals/is-forced"), m = e3("../internals/well-known-symbol"), y = e3("../internals/engine-v8-version"), Q = m("species"), j = "Promise", _ = p.get, J = p.set, K = p.getterFor(j), x = l, w = g.TypeError, S = g.document, E = g.process, M = a("fetch"), T = h.f, $6 = T, k = "process" == H(E), ee = !!(S && S.createEvent && g.dispatchEvent), O = "unhandledrejection", te = "rejectionhandled", C = 1, re = 2, A = 1, oe = 2, e3 = Z(j, function() {
            var e4, t4;
            if (!(W(x) !== String(x))) {
              if (66 === y)
                return true;
              if (!k && "function" != typeof PromiseRejectionEvent)
                return true;
            }
            return !(!i2 || x.prototype.finally) || !(51 <= y && /native code/.test(x)) && (t4 = function(e5) {
              e5(function() {
              }, function() {
              });
            }, ((e4 = x.resolve(1)).constructor = {})[Q] = t4, !(e4.then(function() {
            }) instanceof t4));
          }), m = e3 || !q(function(e4) {
            x.all(e4).catch(function() {
            });
          }), ne = function(e4) {
            var t4;
            return !(!V(e4) || "function" != typeof (t4 = e4.then)) && t4;
          }, P = function(h2, p2, m2) {
            var y2;
            p2.notified || (p2.notified = true, y2 = p2.reactions, u(function() {
              for (var r4, o3, e4 = p2.value, t4 = p2.state == C, n3 = 0; y2.length > n3; ) {
                var s4, i3, a2, l2 = y2[n3++], u2 = t4 ? l2.ok : l2.fail, c2 = l2.resolve, d2 = l2.reject, f2 = l2.domain;
                try {
                  u2 ? (t4 || (p2.rejection === oe && function(e5, t5) {
                    v.call(g, function() {
                      if (k)
                        E.emit("rejectionHandled", e5);
                      else
                        se(te, e5, t5.value);
                    });
                  }(h2, p2), p2.rejection = A), true === u2 ? s4 = e4 : (f2 && f2.enter(), s4 = u2(e4), f2 && (f2.exit(), a2 = true)), s4 === l2.promise ? d2(w("Promise-chain cycle")) : (i3 = ne(s4)) ? i3.call(s4, c2, d2) : c2(s4)) : d2(e4);
                } catch (e5) {
                  f2 && !a2 && f2.exit(), d2(e5);
                }
              }
              p2.reactions = [], p2.notified = false, m2 && !p2.rejection && (r4 = h2, o3 = p2, v.call(g, function() {
                var e5 = o3.value, t5 = ie(o3);
                if (t5 && (t5 = b(function() {
                  k ? E.emit("unhandledRejection", e5, r4) : se(O, r4, e5);
                }), o3.rejection = k || ie(o3) ? oe : A, t5.error))
                  throw t5.value;
              }));
            }));
          }, se = function(e4, t4, r4) {
            var o3;
            ee ? ((o3 = S.createEvent("Event")).promise = t4, o3.reason = r4, o3.initEvent(e4, false, true), g.dispatchEvent(o3)) : o3 = { promise: t4, reason: r4 }, (t4 = g["on" + e4]) ? t4(o3) : e4 === O && Y("Unhandled promise rejection", r4);
          }, ie = function(e4) {
            return e4.rejection !== A && !e4.parent;
          }, L = function(t4, r4, o3, n3) {
            return function(e4) {
              t4(r4, o3, e4, n3);
            };
          }, R = function(e4, t4, r4, o3) {
            t4.done || (t4.done = true, (t4 = o3 ? o3 : t4).value = r4, t4.state = re, P(e4, t4, true));
          }, I = function(r4, o3, e4, t4) {
            if (!o3.done) {
              o3.done = true, t4 && (o3 = t4);
              try {
                if (r4 === e4)
                  throw w("Promise can't be resolved itself");
                var n3 = ne(e4);
                n3 ? u(function() {
                  var t5 = { done: false };
                  try {
                    n3.call(e4, L(I, r4, t5, o3), L(R, r4, t5, o3));
                  } catch (e5) {
                    R(r4, t5, e5, o3);
                  }
                }) : (o3.value = e4, o3.state = C, P(r4, o3, false));
              } catch (e5) {
                R(r4, { done: false }, e5, o3);
              }
            }
          };
          e3 && (x = function(e4) {
            z(this, x, j), c(e4), r3.call(this);
            var t4 = _(this);
            try {
              e4(L(I, this, t4), L(R, this, t4));
            } catch (e5) {
              R(this, t4, e5);
            }
          }, (r3 = function(e4) {
            J(this, { type: j, done: false, notified: false, parent: false, reactions: [], rejection: false, state: 0, value: void 0 });
          }).prototype = N(x.prototype, { then: function(e4, t4) {
            var r4 = K(this), o3 = T(X(this, x));
            return o3.ok = "function" != typeof e4 || e4, o3.fail = "function" == typeof t4 && t4, o3.domain = k ? E.domain : void 0, r4.parent = true, r4.reactions.push(o3), 0 != r4.state && P(this, r4, false), o3.promise;
          }, catch: function(e4) {
            return this.then(void 0, e4);
          } }), t3 = function() {
            var e4 = new r3(), t4 = _(e4);
            this.promise = e4, this.resolve = L(I, e4, t4), this.reject = L(R, e4, t4);
          }, h.f = T = function(e4) {
            return e4 === x || e4 === o2 ? new t3() : $6(e4);
          }, i2 || "function" != typeof l || (n2 = l.prototype.then, U(l.prototype, "then", function(e4, t4) {
            var r4 = this;
            return new x(function(e5, t5) {
              n2.call(r4, e5, t5);
            }).then(e4, t4);
          }, { unsafe: true }), "function" == typeof M && s3({ global: true, enumerable: true, forced: true }, { fetch: function(e4) {
            return f(x, M.apply(g, arguments));
          } }))), s3({ global: true, wrap: true, forced: e3 }, { Promise: x }), B(x, j, false, true), G(j), o2 = a(j), s3({ target: j, stat: true, forced: e3 }, { reject: function(e4) {
            var t4 = T(this);
            return t4.reject.call(void 0, e4), t4.promise;
          } }), s3({ target: j, stat: true, forced: i2 || e3 }, { resolve: function(e4) {
            return f(i2 && this === o2 ? x : this, e4);
          } }), s3({ target: j, stat: true, forced: m }, { all: function(e4) {
            var a2 = this, t4 = T(a2), l2 = t4.resolve, u2 = t4.reject, r4 = b(function() {
              var o3 = c(a2.resolve), n3 = [], s4 = 0, i3 = 1;
              d(e4, function(e5) {
                var t5 = s4++, r5 = false;
                n3.push(void 0), i3++, o3.call(a2, e5).then(function(e6) {
                  r5 || (r5 = true, n3[t5] = e6, --i3 || l2(n3));
                }, u2);
              }), --i3 || l2(n3);
            });
            return r4.error && u2(r4.value), t4.promise;
          }, race: function(e4) {
            var r4 = this, o3 = T(r4), n3 = o3.reject, t4 = b(function() {
              var t5 = c(r4.resolve);
              d(e4, function(e5) {
                t5.call(r4, e5).then(o3.resolve, n3);
              });
            });
            return t4.error && n3(t4.value), o3.promise;
          } });
        }, { "../internals/a-function": 5, "../internals/an-instance": 9, "../internals/check-correctness-of-iteration": 27, "../internals/classof-raw": 28, "../internals/engine-v8-version": 48, "../internals/export": 50, "../internals/get-built-in": 56, "../internals/global": 59, "../internals/host-report-errors": 62, "../internals/inspect-source": 68, "../internals/internal-state": 70, "../internals/is-forced": 73, "../internals/is-object": 74, "../internals/is-pure": 75, "../internals/iterate": 77, "../internals/microtask": 81, "../internals/native-promise-constructor": 82, "../internals/new-promise-capability": 86, "../internals/perform": 105, "../internals/promise-resolve": 106, "../internals/redefine": 108, "../internals/redefine-all": 107, "../internals/set-species": 116, "../internals/set-to-string-tag": 117, "../internals/species-constructor": 121, "../internals/task": 130, "../internals/well-known-symbol": 148 }], 182: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), n2 = e3("../internals/get-built-in"), s3 = e3("../internals/a-function"), i2 = e3("../internals/an-object"), a = e3("../internals/is-object"), l = e3("../internals/object-create"), u = e3("../internals/function-bind"), e3 = e3("../internals/fails"), c = n2("Reflect", "construct"), d = e3(function() {
            function e4() {
            }
            return !(c(function() {
            }, [], e4) instanceof e4);
          }), f = !e3(function() {
            c(function() {
            });
          }), n2 = d || f;
          o2({ target: "Reflect", stat: true, forced: n2, sham: n2 }, { construct: function(e4, t4) {
            s3(e4), i2(t4);
            var r4 = arguments.length < 3 ? e4 : s3(arguments[2]);
            if (f && !d)
              return c(e4, t4, r4);
            if (e4 == r4) {
              switch (t4.length) {
                case 0:
                  return new e4();
                case 1:
                  return new e4(t4[0]);
                case 2:
                  return new e4(t4[0], t4[1]);
                case 3:
                  return new e4(t4[0], t4[1], t4[2]);
                case 4:
                  return new e4(t4[0], t4[1], t4[2], t4[3]);
              }
              var o3 = [null];
              return o3.push.apply(o3, t4), new (u.apply(e4, o3))();
            }
            o3 = r4.prototype, r4 = l(a(o3) ? o3 : Object.prototype), o3 = Function.apply.call(e4, r4, t4);
            return a(o3) ? o3 : r4;
          } });
        }, { "../internals/a-function": 5, "../internals/an-object": 10, "../internals/export": 50, "../internals/fails": 51, "../internals/function-bind": 55, "../internals/get-built-in": 56, "../internals/is-object": 74, "../internals/object-create": 90 }], 183: [function(e3, t3, r3) {
          var o2 = e3("../internals/export"), s3 = e3("../internals/is-object"), i2 = e3("../internals/an-object"), a = e3("../internals/has"), l = e3("../internals/object-get-own-property-descriptor"), u = e3("../internals/object-get-prototype-of");
          o2({ target: "Reflect", stat: true }, { get: function e4(t4, r4) {
            var o3, n2 = arguments.length < 3 ? t4 : arguments[2];
            return i2(t4) === n2 ? t4[r4] : (o3 = l.f(t4, r4)) ? a(o3, "value") ? o3.value : void 0 === o3.get ? void 0 : o3.get.call(n2) : s3(o3 = u(t4)) ? e4(o3, r4, n2) : void 0;
          } });
        }, { "../internals/an-object": 10, "../internals/export": 50, "../internals/has": 60, "../internals/is-object": 74, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-prototype-of": 97 }], 184: [function(e3, t3, r3) {
          var o2 = e3("../internals/descriptors"), n2 = e3("../internals/global"), s3 = e3("../internals/is-forced"), i2 = e3("../internals/inherit-if-required"), a = e3("../internals/object-define-property").f, l = e3("../internals/object-get-own-property-names").f, u = e3("../internals/is-regexp"), c = e3("../internals/regexp-flags"), d = e3("../internals/regexp-sticky-helpers"), f = e3("../internals/redefine"), h = e3("../internals/fails"), p = e3("../internals/internal-state").set, m = e3("../internals/set-species"), y = e3("../internals/well-known-symbol")("match"), g = n2.RegExp, v = g.prototype, b = /a/g, j = /a/g, _ = new g(b) !== b, x = d.UNSUPPORTED_Y;
          if (o2 && s3("RegExp", !_ || x || h(function() {
            return j[y] = false, g(b) != b || g(j) == j || "/a/i" != g(b, "i");
          }))) {
            for (var w = function(e4, t4) {
              var r4, o3 = this instanceof w, n3 = u(e4), s4 = void 0 === t4;
              if (!o3 && n3 && e4.constructor === w && s4)
                return e4;
              _ ? n3 && !s4 && (e4 = e4.source) : e4 instanceof w && (s4 && (t4 = c.call(e4)), e4 = e4.source), x && (r4 = !!t4 && -1 < t4.indexOf("y")) && (t4 = t4.replace(/y/g, ""));
              n3 = i2(_ ? new g(e4, t4) : g(e4, t4), o3 ? this : v, w);
              return x && r4 && p(n3, { sticky: r4 }), n3;
            }, S = l(g), E = 0; S.length > E; )
              !function(t4) {
                t4 in w || a(w, t4, { configurable: true, get: function() {
                  return g[t4];
                }, set: function(e4) {
                  g[t4] = e4;
                } });
              }(S[E++]);
            (v.constructor = w).prototype = v, f(n2, "RegExp", w);
          }
          m("RegExp");
        }, { "../internals/descriptors": 43, "../internals/fails": 51, "../internals/global": 59, "../internals/inherit-if-required": 67, "../internals/internal-state": 70, "../internals/is-forced": 73, "../internals/is-regexp": 76, "../internals/object-define-property": 92, "../internals/object-get-own-property-names": 95, "../internals/redefine": 108, "../internals/regexp-flags": 111, "../internals/regexp-sticky-helpers": 112, "../internals/set-species": 116, "../internals/well-known-symbol": 148 }], 185: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), e3 = e3("../internals/regexp-exec");
          o2({ target: "RegExp", proto: true, forced: /./.exec !== e3 }, { exec: e3 });
        }, { "../internals/export": 50, "../internals/regexp-exec": 110 }], 186: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/redefine"), n2 = e3("../internals/an-object"), s3 = e3("../internals/fails"), i2 = e3("../internals/regexp-flags"), e3 = "toString", a = RegExp.prototype, l = a[e3], s3 = s3(function() {
            return "/a/b" != l.call({ source: "a", flags: "b" });
          }), u = l.name != e3;
          (s3 || u) && o2(RegExp.prototype, e3, function() {
            var e4 = n2(this), t4 = String(e4.source), r4 = e4.flags;
            return "/" + t4 + "/" + String(void 0 === r4 && e4 instanceof RegExp && !("flags" in a) ? i2.call(e4) : r4);
          }, { unsafe: true });
        }, { "../internals/an-object": 10, "../internals/fails": 51, "../internals/redefine": 108, "../internals/regexp-flags": 111 }], 187: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/collection"), e3 = e3("../internals/collection-strong");
          t3.exports = o2("Set", function(e4) {
            return function() {
              return e4(this, arguments.length ? arguments[0] : void 0);
            };
          }, e3);
        }, { "../internals/collection": 32, "../internals/collection-strong": 30 }], 188: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/object-get-own-property-descriptor").f, s3 = e3("../internals/to-length"), i2 = e3("../internals/not-a-regexp"), a = e3("../internals/require-object-coercible"), l = e3("../internals/correct-is-regexp-logic"), e3 = e3("../internals/is-pure"), u = "".endsWith, c = Math.min, l = l("endsWith");
          o2({ target: "String", proto: true, forced: !!(e3 || l || (!(o2 = n2(String.prototype, "endsWith")) || o2.writable)) && !l }, { endsWith: function(e4) {
            var t4 = String(a(this)), r4 = (i2(e4), 1 < arguments.length ? arguments[1] : void 0), o3 = s3(t4.length), r4 = void 0 === r4 ? o3 : c(s3(r4), o3), o3 = String(e4);
            return u ? u.call(t4, o3, r4) : t4.slice(r4 - o3.length, r4) === o3;
          } });
        }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/is-pure": 75, "../internals/not-a-regexp": 87, "../internals/object-get-own-property-descriptor": 93, "../internals/require-object-coercible": 113, "../internals/to-length": 136 }], 189: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/not-a-regexp"), s3 = e3("../internals/require-object-coercible");
          o2({ target: "String", proto: true, forced: !e3("../internals/correct-is-regexp-logic")("includes") }, { includes: function(e4) {
            return !!~String(s3(this)).indexOf(n2(e4), 1 < arguments.length ? arguments[1] : void 0);
          } });
        }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/not-a-regexp": 87, "../internals/require-object-coercible": 113 }], 190: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/string-multibyte").charAt, n2 = e3("../internals/internal-state"), e3 = e3("../internals/define-iterator"), s3 = "String Iterator", i2 = n2.set, a = n2.getterFor(s3);
          e3(String, "String", function(e4) {
            i2(this, { type: s3, string: String(e4), index: 0 });
          }, function() {
            var e4 = a(this), t4 = e4.string, r4 = e4.index;
            return r4 >= t4.length ? { value: void 0, done: true } : (t4 = o2(t4, r4), e4.index += t4.length, { value: t4, done: false });
          });
        }, { "../internals/define-iterator": 41, "../internals/internal-state": 70, "../internals/string-multibyte": 123 }], 191: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/fix-regexp-well-known-symbol-logic"), c = e3("../internals/an-object"), d = e3("../internals/to-length"), n2 = e3("../internals/require-object-coercible"), f = e3("../internals/advance-string-index"), h = e3("../internals/regexp-exec-abstract");
          o2("match", 1, function(o3, l, u) {
            return [function(e4) {
              var t4 = n2(this), r4 = null == e4 ? void 0 : e4[o3];
              return void 0 !== r4 ? r4.call(e4, t4) : new RegExp(e4)[o3](String(t4));
            }, function(e4) {
              var t4 = u(l, e4, this);
              if (t4.done)
                return t4.value;
              var r4 = c(e4), o4 = String(this);
              if (!r4.global)
                return h(r4, o4);
              for (var n3 = r4.unicode, s3 = [], i2 = r4.lastIndex = 0; null !== (a = h(r4, o4)); ) {
                var a = String(a[0]);
                "" === (s3[i2] = a) && (r4.lastIndex = f(o4, d(r4.lastIndex), n3)), i2++;
              }
              return 0 === i2 ? null : s3;
            }];
          });
        }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/to-length": 136 }], 192: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/string-pad").start;
          o2({ target: "String", proto: true, forced: e3("../internals/string-pad-webkit-bug") }, { padStart: function(e4) {
            return n2(this, e4, 1 < arguments.length ? arguments[1] : void 0);
          } });
        }, { "../internals/export": 50, "../internals/string-pad": 125, "../internals/string-pad-webkit-bug": 124 }], 193: [function(e3, t3, r3) {
          e3("../internals/export")({ target: "String", proto: true }, { repeat: e3("../internals/string-repeat") });
        }, { "../internals/export": 50, "../internals/string-repeat": 127 }], 194: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/fix-regexp-well-known-symbol-logic"), E = e3("../internals/an-object"), M = e3("../internals/to-object"), T = e3("../internals/to-length"), k = e3("../internals/to-integer"), s3 = e3("../internals/require-object-coercible"), O = e3("../internals/advance-string-index"), C = e3("../internals/regexp-exec-abstract"), A = Math.max, P = Math.min, L = Math.floor, R = /\$([$&'`]|\d\d?|<[^>]*>)/g, I = /\$([$&'`]|\d\d?)/g;
          o2("replace", 2, function(n2, j, _, e4) {
            var x = e4.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE, w = e4.REPLACE_KEEPS_$0, S = x ? "$" : "$0";
            return [function(e5, t4) {
              var r4 = s3(this), o3 = null == e5 ? void 0 : e5[n2];
              return void 0 !== o3 ? o3.call(e5, r4, t4) : j.call(String(r4), e5, t4);
            }, function(e5, t4) {
              if (!x && w || "string" == typeof t4 && -1 === t4.indexOf(S)) {
                var r4 = _(j, e5, this, t4);
                if (r4.done)
                  return r4.value;
              }
              for (var o3, n3 = E(e5), s4 = String(this), i2 = "function" == typeof t4, a = (i2 || (t4 = String(t4)), n3.global), l = (a && (o3 = n3.unicode, n3.lastIndex = 0), []); null !== (h = C(n3, s4)) && (l.push(h), a); )
                "" === String(h[0]) && (n3.lastIndex = O(s4, T(n3.lastIndex), o3));
              for (var u, c = "", d = 0, f = 0; f < l.length; f++) {
                for (var h = l[f], p = String(h[0]), m = A(P(k(h.index), s4.length), 0), y = [], g = 1; g < h.length; g++)
                  y.push(void 0 === (u = h[g]) ? u : String(u));
                var v = h.groups, b = i2 ? (b = [p].concat(y, m, s4), void 0 !== v && b.push(v), String(t4.apply(void 0, b))) : function(s5, i3, a2, l2, u2, e6) {
                  var c2 = a2 + s5.length, d2 = l2.length, t5 = I;
                  void 0 !== u2 && (u2 = M(u2), t5 = R);
                  return j.call(e6, t5, function(e7, t6) {
                    var r5;
                    switch (t6.charAt(0)) {
                      case "$":
                        return "$";
                      case "&":
                        return s5;
                      case "`":
                        return i3.slice(0, a2);
                      case "'":
                        return i3.slice(c2);
                      case "<":
                        r5 = u2[t6.slice(1, -1)];
                        break;
                      default:
                        var o4, n4 = +t6;
                        if (0 == n4)
                          return e7;
                        if (d2 < n4)
                          return 0 !== (o4 = L(n4 / 10)) && o4 <= d2 ? void 0 === l2[o4 - 1] ? t6.charAt(1) : l2[o4 - 1] + t6.charAt(1) : e7;
                        r5 = l2[n4 - 1];
                    }
                    return void 0 === r5 ? "" : r5;
                  });
                }(p, s4, m, y, v, t4);
                d <= m && (c += s4.slice(d, m) + b, d = m + p.length);
              }
              return c + s4.slice(d);
            }];
          });
        }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/to-integer": 135, "../internals/to-length": 136, "../internals/to-object": 137 }], 195: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/fix-regexp-well-known-symbol-logic"), i2 = e3("../internals/an-object"), a = e3("../internals/require-object-coercible"), l = e3("../internals/same-value"), u = e3("../internals/regexp-exec-abstract");
          o2("search", 1, function(o3, n2, s3) {
            return [function(e4) {
              var t4 = a(this), r4 = null == e4 ? void 0 : e4[o3];
              return void 0 !== r4 ? r4.call(e4, t4) : new RegExp(e4)[o3](String(t4));
            }, function(e4) {
              var t4, r4 = s3(n2, e4, this);
              return r4.done ? r4.value : (r4 = i2(e4), e4 = String(this), t4 = r4.lastIndex, l(t4, 0) || (r4.lastIndex = 0), e4 = u(r4, e4), l(r4.lastIndex, t4) || (r4.lastIndex = t4), null === e4 ? -1 : e4.index);
            }];
          });
        }, { "../internals/an-object": 10, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/same-value": 114 }], 196: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/fix-regexp-well-known-symbol-logic"), c = e3("../internals/is-regexp"), g = e3("../internals/an-object"), d = e3("../internals/require-object-coercible"), v = e3("../internals/species-constructor"), b = e3("../internals/advance-string-index"), j = e3("../internals/to-length"), _ = e3("../internals/regexp-exec-abstract"), f = e3("../internals/regexp-exec"), e3 = e3("../internals/fails"), h = [].push, x = Math.min, w = 4294967295, S = !e3(function() {
            return !RegExp(w, "y");
          });
          o2("split", 2, function(n2, p, m) {
            var y = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || 1 < ".".split(/()()/).length || "".split(/.?/).length ? function(e4, t4) {
              var r4 = String(d(this)), o3 = void 0 === t4 ? w : t4 >>> 0;
              if (0 == o3)
                return [];
              if (void 0 === e4)
                return [r4];
              if (!c(e4))
                return p.call(r4, e4, o3);
              for (var n3, s3, i2, a = [], t4 = (e4.ignoreCase ? "i" : "") + (e4.multiline ? "m" : "") + (e4.unicode ? "u" : "") + (e4.sticky ? "y" : ""), l = 0, u = new RegExp(e4.source, t4 + "g"); (n3 = f.call(u, r4)) && !(l < (s3 = u.lastIndex) && (a.push(r4.slice(l, n3.index)), 1 < n3.length && n3.index < r4.length && h.apply(a, n3.slice(1)), i2 = n3[0].length, l = s3, a.length >= o3)); )
                u.lastIndex === n3.index && u.lastIndex++;
              return l === r4.length ? !i2 && u.test("") || a.push("") : a.push(r4.slice(l)), a.length > o3 ? a.slice(0, o3) : a;
            } : "0".split(void 0, 0).length ? function(e4, t4) {
              return void 0 === e4 && 0 === t4 ? [] : p.call(this, e4, t4);
            } : p;
            return [function(e4, t4) {
              var r4 = d(this), o3 = null == e4 ? void 0 : e4[n2];
              return void 0 !== o3 ? o3.call(e4, r4, t4) : y.call(String(r4), e4, t4);
            }, function(e4, t4) {
              var r4 = m(y, e4, this, t4, y !== p);
              if (r4.done)
                return r4.value;
              var r4 = g(e4), o3 = String(this), e4 = v(r4, RegExp), n3 = r4.unicode, s3 = (r4.ignoreCase ? "i" : "") + (r4.multiline ? "m" : "") + (r4.unicode ? "u" : "") + (S ? "y" : "g"), i2 = new e4(S ? r4 : "^(?:" + r4.source + ")", s3), a = void 0 === t4 ? w : t4 >>> 0;
              if (0 == a)
                return [];
              if (0 === o3.length)
                return null === _(i2, o3) ? [o3] : [];
              for (var l = 0, u = 0, c2 = []; u < o3.length; ) {
                i2.lastIndex = S ? u : 0;
                var d2, f2 = _(i2, S ? o3 : o3.slice(u));
                if (null === f2 || (d2 = x(j(i2.lastIndex + (S ? 0 : u)), o3.length)) === l)
                  u = b(o3, u, n3);
                else {
                  if (c2.push(o3.slice(l, u)), c2.length === a)
                    return c2;
                  for (var h2 = 1; h2 <= f2.length - 1; h2++)
                    if (c2.push(f2[h2]), c2.length === a)
                      return c2;
                  u = l = d2;
                }
              }
              return c2.push(o3.slice(l)), c2;
            }];
          }, !S);
        }, { "../internals/advance-string-index": 8, "../internals/an-object": 10, "../internals/fails": 51, "../internals/fix-regexp-well-known-symbol-logic": 52, "../internals/is-regexp": 76, "../internals/regexp-exec": 110, "../internals/regexp-exec-abstract": 109, "../internals/require-object-coercible": 113, "../internals/species-constructor": 121, "../internals/to-length": 136 }], 197: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/object-get-own-property-descriptor").f, s3 = e3("../internals/to-length"), i2 = e3("../internals/not-a-regexp"), a = e3("../internals/require-object-coercible"), l = e3("../internals/correct-is-regexp-logic"), e3 = e3("../internals/is-pure"), u = "".startsWith, c = Math.min, l = l("startsWith");
          o2({ target: "String", proto: true, forced: !!(e3 || l || (!(o2 = n2(String.prototype, "startsWith")) || o2.writable)) && !l }, { startsWith: function(e4) {
            var t4 = String(a(this)), r4 = (i2(e4), s3(c(1 < arguments.length ? arguments[1] : void 0, t4.length))), e4 = String(e4);
            return u ? u.call(t4, e4, r4) : t4.slice(r4, r4 + e4.length) === e4;
          } });
        }, { "../internals/correct-is-regexp-logic": 34, "../internals/export": 50, "../internals/is-pure": 75, "../internals/not-a-regexp": 87, "../internals/object-get-own-property-descriptor": 93, "../internals/require-object-coercible": 113, "../internals/to-length": 136 }], 198: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/create-html");
          o2({ target: "String", proto: true, forced: e3("../internals/string-html-forced")("sub") }, { sub: function() {
            return n2(this, "sub", "", "");
          } });
        }, { "../internals/create-html": 36, "../internals/export": 50, "../internals/string-html-forced": 122 }], 199: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/export"), n2 = e3("../internals/string-trim").trim;
          o2({ target: "String", proto: true, forced: e3("../internals/string-trim-forced")("trim") }, { trim: function() {
            return n2(this);
          } });
        }, { "../internals/export": 50, "../internals/string-trim": 129, "../internals/string-trim-forced": 128 }], 200: [function(e3, t3, r3) {
          "use strict";
          var o2, n2, s3, i2, a, l = e3("../internals/export"), u = e3("../internals/descriptors"), c = e3("../internals/global"), d = e3("../internals/has"), f = e3("../internals/is-object"), h = e3("../internals/object-define-property").f, e3 = e3("../internals/copy-constructor-properties"), p = c.Symbol;
          !u || "function" != typeof p || "description" in p.prototype && void 0 === p().description || (o2 = {}, e3(n2 = function() {
            var e4 = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]), t4 = this instanceof n2 ? new p(e4) : void 0 === e4 ? p() : p(e4);
            return "" === e4 && (o2[t4] = true), t4;
          }, p), (c = n2.prototype = p.prototype).constructor = n2, s3 = c.toString, i2 = "Symbol(test)" == String(p("test")), a = /^Symbol\((.*)\)[^)]+$/, h(c, "description", { configurable: true, get: function() {
            var e4 = f(this) ? this.valueOf() : this, t4 = s3.call(e4);
            return d(o2, e4) ? "" : "" === (e4 = i2 ? t4.slice(7, -1) : t4.replace(a, "$1")) ? void 0 : e4;
          } }), l({ global: true, forced: true }, { Symbol: n2 }));
        }, { "../internals/copy-constructor-properties": 33, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 59, "../internals/has": 60, "../internals/is-object": 74, "../internals/object-define-property": 92 }], 201: [function(e3, t3, r3) {
          e3("../internals/define-well-known-symbol")("iterator");
        }, { "../internals/define-well-known-symbol": 42 }], 202: [function(e3, D, F) {
          "use strict";
          function o2(e4, t4) {
            var r4 = M[e4] = h(w[_]);
            return ie(r4, { type: j, tag: e4, description: t4 }), s3 || (r4.description = t4), r4;
          }
          function r3(t4, e4) {
            u(t4);
            var r4 = c(e4), e4 = q(r4).concat(I(r4));
            return v(e4, function(e5) {
              s3 && !R.call(r4, e5) || L(t4, e5, r4[e5]);
            }), t4;
          }
          function t3(e4, t4) {
            var r4, e4 = c(e4), t4 = d(t4, true);
            if (e4 !== x || !l(M, t4) || l(T, t4))
              return !(r4 = le(e4, t4)) || !l(M, t4) || l(e4, b) && e4[b][t4] || (r4.enumerable = true), r4;
          }
          function U(e4) {
            var e4 = ue(c(e4)), t4 = [];
            return v(e4, function(e5) {
              l(M, e5) || l(ee, e5) || t4.push(e5);
            }), t4;
          }
          var n2 = e3("../internals/export"), N = e3("../internals/global"), B = e3("../internals/get-built-in"), G = e3("../internals/is-pure"), s3 = e3("../internals/descriptors"), i2 = e3("../internals/native-symbol"), V = e3("../internals/use-symbol-as-uid"), a = e3("../internals/fails"), l = e3("../internals/has"), z = e3("../internals/is-array"), H = e3("../internals/is-object"), u = e3("../internals/an-object"), W = e3("../internals/to-object"), c = e3("../internals/to-indexed-object"), d = e3("../internals/to-primitive"), f = e3("../internals/create-property-descriptor"), h = e3("../internals/object-create"), q = e3("../internals/object-keys"), X = e3("../internals/object-get-own-property-names"), Y = e3("../internals/object-get-own-property-names-external"), p = e3("../internals/object-get-own-property-symbols"), Z = e3("../internals/object-get-own-property-descriptor"), Q = e3("../internals/object-define-property"), J = e3("../internals/object-property-is-enumerable"), K = e3("../internals/create-non-enumerable-property"), m = e3("../internals/redefine"), y = e3("../internals/shared"), $6 = e3("../internals/shared-key"), ee = e3("../internals/hidden-keys"), te = e3("../internals/uid"), re = e3("../internals/well-known-symbol"), oe = e3("../internals/well-known-symbol-wrapped"), ne = e3("../internals/define-well-known-symbol"), se = e3("../internals/set-to-string-tag"), g = e3("../internals/internal-state"), v = e3("../internals/array-iteration").forEach, b = $6("hidden"), j = "Symbol", _ = "prototype", e3 = re("toPrimitive"), ie = g.set, ae = g.getterFor(j), x = Object[_], w = N.Symbol, S = B("JSON", "stringify"), le = Z.f, E = Q.f, ue = Y.f, ce = J.f, M = y("symbols"), T = y("op-symbols"), k = y("string-to-symbol-registry"), O = y("symbol-to-string-registry"), $6 = y("wks"), g = N.QObject, C = !g || !g[_] || !g[_].findChild, A = s3 && a(function() {
            return 7 != h(E({}, "a", { get: function() {
              return E(this, "a", { value: 7 }).a;
            } })).a;
          }) ? function(e4, t4, r4) {
            var o3 = le(x, t4);
            o3 && delete x[t4], E(e4, t4, r4), o3 && e4 !== x && E(x, t4, o3);
          } : E, P = V ? function(e4) {
            return "symbol" == typeof e4;
          } : function(e4) {
            return Object(e4) instanceof w;
          }, L = function(e4, t4, r4) {
            e4 === x && L(T, t4, r4), u(e4);
            t4 = d(t4, true);
            return u(r4), (l(M, t4) ? (r4.enumerable ? (l(e4, b) && e4[b][t4] && (e4[b][t4] = false), r4 = h(r4, { enumerable: f(0, false) })) : (l(e4, b) || E(e4, b, f(1, {})), e4[b][t4] = true), A) : E)(e4, t4, r4);
          }, R = function(e4) {
            var e4 = d(e4, true), t4 = ce.call(this, e4);
            return !(this === x && l(M, e4) && !l(T, e4)) && (!(t4 || !l(this, e4) || !l(M, e4) || l(this, b) && this[b][e4]) || t4);
          }, I = function(e4) {
            var t4 = e4 === x, e4 = ue(t4 ? T : c(e4)), r4 = [];
            return v(e4, function(e5) {
              !l(M, e5) || t4 && !l(x, e5) || r4.push(M[e5]);
            }), r4;
          };
          i2 || (m((w = function() {
            if (this instanceof w)
              throw TypeError("Symbol is not a constructor");
            var e4 = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0, t4 = te(e4), r4 = function(e5) {
              this === x && r4.call(T, e5), l(this, b) && l(this[b], t4) && (this[b][t4] = false), A(this, t4, f(1, e5));
            };
            return s3 && C && A(x, t4, { configurable: true, set: r4 }), o2(t4, e4);
          })[_], "toString", function() {
            return ae(this).tag;
          }), m(w, "withoutSetter", function(e4) {
            return o2(te(e4), e4);
          }), J.f = R, Q.f = L, Z.f = t3, X.f = Y.f = U, p.f = I, oe.f = function(e4) {
            return o2(re(e4), e4);
          }, s3 && (E(w[_], "description", { configurable: true, get: function() {
            return ae(this).description;
          } }), G || m(x, "propertyIsEnumerable", R, { unsafe: true }))), n2({ global: true, wrap: true, forced: !i2, sham: !i2 }, { Symbol: w }), v(q($6), function(e4) {
            ne(e4);
          }), n2({ target: j, stat: true, forced: !i2 }, { for: function(e4) {
            var t4, e4 = String(e4);
            return l(k, e4) ? k[e4] : (t4 = w(e4), k[e4] = t4, O[t4] = e4, t4);
          }, keyFor: function(e4) {
            if (!P(e4))
              throw TypeError(e4 + " is not a symbol");
            if (l(O, e4))
              return O[e4];
          }, useSetter: function() {
            C = true;
          }, useSimple: function() {
            C = false;
          } }), n2({ target: "Object", stat: true, forced: !i2, sham: !s3 }, { create: function(e4, t4) {
            return void 0 === t4 ? h(e4) : r3(h(e4), t4);
          }, defineProperty: L, defineProperties: r3, getOwnPropertyDescriptor: t3 }), n2({ target: "Object", stat: true, forced: !i2 }, { getOwnPropertyNames: U, getOwnPropertySymbols: I }), n2({ target: "Object", stat: true, forced: a(function() {
            p.f(1);
          }) }, { getOwnPropertySymbols: function(e4) {
            return p.f(W(e4));
          } }), S && n2({ target: "JSON", stat: true, forced: !i2 || a(function() {
            var e4 = w();
            return "[null]" != S([e4]) || "{}" != S({ a: e4 }) || "{}" != S(Object(e4));
          }) }, { stringify: function(e4, t4, r4) {
            for (var o3, n3 = [e4], s4 = 1; s4 < arguments.length; )
              n3.push(arguments[s4++]);
            if ((H(o3 = t4) || void 0 !== e4) && !P(e4))
              return z(t4) || (t4 = function(e5, t5) {
                if ("function" == typeof o3 && (t5 = o3.call(this, e5, t5)), !P(t5))
                  return t5;
              }), n3[1] = t4, S.apply(null, n3);
          } }), w[_][e3] || K(w[_], e3, w[_].valueOf), se(w, j), ee[b] = true;
        }, { "../internals/an-object": 10, "../internals/array-iteration": 19, "../internals/create-non-enumerable-property": 38, "../internals/create-property-descriptor": 39, "../internals/define-well-known-symbol": 42, "../internals/descriptors": 43, "../internals/export": 50, "../internals/fails": 51, "../internals/get-built-in": 56, "../internals/global": 59, "../internals/has": 60, "../internals/hidden-keys": 61, "../internals/internal-state": 70, "../internals/is-array": 72, "../internals/is-object": 74, "../internals/is-pure": 75, "../internals/native-symbol": 83, "../internals/object-create": 90, "../internals/object-define-property": 92, "../internals/object-get-own-property-descriptor": 93, "../internals/object-get-own-property-names": 95, "../internals/object-get-own-property-names-external": 94, "../internals/object-get-own-property-symbols": 96, "../internals/object-keys": 99, "../internals/object-property-is-enumerable": 100, "../internals/redefine": 108, "../internals/set-to-string-tag": 117, "../internals/shared": 120, "../internals/shared-key": 118, "../internals/to-indexed-object": 134, "../internals/to-object": 137, "../internals/to-primitive": 140, "../internals/uid": 145, "../internals/use-symbol-as-uid": 146, "../internals/well-known-symbol": 148, "../internals/well-known-symbol-wrapped": 147 }], 203: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-copy-within"), s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("copyWithin", function(e4, t4) {
            return n2.call(s3(this), e4, t4, 2 < arguments.length ? arguments[2] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-copy-within": 14 }], 204: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-iteration").every, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("every", function(e4) {
            return n2(s3(this), e4, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 205: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-fill"), s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("fill", function(e4) {
            return n2.apply(s3(this), arguments);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-fill": 15 }], 206: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), s3 = e3("../internals/array-iteration").filter, i2 = e3("../internals/species-constructor"), a = o2.aTypedArray, l = o2.aTypedArrayConstructor;
          (0, o2.exportTypedArrayMethod)("filter", function(e4) {
            for (var t4 = s3(a(this), e4, 1 < arguments.length ? arguments[1] : void 0), e4 = i2(this, this.constructor), r4 = 0, o3 = t4.length, n2 = new (l(e4))(o3); r4 < o3; )
              n2[r4] = t4[r4++];
            return n2;
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/species-constructor": 121 }], 207: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-iteration").findIndex, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("findIndex", function(e4) {
            return n2(s3(this), e4, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 208: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-iteration").find, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("find", function(e4) {
            return n2(s3(this), e4, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 209: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Float32", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          });
        }, { "../internals/typed-array-constructor": 142 }], 210: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Float64", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          });
        }, { "../internals/typed-array-constructor": 142 }], 211: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-iteration").forEach, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("forEach", function(e4) {
            n2(s3(this), e4, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 212: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-includes").includes, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("includes", function(e4) {
            return n2(s3(this), e4, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-includes": 18 }], 213: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-includes").indexOf, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("indexOf", function(e4) {
            return n2(s3(this), e4, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-includes": 18 }], 214: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Int16", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          });
        }, { "../internals/typed-array-constructor": 142 }], 215: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Int32", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          });
        }, { "../internals/typed-array-constructor": 142 }], 216: [function(e3, t3, r3) {
          "use strict";
          function o2() {
            return a.call(c(this));
          }
          var n2 = e3("../internals/global"), s3 = e3("../internals/array-buffer-view-core"), i2 = e3("../modules/es.array.iterator"), e3 = e3("../internals/well-known-symbol")("iterator"), n2 = n2.Uint8Array, a = i2.values, l = i2.keys, u = i2.entries, c = s3.aTypedArray, i2 = s3.exportTypedArrayMethod, s3 = n2 && n2.prototype[e3], n2 = !!s3 && ("values" == s3.name || null == s3.name);
          i2("entries", function() {
            return u.call(c(this));
          }), i2("keys", function() {
            return l.call(c(this));
          }), i2("values", o2, !n2), i2(e3, o2, !n2);
        }, { "../internals/array-buffer-view-core": 12, "../internals/global": 59, "../internals/well-known-symbol": 148, "../modules/es.array.iterator": 160 }], 217: [function(e3, t3, r3) {
          "use strict";
          var e3 = e3("../internals/array-buffer-view-core"), o2 = e3.aTypedArray, e3 = e3.exportTypedArrayMethod, n2 = [].join;
          e3("join", function(e4) {
            return n2.apply(o2(this), arguments);
          });
        }, { "../internals/array-buffer-view-core": 12 }], 218: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-last-index-of"), s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("lastIndexOf", function(e4) {
            return n2.apply(s3(this), arguments);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-last-index-of": 20 }], 219: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-iteration").map, s3 = e3("../internals/species-constructor"), i2 = o2.aTypedArray, a = o2.aTypedArrayConstructor;
          (0, o2.exportTypedArrayMethod)("map", function(e4) {
            return n2(i2(this), e4, 1 < arguments.length ? arguments[1] : void 0, function(e5, t4) {
              return new (a(s3(e5, e5.constructor)))(t4);
            });
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19, "../internals/species-constructor": 121 }], 220: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-reduce").right, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("reduceRight", function(e4) {
            return n2(s3(this), e4, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-reduce": 24 }], 221: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-reduce").left, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("reduce", function(e4) {
            return n2(s3(this), e4, arguments.length, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-reduce": 24 }], 222: [function(e3, t3, r3) {
          "use strict";
          var e3 = e3("../internals/array-buffer-view-core"), n2 = e3.aTypedArray, e3 = e3.exportTypedArrayMethod, s3 = Math.floor;
          e3("reverse", function() {
            for (var e4, t4 = n2(this).length, r4 = s3(t4 / 2), o2 = 0; o2 < r4; )
              e4 = this[o2], this[o2++] = this[--t4], this[t4] = e4;
            return this;
          });
        }, { "../internals/array-buffer-view-core": 12 }], 223: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), i2 = e3("../internals/to-length"), a = e3("../internals/to-offset"), l = e3("../internals/to-object"), e3 = e3("../internals/fails"), u = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("set", function(e4) {
            u(this);
            var t4 = a(1 < arguments.length ? arguments[1] : void 0, 1), r4 = this.length, o3 = l(e4), n2 = i2(o3.length), s3 = 0;
            if (r4 < n2 + t4)
              throw RangeError("Wrong length");
            for (; s3 < n2; )
              this[t4 + s3] = o3[s3++];
          }, e3(function() {
            new Int8Array(1).set({});
          }));
        }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/to-length": 136, "../internals/to-object": 137, "../internals/to-offset": 138 }], 224: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), i2 = e3("../internals/species-constructor"), e3 = e3("../internals/fails"), a = o2.aTypedArray, l = o2.aTypedArrayConstructor, o2 = o2.exportTypedArrayMethod, u = [].slice;
          o2("slice", function(e4, t4) {
            for (var r4 = u.call(a(this), e4, t4), e4 = i2(this, this.constructor), o3 = 0, n2 = r4.length, s3 = new (l(e4))(n2); o3 < n2; )
              s3[o3] = r4[o3++];
            return s3;
          }, e3(function() {
            new Int8Array(1).slice();
          }));
        }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/species-constructor": 121 }], 225: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/array-iteration").some, s3 = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("some", function(e4) {
            return n2(s3(this), e4, 1 < arguments.length ? arguments[1] : void 0);
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/array-iteration": 19 }], 226: [function(e3, t3, r3) {
          "use strict";
          var e3 = e3("../internals/array-buffer-view-core"), o2 = e3.aTypedArray, e3 = e3.exportTypedArrayMethod, n2 = [].sort;
          e3("sort", function(e4) {
            return n2.call(o2(this), e4);
          });
        }, { "../internals/array-buffer-view-core": 12 }], 227: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core"), n2 = e3("../internals/to-length"), s3 = e3("../internals/to-absolute-index"), i2 = e3("../internals/species-constructor"), a = o2.aTypedArray;
          (0, o2.exportTypedArrayMethod)("subarray", function(e4, t4) {
            var r4 = a(this), o3 = r4.length, e4 = s3(e4, o3);
            return new (i2(r4, r4.constructor))(r4.buffer, r4.byteOffset + e4 * r4.BYTES_PER_ELEMENT, n2((void 0 === t4 ? o3 : s3(t4, o3)) - e4));
          });
        }, { "../internals/array-buffer-view-core": 12, "../internals/species-constructor": 121, "../internals/to-absolute-index": 132, "../internals/to-length": 136 }], 228: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/global"), n2 = e3("../internals/array-buffer-view-core"), e3 = e3("../internals/fails"), s3 = o2.Int8Array, i2 = n2.aTypedArray, o2 = n2.exportTypedArrayMethod, a = [].toLocaleString, l = [].slice, u = !!s3 && e3(function() {
            a.call(new s3(1));
          });
          o2("toLocaleString", function() {
            return a.apply(u ? l.call(i2(this)) : i2(this), arguments);
          }, e3(function() {
            return [1, 2].toLocaleString() != new s3([1, 2]).toLocaleString();
          }) || !e3(function() {
            s3.prototype.toLocaleString.call([1, 2]);
          }));
        }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/global": 59 }], 229: [function(e3, t3, r3) {
          "use strict";
          var o2 = e3("../internals/array-buffer-view-core").exportTypedArrayMethod, n2 = e3("../internals/fails"), e3 = e3("../internals/global").Uint8Array, e3 = e3 && e3.prototype || {}, s3 = [].toString, i2 = [].join, n2 = (n2(function() {
            s3.call({});
          }) && (s3 = function() {
            return i2.call(this);
          }), e3.toString != s3);
          o2("toString", s3, n2);
        }, { "../internals/array-buffer-view-core": 12, "../internals/fails": 51, "../internals/global": 59 }], 230: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Uint16", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          });
        }, { "../internals/typed-array-constructor": 142 }], 231: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Uint32", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          });
        }, { "../internals/typed-array-constructor": 142 }], 232: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Uint8", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          });
        }, { "../internals/typed-array-constructor": 142 }], 233: [function(e3, t3, r3) {
          e3("../internals/typed-array-constructor")("Uint8", function(o2) {
            return function(e4, t4, r4) {
              return o2(this, e4, t4, r4);
            };
          }, true);
        }, { "../internals/typed-array-constructor": 142 }], 234: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return function() {
              return e4(this, arguments.length ? arguments[0] : void 0);
            };
          }
          var n2, s3, i2, a, l, u = e3("../internals/global"), c = e3("../internals/redefine-all"), d = e3("../internals/internal-metadata"), f = e3("../internals/collection"), h = e3("../internals/collection-weak"), p = e3("../internals/is-object"), m = e3("../internals/internal-state").enforce, e3 = e3("../internals/native-weak-map"), u = !u.ActiveXObject && "ActiveXObject" in u, y = Object.isExtensible, t3 = t3.exports = f("WeakMap", o2, h);
          e3 && u && (n2 = h.getConstructor(o2, "WeakMap", true), d.REQUIRED = true, f = t3.prototype, s3 = f.delete, i2 = f.has, a = f.get, l = f.set, c(f, { delete: function(e4) {
            var t4;
            return p(e4) && !y(e4) ? ((t4 = m(this)).frozen || (t4.frozen = new n2()), s3.call(this, e4) || t4.frozen.delete(e4)) : s3.call(this, e4);
          }, has: function(e4) {
            var t4;
            return p(e4) && !y(e4) ? ((t4 = m(this)).frozen || (t4.frozen = new n2()), i2.call(this, e4) || t4.frozen.has(e4)) : i2.call(this, e4);
          }, get: function(e4) {
            var t4;
            return !p(e4) || y(e4) || ((t4 = m(this)).frozen || (t4.frozen = new n2()), i2.call(this, e4)) ? a.call(this, e4) : t4.frozen.get(e4);
          }, set: function(e4, t4) {
            var r4;
            return !p(e4) || y(e4) || ((r4 = m(this)).frozen || (r4.frozen = new n2()), i2.call(this, e4)) ? l.call(this, e4, t4) : r4.frozen.set(e4, t4), this;
          } }));
        }, { "../internals/collection": 32, "../internals/collection-weak": 31, "../internals/global": 59, "../internals/internal-metadata": 69, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/native-weak-map": 85, "../internals/redefine-all": 107 }], 235: [function(e3, t3, r3) {
          var o2, n2 = e3("../internals/global"), s3 = e3("../internals/dom-iterables"), i2 = e3("../internals/array-for-each"), a = e3("../internals/create-non-enumerable-property");
          for (o2 in s3) {
            var l = n2[o2], l = l && l.prototype;
            if (l && l.forEach !== i2)
              try {
                a(l, "forEach", i2);
              } catch (e4) {
                l.forEach = i2;
              }
          }
        }, { "../internals/array-for-each": 16, "../internals/create-non-enumerable-property": 38, "../internals/dom-iterables": 45, "../internals/global": 59 }], 236: [function(e3, t3, r3) {
          var o2, n2 = e3("../internals/global"), s3 = e3("../internals/dom-iterables"), i2 = e3("../modules/es.array.iterator"), a = e3("../internals/create-non-enumerable-property"), e3 = e3("../internals/well-known-symbol"), l = e3("iterator"), u = e3("toStringTag"), c = i2.values;
          for (o2 in s3) {
            var d = n2[o2], f = d && d.prototype;
            if (f) {
              if (f[l] !== c)
                try {
                  a(f, l, c);
                } catch (e4) {
                  f[l] = c;
                }
              if (f[u] || a(f, u, o2), s3[o2]) {
                for (var h in i2)
                  if (f[h] !== i2[h])
                    try {
                      a(f, h, i2[h]);
                    } catch (e4) {
                      f[h] = i2[h];
                    }
              }
            }
          }
        }, { "../internals/create-non-enumerable-property": 38, "../internals/dom-iterables": 45, "../internals/global": 59, "../internals/well-known-symbol": 148, "../modules/es.array.iterator": 160 }], 237: [function(e3, t3, D) {
          "use strict";
          e3("../modules/es.array.iterator");
          function n2(t4) {
            try {
              return decodeURIComponent(t4);
            } catch (e4) {
              return t4;
            }
          }
          function r3(e4) {
            return B[e4];
          }
          function s3(e4) {
            return encodeURIComponent(e4).replace(N, r3);
          }
          function c(e4) {
            this.entries.length = 0, R(this.entries, e4);
          }
          function u(e4, t4) {
            if (e4 < t4)
              throw TypeError("Not enough arguments");
          }
          function d() {
            y(this, d, k);
            var e4, t4, r4, o3, n3, s4, i3, a2, l2 = 0 < arguments.length ? arguments[0] : void 0, u2 = [];
            if (C(this, { type: k, entries: u2, updateURL: function() {
            }, updateSearchParams: c }), void 0 !== l2)
              if (_(l2))
                if ("function" == typeof (e4 = E(l2)))
                  for (r4 = (t4 = e4.call(l2)).next; !(o3 = r4.call(t4)).done; ) {
                    if ((s4 = (n3 = (o3 = S(j(o3.value))).next).call(o3)).done || (i3 = n3.call(o3)).done || !n3.call(o3).done)
                      throw TypeError("Expected sequence with length 2");
                    u2.push({ key: s4.value + "", value: i3.value + "" });
                  }
                else
                  for (a2 in l2)
                    g(l2, a2) && u2.push({ key: a2, value: l2[a2] + "" });
              else
                R(u2, "string" == typeof l2 ? "?" === l2.charAt(0) ? l2.slice(1) : l2 : l2 + "");
          }
          var o2 = e3("../internals/export"), i2 = e3("../internals/get-built-in"), a = e3("../internals/native-url"), l = e3("../internals/redefine"), f = e3("../internals/redefine-all"), h = e3("../internals/set-to-string-tag"), p = e3("../internals/create-iterator-constructor"), m = e3("../internals/internal-state"), y = e3("../internals/an-instance"), g = e3("../internals/has"), v = e3("../internals/function-bind-context"), b = e3("../internals/classof"), j = e3("../internals/an-object"), _ = e3("../internals/is-object"), x = e3("../internals/object-create"), w = e3("../internals/create-property-descriptor"), S = e3("../internals/get-iterator"), E = e3("../internals/get-iterator-method"), e3 = e3("../internals/well-known-symbol"), M = i2("fetch"), T = i2("Headers"), i2 = e3("iterator"), k = "URLSearchParams", O = k + "Iterator", C = m.set, A = m.getterFor(k), F = m.getterFor(O), U = /\+/g, P = Array(4), L = function(e4) {
            var t4, r4 = e4.replace(U, " "), o3 = 4;
            try {
              return decodeURIComponent(r4);
            } catch (e5) {
              for (; o3; )
                r4 = r4.replace((t4 = o3--, P[t4 - 1] || (P[t4 - 1] = RegExp("((?:%[\\da-f]{2}){" + t4 + "})", "gi"))), n2);
              return r4;
            }
          }, N = /[!'()~]|%20/g, B = { "!": "%21", "'": "%27", "(": "%28", ")": "%29", "~": "%7E", "%20": "+" }, R = function(e4, t4) {
            if (t4)
              for (var r4, o3 = t4.split("&"), n3 = 0; n3 < o3.length; )
                (r4 = o3[n3++]).length && (r4 = r4.split("="), e4.push({ key: L(r4.shift()), value: L(r4.join("=")) }));
          }, I = p(function(e4, t4) {
            C(this, { type: O, iterator: S(A(e4).entries), kind: t4 });
          }, "Iterator", function() {
            var e4 = F(this), t4 = e4.kind, e4 = e4.iterator.next(), r4 = e4.value;
            return e4.done || (e4.value = "keys" === t4 ? r4.key : "values" === t4 ? r4.value : [r4.key, r4.value]), e4;
          }), e3 = d.prototype;
          f(e3, { append: function(e4, t4) {
            u(arguments.length, 2);
            var r4 = A(this);
            r4.entries.push({ key: e4 + "", value: t4 + "" }), r4.updateURL();
          }, delete: function(e4) {
            u(arguments.length, 1);
            for (var t4 = A(this), r4 = t4.entries, o3 = e4 + "", n3 = 0; n3 < r4.length; )
              r4[n3].key === o3 ? r4.splice(n3, 1) : n3++;
            t4.updateURL();
          }, get: function(e4) {
            u(arguments.length, 1);
            for (var t4 = A(this).entries, r4 = e4 + "", o3 = 0; o3 < t4.length; o3++)
              if (t4[o3].key === r4)
                return t4[o3].value;
            return null;
          }, getAll: function(e4) {
            u(arguments.length, 1);
            for (var t4 = A(this).entries, r4 = e4 + "", o3 = [], n3 = 0; n3 < t4.length; n3++)
              t4[n3].key === r4 && o3.push(t4[n3].value);
            return o3;
          }, has: function(e4) {
            u(arguments.length, 1);
            for (var t4 = A(this).entries, r4 = e4 + "", o3 = 0; o3 < t4.length; )
              if (t4[o3++].key === r4)
                return true;
            return false;
          }, set: function(e4, t4) {
            u(arguments.length, 1);
            for (var r4, o3 = A(this), n3 = o3.entries, s4 = false, i3 = e4 + "", a2 = t4 + "", l2 = 0; l2 < n3.length; l2++)
              (r4 = n3[l2]).key === i3 && (s4 ? n3.splice(l2--, 1) : (s4 = true, r4.value = a2));
            s4 || n3.push({ key: i3, value: a2 }), o3.updateURL();
          }, sort: function() {
            for (var e4, t4, r4 = A(this), o3 = r4.entries, n3 = o3.slice(), s4 = o3.length = 0; s4 < n3.length; s4++) {
              for (e4 = n3[s4], t4 = 0; t4 < s4; t4++)
                if (o3[t4].key > e4.key) {
                  o3.splice(t4, 0, e4);
                  break;
                }
              t4 === s4 && o3.push(e4);
            }
            r4.updateURL();
          }, forEach: function(e4) {
            for (var t4, r4 = A(this).entries, o3 = v(e4, 1 < arguments.length ? arguments[1] : void 0, 3), n3 = 0; n3 < r4.length; )
              o3((t4 = r4[n3++]).value, t4.key, this);
          }, keys: function() {
            return new I(this, "keys");
          }, values: function() {
            return new I(this, "values");
          }, entries: function() {
            return new I(this, "entries");
          } }, { enumerable: true }), l(e3, i2, e3.entries), l(e3, "toString", function() {
            for (var e4, t4 = A(this).entries, r4 = [], o3 = 0; o3 < t4.length; )
              e4 = t4[o3++], r4.push(s3(e4.key) + "=" + s3(e4.value));
            return r4.join("&");
          }, { enumerable: true }), h(d, k), o2({ global: true, forced: !a }, { URLSearchParams: d }), a || "function" != typeof M || "function" != typeof T || o2({ global: true, enumerable: true, forced: true }, { fetch: function(e4) {
            var t4, r4, o3, e4 = [e4];
            return 1 < arguments.length && (_(t4 = arguments[1]) && (r4 = t4.body, b(r4) === k && ((o3 = t4.headers ? new T(t4.headers) : new T()).has("content-type") || o3.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"), t4 = x(t4, { body: w(0, String(r4)), headers: w(0, o3) }))), e4.push(t4)), M.apply(this, e4);
          } }), t3.exports = { URLSearchParams: d, getState: A };
        }, { "../internals/an-instance": 9, "../internals/an-object": 10, "../internals/classof": 29, "../internals/create-iterator-constructor": 37, "../internals/create-property-descriptor": 39, "../internals/export": 50, "../internals/function-bind-context": 54, "../internals/get-built-in": 56, "../internals/get-iterator": 58, "../internals/get-iterator-method": 57, "../internals/has": 60, "../internals/internal-state": 70, "../internals/is-object": 74, "../internals/native-url": 84, "../internals/object-create": 90, "../internals/redefine": 108, "../internals/redefine-all": 107, "../internals/set-to-string-tag": 117, "../internals/well-known-symbol": 148, "../modules/es.array.iterator": 160 }], 238: [function(e3, y, F) {
          "use strict";
          e3("../modules/es.string.iterator");
          function c(e4) {
            var t4, r4, o3, n3;
            if ("number" == typeof e4) {
              for (t4 = [], r4 = 0; r4 < 4; r4++)
                t4.unshift(e4 % 256), e4 = Y(e4 / 256);
              return t4.join(".");
            }
            if ("object" != typeof e4)
              return e4;
            for (t4 = "", o3 = le(e4), r4 = 0; r4 < 8; r4++)
              n3 && 0 === e4[r4] || (n3 = n3 && false, o3 === r4 ? (t4 += r4 ? ":" : "::", n3 = true) : (t4 += e4[r4].toString(16), r4 < 7 && (t4 += ":")));
            return "[" + t4 + "]";
          }
          function n2(e4) {
            return !e4.host || e4.cannotBeABaseURL || "file" == e4.scheme;
          }
          function a(e4, t4, r4, o3) {
            var n3, s4, i3, a2 = r4 || me, l2 = 0, u2 = "", c2 = false, d2 = false, f2 = false;
            for (r4 || (e4.scheme = "", e4.username = "", e4.password = "", e4.host = null, e4.port = null, e4.path = [], e4.query = null, e4.fragment = null, e4.cannotBeABaseURL = false, t4 = t4.replace(ie, "")), t4 = t4.replace(ae, ""), n3 = b(t4); l2 <= n3.length; ) {
              switch (s4 = n3[l2], a2) {
                case me:
                  if (!s4 || !K.test(s4)) {
                    if (r4)
                      return j;
                    a2 = ge;
                    continue;
                  }
                  u2 += s4.toLowerCase(), a2 = ye;
                  break;
                case ye:
                  if (s4 && ($6.test(s4) || "+" == s4 || "-" == s4 || "." == s4))
                    u2 += s4.toLowerCase();
                  else {
                    if (":" != s4) {
                      if (r4)
                        return j;
                      u2 = "", a2 = ge, l2 = 0;
                      continue;
                    }
                    if (r4 && (k(e4) != v(T, u2) || "file" == u2 && (O(e4) || null !== e4.port) || "file" == e4.scheme && !e4.host))
                      return;
                    if (e4.scheme = u2, r4)
                      return void (k(e4) && T[e4.scheme] == e4.port && (e4.port = null));
                    u2 = "", "file" == e4.scheme ? a2 = Me : k(e4) && o3 && o3.scheme == e4.scheme ? a2 = ve : k(e4) ? a2 = xe : "/" == n3[l2 + 1] ? (a2 = be, l2++) : (e4.cannotBeABaseURL = true, e4.path.push(""), a2 = Oe);
                  }
                  break;
                case ge:
                  if (!o3 || o3.cannotBeABaseURL && "#" != s4)
                    return j;
                  if (o3.cannotBeABaseURL && "#" == s4) {
                    e4.scheme = o3.scheme, e4.path = o3.path.slice(), e4.query = o3.query, e4.fragment = "", e4.cannotBeABaseURL = true, a2 = D;
                    break;
                  }
                  a2 = "file" == o3.scheme ? Me : je;
                  continue;
                case ve:
                  if ("/" != s4 || "/" != n3[l2 + 1]) {
                    a2 = je;
                    continue;
                  }
                  a2 = A, l2++;
                  break;
                case be:
                  if ("/" == s4) {
                    a2 = P;
                    break;
                  }
                  a2 = R;
                  continue;
                case je:
                  if (e4.scheme = o3.scheme, s4 == g)
                    e4.username = o3.username, e4.password = o3.password, e4.host = o3.host, e4.port = o3.port, e4.path = o3.path.slice(), e4.query = o3.query;
                  else if ("/" == s4 || "\\" == s4 && k(e4))
                    a2 = _e;
                  else if ("?" == s4)
                    e4.username = o3.username, e4.password = o3.password, e4.host = o3.host, e4.port = o3.port, e4.path = o3.path.slice(), e4.query = "", a2 = I;
                  else {
                    if ("#" != s4) {
                      e4.username = o3.username, e4.password = o3.password, e4.host = o3.host, e4.port = o3.port, e4.path = o3.path.slice(), e4.path.pop(), a2 = R;
                      continue;
                    }
                    e4.username = o3.username, e4.password = o3.password, e4.host = o3.host, e4.port = o3.port, e4.path = o3.path.slice(), e4.query = o3.query, e4.fragment = "", a2 = D;
                  }
                  break;
                case _e:
                  if (!k(e4) || "/" != s4 && "\\" != s4) {
                    if ("/" != s4) {
                      e4.username = o3.username, e4.password = o3.password, e4.host = o3.host, e4.port = o3.port, a2 = R;
                      continue;
                    }
                    a2 = P;
                  } else
                    a2 = A;
                  break;
                case xe:
                  if (a2 = A, "/" != s4 || "/" != u2.charAt(l2 + 1))
                    continue;
                  l2++;
                  break;
                case A:
                  if ("/" == s4 || "\\" == s4)
                    break;
                  a2 = P;
                  continue;
                case P:
                  if ("@" == s4) {
                    c2 && (u2 = "%40" + u2);
                    for (var c2 = true, h2 = b(u2), p2 = 0; p2 < h2.length; p2++) {
                      var m2 = h2[p2];
                      ":" != m2 || f2 ? (m2 = M(m2, E), f2 ? e4.password += m2 : e4.username += m2) : f2 = true;
                    }
                    u2 = "";
                  } else if (s4 == g || "/" == s4 || "?" == s4 || "#" == s4 || "\\" == s4 && k(e4)) {
                    if (c2 && "" == u2)
                      return Q;
                    l2 -= b(u2).length + 1, u2 = "", a2 = we;
                  } else
                    u2 += s4;
                  break;
                case we:
                case Se:
                  if (r4 && "file" == e4.scheme) {
                    a2 = ke;
                    continue;
                  }
                  if (":" != s4 || d2) {
                    if (s4 == g || "/" == s4 || "?" == s4 || "#" == s4 || "\\" == s4 && k(e4)) {
                      if (k(e4) && "" == u2)
                        return _;
                      if (r4 && "" == u2 && (O(e4) || null !== e4.port))
                        return;
                      if (i3 = w(e4, u2))
                        return i3;
                      if (u2 = "", a2 = L, r4)
                        return;
                      continue;
                    }
                    "[" == s4 ? d2 = true : "]" == s4 && (d2 = false), u2 += s4;
                  } else {
                    if ("" == u2)
                      return _;
                    if (i3 = w(e4, u2))
                      return i3;
                    if (u2 = "", a2 = Ee, r4 == Se)
                      return;
                  }
                  break;
                case Ee:
                  if (!x.test(s4)) {
                    if (s4 == g || "/" == s4 || "?" == s4 || "#" == s4 || "\\" == s4 && k(e4) || r4) {
                      if ("" != u2) {
                        var y2 = parseInt(u2, 10);
                        if (65535 < y2)
                          return J;
                        e4.port = k(e4) && y2 === T[e4.scheme] ? null : y2, u2 = "";
                      }
                      if (r4)
                        return;
                      a2 = L;
                      continue;
                    }
                    return J;
                  }
                  u2 += s4;
                  break;
                case Me:
                  if (e4.scheme = "file", "/" == s4 || "\\" == s4)
                    a2 = Te;
                  else {
                    if (!o3 || "file" != o3.scheme) {
                      a2 = R;
                      continue;
                    }
                    if (s4 == g)
                      e4.host = o3.host, e4.path = o3.path.slice(), e4.query = o3.query;
                    else if ("?" == s4)
                      e4.host = o3.host, e4.path = o3.path.slice(), e4.query = "", a2 = I;
                    else {
                      if ("#" != s4) {
                        de(n3.slice(l2).join("")) || (e4.host = o3.host, e4.path = o3.path.slice(), fe(e4)), a2 = R;
                        continue;
                      }
                      e4.host = o3.host, e4.path = o3.path.slice(), e4.query = o3.query, e4.fragment = "", a2 = D;
                    }
                  }
                  break;
                case Te:
                  if ("/" == s4 || "\\" == s4) {
                    a2 = ke;
                    break;
                  }
                  o3 && "file" == o3.scheme && !de(n3.slice(l2).join("")) && (C(o3.path[0], true) ? e4.path.push(o3.path[0]) : e4.host = o3.host), a2 = R;
                  continue;
                case ke:
                  if (s4 == g || "/" == s4 || "\\" == s4 || "?" == s4 || "#" == s4) {
                    if (!r4 && C(u2))
                      a2 = R;
                    else {
                      if ("" == u2) {
                        if (e4.host = "", r4)
                          return;
                      } else {
                        if (i3 = w(e4, u2))
                          return i3;
                        if ("localhost" == e4.host && (e4.host = ""), r4)
                          return;
                        u2 = "";
                      }
                      a2 = L;
                    }
                    continue;
                  }
                  u2 += s4;
                  break;
                case L:
                  if (k(e4)) {
                    if (a2 = R, "/" != s4 && "\\" != s4)
                      continue;
                  } else if (r4 || "?" != s4)
                    if (r4 || "#" != s4) {
                      if (s4 != g && (a2 = R, "/" != s4))
                        continue;
                    } else
                      e4.fragment = "", a2 = D;
                  else
                    e4.query = "", a2 = I;
                  break;
                case R:
                  if (s4 == g || "/" == s4 || "\\" == s4 && k(e4) || !r4 && ("?" == s4 || "#" == s4)) {
                    if (pe(u2) ? (fe(e4), "/" == s4 || "\\" == s4 && k(e4) || e4.path.push("")) : he(u2) ? "/" == s4 || "\\" == s4 && k(e4) || e4.path.push("") : ("file" == e4.scheme && !e4.path.length && C(u2) && (e4.host && (e4.host = ""), u2 = u2.charAt(0) + ":"), e4.path.push(u2)), u2 = "", "file" == e4.scheme && (s4 == g || "?" == s4 || "#" == s4))
                      for (; 1 < e4.path.length && "" === e4.path[0]; )
                        e4.path.shift();
                    "?" == s4 ? (e4.query = "", a2 = I) : "#" == s4 && (e4.fragment = "", a2 = D);
                  } else
                    u2 += M(s4, ce);
                  break;
                case Oe:
                  "?" == s4 ? (e4.query = "", a2 = I) : "#" == s4 ? (e4.fragment = "", a2 = D) : s4 != g && (e4.path[0] += M(s4, S));
                  break;
                case I:
                  r4 || "#" != s4 ? s4 != g && ("'" == s4 && k(e4) ? e4.query += "%27" : e4.query += "#" == s4 ? "%23" : M(s4, S)) : (e4.fragment = "", a2 = D);
                  break;
                case D:
                  s4 != g && (e4.fragment += M(s4, ue));
              }
              l2++;
            }
          }
          function l(e4) {
            var t4, r4, o3 = G(this, l, "URL"), n3 = 1 < arguments.length ? arguments[1] : void 0, e4 = String(e4), s4 = X(o3, { type: "URL" });
            if (void 0 !== n3) {
              if (n3 instanceof l)
                t4 = p(n3);
              else if (r4 = a(t4 = {}, String(n3)))
                throw TypeError(r4);
            }
            if (r4 = a(s4, e4, null, t4))
              throw TypeError(r4);
            var i3 = s4.searchParams = new q();
            (n3 = h(i3)).updateSearchParams(s4.query), n3.updateURL = function() {
              s4.query = String(i3) || null;
            }, u || (o3.href = m.call(o3), o3.origin = Ce.call(o3), o3.protocol = Ae.call(o3), o3.username = Pe.call(o3), o3.password = Le.call(o3), o3.host = Re.call(o3), o3.hostname = Ie.call(o3), o3.port = De.call(o3), o3.pathname = Fe.call(o3), o3.search = Ue.call(o3), o3.searchParams = Ne.call(o3), o3.hash = Be.call(o3));
          }
          function t3(e4, t4) {
            return { get: e4, set: t4, configurable: true, enumerable: true };
          }
          var g, r3, o2, U = e3("../internals/export"), u = e3("../internals/descriptors"), N = e3("../internals/native-url"), s3 = e3("../internals/global"), B = e3("../internals/object-define-properties"), i2 = e3("../internals/redefine"), G = e3("../internals/an-instance"), v = e3("../internals/has"), d = e3("../internals/object-assign"), b = e3("../internals/array-from"), V = e3("../internals/string-multibyte").codeAt, z = e3("../internals/string-punycode-to-ascii"), H = e3("../internals/set-to-string-tag"), W = e3("../modules/web.url-search-params"), e3 = e3("../internals/internal-state"), f = s3.URL, q = W.URLSearchParams, h = W.getState, X = e3.set, p = e3.getterFor("URL"), Y = Math.floor, Z = Math.pow, Q = "Invalid authority", j = "Invalid scheme", _ = "Invalid host", J = "Invalid port", K = /[A-Za-z]/, $6 = /[\d+-.A-Za-z]/, x = /\d/, ee = /^(0x|0X)/, te = /^[0-7]+$/, re = /^\d+$/, oe = /^[\dA-Fa-f]+$/, ne = /[\u0000\u0009\u000A\u000D #%/:?@[\\]]/, se = /[\u0000\u0009\u000A\u000D #/:?@[\\]]/, ie = /^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g, ae = /[\u0009\u000A\u000D]/g, w = function(e4, t4) {
            var r4, o3, n3;
            if ("[" == t4.charAt(0))
              return "]" == t4.charAt(t4.length - 1) && (r4 = function(e5) {
                var t5 = [0, 0, 0, 0, 0, 0, 0, 0], r5 = 0, o4 = null, n4 = 0, s4, i3, a2, l2, u2, c2, d2, f2 = function() {
                  return e5.charAt(n4);
                };
                if (f2() == ":") {
                  if (e5.charAt(1) != ":")
                    return;
                  n4 += 2;
                  r5++;
                  o4 = r5;
                }
                while (f2()) {
                  if (r5 == 8)
                    return;
                  if (f2() == ":") {
                    if (o4 !== null)
                      return;
                    n4++;
                    r5++;
                    o4 = r5;
                    continue;
                  }
                  s4 = i3 = 0;
                  while (i3 < 4 && oe.test(f2())) {
                    s4 = s4 * 16 + parseInt(f2(), 16);
                    n4++;
                    i3++;
                  }
                  if (f2() == ".") {
                    if (i3 == 0)
                      return;
                    n4 -= i3;
                    if (r5 > 6)
                      return;
                    a2 = 0;
                    while (f2()) {
                      l2 = null;
                      if (a2 > 0)
                        if (f2() == "." && a2 < 4)
                          n4++;
                        else
                          return;
                      if (!x.test(f2()))
                        return;
                      while (x.test(f2())) {
                        u2 = parseInt(f2(), 10);
                        if (l2 === null)
                          l2 = u2;
                        else if (l2 == 0)
                          return;
                        else
                          l2 = l2 * 10 + u2;
                        if (l2 > 255)
                          return;
                        n4++;
                      }
                      t5[r5] = t5[r5] * 256 + l2;
                      a2++;
                      if (a2 == 2 || a2 == 4)
                        r5++;
                    }
                    if (a2 != 4)
                      return;
                    break;
                  } else if (f2() == ":") {
                    n4++;
                    if (!f2())
                      return;
                  } else if (f2())
                    return;
                  t5[r5++] = s4;
                }
                if (o4 !== null) {
                  c2 = r5 - o4;
                  r5 = 7;
                  while (r5 != 0 && c2 > 0) {
                    d2 = t5[r5];
                    t5[r5--] = t5[o4 + c2 - 1];
                    t5[o4 + --c2] = d2;
                  }
                } else if (r5 != 8)
                  return;
                return t5;
              }(t4.slice(1, -1))) ? void (e4.host = r4) : _;
            if (k(e4))
              return t4 = z(t4), ne.test(t4) || null === (r4 = function(e5) {
                var t5 = e5.split("."), r5, o4, n4, s4, i3, a2, l2;
                if (t5.length && t5[t5.length - 1] == "")
                  t5.pop();
                if ((r5 = t5.length) > 4)
                  return e5;
                for (o4 = [], n4 = 0; n4 < r5; n4++) {
                  s4 = t5[n4];
                  if (s4 == "")
                    return e5;
                  i3 = 10;
                  if (s4.length > 1 && s4.charAt(0) == "0") {
                    i3 = ee.test(s4) ? 16 : 8;
                    s4 = s4.slice(i3 == 8 ? 1 : 2);
                  }
                  if (s4 === "")
                    a2 = 0;
                  else {
                    if (!(i3 == 10 ? re : i3 == 8 ? te : oe).test(s4))
                      return e5;
                    a2 = parseInt(s4, i3);
                  }
                  o4.push(a2);
                }
                for (n4 = 0; n4 < r5; n4++) {
                  a2 = o4[n4];
                  if (n4 == r5 - 1) {
                    if (a2 >= Z(256, 5 - r5))
                      return null;
                  } else if (a2 > 255)
                    return null;
                }
                for (l2 = o4.pop(), n4 = 0; n4 < o4.length; n4++)
                  l2 += o4[n4] * Z(256, 3 - n4);
                return l2;
              }(t4)) ? _ : void (e4.host = r4);
            if (se.test(t4))
              return _;
            for (r4 = "", o3 = b(t4), n3 = 0; n3 < o3.length; n3++)
              r4 += M(o3[n3], S);
            e4.host = r4;
          }, le = function(e4) {
            for (var t4 = null, r4 = 1, o3 = null, n3 = 0, s4 = 0; s4 < 8; s4++)
              0 !== e4[s4] ? (r4 < n3 && (t4 = o3, r4 = n3), o3 = null, n3 = 0) : (null === o3 && (o3 = s4), ++n3);
            return r4 < n3 && (t4 = o3, r4 = n3), t4;
          }, S = {}, ue = d({}, S, { " ": 1, '"': 1, "<": 1, ">": 1, "`": 1 }), ce = d({}, ue, { "#": 1, "?": 1, "{": 1, "}": 1 }), E = d({}, ce, { "/": 1, ":": 1, ";": 1, "=": 1, "@": 1, "[": 1, "\\": 1, "]": 1, "^": 1, "|": 1 }), M = function(e4, t4) {
            var r4 = V(e4, 0);
            return 32 < r4 && r4 < 127 && !v(t4, e4) ? e4 : encodeURIComponent(e4);
          }, T = { ftp: 21, file: null, http: 80, https: 443, ws: 80, wss: 443 }, k = function(e4) {
            return v(T, e4.scheme);
          }, O = function(e4) {
            return "" != e4.username || "" != e4.password;
          }, C = function(e4, t4) {
            return 2 == e4.length && K.test(e4.charAt(0)) && (":" == (e4 = e4.charAt(1)) || !t4 && "|" == e4);
          }, de = function(e4) {
            return 1 < e4.length && C(e4.slice(0, 2)) && (2 == e4.length || "/" === (e4 = e4.charAt(2)) || "\\" === e4 || "?" === e4 || "#" === e4);
          }, fe = function(e4) {
            var t4 = e4.path, r4 = t4.length;
            !r4 || "file" == e4.scheme && 1 == r4 && C(t4[0], true) || t4.pop();
          }, he = function(e4) {
            return "." === e4 || "%2e" === e4.toLowerCase();
          }, pe = function(e4) {
            return ".." === (e4 = e4.toLowerCase()) || "%2e." === e4 || ".%2e" === e4 || "%2e%2e" === e4;
          }, me = {}, ye = {}, ge = {}, ve = {}, be = {}, je = {}, _e = {}, xe = {}, A = {}, P = {}, we = {}, Se = {}, Ee = {}, Me = {}, Te = {}, ke = {}, L = {}, R = {}, Oe = {}, I = {}, D = {}, s3 = l.prototype, m = function() {
            var e4 = p(this), t4 = e4.scheme, r4 = e4.username, o3 = e4.password, n3 = e4.host, s4 = e4.port, i3 = e4.path, a2 = e4.query, l2 = e4.fragment, u2 = t4 + ":";
            return null !== n3 ? (u2 += "//", O(e4) && (u2 += r4 + (o3 ? ":" + o3 : "") + "@"), u2 += c(n3), null !== s4 && (u2 += ":" + s4)) : "file" == t4 && (u2 += "//"), u2 += e4.cannotBeABaseURL ? i3[0] : i3.length ? "/" + i3.join("/") : "", null !== a2 && (u2 += "?" + a2), null !== l2 && (u2 += "#" + l2), u2;
          }, Ce = function() {
            var e4 = p(this), t4 = e4.scheme, r4 = e4.port;
            if ("blob" == t4)
              try {
                return new URL(t4.path[0]).origin;
              } catch (e5) {
                return "null";
              }
            return "file" != t4 && k(e4) ? t4 + "://" + c(e4.host) + (null !== r4 ? ":" + r4 : "") : "null";
          }, Ae = function() {
            return p(this).scheme + ":";
          }, Pe = function() {
            return p(this).username;
          }, Le = function() {
            return p(this).password;
          }, Re = function() {
            var e4 = p(this), t4 = e4.host, e4 = e4.port;
            return null === t4 ? "" : null === e4 ? c(t4) : c(t4) + ":" + e4;
          }, Ie = function() {
            var e4 = p(this).host;
            return null === e4 ? "" : c(e4);
          }, De = function() {
            var e4 = p(this).port;
            return null === e4 ? "" : String(e4);
          }, Fe = function() {
            var e4 = p(this), t4 = e4.path;
            return e4.cannotBeABaseURL ? t4[0] : t4.length ? "/" + t4.join("/") : "";
          }, Ue = function() {
            var e4 = p(this).query;
            return e4 ? "?" + e4 : "";
          }, Ne = function() {
            return p(this).searchParams;
          }, Be = function() {
            var e4 = p(this).fragment;
            return e4 ? "#" + e4 : "";
          };
          u && B(s3, { href: t3(m, function(e4) {
            var t4 = p(this), e4 = String(e4), e4 = a(t4, e4);
            if (e4)
              throw TypeError(e4);
            h(t4.searchParams).updateSearchParams(t4.query);
          }), origin: t3(Ce), protocol: t3(Ae, function(e4) {
            var t4 = p(this);
            a(t4, String(e4) + ":", me);
          }), username: t3(Pe, function(e4) {
            var t4 = p(this), r4 = b(String(e4));
            if (!n2(t4)) {
              t4.username = "";
              for (var o3 = 0; o3 < r4.length; o3++)
                t4.username += M(r4[o3], E);
            }
          }), password: t3(Le, function(e4) {
            var t4 = p(this), r4 = b(String(e4));
            if (!n2(t4)) {
              t4.password = "";
              for (var o3 = 0; o3 < r4.length; o3++)
                t4.password += M(r4[o3], E);
            }
          }), host: t3(Re, function(e4) {
            var t4 = p(this);
            t4.cannotBeABaseURL || a(t4, String(e4), we);
          }), hostname: t3(Ie, function(e4) {
            var t4 = p(this);
            t4.cannotBeABaseURL || a(t4, String(e4), Se);
          }), port: t3(De, function(e4) {
            var t4 = p(this);
            n2(t4) || ("" == (e4 = String(e4)) ? t4.port = null : a(t4, e4, Ee));
          }), pathname: t3(Fe, function(e4) {
            var t4 = p(this);
            t4.cannotBeABaseURL || (t4.path = [], a(t4, e4 + "", L));
          }), search: t3(Ue, function(e4) {
            var t4 = p(this);
            "" == (e4 = String(e4)) ? t4.query = null : ("?" == e4.charAt(0) && (e4 = e4.slice(1)), t4.query = "", a(t4, e4, I)), h(t4.searchParams).updateSearchParams(t4.query);
          }), searchParams: t3(Ne), hash: t3(Be, function(e4) {
            var t4 = p(this);
            "" == (e4 = String(e4)) ? t4.fragment = null : ("#" == e4.charAt(0) && (e4 = e4.slice(1)), t4.fragment = "", a(t4, e4, D));
          }) }), i2(s3, "toJSON", function() {
            return m.call(this);
          }, { enumerable: true }), i2(s3, "toString", function() {
            return m.call(this);
          }, { enumerable: true }), f && (r3 = f.createObjectURL, o2 = f.revokeObjectURL, r3 && i2(l, "createObjectURL", function(e4) {
            return r3.apply(f, arguments);
          }), o2 && i2(l, "revokeObjectURL", function(e4) {
            return o2.apply(f, arguments);
          })), H(l, "URL"), U({ global: true, forced: !N, sham: !u }, { URL: l });
        }, { "../internals/an-instance": 9, "../internals/array-from": 17, "../internals/descriptors": 43, "../internals/export": 50, "../internals/global": 59, "../internals/has": 60, "../internals/internal-state": 70, "../internals/native-url": 84, "../internals/object-assign": 89, "../internals/object-define-properties": 91, "../internals/redefine": 108, "../internals/set-to-string-tag": 117, "../internals/string-multibyte": 123, "../internals/string-punycode-to-ascii": 126, "../modules/es.string.iterator": 190, "../modules/web.url-search-params": 237 }], 239: [function(e3, t3, r3) {
          "use strict";
          t3.exports = e3("./").polyfill();
        }, { "./": 240 }], 240: [function(V, r3, o2) {
          !function(B, G) {
            var e3, t3;
            e3 = this, t3 = function() {
              "use strict";
              function l(e5) {
                return "function" == typeof e5;
              }
              var r4 = Array.isArray || function(e5) {
                return "[object Array]" === Object.prototype.toString.call(e5);
              }, o3 = 0, t4 = void 0, n2 = void 0, i2 = function(e5, t5) {
                d[o3] = e5, d[o3 + 1] = t5, 2 === (o3 += 2) && (n2 ? n2(f) : D());
              };
              var e4 = "undefined" != typeof window ? window : void 0, s3 = e4 || {}, s3 = s3.MutationObserver || s3.WebKitMutationObserver, a = "undefined" == typeof self && void 0 !== B && "[object process]" === {}.toString.call(B), u = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;
              function c() {
                var e5 = setTimeout;
                return function() {
                  return e5(f, 1);
                };
              }
              var d = new Array(1e3);
              function f() {
                for (var e5 = 0; e5 < o3; e5 += 2)
                  (0, d[e5])(d[e5 + 1]), d[e5] = void 0, d[e5 + 1] = void 0;
                o3 = 0;
              }
              function h() {
                try {
                  var e5 = Function("return this")().require("vertx");
                  return void 0 !== (t4 = e5.runOnLoop || e5.runOnContext) ? function() {
                    t4(f);
                  } : c();
                } catch (e6) {
                  return c();
                }
              }
              var p, m, y, D = void 0;
              function g(e5, t5) {
                var r5, o4 = this, n3 = new this.constructor(j), s4 = (void 0 === n3[b] && P(n3), o4._state);
                return s4 ? (r5 = arguments[s4 - 1], i2(function() {
                  return C(s4, n3, r5, o4._result);
                })) : k(o4, n3, e5, t5), n3;
              }
              function v(e5) {
                var t5;
                return e5 && "object" == typeof e5 && e5.constructor === this ? e5 : (E(t5 = new this(j), e5), t5);
              }
              var D = a ? function() {
                return B.nextTick(f);
              } : s3 ? (m = 0, a = new s3(f), y = document.createTextNode(""), a.observe(y, { characterData: true }), function() {
                y.data = m = ++m % 2;
              }) : u ? ((p = new MessageChannel()).port1.onmessage = f, function() {
                return p.port2.postMessage(0);
              }) : (void 0 === e4 && "function" == typeof V ? h : c)(), b = Math.random().toString(36).substring(2);
              function j() {
              }
              var _ = void 0, x = 1, w = 2;
              function F(e5, o4, n3) {
                i2(function(t5) {
                  var r5 = false, e6 = function(e7, t6, r6, o5) {
                    try {
                      e7.call(t6, r6, o5);
                    } catch (e8) {
                      return e8;
                    }
                  }(n3, o4, function(e7) {
                    r5 || (r5 = true, (o4 !== e7 ? E : M)(t5, e7));
                  }, function(e7) {
                    r5 || (r5 = true, T(t5, e7));
                  }, t5._label);
                  !r5 && e6 && (r5 = true, T(t5, e6));
                }, e5);
              }
              function S(e5, t5, r5) {
                var o4, n3;
                t5.constructor === e5.constructor && r5 === g && t5.constructor.resolve === v ? (o4 = e5, (n3 = t5)._state === x ? M(o4, n3._result) : n3._state === w ? T(o4, n3._result) : k(n3, void 0, function(e6) {
                  return E(o4, e6);
                }, function(e6) {
                  return T(o4, e6);
                })) : void 0 !== r5 && l(r5) ? F(e5, t5, r5) : M(e5, t5);
              }
              function E(t5, e5) {
                if (t5 === e5)
                  T(t5, new TypeError("You cannot resolve a promise with itself"));
                else if (r5 = typeof e5, null === e5 || "object" != r5 && "function" != r5)
                  M(t5, e5);
                else {
                  r5 = void 0;
                  try {
                    r5 = e5.then;
                  } catch (e6) {
                    return void T(t5, e6);
                  }
                  S(t5, e5, r5);
                }
                var r5;
              }
              function U(e5) {
                e5._onerror && e5._onerror(e5._result), O(e5);
              }
              function M(e5, t5) {
                e5._state === _ && (e5._result = t5, e5._state = x, 0 !== e5._subscribers.length && i2(O, e5));
              }
              function T(e5, t5) {
                e5._state === _ && (e5._state = w, e5._result = t5, i2(U, e5));
              }
              function k(e5, t5, r5, o4) {
                var n3 = e5._subscribers, s4 = n3.length;
                e5._onerror = null, n3[s4] = t5, n3[s4 + x] = r5, n3[s4 + w] = o4, 0 === s4 && e5._state && i2(O, e5);
              }
              function O(e5) {
                var t5 = e5._subscribers, r5 = e5._state;
                if (0 !== t5.length) {
                  for (var o4, n3 = void 0, s4 = e5._result, i3 = 0; i3 < t5.length; i3 += 3)
                    o4 = t5[i3], n3 = t5[i3 + r5], o4 ? C(r5, o4, n3, s4) : n3(s4);
                  e5._subscribers.length = 0;
                }
              }
              function C(e5, t5, r5, o4) {
                var n3 = l(r5), s4 = void 0, i3 = void 0, a2 = true;
                if (n3) {
                  try {
                    s4 = r5(o4);
                  } catch (e6) {
                    a2 = false, i3 = e6;
                  }
                  if (t5 === s4)
                    return void T(t5, new TypeError("A promises callback cannot return that same promise."));
                } else
                  s4 = o4;
                t5._state === _ && (n3 && a2 ? E(t5, s4) : false === a2 ? T(t5, i3) : e5 === x ? M(t5, s4) : e5 === w && T(t5, s4));
              }
              var A = 0;
              function P(e5) {
                e5[b] = A++, e5._state = void 0, e5._result = void 0, e5._subscribers = [];
              }
              L.prototype._enumerate = function(e5) {
                for (var t5 = 0; this._state === _ && t5 < e5.length; t5++)
                  this._eachEntry(e5[t5], t5);
              }, L.prototype._eachEntry = function(t5, e5) {
                var r5 = this._instanceConstructor, o4 = r5.resolve;
                if (o4 === v) {
                  var n3, s4 = void 0, i3 = void 0, a2 = false;
                  try {
                    s4 = t5.then;
                  } catch (e6) {
                    a2 = true, i3 = e6;
                  }
                  s4 === g && t5._state !== _ ? this._settledAt(t5._state, e5, t5._result) : "function" != typeof s4 ? (this._remaining--, this._result[e5] = t5) : r5 === R ? (n3 = new r5(j), a2 ? T(n3, i3) : S(n3, t5, s4), this._willSettleAt(n3, e5)) : this._willSettleAt(new r5(function(e6) {
                    return e6(t5);
                  }), e5);
                } else
                  this._willSettleAt(o4(t5), e5);
              }, L.prototype._settledAt = function(e5, t5, r5) {
                var o4 = this.promise;
                o4._state === _ && (this._remaining--, e5 === w ? T(o4, r5) : this._result[t5] = r5), 0 === this._remaining && M(o4, this._result);
              }, L.prototype._willSettleAt = function(e5, t5) {
                var r5 = this;
                k(e5, void 0, function(e6) {
                  return r5._settledAt(x, t5, e6);
                }, function(e6) {
                  return r5._settledAt(w, t5, e6);
                });
              };
              var N = L;
              function L(e5, t5) {
                this._instanceConstructor = e5, this.promise = new e5(j), this.promise[b] || P(this.promise), r4(t5) ? (this.length = t5.length, this._remaining = t5.length, this._result = new Array(this.length), 0 !== this.length && (this.length = this.length || 0, this._enumerate(t5), 0 !== this._remaining) || M(this.promise, this._result)) : T(this.promise, new Error("Array Methods must be provided an Array"));
              }
              I.prototype.catch = function(e5) {
                return this.then(null, e5);
              }, I.prototype.finally = function(t5) {
                var r5 = this.constructor;
                return l(t5) ? this.then(function(e5) {
                  return r5.resolve(t5()).then(function() {
                    return e5;
                  });
                }, function(e5) {
                  return r5.resolve(t5()).then(function() {
                    throw e5;
                  });
                }) : this.then(t5, t5);
              };
              var R = I;
              function I(e5) {
                if (this[b] = A++, this._result = this._state = void 0, this._subscribers = [], j !== e5) {
                  if ("function" != typeof e5)
                    throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                  if (!(this instanceof I))
                    throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                  var t5 = this;
                  try {
                    e5(function(e6) {
                      E(t5, e6);
                    }, function(e6) {
                      T(t5, e6);
                    });
                  } catch (e6) {
                    T(t5, e6);
                  }
                }
              }
              return R.prototype.then = g, R.all = function(e5) {
                return new N(this, e5).promise;
              }, R.race = function(n3) {
                var s4 = this;
                return r4(n3) ? new s4(function(e5, t5) {
                  for (var r5 = n3.length, o4 = 0; o4 < r5; o4++)
                    s4.resolve(n3[o4]).then(e5, t5);
                }) : new s4(function(e5, t5) {
                  return t5(new TypeError("You must pass an array to race."));
                });
              }, R.resolve = v, R.reject = function(e5) {
                var t5 = new this(j);
                return T(t5, e5), t5;
              }, R._setScheduler = function(e5) {
                n2 = e5;
              }, R._setAsap = function(e5) {
                i2 = e5;
              }, R._asap = i2, R.polyfill = function() {
                var e5 = void 0;
                if (void 0 !== G)
                  e5 = G;
                else if ("undefined" != typeof self)
                  e5 = self;
                else
                  try {
                    e5 = Function("return this")();
                  } catch (e6) {
                    throw new Error("polyfill failed because global object is unavailable in this environment");
                  }
                var t5 = e5.Promise;
                if (t5) {
                  var r5 = null;
                  try {
                    r5 = Object.prototype.toString.call(t5.resolve());
                  } catch (e6) {
                  }
                  if ("[object Promise]" === r5 && !t5.cast)
                    return;
                }
                e5.Promise = R;
              }, R.Promise = R;
            }, "object" == typeof o2 && void 0 !== r3 ? r3.exports = t3() : "function" == typeof s2 && s2.amd ? s2(t3) : e3.ES6Promise = t3();
          }.call(this, V("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, { _process: 249 }], 241: [function(e3, t3, r3) {
          var o2, n2;
          o2 = this, n2 = function(e4, t4) {
            "use strict";
            var r4 = 5e3, o3 = "callback";
            function d(t5) {
              try {
                delete window[t5];
              } catch (e5) {
                window[t5] = void 0;
              }
            }
            function f(e5) {
              e5 = document.getElementById(e5);
              e5 && document.getElementsByTagName("head")[0].removeChild(e5);
            }
            t4.exports = function(s3) {
              var i2 = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1], a = s3, l = i2.timeout || r4, u = i2.jsonpCallback || o3, c = void 0;
              return new Promise(function(t5, e5) {
                var r5 = i2.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()), o4 = u + "_" + r5, n3 = (window[r5] = function(e6) {
                  t5({ ok: true, json: function() {
                    return Promise.resolve(e6);
                  } }), c && clearTimeout(c), f(o4), d(r5);
                }, a += -1 === a.indexOf("?") ? "?" : "&", document.createElement("script"));
                n3.setAttribute("src", "" + a + u + "=" + r5), i2.charset && n3.setAttribute("charset", i2.charset), n3.id = o4, document.getElementsByTagName("head")[0].appendChild(n3), c = setTimeout(function() {
                  e5(new Error("JSONP request to " + s3 + " timed out")), d(r5), f(o4), window[r5] = function() {
                    d(r5);
                  };
                }, l), n3.onerror = function() {
                  e5(new Error("JSONP request to " + s3 + " failed")), d(r5), f(o4), c && clearTimeout(c);
                };
              });
            };
          }, "function" == typeof s2 && s2.amd ? s2(["exports", "module"], n2) : void 0 !== r3 && void 0 !== t3 ? n2(0, t3) : (n2(n2 = { exports: {} }, n2), o2.fetchJsonp = n2.exports);
        }, {}], 242: [function(e3, t3, r3) {
          var o2 = function(a) {
            "use strict";
            var l, u, c, d, f, h, t4, p, m, o3, e4;
            if (!(void 0 === a || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent)))
              return e4 = a.document, l = function() {
                return a.URL || a.webkitURL || a;
              }, u = e4.createElementNS("http://www.w3.org/1999/xhtml", "a"), c = "download" in u, d = /constructor/i.test(a.HTMLElement) || a.safari, f = /CriOS\/[\d]+/.test(navigator.userAgent), h = function(e5) {
                (a.setImmediate || a.setTimeout)(function() {
                  throw e5;
                }, 0);
              }, t4 = 4e4, p = function(e5) {
                setTimeout(function() {
                  "string" == typeof e5 ? l().revokeObjectURL(e5) : e5.remove();
                }, t4);
              }, m = function(e5) {
                return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e5.type) ? new Blob([String.fromCharCode(65279), e5], { type: e5.type }) : e5;
              }, e4 = (o3 = function(e5, r4, t5) {
                t5 || (e5 = m(e5));
                var o4, n2, s3 = this, t5 = "application/octet-stream" === e5.type, i2 = function() {
                  for (var e6 = s3, t6 = "writestart progress write writeend".split(" "), r5 = void 0, o5 = (t6 = [].concat(t6)).length; o5--; ) {
                    var n3 = e6["on" + t6[o5]];
                    if ("function" == typeof n3)
                      try {
                        n3.call(e6, r5 || e6);
                      } catch (e7) {
                        h(e7);
                      }
                  }
                };
                s3.readyState = s3.INIT, c ? (o4 = l().createObjectURL(e5), setTimeout(function() {
                  var e6, t6;
                  u.href = o4, u.download = r4, e6 = u, t6 = new MouseEvent("click"), e6.dispatchEvent(t6), i2(), p(o4), s3.readyState = s3.DONE;
                })) : (f || t5 && d) && a.FileReader ? ((n2 = new FileReader()).onloadend = function() {
                  var e6 = f ? n2.result : n2.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                  a.open(e6, "_blank") || (a.location.href = e6), e6 = void 0, s3.readyState = s3.DONE, i2();
                }, n2.readAsDataURL(e5), s3.readyState = s3.INIT) : (o4 = o4 || l().createObjectURL(e5), !t5 && a.open(o4, "_blank") || (a.location.href = o4), s3.readyState = s3.DONE, i2(), p(o4));
              }).prototype, "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function(e5, t5, r4) {
                return t5 = t5 || e5.name || "download", r4 || (e5 = m(e5)), navigator.msSaveOrOpenBlob(e5, t5);
              } : (e4.abort = function() {
              }, e4.readyState = e4.INIT = 0, e4.WRITING = 1, e4.DONE = 2, e4.error = e4.onwritestart = e4.onprogress = e4.onwrite = e4.onabort = e4.onerror = e4.onwriteend = null, function(e5, t5, r4) {
                return new o3(e5, t5 || e5.name || "download", r4);
              });
          }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);
          void 0 !== t3 && t3.exports ? t3.exports.saveAs = o2 : null != s2 && null !== s2.amd && s2("FileSaver.js", function() {
            return o2;
          });
        }, {}], 243: [function(e3, t3, r3) {
          var o2, n2 = Object.defineProperty, s3 = (n2(r3, "__esModule", { value: true }), r3), i2 = { GIFEncoder: () => f, applyPalette: () => function(e4, t4, r4 = "rgb565") {
            if (!e4 || !e4.buffer)
              throw new Error("quantize() expected RGBA Uint8Array data");
            if (!(e4 instanceof Uint8Array || e4 instanceof Uint8ClampedArray))
              throw new Error("quantize() expected RGBA Uint8Array data");
            if (256 < t4.length)
              throw new Error("applyPalette() only works with 256 colors or less");
            const o3 = new Uint32Array(e4.buffer), n3 = o3.length, s4 = "rgb444" === r4 ? 4096 : 65536, i3 = new Uint8Array(n3), a2 = new Array(s4);
            if ("rgba4444" === r4)
              for (let e5 = 0; e5 < n3; e5++) {
                var l2 = o3[e5], u2 = l2 >> 24 & 255, c2 = l2 >> 16 & 255, d2 = l2 >> 8 & 255, l2 = 255 & l2, f2 = A(l2, d2, c2, u2), f2 = f2 in a2 ? a2[f2] : a2[f2] = function(t5, r5, o4, n4, s5) {
                  let i4 = 0, a3 = 1e100;
                  for (let e6 = 0; e6 < s5.length; e6++) {
                    var l3, u3 = s5[e6], c3 = v(u3[3] - n4);
                    c3 > a3 || (l3 = u3[0], (c3 += v(l3 - t5)) > a3 || (l3 = u3[1], (c3 += v(l3 - r5)) > a3 || (l3 = u3[2], (c3 += v(l3 - o4)) > a3 || (a3 = c3, i4 = e6))));
                  }
                  return i4;
                }(l2, d2, c2, u2, t4);
                i3[e5] = f2;
              }
            else {
              const g = "rgb444" === r4 ? P : C;
              for (let e5 = 0; e5 < n3; e5++) {
                var h2 = o3[e5], p = h2 >> 16 & 255, m = h2 >> 8 & 255, h2 = 255 & h2, y = g(h2, m, p), y = y in a2 ? a2[y] : a2[y] = function(t5, r5, o4, n4) {
                  let s5 = 0, i4 = 1e100;
                  for (let e6 = 0; e6 < n4.length; e6++) {
                    var a3, l3 = n4[e6], u3 = v(l3[0] - t5);
                    u3 > i4 || (a3 = l3[1], (u3 += v(a3 - r5)) > i4 || (a3 = l3[2], (u3 += v(a3 - o4)) > i4 || (i4 = u3, s5 = e6)));
                  }
                  return s5;
                }(h2, m, p, t4);
                i3[e5] = y;
              }
            }
            return i3;
          }, default: () => h, nearestColor: () => function(e4, t4, r4 = u) {
            return e4[l(e4, t4, r4)];
          }, nearestColorIndex: () => l, nearestColorIndexWithDistance: () => d, prequantize: () => function(e4, { roundRGB: r4 = 5, roundAlpha: o3 = 10, oneBitAlpha: n3 = null } = {}) {
            const s4 = new Uint32Array(e4.buffer);
            for (let t4 = 0; t4 < s4.length; t4++) {
              var i3 = s4[t4];
              let e5 = i3 >> 24 & 255;
              var a2, l2 = i3 >> 16 & 255, u2 = i3 >> 8 & 255, i3 = 255 & i3;
              e5 = c(e5, o3), n3 && (a2 = "number" == typeof n3 ? n3 : 127, e5 = e5 <= a2 ? 0 : 255), i3 = c(i3, r4), u2 = c(u2, r4), l2 = c(l2, r4), s4[t4] = e5 << 24 | l2 << 16 | u2 << 8 | i3 << 0;
            }
          }, quantize: () => function(e4, t4, r4 = {}) {
            var { format: o3 = "rgb565", clearAlpha: n3 = true, clearAlphaColor: s4 = 0, clearAlphaThreshold: i3 = 0, oneBitAlpha: a2 = false } = r4;
            if (!e4 || !e4.buffer)
              throw new Error("quantize() expected RGBA Uint8Array data");
            if (!(e4 instanceof Uint8Array || e4 instanceof Uint8ClampedArray))
              throw new Error("quantize() expected RGBA Uint8Array data");
            e4 = new Uint32Array(e4.buffer);
            let l2 = false !== r4.useSqrt;
            const u2 = "rgba4444" === o3, c2 = function(r5, e5) {
              const t5 = "rgb444" === e5 ? 4096 : 65536, o4 = new Array(t5), n4 = r5.length;
              if ("rgba4444" === e5)
                for (let t6 = 0; t6 < n4; ++t6) {
                  var s5 = r5[t6], i4 = s5 >> 24 & 255, a3 = s5 >> 16 & 255, l3 = s5 >> 8 & 255, s5 = 255 & s5, u3 = A(s5, l3, a3, i4);
                  let e6 = u3 in o4 ? o4[u3] : o4[u3] = D();
                  e6.rc += s5, e6.gc += l3, e6.bc += a3, e6.ac += i4, e6.cnt++;
                }
              else if ("rgb444" === e5)
                for (let t6 = 0; t6 < n4; ++t6) {
                  var c3 = r5[t6], d3 = c3 >> 16 & 255, f3 = c3 >> 8 & 255, c3 = 255 & c3, h3 = P(c3, f3, d3);
                  let e6 = h3 in o4 ? o4[h3] : o4[h3] = D();
                  e6.rc += c3, e6.gc += f3, e6.bc += d3, e6.cnt++;
                }
              else
                for (let t6 = 0; t6 < n4; ++t6) {
                  var p2 = r5[t6], m2 = p2 >> 16 & 255, y2 = p2 >> 8 & 255, p2 = 255 & p2, g2 = C(p2, y2, m2);
                  let e6 = g2 in o4 ? o4[g2] : o4[g2] = D();
                  e6.rc += p2, e6.gc += y2, e6.bc += m2, e6.cnt++;
                }
              return o4;
            }(e4, o3), d2 = c2.length, f2 = d2 - 1, h2 = new Uint32Array(d2 + 1);
            for (var p = 0, m = 0; m < d2; ++m) {
              const O2 = c2[m];
              null != O2 && (M2 = 1 / O2.cnt, u2 && (O2.ac *= M2), O2.rc *= M2, O2.gc *= M2, O2.bc *= M2, c2[p++] = O2);
            }
            R(t4) / p < 0.022 && (l2 = false);
            for (var y, g, v2, m = 0; m < p - 1; ++m)
              c2[m].fw = m + 1, c2[m + 1].bk = m, l2 && (c2[m].cnt = Math.sqrt(c2[m].cnt));
            l2 && (c2[m].cnt = Math.sqrt(c2[m].cnt));
            for (m = 0; m < p; ++m) {
              I(c2, m, false);
              var b = c2[m].err;
              for (g = ++h2[0]; 1 < g && (v2 = g >> 1, !(c2[y = h2[v2]].err <= b)); g = v2)
                h2[g] = y;
              h2[g] = m;
            }
            var j, _ = p - t4;
            for (m = 0; m < _; ) {
              for (; ; ) {
                var x = h2[1];
                if ((j = c2[x]).tm >= j.mtm && c2[j.nn].mtm <= j.tm)
                  break;
                j.mtm == f2 ? x = h2[1] = h2[h2[0]--] : (I(c2, x, false), j.tm = m);
                b = c2[x].err;
                for (g = 1; (v2 = g + g) <= h2[0] && (v2 < h2[0] && c2[h2[v2]].err > c2[h2[v2 + 1]].err && v2++, !(b <= c2[y = h2[v2]].err)); g = v2)
                  h2[g] = y;
                h2[g] = x;
              }
              var w = c2[j.nn], S2 = j.cnt, E2 = w.cnt, M2 = 1 / (S2 + E2);
              u2 && (j.ac = M2 * (S2 * j.ac + E2 * w.ac)), j.rc = M2 * (S2 * j.rc + E2 * w.rc), j.gc = M2 * (S2 * j.gc + E2 * w.gc), j.bc = M2 * (S2 * j.bc + E2 * w.bc), j.cnt += w.cnt, j.mtm = ++m, c2[w.bk].fw = w.fw, c2[w.fw].bk = w.bk, w.mtm = f2;
            }
            let T2 = [];
            for (m = 0; ; 0) {
              let e5 = L(Math.round(c2[m].rc), 0, 255), t5 = L(Math.round(c2[m].gc), 0, 255), r5 = L(Math.round(c2[m].bc), 0, 255), o4 = 255;
              u2 && (o4 = L(Math.round(c2[m].ac), 0, 255), a2 && (k2 = "number" == typeof a2 ? a2 : 127, o4 = o4 <= k2 ? 0 : 255), n3 && o4 <= i3 && (e5 = t5 = r5 = s4, o4 = 0));
              var k2 = u2 ? [e5, t5, r5, o4] : [e5, t5, r5];
              if (function(t6, r6) {
                for (let e6 = 0; e6 < t6.length; e6++) {
                  var o5 = t6[e6], n4 = o5[0] === r6[0] && o5[1] === r6[1] && o5[2] === r6[2], o5 = !(4 <= o5.length && 4 <= r6.length) || o5[3] === r6[3];
                  if (n4 && o5)
                    return true;
                }
                return false;
              }(T2, k2) || T2.push(k2), 0 == (m = c2[m].fw))
                break;
            }
            return T2;
          }, snapColorsToPalette: () => function(r4, o3, e4 = 5) {
            if (r4.length && o3.length) {
              var n3 = r4.map((e5) => e5.slice(0, 3)), s4 = e4 * e4, i3 = r4[0].length;
              for (let t4 = 0; t4 < o3.length; t4++) {
                let e5 = o3[t4];
                e5 = e5.length < i3 ? [e5[0], e5[1], e5[2], 255] : e5.length > i3 ? e5.slice(0, 3) : e5.slice();
                var a2 = d(n3, e5.slice(0, 3), u), l2 = a2[0], a2 = a2[1];
                0 < a2 && a2 <= s4 && (r4[l2] = e5);
              }
            }
          } };
          for (o2 in i2)
            n2(s3, o2, { get: i2[o2], enumerable: true });
          var a = { signature: "GIF", version: "89a", trailer: 59, extensionIntroducer: 33, applicationExtensionLabel: 255, graphicControlExtensionLabel: 249, imageSeparator: 44, signatureSize: 3, versionSize: 3, globalColorTableFlagMask: 128, colorResolutionMask: 112, sortFlagMask: 8, globalColorTableSizeMask: 7, applicationIdentifierSize: 8, applicationAuthCodeSize: 3, disposalMethodMask: 28, userInputFlagMask: 2, transparentColorFlagMask: 1, localColorTableFlagMask: 128, interlaceFlagMask: 64, idSortFlagMask: 32, localColorTableSizeMask: 7 };
          function T(e4 = 256) {
            let n3 = 0, s4 = new Uint8Array(e4);
            return { get buffer() {
              return s4.buffer;
            }, reset() {
              n3 = 0;
            }, bytesView() {
              return s4.subarray(0, n3);
            }, bytes() {
              return s4.slice(0, n3);
            }, writeByte(e5) {
              i3(n3 + 1), s4[n3] = e5, n3++;
            }, writeBytes(t4, r4 = 0, o3 = t4.length) {
              i3(n3 + o3);
              for (let e5 = 0; e5 < o3; e5++)
                s4[n3++] = t4[e5 + r4];
            }, writeBytesView(e5, t4 = 0, r4 = e5.byteLength) {
              i3(n3 + r4), s4.set(e5.subarray(t4, t4 + r4), n3), n3 += r4;
            } };
            function i3(e5) {
              var t4 = s4.length;
              if (!(e5 <= t4)) {
                e5 = Math.max(e5, t4 * (t4 < 1048576 ? 2 : 1.125) >>> 0), 0 != t4 && (e5 = Math.max(e5, 256));
                const r4 = s4;
                s4 = new Uint8Array(e5), 0 < n3 && s4.set(r4.subarray(0, n3), 0);
              }
            }
          }
          var k = [0, 1, 3, 7, 15, 31, 63, 127, 255, 511, 1023, 2047, 4095, 8191, 16383, 32767, 65535];
          var S = function(e4, t4, r4, o3, n3 = T(512), s4 = new Uint8Array(256), i3 = new Int32Array(5003), a2 = new Int32Array(5003)) {
            var l2 = i3.length, o3 = Math.max(2, o3);
            s4.fill(0), a2.fill(0), i3.fill(-1);
            let u2 = 0, c2 = 0;
            var d2 = o3 + 1;
            const f2 = d2;
            let h2 = false, p = f2, m = (1 << p) - 1;
            var y = 1 << d2 - 1;
            const g = 1 + y;
            let v2 = 2 + y, b = 0, j = r4[0], _ = 0;
            for (let e5 = l2; e5 < 65536; e5 *= 2)
              ++_;
            _ = 8 - _, n3.writeByte(o3), M2(y);
            var x = r4.length;
            for (let t5 = 1; t5 < x; t5++)
              e: {
                var w = r4[t5], S2 = (w << 12) + j;
                let e5 = w << _ ^ j;
                if (i3[e5] === S2)
                  j = a2[e5];
                else {
                  for (var E2 = 0 === e5 ? 1 : l2 - e5; 0 <= i3[e5]; )
                    if ((e5 -= E2) < 0 && (e5 += l2), i3[e5] === S2) {
                      j = a2[e5];
                      break e;
                    }
                  M2(j), j = w, v2 < 4096 ? (a2[e5] = v2++, i3[e5] = S2) : (i3.fill(-1), v2 = 2 + y, h2 = true, M2(y));
                }
              }
            return M2(j), M2(g), n3.writeByte(0), n3.bytesView();
            function M2(e5) {
              for (u2 &= k[c2], 0 < c2 ? u2 |= e5 << c2 : u2 = e5, c2 += p; 8 <= c2; )
                s4[b++] = 255 & u2, 254 <= b && (n3.writeByte(b), n3.writeBytesView(s4, 0, b), b = 0), u2 >>= 8, c2 -= 8;
              if ((v2 > m || h2) && (h2 ? (p = f2, m = (1 << p) - 1, h2 = false) : (++p, m = 12 === p ? 1 << p : (1 << p) - 1)), e5 == g) {
                for (; 0 < c2; )
                  s4[b++] = 255 & u2, 254 <= b && (n3.writeByte(b), n3.writeBytesView(s4, 0, b), b = 0), u2 >>= 8, c2 -= 8;
                0 < b && (n3.writeByte(b), n3.writeBytesView(s4, 0, b), b = 0);
              }
            }
          };
          function C(e4, t4, r4) {
            return e4 << 8 & 63488 | t4 << 2 & 992 | r4 >> 3;
          }
          function A(e4, t4, r4, o3) {
            return e4 >> 4 | 240 & t4 | (240 & r4) << 4 | (240 & o3) << 8;
          }
          function P(e4, t4, r4) {
            return e4 >> 4 << 8 | 240 & t4 | r4 >> 4;
          }
          function L(e4, t4, r4) {
            return e4 < t4 ? t4 : r4 < e4 ? r4 : e4;
          }
          function R(e4) {
            return e4 * e4;
          }
          function I(e4, t4, r4) {
            var o3 = 0, n3 = 1e100;
            const s4 = e4[t4];
            for (var i3 = s4.cnt, a2 = s4.ac, l2 = s4.rc, u2 = s4.gc, c2 = s4.bc, d2 = s4.fw; 0 != d2; d2 = e4[d2].fw) {
              var f2, h2 = e4[d2], p = h2.cnt, p = i3 * p / (i3 + p);
              n3 <= p || (f2 = 0, r4 && n3 <= (f2 += p * R(h2.ac - a2)) || n3 <= (f2 += p * R(h2.rc - l2)) || n3 <= (f2 += p * R(h2.gc - u2)) || n3 <= (f2 += p * R(h2.bc - c2)) || (n3 = f2, o3 = d2));
            }
            s4.err = n3, s4.nn = o3;
          }
          function D() {
            return { ac: 0, rc: 0, gc: 0, bc: 0, cnt: 0, nn: 0, fw: 0, bk: 0, tm: 0, mtm: 0, err: 0 };
          }
          function u(e4, t4) {
            for (var r4 = 0, o3 = 0; o3 < e4.length; o3++) {
              var n3 = e4[o3] - t4[o3];
              r4 += n3 * n3;
            }
            return r4;
          }
          function c(e4, t4) {
            return 1 < t4 ? Math.round(e4 / t4) * t4 : e4;
          }
          function v(e4) {
            return e4 * e4;
          }
          function l(t4, r4, o3 = u) {
            let n3 = 1 / 0, s4 = -1;
            for (let e4 = 0; e4 < t4.length; e4++) {
              var i3 = o3(r4, t4[e4]);
              i3 < n3 && (n3 = i3, s4 = e4);
            }
            return s4;
          }
          function d(t4, r4, o3 = u) {
            let n3 = 1 / 0, s4 = -1;
            for (let e4 = 0; e4 < t4.length; e4++) {
              var i3 = o3(r4, t4[e4]);
              i3 < n3 && (n3 = i3, s4 = e4);
            }
            return [s4, n3];
          }
          function f(e4 = {}) {
            const { initialCapacity: t4 = 4096, auto: g = true } = e4, v2 = T(t4);
            const b = new Uint8Array(256), j = new Int32Array(5003), _ = new Int32Array(5003);
            let x = false;
            return { reset() {
              v2.reset(), x = false;
            }, finish() {
              v2.writeByte(a.trailer);
            }, bytes() {
              return v2.bytes();
            }, bytesView() {
              return v2.bytesView();
            }, get buffer() {
              return v2.buffer;
            }, get stream() {
              return v2;
            }, writeHeader: w, writeFrame(e5, t5, r4, o3 = {}) {
              var { transparent: n3 = false, transparentIndex: s4 = 0, delay: i3 = 0, palette: a2 = null, repeat: l2 = 0, colorDepth: u2 = 8, dispose: c2 = -1 } = o3;
              let d2 = false;
              if (g ? x || (d2 = true, w(), x = true) : d2 = Boolean(o3.first), t5 = Math.max(0, Math.floor(t5)), r4 = Math.max(0, Math.floor(r4)), d2) {
                if (!a2)
                  throw new Error("First frame must include a { palette } option");
                var [o3, f2, h2, p, m = 8] = [v2, t5, r4, a2, u2];
                p = F(p.length) - 1, m = 128 | m - 1 << 4 | p, M(o3, f2), M(o3, h2), o3.writeBytes([m, 0, 0]), E(v2, a2), 0 <= l2 && (p = v2, f2 = l2, p.writeByte(33), p.writeByte(255), p.writeByte(11), O(p, "NETSCAPE2.0"), p.writeByte(3), p.writeByte(1), M(p, f2), p.writeByte(0));
              }
              var y, h2 = Math.round(i3 / 10), o3 = v2, m = c2, l2 = h2, f2 = n3, p = s4, i3 = (o3.writeByte(33), o3.writeByte(249), o3.writeByte(4), p < 0 && (p = 0, f2 = false), f2 = f2 ? (y = 1, 2) : y = 0, 0 <= m && (f2 = 7 & m), f2 <<= 2, o3.writeByte(0 | f2 | y), M(o3, l2), o3.writeByte(p || 0), o3.writeByte(0), Boolean(a2) && !d2);
              c2 = v2, n3 = t5, s4 = r4, y = i3 ? a2 : null, c2.writeByte(44), M(c2, 0), M(c2, 0), M(c2, n3), M(c2, s4), y ? (n3 = F(y.length) - 1, c2.writeByte(128 | n3)) : c2.writeByte(0), i3 && E(v2, a2), [l2, o3, s4, n3, c2 = 8, i3, a2, e5] = [v2, e5, t5, r4, u2, b, j, _], S(s4, n3, o3, c2, l2, i3, a2, e5);
            } };
            function w() {
              O(v2, "GIF89a");
            }
          }
          function E(r4, o3) {
            var e4 = 1 << F(o3.length);
            for (let t4 = 0; t4 < e4; t4++) {
              let e5 = [0, 0, 0];
              t4 < o3.length && (e5 = o3[t4]), r4.writeByte(e5[0]), r4.writeByte(e5[1]), r4.writeByte(e5[2]);
            }
          }
          function M(e4, t4) {
            e4.writeByte(255 & t4), e4.writeByte(t4 >> 8 & 255);
          }
          function O(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++)
              e4.writeByte(t4.charCodeAt(r4));
          }
          function F(e4) {
            return Math.max(Math.ceil(Math.log2(e4)), 1);
          }
          var h = f;
        }, {}], 244: [function(e3, t3, r3) {
          r3.read = function(e4, t4, r4, o2, n2) {
            var s3, i2, a = 8 * n2 - o2 - 1, l = (1 << a) - 1, u = l >> 1, c = -7, d = r4 ? n2 - 1 : 0, f = r4 ? -1 : 1, n2 = e4[t4 + d];
            for (d += f, s3 = n2 & (1 << -c) - 1, n2 >>= -c, c += a; 0 < c; s3 = 256 * s3 + e4[t4 + d], d += f, c -= 8)
              ;
            for (i2 = s3 & (1 << -c) - 1, s3 >>= -c, c += o2; 0 < c; i2 = 256 * i2 + e4[t4 + d], d += f, c -= 8)
              ;
            if (0 === s3)
              s3 = 1 - u;
            else {
              if (s3 === l)
                return i2 ? NaN : 1 / 0 * (n2 ? -1 : 1);
              i2 += Math.pow(2, o2), s3 -= u;
            }
            return (n2 ? -1 : 1) * i2 * Math.pow(2, s3 - o2);
          }, r3.write = function(e4, t4, r4, o2, n2, s3) {
            var i2, a, l = 8 * s3 - n2 - 1, u = (1 << l) - 1, c = u >> 1, d = 23 === n2 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, f = o2 ? 0 : s3 - 1, h = o2 ? 1 : -1, s3 = t4 < 0 || 0 === t4 && 1 / t4 < 0 ? 1 : 0;
            for (t4 = Math.abs(t4), isNaN(t4) || t4 === 1 / 0 ? (a = isNaN(t4) ? 1 : 0, i2 = u) : (i2 = Math.floor(Math.log(t4) / Math.LN2), t4 * (o2 = Math.pow(2, -i2)) < 1 && (i2--, o2 *= 2), 2 <= (t4 += 1 <= i2 + c ? d / o2 : d * Math.pow(2, 1 - c)) * o2 && (i2++, o2 /= 2), u <= i2 + c ? (a = 0, i2 = u) : 1 <= i2 + c ? (a = (t4 * o2 - 1) * Math.pow(2, n2), i2 += c) : (a = t4 * Math.pow(2, c - 1) * Math.pow(2, n2), i2 = 0)); 8 <= n2; e4[r4 + f] = 255 & a, f += h, a /= 256, n2 -= 8)
              ;
            for (i2 = i2 << n2 | a, l += n2; 0 < l; e4[r4 + f] = 255 & i2, f += h, i2 /= 256, l -= 8)
              ;
            e4[r4 + f - h] |= 128 * s3;
          };
        }, {}], 245: [function(o2, e3, c) {
          "use strict";
          var t3;
          function y(e4, t4) {
            return e4.b === t4.b && e4.a === t4.a;
          }
          function g(e4, t4) {
            return e4.b < t4.b || e4.b === t4.b && e4.a <= t4.a;
          }
          function v(e4, t4, r4) {
            var o3 = t4.b - e4.b, n3 = r4.b - t4.b;
            return 0 < o3 + n3 ? o3 < n3 ? t4.a - e4.a + o3 / (o3 + n3) * (e4.a - r4.a) : t4.a - r4.a + n3 / (o3 + n3) * (r4.a - e4.a) : 0;
          }
          function b(e4, t4, r4) {
            var o3 = t4.b - e4.b, n3 = r4.b - t4.b;
            return 0 < o3 + n3 ? (t4.a - r4.a) * o3 + (t4.a - e4.a) * n3 : 0;
          }
          function j(e4, t4) {
            return e4.a < t4.a || e4.a === t4.a && e4.b <= t4.b;
          }
          function V(e4, t4, r4) {
            var o3 = t4.a - e4.a, n3 = r4.a - t4.a;
            return 0 < o3 + n3 ? o3 < n3 ? t4.b - e4.b + o3 / (o3 + n3) * (e4.b - r4.b) : t4.b - r4.b + n3 / (o3 + n3) * (r4.b - e4.b) : 0;
          }
          function z(e4, t4, r4) {
            var o3 = t4.a - e4.a, n3 = r4.a - t4.a;
            return 0 < o3 + n3 ? (t4.b - r4.b) * o3 + (t4.b - e4.b) * n3 : 0;
          }
          function _(e4, t4, r4, o3) {
            return (e4 = e4 < 0 ? 0 : e4) <= (r4 = r4 < 0 ? 0 : r4) ? 0 === r4 ? (t4 + o3) / 2 : t4 + e4 / (e4 + r4) * (o3 - t4) : o3 + r4 / (e4 + r4) * (t4 - o3);
          }
          function d(e4) {
            var t4 = s3(e4.b);
            return n2(t4, e4.c), n2(t4.b, e4.c), i2(t4, e4.a), t4;
          }
          function x(e4, t4) {
            var r4 = false, o3 = false;
            e4 !== t4 && (t4.a !== e4.a && (o3 = true, M(t4.a, e4.a)), t4.d !== e4.d && (r4 = true, a(t4.d, e4.d)), E(t4, e4), o3 || (n2(t4, e4.a), e4.a.c = e4), r4 || (i2(t4, e4.d), e4.d.a = e4));
          }
          function m(e4) {
            var t4 = e4.b, r4 = false;
            e4.d !== e4.b.d && (r4 = true, a(e4.d, e4.b.d)), e4.c === e4 ? M(e4.a, null) : (e4.b.d.a = e4.b.e, e4.a.c = e4.c, E(e4, e4.b.e), r4 || i2(e4, e4.d)), t4.c === t4 ? (M(t4.a, null), a(t4.d, null)) : (e4.d.a = t4.b.e, t4.a.c = t4.c, E(t4, t4.b.e)), H(e4);
          }
          function w(e4) {
            var t4 = s3(e4), r4 = t4.b;
            return E(t4, e4.e), t4.a = e4.b.a, n2(r4, t4.a), t4.d = r4.d = e4.d, t4 = t4.b, E(e4.b, e4.b.b.e), E(e4.b, t4), e4.b.a = t4.a, t4.b.a.c = t4.b, t4.b.d = e4.b.d, t4.f = e4.f, t4.b.f = e4.b.f, t4;
          }
          function S(e4, t4) {
            var r4 = false, o3 = s3(e4), n3 = o3.b;
            return t4.d !== e4.d && (r4 = true, a(t4.d, e4.d)), E(o3, e4.e), E(n3, t4), o3.a = e4.b.a, n3.a = t4.a, o3.d = n3.d = e4.d, e4.d.a = n3, r4 || i2(o3, e4.d), o3;
          }
          function s3(e4) {
            var t4 = new u(), r4 = new u(), o3 = e4.b.h;
            return (((r4.h = o3).b.h = t4).h = e4).b.h = r4, t4.b = r4, ((t4.c = t4).e = r4).b = t4, (r4.c = r4).e = t4;
          }
          function E(e4, t4) {
            var r4 = e4.c, o3 = t4.c;
            r4.b.e = t4, (o3.b.e = e4).c = o3, t4.c = r4;
          }
          function n2(e4, t4) {
            var r4 = t4.f, o3 = new D(t4, r4);
            for (r4.e = o3, r4 = (t4.f = o3).c = e4; r4.a = o3, (r4 = r4.c) !== e4; )
              ;
          }
          function i2(e4, t4) {
            var r4 = t4.d, o3 = new te(t4, r4);
            for (r4.b = o3, (t4.d = o3).a = e4, o3.c = t4.c, r4 = e4; r4.d = o3, (r4 = r4.e) !== e4; )
              ;
          }
          function H(e4) {
            var t4 = e4.h;
            e4 = e4.b.h, (t4.b.h = e4).b.h = t4;
          }
          function M(e4, t4) {
            for (var r4 = e4.c, o3 = r4; o3.a = t4, (o3 = o3.c) !== r4; )
              ;
            r4 = e4.f, ((o3 = e4.e).f = r4).e = o3;
          }
          function a(e4, t4) {
            for (var r4 = e4.a, o3 = r4; o3.d = t4, (o3 = o3.e) !== r4; )
              ;
            r4 = e4.d, ((o3 = e4.b).d = r4).b = o3;
          }
          function W(e4) {
            var t4 = 0;
            return Math.abs(e4[1]) > Math.abs(e4[0]) && (t4 = 1), t4 = Math.abs(e4[2]) > Math.abs(e4[t4]) ? 2 : t4;
          }
          function T(e4, t4) {
            e4.f += t4.f, e4.b.f += t4.b.f;
          }
          function f(e4, t4, r4) {
            return e4 = e4.a, t4 = t4.a, r4 = r4.a, t4.b.a === e4 ? r4.b.a === e4 ? g(t4.a, r4.a) ? b(r4.b.a, t4.a, r4.a) <= 0 : 0 <= b(t4.b.a, r4.a, t4.a) : b(r4.b.a, e4, r4.a) <= 0 : r4.b.a === e4 ? 0 <= b(t4.b.a, e4, t4.a) : (t4 = v(t4.b.a, e4, t4.a), (e4 = v(r4.b.a, e4, r4.a)) <= t4);
          }
          function k(e4) {
            e4.a.i = null;
            var t4 = e4.e;
            t4.a.c = t4.c, t4.c.a = t4.a, e4.e = null;
          }
          function O(e4, t4) {
            m(e4.a), e4.c = false, (e4.a = t4).i = e4;
          }
          function C(e4) {
            for (var t4 = e4.a.a; (e4 = G(e4)).a.a === t4; )
              ;
            return e4.c && (O(e4, t4 = S(B(e4).a.b, e4.a.e)), e4 = G(e4)), e4;
          }
          function q(e4, t4, r4) {
            var o3 = new N();
            return o3.a = r4, o3.e = p(e4.f, t4.e, o3), r4.i = o3;
          }
          function X(e4, t4) {
            switch (e4.s) {
              case 100130:
                return 0 != (1 & t4);
              case 100131:
                return 0 !== t4;
              case 100132:
                return 0 < t4;
              case 100133:
                return t4 < 0;
              case 100134:
                return 2 <= t4 || t4 <= -2;
            }
            return false;
          }
          function h(e4) {
            var t4 = e4.a, r4 = t4.d;
            r4.c = e4.d, r4.a = t4, k(e4);
          }
          function A(e4, t4, r4) {
            for (t4 = (e4 = t4).a; e4 !== r4; ) {
              e4.c = false;
              var o3 = B(e4), n3 = o3.a;
              if (n3.a !== t4.a) {
                if (!o3.c) {
                  h(e4);
                  break;
                }
                O(o3, n3 = S(t4.c.b, n3.b));
              }
              t4.c !== n3 && (x(n3.b.e, n3), x(t4, n3)), h(e4), t4 = o3.a, e4 = o3;
            }
            return t4;
          }
          function P(e4, t4, r4, o3, n3, s4) {
            for (var i3 = true; q(e4, t4, r4.b), (r4 = r4.c) !== o3; )
              ;
            for (null === n3 && (n3 = B(t4).a.b.c); (r4 = (o3 = B(t4)).a.b).a === n3.a; )
              r4.c !== n3 && (x(r4.b.e, r4), x(n3.b.e, r4)), o3.f = t4.f - r4.f, o3.d = X(e4, o3.f), t4.b = true, !i3 && R(e4, t4) && (T(r4, n3), k(t4), m(n3)), i3 = false, t4 = o3, n3 = r4;
            t4.b = true, s4 && J(e4, t4);
          }
          function Y(e4, t4, r4, o3, n3) {
            var s4 = [t4.g[0], t4.g[1], t4.g[2]];
            t4.d = null, t4.d = e4.o && e4.o(s4, r4, o3, e4.c) || null, null === t4.d && (n3 ? e4.n || (l(e4, 100156), e4.n = true) : t4.d = r4[0]);
          }
          function L(e4, t4, r4) {
            var o3 = [null, null, null, null];
            o3[0] = t4.a.d, o3[1] = r4.a.d, Y(e4, t4.a, o3, [0.5, 0.5, 0, 0], false), x(t4, r4);
          }
          function Z(e4, t4, r4, o3, n3) {
            var s4 = Math.abs(t4.b - e4.b) + Math.abs(t4.a - e4.a), i3 = Math.abs(r4.b - e4.b) + Math.abs(r4.a - e4.a), a2 = n3 + 1;
            o3[n3] = 0.5 * i3 / (s4 + i3), o3[a2] = 0.5 * s4 / (s4 + i3), e4.g[0] += o3[n3] * t4.g[0] + o3[a2] * r4.g[0], e4.g[1] += o3[n3] * t4.g[1] + o3[a2] * r4.g[1], e4.g[2] += o3[n3] * t4.g[2] + o3[a2] * r4.g[2];
          }
          function R(e4, t4) {
            var r4 = B(t4), o3 = t4.a, n3 = r4.a;
            if (g(o3.a, n3.a)) {
              if (0 < b(n3.b.a, o3.a, n3.a))
                return;
              if (y(o3.a, n3.a)) {
                if (o3.a !== n3.a) {
                  var r4 = e4.e, s4 = o3.a.h;
                  if (0 <= s4) {
                    var i3 = (r4 = r4.b).d, a2 = r4.e, l2 = r4.c, u2 = l2[s4];
                    i3[u2] = i3[r4.a], (l2[i3[u2]] = u2) <= --r4.a && (u2 <= 1 || g(a2[i3[u2 >> 1]], a2[i3[u2]]) ? U : ue)(r4, u2), a2[s4] = null, l2[s4] = r4.b, r4.b = s4;
                  } else
                    for (r4.c[-(s4 + 1)] = null; 0 < r4.a && null === r4.c[r4.d[r4.a - 1]]; )
                      --r4.a;
                  L(e4, n3.b.e, o3);
                }
              } else
                w(n3.b), x(o3, n3.b.e), t4.b = r4.b = true;
            } else {
              if (b(o3.b.a, n3.a, o3.a) < 0)
                return;
              G(t4).b = t4.b = true, w(o3.b), x(n3.b.e, o3);
            }
            return 1;
          }
          function Q(e4, t4) {
            var r4 = B(t4), o3 = t4.a, n3 = r4.a, s4 = o3.a, i3 = n3.a, a2 = o3.b.a, l2 = n3.b.a, u2 = new D();
            if (b(a2, e4.a, s4), b(l2, e4.a, i3), !(s4 === i3 || Math.min(s4.a, a2.a) > Math.max(i3.a, l2.a))) {
              if (g(s4, i3)) {
                if (0 < b(l2, s4, i3))
                  return;
              } else if (b(a2, i3, s4) < 0)
                return;
              var c2, d2, f2 = a2, h2 = s4, p2 = l2, m2 = i3;
              if (g(f2, h2) || (c2 = f2, f2 = h2, h2 = c2), g(p2, m2) || (c2 = p2, p2 = m2, m2 = c2), g(f2, p2) || (c2 = f2, f2 = p2, p2 = c2, c2 = h2, h2 = m2, m2 = c2), g(p2, h2) ? g(h2, m2) ? ((c2 = v(f2, p2, h2)) + (d2 = v(p2, h2, m2)) < 0 && (c2 = -c2, d2 = -d2), u2.b = _(c2, p2.b, d2, h2.b)) : ((c2 = b(f2, p2, h2)) + (d2 = -b(f2, m2, h2)) < 0 && (c2 = -c2, d2 = -d2), u2.b = _(c2, p2.b, d2, m2.b)) : u2.b = (p2.b + h2.b) / 2, j(f2, h2) || (c2 = f2, f2 = h2, h2 = c2), j(p2, m2) || (c2 = p2, p2 = m2, m2 = c2), j(f2, p2) || (c2 = f2, f2 = p2, p2 = c2, c2 = h2, h2 = m2, m2 = c2), j(p2, h2) ? j(h2, m2) ? ((c2 = V(f2, p2, h2)) + (d2 = V(p2, h2, m2)) < 0 && (c2 = -c2, d2 = -d2), u2.a = _(c2, p2.a, d2, h2.a)) : ((c2 = z(f2, p2, h2)) + (d2 = -z(f2, m2, h2)) < 0 && (c2 = -c2, d2 = -d2), u2.a = _(c2, p2.a, d2, m2.a)) : u2.a = (p2.a + h2.a) / 2, g(u2, e4.a) && (u2.b = e4.a.b, u2.a = e4.a.a), f2 = g(s4, i3) ? s4 : i3, g(f2, u2) && (u2.b = f2.b, u2.a = f2.a), y(u2, s4) || y(u2, i3))
                return R(e4, t4), 0;
              if (!y(a2, e4.a) && 0 <= b(a2, e4.a, u2) || !y(l2, e4.a) && b(l2, e4.a, u2) <= 0) {
                if (l2 === e4.a)
                  w(o3.b), x(n3.b, o3), o3 = B(t4 = C(t4)).a, A(e4, B(t4), r4), P(e4, t4, o3.b.e, o3, o3, true);
                else {
                  if (a2 !== e4.a)
                    return 0 <= b(a2, e4.a, u2) && (G(t4).b = t4.b = true, w(o3.b), o3.a.b = e4.a.b, o3.a.a = e4.a.a), void (b(l2, e4.a, u2) <= 0 && (t4.b = r4.b = true, w(n3.b), n3.a.b = e4.a.b, n3.a.a = e4.a.a));
                  for (w(n3.b), x(o3.e, n3.b.e), i3 = (s4 = r4 = t4).a.b.a; (s4 = G(s4)).a.b.a === i3; )
                    ;
                  s4 = B(t4 = s4).a.b.c, r4.a = n3.b.e, P(e4, t4, (n3 = A(e4, r4, null)).c, o3.b.c, s4, true);
                }
                return 1;
              }
              w(o3.b), w(n3.b), x(n3.b.e, o3), o3.a.b = u2.b, o3.a.a = u2.a, o3.a.h = ne(e4.e, o3.a), o3 = o3.a, n3 = [0, 0, 0, 0], u2 = [s4.d, a2.d, i3.d, l2.d], o3.g[0] = o3.g[1] = o3.g[2] = 0, Z(o3, s4, a2, n3, 0), Z(o3, i3, l2, n3, 2), Y(e4, o3, u2, n3, true), G(t4).b = t4.b = r4.b = true;
            }
          }
          function J(e4, t4) {
            for (var r4 = B(t4); ; ) {
              for (; r4.b; )
                r4 = B(t4 = r4);
              if (!t4.b && (null === (t4 = G(r4 = t4)) || !t4.b))
                break;
              t4.b = false;
              var o3 = t4.a, n3 = r4.a;
              if (s4 = o3.b.a !== n3.b.a)
                e: {
                  var s4, i3 = B(s4 = t4), a2 = s4.a, l2 = i3.a, u2 = void 0;
                  if (g(a2.b.a, l2.b.a)) {
                    if (b(a2.b.a, l2.b.a, a2.a) < 0) {
                      s4 = false;
                      break e;
                    }
                    G(s4).b = s4.b = true, u2 = w(a2), x(l2.b, u2), u2.d.c = s4.d;
                  } else {
                    if (0 < b(l2.b.a, a2.b.a, l2.a)) {
                      s4 = false;
                      break e;
                    }
                    s4.b = i3.b = true, u2 = w(l2), x(a2.e, l2.b), u2.b.d.c = s4.d;
                  }
                  s4 = true;
                }
              if (s4 && (r4.c ? (k(r4), m(n3), n3 = (r4 = B(t4)).a) : t4.c && (k(t4), m(o3), o3 = (t4 = G(r4)).a)), o3.a !== n3.a) {
                if (o3.b.a === n3.b.a || t4.c || r4.c || o3.b.a !== e4.a && n3.b.a !== e4.a)
                  R(e4, t4);
                else if (Q(e4, t4))
                  break;
              }
              o3.a === n3.a && o3.b.a === n3.b.a && (T(n3, o3), k(t4), m(o3), t4 = G(r4));
            }
          }
          function K(e4, t4) {
            var r4 = new N(), o3 = d(e4.b);
            o3.a.b = 4e150, o3.a.a = t4, o3.b.a.b = -4e150, o3.b.a.a = t4, e4.a = o3.b.a, r4.a = o3, r4.f = 0, r4.d = false, r4.c = false, r4.h = true, r4.b = false, o3 = p(o3 = e4.f, o3.a, r4), r4.e = o3;
          }
          function $6(e4) {
            this.a = new ee(), this.b = e4, this.c = f;
          }
          function p(e4, t4, r4) {
            for (; null !== (t4 = t4.c).b && !e4.c(e4.b, t4.b, r4); )
              ;
            return e4 = new ee(r4, t4.a, t4), t4.a.c = e4, t4.a = e4;
          }
          function ee(e4, t4, r4) {
            this.b = e4 || null, this.a = t4 || this, this.c = r4 || this;
          }
          function r3() {
            this.d = 0, this.p = this.b = this.q = null, this.j = [0, 0, 0], this.s = 100130, this.n = false, this.o = this.a = this.e = this.f = null, this.m = false, this.c = this.r = this.i = this.k = this.l = this.h = null;
          }
          function I(e4, t4) {
            if (e4.d !== t4)
              for (; e4.d !== t4; )
                if (e4.d < t4)
                  switch (e4.d) {
                    case 0:
                      l(e4, 100151), e4.u(null);
                      break;
                    case 1:
                      l(e4, 100152), e4.t();
                  }
                else
                  switch (e4.d) {
                    case 2:
                      l(e4, 100154), e4.v();
                      break;
                    case 1:
                      l(e4, 100153), e4.w();
                  }
          }
          function l(e4, t4) {
            e4.p && e4.p(t4, e4.c);
          }
          function te(e4, t4) {
            this.b = e4 || this, this.d = t4 || this, this.a = null, this.c = false;
          }
          function u() {
            (this.h = this).i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
          }
          function re() {
            this.c = new D(), this.a = new te(), this.b = new u(), this.d = new u(), this.b.b = this.d, this.d.b = this.b;
          }
          function D(e4, t4) {
            this.e = e4 || this, this.f = t4 || this, this.d = this.c = null, this.g = [0, 0, 0], this.h = this.a = this.b = 0;
          }
          function oe() {
            this.c = [], this.d = null, this.a = 0, this.e = false, this.b = new ie();
          }
          function ne(e4, t4) {
            var r4, o3, n3;
            return e4.e ? (2 * (o3 = ++(r4 = e4.b).a) > r4.f && (r4.f *= 2, r4.c = ae(r4.c, r4.f + 1)), 0 === r4.b ? n3 = o3 : (n3 = r4.b, r4.b = r4.c[r4.b]), r4.e[n3] = t4, r4.c[n3] = o3, r4.d[o3] = n3, r4.h && ue(r4, o3), n3) : (r4 = e4.a++, e4.c[r4] = t4, -(r4 + 1));
          }
          function se(e4) {
            if (0 === e4.a)
              return le(e4.b);
            var t4 = e4.c[e4.d[e4.a - 1]];
            if (0 !== e4.b.a && g(F(e4.b), t4))
              return le(e4.b);
            for (; --e4.a, 0 < e4.a && null === e4.c[e4.d[e4.a - 1]]; )
              ;
            return t4;
          }
          function ie() {
            this.d = ae([0], 33), this.e = [null, null], this.c = [0, 0], this.a = 0, this.f = 32, this.b = 0, this.h = false, this.d[1] = 1;
          }
          function ae(e4, t4) {
            for (var r4 = Array(t4), o3 = 0; o3 < e4.length; o3++)
              r4[o3] = e4[o3];
            for (; o3 < t4; o3++)
              r4[o3] = 0;
            return r4;
          }
          function F(e4) {
            return e4.e[e4.d[1]];
          }
          function le(e4) {
            var t4 = e4.d, r4 = e4.e, o3 = e4.c, n3 = t4[1], s4 = r4[n3];
            return 0 < e4.a && (t4[1] = t4[e4.a], o3[t4[1]] = 1, r4[n3] = null, o3[n3] = e4.b, e4.b = n3, 0 < --e4.a && U(e4, 1)), s4;
          }
          function U(e4, t4) {
            for (var r4 = e4.d, o3 = e4.e, n3 = e4.c, s4 = t4, i3 = r4[s4]; ; ) {
              var a2 = s4 << 1, l2 = (a2 < e4.a && g(o3[r4[a2 + 1]], o3[r4[a2]]) && (a2 += 1), r4[a2]);
              if (a2 > e4.a || g(o3[i3], o3[l2])) {
                n3[r4[s4] = i3] = s4;
                break;
              }
              n3[r4[s4] = l2] = s4, s4 = a2;
            }
          }
          function ue(e4, t4) {
            for (var r4 = e4.d, o3 = e4.e, n3 = e4.c, s4 = t4, i3 = r4[s4]; ; ) {
              var a2 = s4 >> 1, l2 = r4[a2];
              if (0 == a2 || g(o3[l2], o3[i3])) {
                n3[r4[s4] = i3] = s4;
                break;
              }
              n3[r4[s4] = l2] = s4, s4 = a2;
            }
          }
          function N() {
            this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = false;
          }
          function B(e4) {
            return e4.e.c.b;
          }
          function G(e4) {
            return e4.e.a.b;
          }
          (t3 = r3.prototype).x = function() {
            I(this, 0);
          }, t3.B = function(e4, t4) {
            switch (e4) {
              case 100142:
                return;
              case 100140:
                switch (t4) {
                  case 100130:
                  case 100131:
                  case 100132:
                  case 100133:
                  case 100134:
                    return void (this.s = t4);
                }
                break;
              case 100141:
                return void (this.m = !!t4);
              default:
                return void l(this, 100900);
            }
            l(this, 100901);
          }, t3.y = function(e4) {
            switch (e4) {
              case 100142:
                return 0;
              case 100140:
                return this.s;
              case 100141:
                return this.m;
              default:
                l(this, 100900);
            }
            return false;
          }, t3.A = function(e4, t4, r4) {
            this.j[0] = e4, this.j[1] = t4, this.j[2] = r4;
          }, t3.z = function(e4, t4) {
            var r4 = t4 || null;
            switch (e4) {
              case 100100:
              case 100106:
                this.h = r4;
                break;
              case 100104:
              case 100110:
                this.l = r4;
                break;
              case 100101:
              case 100107:
                this.k = r4;
                break;
              case 100102:
              case 100108:
                this.i = r4;
                break;
              case 100103:
              case 100109:
                this.p = r4;
                break;
              case 100105:
              case 100111:
                this.o = r4;
                break;
              case 100112:
                this.r = r4;
                break;
              default:
                l(this, 100900);
            }
          }, t3.C = function(e4, t4) {
            var r4 = false, o3 = [0, 0, 0];
            I(this, 2);
            for (var n3 = 0; n3 < 3; ++n3) {
              var s4 = e4[n3];
              s4 < -1e150 && (s4 = -1e150, r4 = true), 1e150 < s4 && (s4 = 1e150, r4 = true), o3[n3] = s4;
            }
            r4 && l(this, 100155), null === (r4 = this.q) ? x(r4 = d(this.b), r4.b) : (w(r4), r4 = r4.e), r4.a.d = t4, r4.a.g[0] = o3[0], r4.a.g[1] = o3[1], r4.a.g[2] = o3[2], r4.f = 1, r4.b.f = -1, this.q = r4;
          }, t3.u = function(e4) {
            I(this, 0), this.d = 1, this.b = new re(), this.c = e4;
          }, t3.t = function() {
            I(this, 1), this.d = 2, this.q = null;
          }, t3.v = function() {
            I(this, 2), this.d = 1;
          }, t3.w = function() {
            I(this, 1), this.d = 0;
            var e4, t4, r4 = this.j[0], o3 = this.j[1], n3 = this.j[2], s4 = false, i3 = [r4, o3, n3];
            if (0 === r4 && 0 === o3 && 0 === n3) {
              for (var o3 = [-2e150, -2e150, -2e150], a2 = [2e150, 2e150, 2e150], n3 = [], l2 = [], r4 = (s4 = this.b.c).e; r4 !== s4; r4 = r4.e)
                for (var u2 = 0; u2 < 3; ++u2) {
                  var c2 = r4.g[u2];
                  c2 < a2[u2] && (a2[u2] = c2, l2[u2] = r4), c2 > o3[u2] && (o3[u2] = c2, n3[u2] = r4);
                }
              if (o3[1] - a2[1] > o3[r4 = 0] - a2[0] && (r4 = 1), a2[r4 = o3[2] - a2[2] > o3[r4] - a2[r4] ? 2 : r4] >= o3[r4])
                i3[0] = 0, i3[1] = 0, i3[2] = 1;
              else {
                for (a2 = l2[r4], n3 = n3[r4], l2 = [o3 = 0, 0, 0], a2 = [a2.g[0] - n3.g[0], a2.g[1] - n3.g[1], a2.g[2] - n3.g[2]], u2 = [0, 0, 0], r4 = s4.e; r4 !== s4; r4 = r4.e)
                  u2[0] = r4.g[0] - n3.g[0], u2[1] = r4.g[1] - n3.g[1], u2[2] = r4.g[2] - n3.g[2], l2[0] = a2[1] * u2[2] - a2[2] * u2[1], l2[1] = a2[2] * u2[0] - a2[0] * u2[2], l2[2] = a2[0] * u2[1] - a2[1] * u2[0], o3 < (c2 = l2[0] * l2[0] + l2[1] * l2[1] + l2[2] * l2[2]) && (o3 = c2, i3[0] = l2[0], i3[1] = l2[1], i3[2] = l2[2]);
                o3 <= 0 && (i3[0] = i3[1] = i3[2] = 0, i3[W(a2)] = 1);
              }
              s4 = true;
            }
            for (l2 = W(i3), r4 = this.b.c, o3 = (l2 + 1) % 3, n3 = (l2 + 2) % 3, l2 = 0 < i3[l2] ? 1 : -1, i3 = r4.e; i3 !== r4; i3 = i3.e)
              i3.b = i3.g[o3], i3.a = l2 * i3.g[n3];
            if (s4) {
              for (i3 = 0, r4 = (s4 = this.b.a).b; r4 !== s4; r4 = r4.b)
                if (!((o3 = r4.a).f <= 0))
                  for (; i3 += (o3.a.b - o3.b.a.b) * (o3.a.a + o3.b.a.a), (o3 = o3.e) !== r4.a; )
                    ;
              if (i3 < 0)
                for (s4 = (i3 = this.b.c).e; s4 !== i3; s4 = s4.e)
                  s4.a = -s4.a;
            }
            for (this.n = false, i3 = this.b.b, r4 = i3.h; r4 !== i3; r4 = s4)
              s4 = r4.h, o3 = r4.e, y(r4.a, r4.b.a) && r4.e.e !== r4 && (L(this, o3, r4), m(r4), o3 = (r4 = o3).e), o3.e === r4 && (o3 !== r4 && (o3 !== s4 && o3 !== s4.b || (s4 = s4.h), m(o3)), r4 !== s4 && r4 !== s4.b || (s4 = s4.h), m(r4));
            for (this.e = i3 = new oe(), s4 = this.b.c, r4 = s4.e; r4 !== s4; r4 = r4.e)
              r4.h = ne(i3, r4);
            var d2 = i3;
            d2.d = [];
            for (var f2 = 0; f2 < d2.a; f2++)
              d2.d[f2] = f2;
            d2.d.sort(function(r5) {
              return function(e5, t5) {
                return g(r5[e5], r5[t5]) ? 1 : -1;
              };
            }(d2.c)), d2.e = true;
            for (var h2 = d2.b, p2 = h2.a; 1 <= p2; --p2)
              U(h2, p2);
            for (h2.h = true, this.f = new $6(this), K(this, -4e150), K(this, 4e150); null !== (i3 = se(this.e)); ) {
              for (; ; ) {
                e:
                  if (0 === (r4 = this.e).a)
                    s4 = F(r4.b);
                  else if (s4 = r4.c[r4.d[r4.a - 1]], 0 !== r4.b.a && g(r4 = F(r4.b), s4)) {
                    s4 = r4;
                    break e;
                  }
                if (null === s4 || !y(s4, i3))
                  break;
                s4 = se(this.e), L(this, i3.c, s4.c);
              }
              !function e5(t5, r5) {
                for (var o4, n4 = (t5.a = r5).c; null === n4.i; )
                  if ((n4 = n4.c) === r5.c) {
                    var n4 = t5, s5 = r5;
                    (c3 = new N()).a = s5.c.b;
                    for (var i4 = (a3 = n4.f).a; null !== (i4 = i4.a).b && !a3.c(a3.b, c3, i4.b); )
                      ;
                    var a3, l3, u3 = B(a3 = i4.b), c3 = a3.a, i4 = u3.a;
                    return void (0 === b(c3.b.a, s5, c3.a) ? y((c3 = a3.a).a, s5) || y(c3.b.a, s5) || (w(c3.b), a3.c && (m(c3.c), a3.c = false), x(s5.c, c3), e5(n4, s5)) : (l3 = g(i4.b.a, c3.b.a) ? a3 : u3, u3 = void 0, a3.d || l3.c ? (u3 = l3 === a3 ? S(s5.c.b, c3.e) : S(i4.b.c.b, s5.c).b, l3.c ? O(l3, u3) : ((a3 = q(c3 = n4, a3, u3)).f = G(a3).f + a3.a.f, a3.d = X(c3, a3.f)), e5(n4, s5)) : P(n4, a3, s5.c, s5.c, null, true)));
                  }
                a3 = (c3 = B(n4 = C(n4.i))).a, (c3 = A(t5, c3, null)).c === a3 ? (c3 = (a3 = c3).c, i4 = B(n4), u3 = n4.a, l3 = i4.a, o4 = false, u3.b.a !== l3.b.a && Q(t5, n4), y(u3.a, t5.a) && (x(c3.b.e, u3), c3 = B(n4 = C(n4)).a, A(t5, B(n4), i4), o4 = true), y(l3.a, t5.a) && (x(a3, l3.b.e), a3 = A(t5, i4, null), o4 = true), o4 ? P(t5, n4, a3.c, c3, c3, true) : (s5 = g(l3.a, u3.a) ? l3.b.e : u3, P(t5, n4, s5 = S(a3.c.b, s5), s5.c, s5.c, false), s5.b.i.c = true, J(t5, n4))) : P(t5, n4, c3.c, a3, a3, true);
              }(this, i3);
            }
            for (this.a = this.f.a.a.b.a.a, i3 = 0; null !== (s4 = this.f.a.a.b); )
              s4.h || ++i3, k(s4);
            for (this.f = null, (i3 = this.e).b = null, i3.d = null, this.e = i3.c = null, i3 = this.b, r4 = i3.a.b; r4 !== i3.a; r4 = s4)
              s4 = r4.b, (r4 = r4.a).e.e === r4 && (T(r4.c, r4), m(r4));
            if (!this.n) {
              if (i3 = this.b, this.m)
                for (r4 = i3.b.h; r4 !== i3.b; r4 = s4)
                  s4 = r4.h, r4.b.d.c !== r4.d.c ? r4.f = r4.d.c ? 1 : -1 : m(r4);
              else
                for (r4 = i3.a.b; r4 !== i3.a; r4 = s4)
                  if (s4 = r4.b, r4.c) {
                    for (r4 = r4.a; g(r4.b.a, r4.a); r4 = r4.c.b)
                      ;
                    for (; g(r4.a, r4.b.a); r4 = r4.e)
                      ;
                    for (o3 = r4.c.b, n3 = void 0; r4.e !== o3; )
                      if (g(r4.b.a, o3.a)) {
                        for (; o3.e !== r4 && (g((t4 = o3.e).b.a, t4.a) || b(o3.a, o3.b.a, o3.e.b.a) <= 0); )
                          o3 = (n3 = S(o3.e, o3)).b;
                        o3 = o3.c.b;
                      } else {
                        for (; o3.e !== r4 && (g((e4 = r4.c.b).a, e4.b.a) || 0 <= b(r4.b.a, r4.a, r4.c.b.a)); )
                          r4 = (n3 = S(r4, r4.c.b)).b;
                        r4 = r4.e;
                      }
                    for (; o3.e.e !== r4; )
                      n3 = S(o3.e, o3), o3 = n3.b;
                  }
              if (this.h || this.i || this.k || this.l)
                if (this.m) {
                  for (s4 = (i3 = this.b).a.b; s4 !== i3.a; s4 = s4.b)
                    if (s4.c) {
                      for (this.h && this.h(2, this.c), r4 = s4.a; this.k && this.k(r4.a.d, this.c), (r4 = r4.e) !== s4.a; )
                        ;
                      this.i && this.i(this.c);
                    }
                } else {
                  for (i3 = this.b, s4 = !!this.l, r4 = false, o3 = -1, n3 = i3.a.d; n3 !== i3.a; n3 = n3.d)
                    if (n3.c)
                      for (r4 || (this.h && this.h(4, this.c), r4 = true), l2 = n3.a; s4 && (a2 = l2.b.d.c ? 0 : 1, o3 !== a2 && (o3 = a2, this.l && this.l(!!o3, this.c))), this.k && this.k(l2.a.d, this.c), (l2 = l2.e) !== n3.a; )
                        ;
                  r4 && this.i && this.i(this.c);
                }
              if (this.r) {
                for (i3 = this.b, r4 = i3.a.b; r4 !== i3.a; r4 = s4)
                  if (s4 = r4.b, !r4.c) {
                    for (n3 = (o3 = r4.a).e, l2 = void 0; n3 = (l2 = n3).e, (l2.d = null) === l2.b.d && (l2.c === l2 ? M(l2.a, null) : (l2.a.c = l2.c, E(l2, l2.b.e)), (a2 = l2.b).c === a2 ? M(a2.a, null) : (a2.a.c = a2.c, E(a2, a2.b.e)), H(l2)), l2 !== o3; )
                      ;
                    o3 = r4.d, ((r4 = r4.b).d = o3).b = r4;
                  }
                return this.r(this.b), void (this.c = this.b = null);
              }
            }
            this.b = this.c = null;
          }, this.libtess = { GluTesselator: r3, windingRule: { GLU_TESS_WINDING_ODD: 100130, GLU_TESS_WINDING_NONZERO: 100131, GLU_TESS_WINDING_POSITIVE: 100132, GLU_TESS_WINDING_NEGATIVE: 100133, GLU_TESS_WINDING_ABS_GEQ_TWO: 100134 }, primitiveType: { GL_LINE_LOOP: 2, GL_TRIANGLES: 4, GL_TRIANGLE_STRIP: 5, GL_TRIANGLE_FAN: 6 }, errorType: { GLU_TESS_MISSING_BEGIN_POLYGON: 100151, GLU_TESS_MISSING_END_POLYGON: 100153, GLU_TESS_MISSING_BEGIN_CONTOUR: 100152, GLU_TESS_MISSING_END_CONTOUR: 100154, GLU_TESS_COORD_TOO_LARGE: 100155, GLU_TESS_NEED_COMBINE_CALLBACK: 100156 }, gluEnum: { GLU_TESS_MESH: 100112, GLU_TESS_TOLERANCE: 100142, GLU_TESS_WINDING_RULE: 100140, GLU_TESS_BOUNDARY_ONLY: 100141, GLU_INVALID_ENUM: 100900, GLU_INVALID_VALUE: 100901, GLU_TESS_BEGIN: 100100, GLU_TESS_VERTEX: 100101, GLU_TESS_END: 100102, GLU_TESS_ERROR: 100103, GLU_TESS_EDGE_FLAG: 100104, GLU_TESS_COMBINE: 100105, GLU_TESS_BEGIN_DATA: 100106, GLU_TESS_VERTEX_DATA: 100107, GLU_TESS_END_DATA: 100108, GLU_TESS_ERROR_DATA: 100109, GLU_TESS_EDGE_FLAG_DATA: 100110, GLU_TESS_COMBINE_DATA: 100111 } }, r3.prototype.gluDeleteTess = r3.prototype.x, r3.prototype.gluTessProperty = r3.prototype.B, r3.prototype.gluGetTessProperty = r3.prototype.y, r3.prototype.gluTessNormal = r3.prototype.A, r3.prototype.gluTessCallback = r3.prototype.z, r3.prototype.gluTessVertex = r3.prototype.C, r3.prototype.gluTessBeginPolygon = r3.prototype.u, r3.prototype.gluTessBeginContour = r3.prototype.t, r3.prototype.gluTessEndContour = r3.prototype.v, r3.prototype.gluTessEndPolygon = r3.prototype.w, void 0 !== e3 && (e3.exports = this.libtess);
        }, {}], 246: [function(e3, t3, r3) {
          "use strict";
          function o2(g, e4, t4, r4) {
            var v = 0, o3 = void 0 === (r4 = void 0 === r4 ? {} : r4).loop ? null : r4.loop, b = void 0 === r4.palette ? null : r4.palette;
            if (e4 <= 0 || t4 <= 0 || 65535 < e4 || 65535 < t4)
              throw new Error("Width/Height invalid.");
            function j(e5) {
              e5 = e5.length;
              if (e5 < 2 || 256 < e5 || e5 & e5 - 1)
                throw new Error("Invalid code/color length, must be power of 2 and 2 .. 256.");
              return e5;
            }
            g[v++] = 71, g[v++] = 73, g[v++] = 70, g[v++] = 56, g[v++] = 57, g[v++] = 97;
            var n2 = 0, s3 = 0;
            if (null !== b) {
              for (var i2 = j(b); i2 >>= 1; )
                ++n2;
              if (i2 = 1 << n2, --n2, void 0 !== r4.background) {
                if (i2 <= (s3 = r4.background))
                  throw new Error("Background index out of range.");
                if (0 === s3)
                  throw new Error("Background index explicitly passed as 0.");
              }
            }
            if (g[v++] = 255 & e4, g[v++] = e4 >> 8 & 255, g[v++] = 255 & t4, g[v++] = t4 >> 8 & 255, g[v++] = (null !== b ? 128 : 0) | n2, g[v++] = s3, g[v++] = 0, null !== b)
              for (var a = 0, l = b.length; a < l; ++a) {
                var u = b[a];
                g[v++] = u >> 16 & 255, g[v++] = u >> 8 & 255, g[v++] = 255 & u;
              }
            if (null !== o3) {
              if (o3 < 0 || 65535 < o3)
                throw new Error("Loop count invalid.");
              g[v++] = 33, g[v++] = 255, g[v++] = 11, g[v++] = 78, g[v++] = 69, g[v++] = 84, g[v++] = 83, g[v++] = 67, g[v++] = 65, g[v++] = 80, g[v++] = 69, g[v++] = 50, g[v++] = 46, g[v++] = 48, g[v++] = 3, g[v++] = 1, g[v++] = 255 & o3, g[v++] = o3 >> 8 & 255, g[v++] = 0;
            }
            var _ = false;
            this.addFrame = function(e5, t5, r5, o4, n3, s4) {
              if (true === _ && (--v, _ = false), s4 = void 0 === s4 ? {} : s4, e5 < 0 || t5 < 0 || 65535 < e5 || 65535 < t5)
                throw new Error("x/y invalid.");
              if (r5 <= 0 || o4 <= 0 || 65535 < r5 || 65535 < o4)
                throw new Error("Width/Height invalid.");
              if (n3.length < r5 * o4)
                throw new Error("Not enough pixels for the frame size.");
              var i3 = true, a2 = s4.palette;
              if (null == a2 && (i3 = false, a2 = b), null == a2)
                throw new Error("Must supply either a local or global palette.");
              for (var l2 = j(a2), u2 = 0; l2 >>= 1; )
                ++u2;
              var l2 = 1 << u2, c = void 0 === s4.delay ? 0 : s4.delay, d = void 0 === s4.disposal ? 0 : s4.disposal;
              if (d < 0 || 3 < d)
                throw new Error("Disposal out of range.");
              var f = false, h = 0;
              if (void 0 !== s4.transparent && null !== s4.transparent && (f = true, (h = s4.transparent) < 0 || l2 <= h))
                throw new Error("Transparent color index.");
              if (0 === d && !f && 0 === c || (g[v++] = 33, g[v++] = 249, g[v++] = 4, g[v++] = d << 2 | (true === f ? 1 : 0), g[v++] = 255 & c, g[v++] = c >> 8 & 255, g[v++] = h, g[v++] = 0), g[v++] = 44, g[v++] = 255 & e5, g[v++] = e5 >> 8 & 255, g[v++] = 255 & t5, g[v++] = t5 >> 8 & 255, g[v++] = 255 & r5, g[v++] = r5 >> 8 & 255, g[v++] = 255 & o4, g[v++] = o4 >> 8 & 255, g[v++] = true === i3 ? 128 | u2 - 1 : 0, true === i3)
                for (var p = 0, m = a2.length; p < m; ++p) {
                  var y = a2[p];
                  g[v++] = y >> 16 & 255, g[v++] = y >> 8 & 255, g[v++] = 255 & y;
                }
              return v = function(t6, r6, e6, o5) {
                t6[r6++] = e6;
                var n4 = r6++, s5 = 1 << e6, i4 = s5 - 1, a3 = 1 + s5, l3 = 1 + a3, u3 = e6 + 1, c2 = 0, d2 = 0;
                function f2(e7) {
                  for (; e7 <= c2; )
                    t6[r6++] = 255 & d2, d2 >>= 8, c2 -= 8, r6 === n4 + 256 && (t6[n4] = 255, n4 = r6++);
                }
                function h2(e7) {
                  d2 |= e7 << c2, c2 += u3, f2(8);
                }
                var p2 = o5[0] & i4, m2 = {};
                h2(s5);
                for (var y2 = 1, g2 = o5.length; y2 < g2; ++y2) {
                  var v2 = o5[y2] & i4, b2 = p2 << 8 | v2, j2 = m2[b2];
                  if (void 0 === j2) {
                    for (d2 |= p2 << c2, c2 += u3; 8 <= c2; )
                      t6[r6++] = 255 & d2, d2 >>= 8, c2 -= 8, r6 === n4 + 256 && (t6[n4] = 255, n4 = r6++);
                    4096 === l3 ? (h2(s5), l3 = 1 + a3, u3 = e6 + 1, m2 = {}) : (1 << u3 <= l3 && ++u3, m2[b2] = l3++), p2 = v2;
                  } else
                    p2 = j2;
                }
                h2(p2), h2(a3), f2(1), n4 + 1 === r6 ? t6[n4] = 0 : (t6[n4] = r6 - n4 - 1, t6[r6++] = 0);
                return r6;
              }(g, v, u2 < 2 ? 2 : u2, n3);
            }, this.end = function() {
              return false === _ && (g[v++] = 59, _ = true), v;
            }, this.getOutputBuffer = function() {
              return g;
            }, this.setOutputBuffer = function(e5) {
              g = e5;
            }, this.getOutputBufferPosition = function() {
              return v;
            }, this.setOutputBufferPosition = function(e5) {
              v = e5;
            };
          }
          function M(e4, t4, r4, o3) {
            for (var n2 = e4[t4++], s3 = 1 << n2, i2 = 1 + s3, a = 1 + i2, l = n2 + 1, u = (1 << l) - 1, c = 0, d = 0, f = 0, h = e4[t4++], p = new Int32Array(4096), m = null; ; ) {
              for (; c < 16 && 0 !== h; )
                d |= e4[t4++] << c, c += 8, 1 === h ? h = e4[t4++] : --h;
              if (c < l)
                break;
              var y = d & u;
              if (d >>= l, c -= l, y == s3)
                a = 1 + i2, u = (1 << (l = n2 + 1)) - 1, m = null;
              else {
                if (y == i2)
                  break;
                for (var g = y < a ? y : m, v = 0, b = g; s3 < b; )
                  b = p[b] >> 8, ++v;
                var j = b;
                if (o3 < f + v + (g !== y ? 1 : 0))
                  return void console.log("Warning, gif stream longer than expected.");
                r4[f++] = j;
                var _ = f += v;
                for (g !== y && (r4[f++] = j), b = g; v--; )
                  b = p[b], r4[--_] = 255 & b, b >>= 8;
                null !== m && a < 4096 && (p[a++] = m << 8 | j, u + 1 <= a && l < 12 && (++l, u = u << 1 | 1)), m = y;
              }
            }
            f !== o3 && console.log("Warning, gif stream shorter than expected.");
          }
          try {
            r3.GifWriter = o2, r3.GifReader = function(b) {
              var e4 = 0;
              if (71 !== b[e4++] || 73 !== b[e4++] || 70 !== b[e4++] || 56 !== b[e4++] || 56 != (b[e4++] + 1 & 253) || 97 !== b[e4++])
                throw new Error("Invalid GIF 87a/89a header.");
              var j = b[e4++] | b[e4++] << 8, t4 = b[e4++] | b[e4++] << 8, r4 = b[e4++], o3 = 1 << 1 + (7 & r4), n2 = (b[e4++], b[e4++], null), s3 = null, i2 = (r4 >> 7 && (n2 = e4, e4 += 3 * (s3 = o3)), true), a = [], l = 0, u = null, c = 0, d = null;
              for (this.width = j, this.height = t4; i2 && e4 < b.length; )
                switch (b[e4++]) {
                  case 33:
                    switch (b[e4++]) {
                      case 255:
                        if (11 !== b[e4] || 78 == b[e4 + 1] && 69 == b[e4 + 2] && 84 == b[e4 + 3] && 83 == b[e4 + 4] && 67 == b[e4 + 5] && 65 == b[e4 + 6] && 80 == b[e4 + 7] && 69 == b[e4 + 8] && 50 == b[e4 + 9] && 46 == b[e4 + 10] && 48 == b[e4 + 11] && 3 == b[e4 + 12] && 1 == b[e4 + 13] && 0 == b[e4 + 16])
                          e4 += 14, d = b[e4++] | b[e4++] << 8, e4++;
                        else
                          for (e4 += 12; ; ) {
                            if (!(0 <= (h = b[e4++])))
                              throw Error("Invalid block size");
                            if (0 === h)
                              break;
                            e4 += h;
                          }
                        break;
                      case 249:
                        if (4 !== b[e4++] || 0 !== b[e4 + 4])
                          throw new Error("Invalid graphics extension block.");
                        var f = b[e4++], l = b[e4++] | b[e4++] << 8, u = b[e4++];
                        0 == (1 & f) && (u = null), c = f >> 2 & 7, e4++;
                        break;
                      case 254:
                        for (; ; ) {
                          if (!(0 <= (h = b[e4++])))
                            throw Error("Invalid block size");
                          if (0 === h)
                            break;
                          e4 += h;
                        }
                        break;
                      default:
                        throw new Error("Unknown graphic control label: 0x" + b[e4 - 1].toString(16));
                    }
                    break;
                  case 44:
                    var h, p = b[e4++] | b[e4++] << 8, m = b[e4++] | b[e4++] << 8, y = b[e4++] | b[e4++] << 8, g = b[e4++] | b[e4++] << 8, v = b[e4++], _ = v >> 6 & 1, x = 1 << 1 + (7 & v), w = n2, S = s3, E = false, v = (v >> 7 && (E = true, w = e4, e4 += 3 * (S = x)), e4);
                    for (e4++; ; ) {
                      if (!(0 <= (h = b[e4++])))
                        throw Error("Invalid block size");
                      if (0 === h)
                        break;
                      e4 += h;
                    }
                    a.push({ x: p, y: m, width: y, height: g, has_local_palette: E, palette_offset: w, palette_size: S, data_offset: v, data_length: e4 - v, transparent_index: u, interlaced: !!_, delay: l, disposal: c });
                    break;
                  case 59:
                    i2 = false;
                    break;
                  default:
                    throw new Error("Unknown gif block: 0x" + b[e4 - 1].toString(16));
                }
              this.numFrames = function() {
                return a.length;
              }, this.loopCount = function() {
                return d;
              }, this.frameInfo = function(e5) {
                if (e5 < 0 || e5 >= a.length)
                  throw new Error("Frame index out of range.");
                return a[e5];
              }, this.decodeAndBlitFrameBGRA = function(e5, t5) {
                for (var e5 = this.frameInfo(e5), r5 = e5.width * e5.height, o4 = new Uint8Array(r5), n3 = (M(b, e5.data_offset, o4, r5), e5.palette_offset), s4 = e5.transparent_index, i3 = (null === s4 && (s4 = 256), e5.width), a2 = j - i3, l2 = i3, u2 = 4 * (e5.y * j + e5.x), c2 = 4 * ((e5.y + e5.height) * j + e5.x), d2 = u2, f2 = 4 * a2, h2 = (true === e5.interlaced && (f2 += 4 * j * 7), 8), p2 = 0, m2 = o4.length; p2 < m2; ++p2) {
                  var y2, g2, v2 = o4[p2];
                  0 === l2 && (l2 = i3, c2 <= (d2 += f2) && (f2 = 4 * a2 + 4 * j * (h2 - 1), d2 = u2 + (i3 + a2) * (h2 << 1), h2 >>= 1)), v2 === s4 ? d2 += 4 : (y2 = b[n3 + 3 * v2], g2 = b[n3 + 3 * v2 + 1], v2 = b[n3 + 3 * v2 + 2], t5[d2++] = v2, t5[d2++] = g2, t5[d2++] = y2, t5[d2++] = 255), --l2;
                }
              }, this.decodeAndBlitFrameRGBA = function(e5, t5) {
                for (var e5 = this.frameInfo(e5), r5 = e5.width * e5.height, o4 = new Uint8Array(r5), n3 = (M(b, e5.data_offset, o4, r5), e5.palette_offset), s4 = e5.transparent_index, i3 = (null === s4 && (s4 = 256), e5.width), a2 = j - i3, l2 = i3, u2 = 4 * (e5.y * j + e5.x), c2 = 4 * ((e5.y + e5.height) * j + e5.x), d2 = u2, f2 = 4 * a2, h2 = (true === e5.interlaced && (f2 += 4 * j * 7), 8), p2 = 0, m2 = o4.length; p2 < m2; ++p2) {
                  var y2, g2, v2 = o4[p2];
                  0 === l2 && (l2 = i3, c2 <= (d2 += f2) && (f2 = 4 * a2 + 4 * j * (h2 - 1), d2 = u2 + (i3 + a2) * (h2 << 1), h2 >>= 1)), v2 === s4 ? d2 += 4 : (y2 = b[n3 + 3 * v2], g2 = b[n3 + 3 * v2 + 1], v2 = b[n3 + 3 * v2 + 2], t5[d2++] = y2, t5[d2++] = g2, t5[d2++] = v2, t5[d2++] = 255), --l2;
                }
              };
            };
          } catch (e4) {
          }
        }, {}], 247: [function(Pr, r3, o2) {
          !function(Ar) {
            var e3, t3;
            e3 = this, t3 = function(j) {
              "use strict";
              function D(e5) {
                if (null == this)
                  throw TypeError();
                var t5, r5 = String(this), o4 = r5.length, e5 = e5 ? Number(e5) : 0;
                if (!((e5 = e5 != e5 ? 0 : e5) < 0 || o4 <= e5))
                  return 55296 <= (t5 = r5.charCodeAt(e5)) && t5 <= 56319 && e5 + 1 < o4 && 56320 <= (o4 = r5.charCodeAt(e5 + 1)) && o4 <= 57343 ? 1024 * (t5 - 55296) + o4 - 56320 + 65536 : t5;
              }
              String.prototype.codePointAt || ((F = function() {
                try {
                  var e5 = {}, t5 = Object.defineProperty, r5 = t5(e5, e5, e5) && t5;
                } catch (e6) {
                }
                return r5;
              }()) ? F(String.prototype, "codePointAt", { value: D, configurable: true, writable: true }) : String.prototype.codePointAt = D);
              var F, U = 0, N = -3;
              function B() {
                this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
              }
              function G(e5, t5) {
                this.source = e5, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t5, this.destLen = 0, this.ltree = new B(), this.dtree = new B();
              }
              var V = new B(), z = new B(), H = new Uint8Array(30), W = new Uint16Array(30), q = new Uint8Array(30), X = new Uint16Array(30), Y = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]), Z = new B(), v = new Uint8Array(320);
              function Q(e5, t5, r5, o4) {
                for (var n3, s4 = 0; s4 < r5; ++s4)
                  e5[s4] = 0;
                for (s4 = 0; s4 < 30 - r5; ++s4)
                  e5[s4 + r5] = s4 / r5 | 0;
                for (n3 = o4, s4 = 0; s4 < 30; ++s4)
                  t5[s4] = n3, n3 += 1 << e5[s4];
              }
              var J = new Uint16Array(16);
              function K(e5, t5, r5, o4) {
                for (var n3, s4 = 0; s4 < 16; ++s4)
                  e5.table[s4] = 0;
                for (s4 = 0; s4 < o4; ++s4)
                  e5.table[t5[r5 + s4]]++;
                for (s4 = n3 = e5.table[0] = 0; s4 < 16; ++s4)
                  J[s4] = n3, n3 += e5.table[s4];
                for (s4 = 0; s4 < o4; ++s4)
                  t5[r5 + s4] && (e5.trans[J[t5[r5 + s4]]++] = s4);
              }
              function b(e5, t5, r5) {
                if (!t5)
                  return r5;
                for (; e5.bitcount < 24; )
                  e5.tag |= e5.source[e5.sourceIndex++] << e5.bitcount, e5.bitcount += 8;
                var o4 = e5.tag & 65535 >>> 16 - t5;
                return e5.tag >>>= t5, e5.bitcount -= t5, o4 + r5;
              }
              function $6(e5, t5) {
                for (; e5.bitcount < 24; )
                  e5.tag |= e5.source[e5.sourceIndex++] << e5.bitcount, e5.bitcount += 8;
                for (var r5 = 0, o4 = 0, n3 = 0, s4 = e5.tag; o4 = 2 * o4 + (1 & s4), s4 >>>= 1, r5 += t5.table[++n3], 0 <= (o4 -= t5.table[n3]); )
                  ;
                return e5.tag = s4, e5.bitcount -= n3, t5.trans[r5 + o4];
              }
              function ee(e5, t5, r5) {
                for (; ; ) {
                  var o4 = $6(e5, t5);
                  if (256 === o4)
                    return U;
                  if (o4 < 256)
                    e5.dest[e5.destLen++] = o4;
                  else
                    for (var n3, s4 = b(e5, H[o4 -= 257], W[o4]), o4 = $6(e5, r5), i3 = n3 = e5.destLen - b(e5, q[o4], X[o4]); i3 < n3 + s4; ++i3)
                      e5.dest[e5.destLen++] = e5.dest[i3];
                }
              }
              for (var e4 = V, te = z, t4 = 0; t4 < 7; ++t4)
                e4.table[t4] = 0;
              for (e4.table[7] = 24, e4.table[8] = 152, e4.table[9] = 112, t4 = 0; t4 < 24; ++t4)
                e4.trans[t4] = 256 + t4;
              for (t4 = 0; t4 < 144; ++t4)
                e4.trans[24 + t4] = t4;
              for (t4 = 0; t4 < 8; ++t4)
                e4.trans[168 + t4] = 280 + t4;
              for (t4 = 0; t4 < 112; ++t4)
                e4.trans[176 + t4] = 144 + t4;
              for (t4 = 0; t4 < 5; ++t4)
                te.table[t4] = 0;
              for (te.table[5] = 32, t4 = 0; t4 < 32; ++t4)
                te.trans[t4] = t4;
              Q(H, W, 4, 3), Q(q, X, 2, 1), H[28] = 0, W[28] = 258;
              var re = function(e5, t5) {
                var r5, o4, n3, s4 = new G(e5, t5);
                do {
                  switch (n3 = void 0, (o4 = s4).bitcount-- || (o4.tag = o4.source[o4.sourceIndex++], o4.bitcount = 7), n3 = 1 & o4.tag, o4.tag >>>= 1, o4 = n3, b(s4, 2, 0)) {
                    case 0:
                      r5 = function(e6) {
                        for (var t6, r6; 8 < e6.bitcount; )
                          e6.sourceIndex--, e6.bitcount -= 8;
                        if ((t6 = 256 * e6.source[e6.sourceIndex + 1] + e6.source[e6.sourceIndex]) !== (65535 & ~(256 * e6.source[e6.sourceIndex + 3] + e6.source[e6.sourceIndex + 2])))
                          return N;
                        for (e6.sourceIndex += 4, r6 = t6; r6; --r6)
                          e6.dest[e6.destLen++] = e6.source[e6.sourceIndex++];
                        return e6.bitcount = 0, U;
                      }(s4);
                      break;
                    case 1:
                      r5 = ee(s4, V, z);
                      break;
                    case 2:
                      y2 = m2 = p2 = g2 = i3 = h2 = f2 = d2 = c2 = u2 = l2 = a2 = void 0;
                      for (var i3, a2 = s4, l2 = s4.ltree, u2 = s4.dtree, c2 = b(a2, 5, 257), d2 = b(a2, 5, 1), f2 = b(a2, 4, 4), h2 = 0; h2 < 19; ++h2)
                        v[h2] = 0;
                      for (h2 = 0; h2 < f2; ++h2) {
                        var p2 = b(a2, 3, 0);
                        v[Y[h2]] = p2;
                      }
                      for (K(Z, v, 0, 19), i3 = 0; i3 < c2 + d2; ) {
                        var m2 = $6(a2, Z);
                        switch (m2) {
                          case 16:
                            for (var y2 = v[i3 - 1], g2 = b(a2, 2, 3); g2; --g2)
                              v[i3++] = y2;
                            break;
                          case 17:
                            for (g2 = b(a2, 3, 3); g2; --g2)
                              v[i3++] = 0;
                            break;
                          case 18:
                            for (g2 = b(a2, 7, 11); g2; --g2)
                              v[i3++] = 0;
                            break;
                          default:
                            v[i3++] = m2;
                        }
                      }
                      K(l2, v, 0, c2), K(u2, v, c2, d2), r5 = ee(s4, s4.ltree, s4.dtree);
                      break;
                    default:
                      r5 = N;
                  }
                  if (r5 !== U)
                    throw new Error("Data error");
                } while (!o4);
                return s4.destLen < s4.dest.length ? "function" == typeof s4.dest.slice ? s4.dest.slice(0, s4.destLen) : s4.dest.subarray(0, s4.destLen) : s4.dest;
              };
              function g(e5, t5, r5, o4, n3) {
                return Math.pow(1 - n3, 3) * e5 + 3 * Math.pow(1 - n3, 2) * n3 * t5 + 3 * (1 - n3) * Math.pow(n3, 2) * r5 + Math.pow(n3, 3) * o4;
              }
              function a() {
                this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
              }
              function f() {
                this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
              }
              function oe(e5) {
                throw new Error(e5);
              }
              function ne(e5, t5) {
                e5 || oe(t5);
              }
              a.prototype.isEmpty = function() {
                return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
              }, a.prototype.addPoint = function(e5, t5) {
                "number" == typeof e5 && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e5, this.x2 = e5), e5 < this.x1 && (this.x1 = e5), e5 > this.x2 && (this.x2 = e5)), "number" == typeof t5 && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t5, this.y2 = t5), t5 < this.y1 && (this.y1 = t5), t5 > this.y2 && (this.y2 = t5));
              }, a.prototype.addX = function(e5) {
                this.addPoint(e5, null);
              }, a.prototype.addY = function(e5) {
                this.addPoint(null, e5);
              }, a.prototype.addBezier = function(e5, t5, r5, o4, n3, s4, i3, a2) {
                var l2 = [e5, t5], u2 = [r5, o4], c2 = [n3, s4], d2 = [i3, a2];
                this.addPoint(e5, t5), this.addPoint(i3, a2);
                for (var f2 = 0; f2 <= 1; f2++) {
                  var h2, p2 = 6 * l2[f2] - 12 * u2[f2] + 6 * c2[f2], m2 = -3 * l2[f2] + 9 * u2[f2] - 9 * c2[f2] + 3 * d2[f2], y2 = 3 * u2[f2] - 3 * l2[f2];
                  0 == m2 ? 0 == p2 || 0 < (h2 = -y2 / p2) && h2 < 1 && (0 === f2 && this.addX(g(l2[f2], u2[f2], c2[f2], d2[f2], h2)), 1 === f2 && this.addY(g(l2[f2], u2[f2], c2[f2], d2[f2], h2))) : (h2 = Math.pow(p2, 2) - 4 * y2 * m2) < 0 || (0 < (y2 = (-p2 + Math.sqrt(h2)) / (2 * m2)) && y2 < 1 && (0 === f2 && this.addX(g(l2[f2], u2[f2], c2[f2], d2[f2], y2)), 1 === f2 && this.addY(g(l2[f2], u2[f2], c2[f2], d2[f2], y2))), 0 < (y2 = (-p2 - Math.sqrt(h2)) / (2 * m2)) && y2 < 1 && (0 === f2 && this.addX(g(l2[f2], u2[f2], c2[f2], d2[f2], y2)), 1 === f2 && this.addY(g(l2[f2], u2[f2], c2[f2], d2[f2], y2))));
                }
              }, a.prototype.addQuad = function(e5, t5, r5, o4, n3, s4) {
                r5 = e5 + 2 / 3 * (r5 - e5), o4 = t5 + 2 / 3 * (o4 - t5);
                this.addBezier(e5, t5, r5, o4, r5 + 1 / 3 * (n3 - e5), o4 + 1 / 3 * (s4 - t5), n3, s4);
              }, f.prototype.moveTo = function(e5, t5) {
                this.commands.push({ type: "M", x: e5, y: t5 });
              }, f.prototype.lineTo = function(e5, t5) {
                this.commands.push({ type: "L", x: e5, y: t5 });
              }, f.prototype.curveTo = f.prototype.bezierCurveTo = function(e5, t5, r5, o4, n3, s4) {
                this.commands.push({ type: "C", x1: e5, y1: t5, x2: r5, y2: o4, x: n3, y: s4 });
              }, f.prototype.quadTo = f.prototype.quadraticCurveTo = function(e5, t5, r5, o4) {
                this.commands.push({ type: "Q", x1: e5, y1: t5, x: r5, y: o4 });
              }, f.prototype.close = f.prototype.closePath = function() {
                this.commands.push({ type: "Z" });
              }, f.prototype.extend = function(e5) {
                var t5;
                if (e5.commands)
                  e5 = e5.commands;
                else if (e5 instanceof a)
                  return t5 = e5, this.moveTo(t5.x1, t5.y1), this.lineTo(t5.x2, t5.y1), this.lineTo(t5.x2, t5.y2), this.lineTo(t5.x1, t5.y2), void this.close();
                Array.prototype.push.apply(this.commands, e5);
              }, f.prototype.getBoundingBox = function() {
                for (var e5 = new a(), t5 = 0, r5 = 0, o4 = 0, n3 = 0, s4 = 0; s4 < this.commands.length; s4++) {
                  var i3 = this.commands[s4];
                  switch (i3.type) {
                    case "M":
                      e5.addPoint(i3.x, i3.y), t5 = o4 = i3.x, r5 = n3 = i3.y;
                      break;
                    case "L":
                      e5.addPoint(i3.x, i3.y), o4 = i3.x, n3 = i3.y;
                      break;
                    case "Q":
                      e5.addQuad(o4, n3, i3.x1, i3.y1, i3.x, i3.y), o4 = i3.x, n3 = i3.y;
                      break;
                    case "C":
                      e5.addBezier(o4, n3, i3.x1, i3.y1, i3.x2, i3.y2, i3.x, i3.y), o4 = i3.x, n3 = i3.y;
                      break;
                    case "Z":
                      o4 = t5, n3 = r5;
                      break;
                    default:
                      throw new Error("Unexpected path command " + i3.type);
                  }
                }
                return e5.isEmpty() && e5.addPoint(0, 0), e5;
              }, f.prototype.draw = function(e5) {
                e5.beginPath();
                for (var t5 = 0; t5 < this.commands.length; t5 += 1) {
                  var r5 = this.commands[t5];
                  "M" === r5.type ? e5.moveTo(r5.x, r5.y) : "L" === r5.type ? e5.lineTo(r5.x, r5.y) : "C" === r5.type ? e5.bezierCurveTo(r5.x1, r5.y1, r5.x2, r5.y2, r5.x, r5.y) : "Q" === r5.type ? e5.quadraticCurveTo(r5.x1, r5.y1, r5.x, r5.y) : "Z" === r5.type && e5.closePath();
                }
                this.fill && (e5.fillStyle = this.fill, e5.fill()), this.stroke && (e5.strokeStyle = this.stroke, e5.lineWidth = this.strokeWidth, e5.stroke());
              }, f.prototype.toPathData = function(n3) {
                function e5() {
                  for (var e6 = arguments, t6 = "", r6 = 0; r6 < arguments.length; r6 += 1) {
                    var o5 = e6[r6];
                    0 <= o5 && 0 < r6 && (t6 += " "), t6 += (o5 = o5, Math.round(o5) === o5 ? "" + Math.round(o5) : o5.toFixed(n3));
                  }
                  return t6;
                }
                n3 = void 0 !== n3 ? n3 : 2;
                for (var t5 = "", r5 = 0; r5 < this.commands.length; r5 += 1) {
                  var o4 = this.commands[r5];
                  "M" === o4.type ? t5 += "M" + e5(o4.x, o4.y) : "L" === o4.type ? t5 += "L" + e5(o4.x, o4.y) : "C" === o4.type ? t5 += "C" + e5(o4.x1, o4.y1, o4.x2, o4.y2, o4.x, o4.y) : "Q" === o4.type ? t5 += "Q" + e5(o4.x1, o4.y1, o4.x, o4.y) : "Z" === o4.type && (t5 += "Z");
                }
                return t5;
              }, f.prototype.toSVG = function(e5) {
                var t5 = (t5 = '<path d="') + this.toPathData(e5) + '"';
                return this.fill && "black" !== this.fill && (null === this.fill ? t5 += ' fill="none"' : t5 += ' fill="' + this.fill + '"'), this.stroke && (t5 += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t5 += "/>";
              }, f.prototype.toDOMElement = function(e5) {
                var e5 = this.toPathData(e5), t5 = document.createElementNS("http://www.w3.org/2000/svg", "path");
                return t5.setAttribute("d", e5), t5;
              };
              var L = { fail: oe, argument: ne, assert: ne }, m = {}, w = {}, l = {};
              function r4(e5) {
                return function() {
                  return e5;
                };
              }
              w.BYTE = function(e5) {
                return L.argument(0 <= e5 && e5 <= 255, "Byte value should be between 0 and 255."), [e5];
              }, l.BYTE = r4(1), w.CHAR = function(e5) {
                return [e5.charCodeAt(0)];
              }, l.CHAR = r4(1), w.CHARARRAY = function(e5) {
                for (var t5 = [], r5 = 0; r5 < e5.length; r5 += 1)
                  t5[r5] = e5.charCodeAt(r5);
                return t5;
              }, l.CHARARRAY = function(e5) {
                return e5.length;
              }, w.USHORT = function(e5) {
                return [e5 >> 8 & 255, 255 & e5];
              }, l.USHORT = r4(2), w.SHORT = function(e5) {
                return [(e5 = 32768 <= e5 ? -(65536 - e5) : e5) >> 8 & 255, 255 & e5];
              }, l.SHORT = r4(2), w.UINT24 = function(e5) {
                return [e5 >> 16 & 255, e5 >> 8 & 255, 255 & e5];
              }, l.UINT24 = r4(3), w.ULONG = function(e5) {
                return [e5 >> 24 & 255, e5 >> 16 & 255, e5 >> 8 & 255, 255 & e5];
              }, l.ULONG = r4(4), w.LONG = function(e5) {
                return [(e5 = 2147483648 <= e5 ? -(4294967296 - e5) : e5) >> 24 & 255, e5 >> 16 & 255, e5 >> 8 & 255, 255 & e5];
              }, l.LONG = r4(4), w.FIXED = w.ULONG, l.FIXED = l.ULONG, w.FWORD = w.SHORT, l.FWORD = l.SHORT, w.UFWORD = w.USHORT, l.UFWORD = l.USHORT, w.LONGDATETIME = function(e5) {
                return [0, 0, 0, 0, e5 >> 24 & 255, e5 >> 16 & 255, e5 >> 8 & 255, 255 & e5];
              }, l.LONGDATETIME = r4(8), w.TAG = function(e5) {
                return L.argument(4 === e5.length, "Tag should be exactly 4 ASCII characters."), [e5.charCodeAt(0), e5.charCodeAt(1), e5.charCodeAt(2), e5.charCodeAt(3)];
              }, l.TAG = r4(4), w.Card8 = w.BYTE, l.Card8 = l.BYTE, w.Card16 = w.USHORT, l.Card16 = l.USHORT, w.OffSize = w.BYTE, l.OffSize = l.BYTE, w.SID = w.USHORT, l.SID = l.USHORT, w.NUMBER = function(e5) {
                return -107 <= e5 && e5 <= 107 ? [e5 + 139] : 108 <= e5 && e5 <= 1131 ? [247 + ((e5 -= 108) >> 8), 255 & e5] : -1131 <= e5 && e5 <= -108 ? [251 + ((e5 = -e5 - 108) >> 8), 255 & e5] : -32768 <= e5 && e5 <= 32767 ? w.NUMBER16(e5) : w.NUMBER32(e5);
              }, l.NUMBER = function(e5) {
                return w.NUMBER(e5).length;
              }, w.NUMBER16 = function(e5) {
                return [28, e5 >> 8 & 255, 255 & e5];
              }, l.NUMBER16 = r4(3), w.NUMBER32 = function(e5) {
                return [29, e5 >> 24 & 255, e5 >> 16 & 255, e5 >> 8 & 255, 255 & e5];
              }, l.NUMBER32 = r4(5), w.REAL = function(e5) {
                for (var t5 = e5.toString(), r5 = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t5), o4 = (r5 && (r5 = parseFloat("1e" + ((r5[2] ? +r5[2] : 0) + r5[1].length)), t5 = (Math.round(e5 * r5) / r5).toString()), ""), n3 = 0, s4 = t5.length; n3 < s4; n3 += 1) {
                  var i3 = t5[n3];
                  o4 += "e" === i3 ? "-" === t5[++n3] ? "c" : "b" : "." === i3 ? "a" : "-" === i3 ? "e" : i3;
                }
                for (var a2 = [30], l2 = 0, u2 = (o4 += 1 & o4.length ? "f" : "ff").length; l2 < u2; l2 += 2)
                  a2.push(parseInt(o4.substr(l2, 2), 16));
                return a2;
              }, l.REAL = function(e5) {
                return w.REAL(e5).length;
              }, w.NAME = w.CHARARRAY, l.NAME = l.CHARARRAY, w.STRING = w.CHARARRAY, l.STRING = l.CHARARRAY, m.UTF8 = function(e5, t5, r5) {
                for (var o4 = [], n3 = r5, s4 = 0; s4 < n3; s4++, t5 += 1)
                  o4[s4] = e5.getUint8(t5);
                return String.fromCharCode.apply(null, o4);
              }, m.UTF16 = function(e5, t5, r5) {
                for (var o4 = [], n3 = r5 / 2, s4 = 0; s4 < n3; s4++, t5 += 2)
                  o4[s4] = e5.getUint16(t5);
                return String.fromCharCode.apply(null, o4);
              }, w.UTF16 = function(e5) {
                for (var t5 = [], r5 = 0; r5 < e5.length; r5 += 1) {
                  var o4 = e5.charCodeAt(r5);
                  t5[t5.length] = o4 >> 8 & 255, t5[t5.length] = 255 & o4;
                }
                return t5;
              }, l.UTF16 = function(e5) {
                return 2 * e5.length;
              };
              var se, ie = { "x-mac-croatian": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7", "x-mac-cyrillic": "\u0410\u0411\u0412\u0413\u0414\u0415\u0416\u0417\u0418\u0419\u041A\u041B\u041C\u041D\u041E\u041F\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042A\u042B\u042C\u042D\u042E\u042F\u2020\xB0\u0490\xA3\xA7\u2022\xB6\u0406\xAE\xA9\u2122\u0402\u0452\u2260\u0403\u0453\u221E\xB1\u2264\u2265\u0456\xB5\u0491\u0408\u0404\u0454\u0407\u0457\u0409\u0459\u040A\u045A\u0458\u0405\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\u040B\u045B\u040C\u045C\u0455\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u201E\u040E\u045E\u040F\u045F\u2116\u0401\u0451\u044F\u0430\u0431\u0432\u0433\u0434\u0435\u0436\u0437\u0438\u0439\u043A\u043B\u043C\u043D\u043E\u043F\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044A\u044B\u044C\u044D\u044E", "x-mac-gaelic": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83", "x-mac-greek": "\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026\xA0\u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD", "x-mac-icelandic": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7", "x-mac-inuit": "\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026\xA0\u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142", "x-mac-ce": "\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026\xA0\u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7", macintosh: "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\uFB01\uFB02\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7", "x-mac-romanian": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7", "x-mac-turkish": "\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026\xA0\xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7" }, ae = (m.MACSTRING = function(e5, t5, r5, o4) {
                var n3 = ie[o4];
                if (void 0 !== n3) {
                  for (var s4 = "", i3 = 0; i3 < r5; i3++) {
                    var a2 = e5.getUint8(t5 + i3);
                    s4 += a2 <= 127 ? String.fromCharCode(a2) : n3[127 & a2];
                  }
                  return s4;
                }
              }, "function" == typeof WeakMap && /* @__PURE__ */ new WeakMap());
              function le(e5) {
                return -128 <= e5 && e5 <= 127;
              }
              w.MACSTRING = function(e5, t5) {
                var r5 = function(e6) {
                  if (!se)
                    for (var t6 in se = {}, ie)
                      se[t6] = new String(t6);
                  var r6 = se[e6];
                  if (void 0 !== r6) {
                    if (ae) {
                      var o5 = ae.get(r6);
                      if (void 0 !== o5)
                        return o5;
                    }
                    var n4 = ie[e6];
                    if (void 0 !== n4) {
                      for (var s5 = {}, i3 = 0; i3 < n4.length; i3++)
                        s5[n4.charCodeAt(i3)] = i3 + 128;
                      return ae && ae.set(r6, s5), s5;
                    }
                  }
                }(t5);
                if (void 0 !== r5) {
                  for (var o4 = [], n3 = 0; n3 < e5.length; n3++) {
                    var s4 = e5.charCodeAt(n3);
                    if (128 <= s4 && void 0 === (s4 = r5[s4]))
                      return;
                    o4[n3] = s4;
                  }
                  return o4;
                }
              }, l.MACSTRING = function(e5, t5) {
                e5 = w.MACSTRING(e5, t5);
                return void 0 !== e5 ? e5.length : 0;
              }, w.VARDELTAS = function(e5) {
                for (var t5 = 0, r5 = []; t5 < e5.length; )
                  var o4 = e5[t5], t5 = (0 === o4 ? function(e6, t6, r6) {
                    for (var o5 = 0, n3 = e6.length; t6 < n3 && o5 < 64 && 0 === e6[t6]; )
                      ++t6, ++o5;
                    return r6.push(128 | o5 - 1), t6;
                  } : -128 <= o4 && o4 <= 127 ? function(e6, t6, r6) {
                    for (var o5 = 0, n3 = e6.length, s4 = t6; s4 < n3 && o5 < 64; ) {
                      var i3 = e6[s4];
                      if (!le(i3))
                        break;
                      if (0 === i3 && s4 + 1 < n3 && 0 === e6[s4 + 1])
                        break;
                      ++s4, ++o5;
                    }
                    r6.push(o5 - 1);
                    for (var a2 = t6; a2 < s4; ++a2)
                      r6.push(e6[a2] + 256 & 255);
                    return s4;
                  } : function(e6, t6, r6) {
                    for (var o5 = 0, n3 = e6.length, s4 = t6; s4 < n3 && o5 < 64; ) {
                      var i3 = e6[s4];
                      if (0 === i3)
                        break;
                      if (le(i3) && s4 + 1 < n3 && le(e6[s4 + 1]))
                        break;
                      ++s4, ++o5;
                    }
                    r6.push(64 | o5 - 1);
                    for (var a2 = t6; a2 < s4; ++a2) {
                      var l2 = e6[a2];
                      r6.push(l2 + 65536 >> 8 & 255, l2 + 256 & 255);
                    }
                    return s4;
                  })(e5, t5, r5);
                return r5;
              }, w.INDEX = function(e5) {
                for (var t5 = 1, r5 = [t5], o4 = [], n3 = 0; n3 < e5.length; n3 += 1) {
                  var s4 = w.OBJECT(e5[n3]);
                  Array.prototype.push.apply(o4, s4), t5 += s4.length, r5.push(t5);
                }
                if (0 === o4.length)
                  return [0, 0];
                for (var i3 = [], a2 = 1 + Math.floor(Math.log(t5) / Math.log(2)) / 8 | 0, l2 = [void 0, w.BYTE, w.USHORT, w.UINT24, w.ULONG][a2], u2 = 0; u2 < r5.length; u2 += 1) {
                  var c2 = l2(r5[u2]);
                  Array.prototype.push.apply(i3, c2);
                }
                return Array.prototype.concat(w.Card16(e5.length), w.OffSize(a2), i3, o4);
              }, l.INDEX = function(e5) {
                return w.INDEX(e5).length;
              }, w.DICT = function(e5) {
                for (var t5 = [], r5 = Object.keys(e5), o4 = r5.length, n3 = 0; n3 < o4; n3 += 1) {
                  var s4 = parseInt(r5[n3], 0), i3 = e5[s4];
                  t5 = (t5 = t5.concat(w.OPERAND(i3.value, i3.type))).concat(w.OPERATOR(s4));
                }
                return t5;
              }, l.DICT = function(e5) {
                return w.DICT(e5).length;
              }, w.OPERATOR = function(e5) {
                return e5 < 1200 ? [e5] : [12, e5 - 1200];
              }, w.OPERAND = function(e5, t5) {
                var r5 = [];
                if (Array.isArray(t5))
                  for (var o4 = 0; o4 < t5.length; o4 += 1)
                    L.argument(e5.length === t5.length, "Not enough arguments given for type" + t5), r5 = r5.concat(w.OPERAND(e5[o4], t5[o4]));
                else if ("SID" === t5)
                  r5 = r5.concat(w.NUMBER(e5));
                else if ("offset" === t5)
                  r5 = r5.concat(w.NUMBER32(e5));
                else if ("number" === t5)
                  r5 = r5.concat(w.NUMBER(e5));
                else {
                  if ("real" !== t5)
                    throw new Error("Unknown operand type " + t5);
                  r5 = r5.concat(w.REAL(e5));
                }
                return r5;
              }, w.OP = w.BYTE, l.OP = l.BYTE;
              var ue = "function" == typeof WeakMap && /* @__PURE__ */ new WeakMap();
              function n2(e5, t5, r5) {
                for (var o4 = 0; o4 < t5.length; o4 += 1) {
                  var n3 = t5[o4];
                  this[n3.name] = n3.value;
                }
                if (this.tableName = e5, this.fields = t5, r5)
                  for (var s4 = Object.keys(r5), i3 = 0; i3 < s4.length; i3 += 1) {
                    var a2 = s4[i3], l2 = r5[a2];
                    void 0 !== this[a2] && (this[a2] = l2);
                  }
              }
              function ce(e5, t5, r5) {
                void 0 === r5 && (r5 = t5.length);
                var o4 = new Array(t5.length + 1);
                o4[0] = { name: e5 + "Count", type: "USHORT", value: r5 };
                for (var n3 = 0; n3 < t5.length; n3++)
                  o4[n3 + 1] = { name: e5 + n3, type: "USHORT", value: t5[n3] };
                return o4;
              }
              function de(e5, t5, r5) {
                var o4 = t5.length, n3 = new Array(o4 + 1);
                n3[0] = { name: e5 + "Count", type: "USHORT", value: o4 };
                for (var s4 = 0; s4 < o4; s4++)
                  n3[s4 + 1] = { name: e5 + s4, type: "TABLE", value: r5(t5[s4], s4) };
                return n3;
              }
              function fe(e5, t5, r5) {
                var o4 = t5.length, n3 = [];
                n3[0] = { name: e5 + "Count", type: "USHORT", value: o4 };
                for (var s4 = 0; s4 < o4; s4++)
                  n3 = n3.concat(r5(t5[s4], s4));
                return n3;
              }
              function he(e5) {
                1 === e5.format ? n2.call(this, "coverageTable", [{ name: "coverageFormat", type: "USHORT", value: 1 }].concat(ce("glyph", e5.glyphs))) : L.assert(false, "Can't create coverage table format 2 yet.");
              }
              function pe(e5) {
                n2.call(this, "scriptListTable", fe("scriptRecord", e5, function(e6, t5) {
                  var r5 = e6.script, o4 = r5.defaultLangSys;
                  return L.assert(!!o4, "Unable to write GSUB: script " + e6.tag + " has no default language system."), [{ name: "scriptTag" + t5, type: "TAG", value: e6.tag }, { name: "script" + t5, type: "TABLE", value: new n2("scriptTable", [{ name: "defaultLangSys", type: "TABLE", value: new n2("defaultLangSys", [{ name: "lookupOrder", type: "USHORT", value: 0 }, { name: "reqFeatureIndex", type: "USHORT", value: o4.reqFeatureIndex }].concat(ce("featureIndex", o4.featureIndexes))) }].concat(fe("langSys", r5.langSysRecords, function(e7, t6) {
                    var r6 = e7.langSys;
                    return [{ name: "langSysTag" + t6, type: "TAG", value: e7.tag }, { name: "langSys" + t6, type: "TABLE", value: new n2("langSys", [{ name: "lookupOrder", type: "USHORT", value: 0 }, { name: "reqFeatureIndex", type: "USHORT", value: r6.reqFeatureIndex }].concat(ce("featureIndex", r6.featureIndexes))) }];
                  }))) }];
                }));
              }
              function me(e5) {
                n2.call(this, "featureListTable", fe("featureRecord", e5, function(e6, t5) {
                  var r5 = e6.feature;
                  return [{ name: "featureTag" + t5, type: "TAG", value: e6.tag }, { name: "feature" + t5, type: "TABLE", value: new n2("featureTable", [{ name: "featureParams", type: "USHORT", value: r5.featureParams }].concat(ce("lookupListIndex", r5.lookupListIndexes))) }];
                }));
              }
              function ye(e5, r5) {
                n2.call(this, "lookupListTable", de("lookup", e5, function(e6) {
                  var t5 = r5[e6.lookupType];
                  return L.assert(!!t5, "Unable to write GSUB lookup type " + e6.lookupType + " tables."), new n2("lookupTable", [{ name: "lookupType", type: "USHORT", value: e6.lookupType }, { name: "lookupFlag", type: "USHORT", value: e6.lookupFlag }].concat(de("subtable", e6.subtables, t5)));
                }));
              }
              w.CHARSTRING = function(e5) {
                if (ue) {
                  var t5 = ue.get(e5);
                  if (void 0 !== t5)
                    return t5;
                }
                for (var r5 = [], o4 = e5.length, n3 = 0; n3 < o4; n3 += 1)
                  var s4 = e5[n3], r5 = r5.concat(w[s4.type](s4.value));
                return ue && ue.set(e5, r5), r5;
              }, l.CHARSTRING = function(e5) {
                return w.CHARSTRING(e5).length;
              }, w.OBJECT = function(e5) {
                var t5 = w[e5.type];
                return L.argument(void 0 !== t5, "No encoding function for type " + e5.type), t5(e5.value);
              }, l.OBJECT = function(e5) {
                var t5 = l[e5.type];
                return L.argument(void 0 !== t5, "No sizeOf function for type " + e5.type), t5(e5.value);
              }, w.TABLE = function(e5) {
                for (var t5 = [], r5 = e5.fields.length, o4 = [], n3 = [], s4 = 0; s4 < r5; s4 += 1) {
                  var i3 = e5.fields[s4], a2 = w[i3.type], l2 = (L.argument(void 0 !== a2, "No encoding function for field type " + i3.type + " (" + i3.name + ")"), e5[i3.name]), a2 = a2(l2 = void 0 === l2 ? i3.value : l2);
                  "TABLE" === i3.type ? (n3.push(t5.length), t5 = t5.concat([0, 0]), o4.push(a2)) : t5 = t5.concat(a2);
                }
                for (var u2 = 0; u2 < o4.length; u2 += 1) {
                  var c2 = n3[u2], d2 = t5.length;
                  L.argument(d2 < 65536, "Table " + e5.tableName + " too big."), t5[c2] = d2 >> 8, t5[c2 + 1] = 255 & d2, t5 = t5.concat(o4[u2]);
                }
                return t5;
              }, l.TABLE = function(e5) {
                for (var t5 = 0, r5 = e5.fields.length, o4 = 0; o4 < r5; o4 += 1) {
                  var n3 = e5.fields[o4], s4 = l[n3.type], i3 = (L.argument(void 0 !== s4, "No sizeOf function for field type " + n3.type + " (" + n3.name + ")"), e5[n3.name]);
                  t5 += s4(i3 = void 0 === i3 ? n3.value : i3), "TABLE" === n3.type && (t5 += 2);
                }
                return t5;
              }, w.RECORD = w.TABLE, l.RECORD = l.TABLE, w.LITERAL = function(e5) {
                return e5;
              }, l.LITERAL = function(e5) {
                return e5.length;
              }, n2.prototype.encode = function() {
                return w.TABLE(this);
              }, n2.prototype.sizeOf = function() {
                return l.TABLE(this);
              };
              var S = { Table: n2, Record: n2, Coverage: (he.prototype = Object.create(n2.prototype)).constructor = he, ScriptList: (pe.prototype = Object.create(n2.prototype)).constructor = pe, FeatureList: (me.prototype = Object.create(n2.prototype)).constructor = me, LookupList: (ye.prototype = Object.create(n2.prototype)).constructor = ye, ushortList: ce, tableList: de, recordList: fe };
              function ge(e5, t5) {
                return e5.getUint8(t5);
              }
              function ve(e5, t5) {
                return e5.getUint16(t5, false);
              }
              function be(e5, t5) {
                return e5.getUint32(t5, false);
              }
              function je(e5, t5) {
                return e5.getInt16(t5, false) + e5.getUint16(t5 + 2, false) / 65535;
              }
              var _e = { byte: 1, uShort: 2, short: 2, uLong: 4, fixed: 4, longDateTime: 8, tag: 4 };
              function u(e5, t5) {
                this.data = e5, this.offset = t5, this.relativeOffset = 0;
              }
              u.prototype.parseByte = function() {
                var e5 = this.data.getUint8(this.offset + this.relativeOffset);
                return this.relativeOffset += 1, e5;
              }, u.prototype.parseChar = function() {
                var e5 = this.data.getInt8(this.offset + this.relativeOffset);
                return this.relativeOffset += 1, e5;
              }, u.prototype.parseCard8 = u.prototype.parseByte, u.prototype.parseCard16 = u.prototype.parseUShort = function() {
                var e5 = this.data.getUint16(this.offset + this.relativeOffset);
                return this.relativeOffset += 2, e5;
              }, u.prototype.parseSID = u.prototype.parseUShort, u.prototype.parseOffset16 = u.prototype.parseUShort, u.prototype.parseShort = function() {
                var e5 = this.data.getInt16(this.offset + this.relativeOffset);
                return this.relativeOffset += 2, e5;
              }, u.prototype.parseF2Dot14 = function() {
                var e5 = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
                return this.relativeOffset += 2, e5;
              }, u.prototype.parseOffset32 = u.prototype.parseULong = function() {
                var e5 = be(this.data, this.offset + this.relativeOffset);
                return this.relativeOffset += 4, e5;
              }, u.prototype.parseFixed = function() {
                var e5 = je(this.data, this.offset + this.relativeOffset);
                return this.relativeOffset += 4, e5;
              }, u.prototype.parseString = function(e5) {
                var t5 = this.data, r5 = this.offset + this.relativeOffset, o4 = "";
                this.relativeOffset += e5;
                for (var n3 = 0; n3 < e5; n3++)
                  o4 += String.fromCharCode(t5.getUint8(r5 + n3));
                return o4;
              }, u.prototype.parseTag = function() {
                return this.parseString(4);
              }, u.prototype.parseLongDateTime = function() {
                var e5 = be(this.data, this.offset + this.relativeOffset + 4);
                return e5 -= 2082844800, this.relativeOffset += 8, e5;
              }, u.prototype.parseVersion = function(e5) {
                var t5 = ve(this.data, this.offset + this.relativeOffset), r5 = ve(this.data, this.offset + this.relativeOffset + 2);
                return this.relativeOffset += 4, t5 + r5 / (e5 = void 0 === e5 ? 4096 : e5) / 10;
              }, u.prototype.skip = function(e5, t5) {
                this.relativeOffset += _e[e5] * (t5 = void 0 === t5 ? 1 : t5);
              }, u.prototype.parseULongList = function(e5) {
                void 0 === e5 && (e5 = this.parseULong());
                for (var t5 = new Array(e5), r5 = this.data, o4 = this.offset + this.relativeOffset, n3 = 0; n3 < e5; n3++)
                  t5[n3] = r5.getUint32(o4), o4 += 4;
                return this.relativeOffset += 4 * e5, t5;
              }, u.prototype.parseOffset16List = u.prototype.parseUShortList = function(e5) {
                void 0 === e5 && (e5 = this.parseUShort());
                for (var t5 = new Array(e5), r5 = this.data, o4 = this.offset + this.relativeOffset, n3 = 0; n3 < e5; n3++)
                  t5[n3] = r5.getUint16(o4), o4 += 2;
                return this.relativeOffset += 2 * e5, t5;
              }, u.prototype.parseShortList = function(e5) {
                for (var t5 = new Array(e5), r5 = this.data, o4 = this.offset + this.relativeOffset, n3 = 0; n3 < e5; n3++)
                  t5[n3] = r5.getInt16(o4), o4 += 2;
                return this.relativeOffset += 2 * e5, t5;
              }, u.prototype.parseByteList = function(e5) {
                for (var t5 = new Array(e5), r5 = this.data, o4 = this.offset + this.relativeOffset, n3 = 0; n3 < e5; n3++)
                  t5[n3] = r5.getUint8(o4++);
                return this.relativeOffset += e5, t5;
              }, u.prototype.parseList = function(e5, t5) {
                t5 || (t5 = e5, e5 = this.parseUShort());
                for (var r5 = new Array(e5), o4 = 0; o4 < e5; o4++)
                  r5[o4] = t5.call(this);
                return r5;
              }, u.prototype.parseList32 = function(e5, t5) {
                t5 || (t5 = e5, e5 = this.parseULong());
                for (var r5 = new Array(e5), o4 = 0; o4 < e5; o4++)
                  r5[o4] = t5.call(this);
                return r5;
              }, u.prototype.parseRecordList = function(e5, t5) {
                t5 || (t5 = e5, e5 = this.parseUShort());
                for (var r5 = new Array(e5), o4 = Object.keys(t5), n3 = 0; n3 < e5; n3++) {
                  for (var s4 = {}, i3 = 0; i3 < o4.length; i3++) {
                    var a2 = o4[i3], l2 = t5[a2];
                    s4[a2] = l2.call(this);
                  }
                  r5[n3] = s4;
                }
                return r5;
              }, u.prototype.parseRecordList32 = function(e5, t5) {
                t5 || (t5 = e5, e5 = this.parseULong());
                for (var r5 = new Array(e5), o4 = Object.keys(t5), n3 = 0; n3 < e5; n3++) {
                  for (var s4 = {}, i3 = 0; i3 < o4.length; i3++) {
                    var a2 = o4[i3], l2 = t5[a2];
                    s4[a2] = l2.call(this);
                  }
                  r5[n3] = s4;
                }
                return r5;
              }, u.prototype.parseStruct = function(e5) {
                if ("function" == typeof e5)
                  return e5.call(this);
                for (var t5 = Object.keys(e5), r5 = {}, o4 = 0; o4 < t5.length; o4++) {
                  var n3 = t5[o4], s4 = e5[n3];
                  r5[n3] = s4.call(this);
                }
                return r5;
              }, u.prototype.parseValueRecord = function(e5) {
                var t5;
                if (0 !== (e5 = void 0 === e5 ? this.parseUShort() : e5))
                  return t5 = {}, 1 & e5 && (t5.xPlacement = this.parseShort()), 2 & e5 && (t5.yPlacement = this.parseShort()), 4 & e5 && (t5.xAdvance = this.parseShort()), 8 & e5 && (t5.yAdvance = this.parseShort()), 16 & e5 && (t5.xPlaDevice = void 0, this.parseShort()), 32 & e5 && (t5.yPlaDevice = void 0, this.parseShort()), 64 & e5 && (t5.xAdvDevice = void 0, this.parseShort()), 128 & e5 && (t5.yAdvDevice = void 0, this.parseShort()), t5;
              }, u.prototype.parseValueRecordList = function() {
                for (var e5 = this.parseUShort(), t5 = this.parseUShort(), r5 = new Array(t5), o4 = 0; o4 < t5; o4++)
                  r5[o4] = this.parseValueRecord(e5);
                return r5;
              }, u.prototype.parsePointer = function(e5) {
                var t5 = this.parseOffset16();
                if (0 < t5)
                  return new u(this.data, this.offset + t5).parseStruct(e5);
              }, u.prototype.parsePointer32 = function(e5) {
                var t5 = this.parseOffset32();
                if (0 < t5)
                  return new u(this.data, this.offset + t5).parseStruct(e5);
              }, u.prototype.parseListOfLists = function(e5) {
                for (var t5 = this.parseOffset16List(), r5 = t5.length, o4 = this.relativeOffset, n3 = new Array(r5), s4 = 0; s4 < r5; s4++) {
                  var i3 = t5[s4];
                  if (0 === i3)
                    n3[s4] = void 0;
                  else if (this.relativeOffset = i3, e5) {
                    for (var a2 = this.parseOffset16List(), l2 = new Array(a2.length), u2 = 0; u2 < a2.length; u2++)
                      this.relativeOffset = i3 + a2[u2], l2[u2] = e5.call(this);
                    n3[s4] = l2;
                  } else
                    n3[s4] = this.parseUShortList();
                }
                return this.relativeOffset = o4, n3;
              }, u.prototype.parseCoverage = function() {
                var e5 = this.offset + this.relativeOffset, t5 = this.parseUShort(), r5 = this.parseUShort();
                if (1 === t5)
                  return { format: 1, glyphs: this.parseUShortList(r5) };
                if (2 !== t5)
                  throw new Error("0x" + e5.toString(16) + ": Coverage format must be 1 or 2.");
                for (var o4 = new Array(r5), n3 = 0; n3 < r5; n3++)
                  o4[n3] = { start: this.parseUShort(), end: this.parseUShort(), index: this.parseUShort() };
                return { format: 2, ranges: o4 };
              }, u.prototype.parseClassDef = function() {
                var e5 = this.offset + this.relativeOffset, t5 = this.parseUShort();
                if (1 === t5)
                  return { format: 1, startGlyph: this.parseUShort(), classes: this.parseUShortList() };
                if (2 === t5)
                  return { format: 2, ranges: this.parseRecordList({ start: u.uShort, end: u.uShort, classId: u.uShort }) };
                throw new Error("0x" + e5.toString(16) + ": ClassDef format must be 1 or 2.");
              }, u.list = function(e5, t5) {
                return function() {
                  return this.parseList(e5, t5);
                };
              }, u.list32 = function(e5, t5) {
                return function() {
                  return this.parseList32(e5, t5);
                };
              }, u.recordList = function(e5, t5) {
                return function() {
                  return this.parseRecordList(e5, t5);
                };
              }, u.recordList32 = function(e5, t5) {
                return function() {
                  return this.parseRecordList32(e5, t5);
                };
              }, u.pointer = function(e5) {
                return function() {
                  return this.parsePointer(e5);
                };
              }, u.pointer32 = function(e5) {
                return function() {
                  return this.parsePointer32(e5);
                };
              }, u.tag = u.prototype.parseTag, u.byte = u.prototype.parseByte, u.uShort = u.offset16 = u.prototype.parseUShort, u.uShortList = u.prototype.parseUShortList, u.uLong = u.offset32 = u.prototype.parseULong, u.uLongList = u.prototype.parseULongList, u.struct = u.prototype.parseStruct, u.coverage = u.prototype.parseCoverage, u.classDef = u.prototype.parseClassDef;
              var xe = { reserved: u.uShort, reqFeatureIndex: u.uShort, featureIndexes: u.uShortList }, R = (u.prototype.parseScriptList = function() {
                return this.parsePointer(u.recordList({ tag: u.tag, script: u.pointer({ defaultLangSys: u.pointer(xe), langSysRecords: u.recordList({ tag: u.tag, langSys: u.pointer(xe) }) }) })) || [];
              }, u.prototype.parseFeatureList = function() {
                return this.parsePointer(u.recordList({ tag: u.tag, feature: u.pointer({ featureParams: u.offset16, lookupListIndexes: u.uShortList }) })) || [];
              }, u.prototype.parseLookupList = function(o4) {
                return this.parsePointer(u.list(u.pointer(function() {
                  var e5 = this.parseUShort(), t5 = (L.argument(1 <= e5 && e5 <= 9, "GPOS/GSUB lookup type " + e5 + " unknown."), this.parseUShort()), r5 = 16 & t5;
                  return { lookupType: e5, lookupFlag: t5, subtables: this.parseList(u.pointer(o4[e5])), markFilteringSet: r5 ? this.parseUShort() : void 0 };
                }))) || [];
              }, u.prototype.parseFeatureVariationsList = function() {
                return this.parsePointer32(function() {
                  var e5 = this.parseUShort(), t5 = this.parseUShort();
                  return L.argument(1 === e5 && t5 < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({ conditionSetOffset: u.offset32, featureTableSubstitutionOffset: u.offset32 });
                }) || [];
              }, { getByte: ge, getCard8: ge, getUShort: ve, getCard16: ve, getShort: function(e5, t5) {
                return e5.getInt16(t5, false);
              }, getULong: be, getFixed: je, getTag: function(e5, t5) {
                for (var r5 = "", o4 = t5; o4 < t5 + 4; o4 += 1)
                  r5 += String.fromCharCode(e5.getInt8(o4));
                return r5;
              }, getOffset: function(e5, t5, r5) {
                for (var o4 = 0, n3 = 0; n3 < r5; n3 += 1)
                  o4 = (o4 <<= 8) + e5.getUint8(t5 + n3);
                return o4;
              }, getBytes: function(e5, t5, r5) {
                for (var o4 = [], n3 = t5; n3 < r5; n3 += 1)
                  o4.push(e5.getUint8(n3));
                return o4;
              }, bytesToString: function(e5) {
                for (var t5 = "", r5 = 0; r5 < e5.length; r5 += 1)
                  t5 += String.fromCharCode(e5[r5]);
                return t5;
              }, Parser: u });
              var we = { parse: function(e5, t5) {
                for (var r5 = {}, o4 = (r5.version = R.getUShort(e5, t5), L.argument(0 === r5.version, "cmap table version should be 0."), r5.numTables = R.getUShort(e5, t5 + 2), -1), n3 = r5.numTables - 1; 0 <= n3; --n3) {
                  var s4 = R.getUShort(e5, t5 + 4 + 8 * n3), i3 = R.getUShort(e5, t5 + 4 + 8 * n3 + 2);
                  if (3 === s4 && (0 === i3 || 1 === i3 || 10 === i3) || 0 === s4 && (0 === i3 || 1 === i3 || 2 === i3 || 3 === i3 || 4 === i3)) {
                    o4 = R.getULong(e5, t5 + 4 + 8 * n3 + 4);
                    break;
                  }
                }
                if (-1 === o4)
                  throw new Error("No valid cmap sub-tables found.");
                var a2 = new R.Parser(e5, t5 + o4);
                if (r5.format = a2.parseUShort(), 12 === r5.format) {
                  var l2, u2 = r5, c2 = a2;
                  c2.parseUShort(), u2.length = c2.parseULong(), u2.language = c2.parseULong(), u2.groupCount = l2 = c2.parseULong(), u2.glyphIndexMap = {};
                  for (var d2 = 0; d2 < l2; d2 += 1)
                    for (var f2 = c2.parseULong(), h2 = c2.parseULong(), p2 = c2.parseULong(), m2 = f2; m2 <= h2; m2 += 1)
                      u2.glyphIndexMap[m2] = p2, p2++;
                } else {
                  if (4 !== r5.format)
                    throw new Error("Only format 4 and 12 cmap tables are supported (found format " + r5.format + ").");
                  var y2 = r5, g2 = e5, v2 = t5, b2 = o4;
                  y2.length = a2.parseUShort(), y2.language = a2.parseUShort(), y2.segCount = j2 = a2.parseUShort() >> 1, a2.skip("uShort", 3), y2.glyphIndexMap = {};
                  for (var j2, _2 = new R.Parser(g2, v2 + b2 + 14), x2 = new R.Parser(g2, v2 + b2 + 16 + 2 * j2), w2 = new R.Parser(g2, v2 + b2 + 16 + 4 * j2), S2 = new R.Parser(g2, v2 + b2 + 16 + 6 * j2), E2 = v2 + b2 + 16 + 8 * j2, M2 = 0; M2 < j2 - 1; M2 += 1)
                    for (var T2 = void 0, k2 = _2.parseUShort(), O2 = x2.parseUShort(), C2 = w2.parseShort(), A2 = S2.parseUShort(), P2 = O2; P2 <= k2; P2 += 1)
                      0 !== A2 ? (E2 = (E2 = S2.offset + S2.relativeOffset - 2) + A2 + 2 * (P2 - O2), 0 !== (T2 = R.getUShort(g2, E2)) && (T2 = T2 + C2 & 65535)) : T2 = P2 + C2 & 65535, y2.glyphIndexMap[P2] = T2;
                }
                return r5;
              }, make: function(e5) {
                for (var t5 = true, r5 = e5.length - 1; 0 < r5; --r5)
                  if (65535 < e5.get(r5).unicode) {
                    console.log("Adding CMAP format 12 (needed!)"), t5 = false;
                    break;
                  }
                var o4, n3, s4 = [{ name: "version", type: "USHORT", value: 0 }, { name: "numTables", type: "USHORT", value: t5 ? 1 : 2 }, { name: "platformID", type: "USHORT", value: 3 }, { name: "encodingID", type: "USHORT", value: 1 }, { name: "offset", type: "ULONG", value: t5 ? 12 : 20 }], i3 = (s4 = (s4 = t5 ? s4 : s4.concat([{ name: "cmap12PlatformID", type: "USHORT", value: 3 }, { name: "cmap12EncodingID", type: "USHORT", value: 10 }, { name: "cmap12Offset", type: "ULONG", value: 0 }])).concat([{ name: "format", type: "USHORT", value: 4 }, { name: "cmap4Length", type: "USHORT", value: 0 }, { name: "language", type: "USHORT", value: 0 }, { name: "segCountX2", type: "USHORT", value: 0 }, { name: "searchRange", type: "USHORT", value: 0 }, { name: "entrySelector", type: "USHORT", value: 0 }, { name: "rangeShift", type: "USHORT", value: 0 }]), new S.Table("cmap", s4));
                for (i3.segments = [], r5 = 0; r5 < e5.length; r5 += 1) {
                  for (var a2 = e5.get(r5), l2 = 0; l2 < a2.unicodes.length; l2 += 1)
                    o4 = a2.unicodes[l2], n3 = r5, i3.segments.push({ end: o4, start: o4, delta: -(o4 - n3), offset: 0, glyphIndex: n3 });
                  i3.segments = i3.segments.sort(function(e6, t6) {
                    return e6.start - t6.start;
                  });
                }
                i3.segments.push({ end: 65535, start: 65535, delta: 1, offset: 0 });
                var u2 = i3.segments.length, c2 = 0, d2 = [], f2 = [], h2 = [], p2 = [], m2 = [], y2 = [];
                for (r5 = 0; r5 < u2; r5 += 1) {
                  var g2 = i3.segments[r5];
                  g2.end <= 65535 && g2.start <= 65535 ? (d2 = d2.concat({ name: "end_" + r5, type: "USHORT", value: g2.end }), f2 = f2.concat({ name: "start_" + r5, type: "USHORT", value: g2.start }), h2 = h2.concat({ name: "idDelta_" + r5, type: "SHORT", value: g2.delta }), p2 = p2.concat({ name: "idRangeOffset_" + r5, type: "USHORT", value: g2.offset }), void 0 !== g2.glyphId && (m2 = m2.concat({ name: "glyph_" + r5, type: "USHORT", value: g2.glyphId }))) : c2 += 1, t5 || void 0 === g2.glyphIndex || (y2 = (y2 = (y2 = y2.concat({ name: "cmap12Start_" + r5, type: "ULONG", value: g2.start })).concat({ name: "cmap12End_" + r5, type: "ULONG", value: g2.end })).concat({ name: "cmap12Glyph_" + r5, type: "ULONG", value: g2.glyphIndex }));
                }
                return i3.segCountX2 = 2 * (u2 - c2), i3.searchRange = 2 * Math.pow(2, Math.floor(Math.log(u2 - c2) / Math.log(2))), i3.entrySelector = Math.log(i3.searchRange / 2) / Math.log(2), i3.rangeShift = i3.segCountX2 - i3.searchRange, i3.fields = i3.fields.concat(d2), i3.fields.push({ name: "reservedPad", type: "USHORT", value: 0 }), i3.fields = i3.fields.concat(f2), i3.fields = i3.fields.concat(h2), i3.fields = i3.fields.concat(p2), i3.fields = i3.fields.concat(m2), i3.cmap4Length = 14 + 2 * d2.length + 2 + 2 * f2.length + 2 * h2.length + 2 * p2.length + 2 * m2.length, t5 || (s4 = 16 + 4 * y2.length, i3.cmap12Offset = 20 + i3.cmap4Length, i3.fields = i3.fields.concat([{ name: "cmap12Format", type: "USHORT", value: 12 }, { name: "cmap12Reserved", type: "USHORT", value: 0 }, { name: "cmap12Length", type: "ULONG", value: s4 }, { name: "cmap12Language", type: "ULONG", value: 0 }, { name: "cmap12nGroups", type: "ULONG", value: y2.length / 3 }]), i3.fields = i3.fields.concat(y2)), i3;
              } }, Se = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], Ee = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], Me = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], c = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];
              function Te(e5) {
                this.font = e5;
              }
              function ke(e5) {
                this.cmap = e5;
              }
              function Oe(e5, t5) {
                this.encoding = e5, this.charset = t5;
              }
              function Ce(e5) {
                switch (e5.version) {
                  case 1:
                    this.names = c.slice();
                    break;
                  case 2:
                    this.names = new Array(e5.numberOfGlyphs);
                    for (var t5 = 0; t5 < e5.numberOfGlyphs; t5++)
                      e5.glyphNameIndex[t5] < c.length ? this.names[t5] = c[e5.glyphNameIndex[t5]] : this.names[t5] = e5.names[e5.glyphNameIndex[t5] - c.length];
                    break;
                  case 2.5:
                    this.names = new Array(e5.numberOfGlyphs);
                    for (var r5 = 0; r5 < e5.numberOfGlyphs; r5++)
                      this.names[r5] = c[r5 + e5.glyphNameIndex[r5]];
                    break;
                  default:
                    this.names = [];
                }
              }
              Te.prototype.charToGlyphIndex = function(e5) {
                var t5 = e5.codePointAt(0), r5 = this.font.glyphs;
                if (r5) {
                  for (var o4 = 0; o4 < r5.length; o4 += 1)
                    for (var n3 = r5.get(o4), s4 = 0; s4 < n3.unicodes.length; s4 += 1)
                      if (n3.unicodes[s4] === t5)
                        return o4;
                }
                return null;
              }, ke.prototype.charToGlyphIndex = function(e5) {
                return this.cmap.glyphIndexMap[e5.codePointAt(0)] || 0;
              }, Oe.prototype.charToGlyphIndex = function(e5) {
                e5 = e5.codePointAt(0), e5 = this.encoding[e5];
                return this.charset.indexOf(e5);
              }, Ce.prototype.nameToGlyphIndex = function(e5) {
                return this.names.indexOf(e5);
              }, Ce.prototype.glyphIndexToName = function(e5) {
                return this.names[e5];
              };
              var d = { line: function(e5, t5, r5, o4, n3) {
                e5.beginPath(), e5.moveTo(t5, r5), e5.lineTo(o4, n3), e5.stroke();
              } };
              function h(e5) {
                this.bindConstructorValues(e5);
              }
              function Ae(t5, e5, r5) {
                Object.defineProperty(t5, e5, { get: function() {
                  return t5.path, t5[r5];
                }, set: function(e6) {
                  t5[r5] = e6;
                }, enumerable: true, configurable: true });
              }
              function Pe(e5, t5) {
                if (this.font = e5, this.glyphs = {}, Array.isArray(t5))
                  for (var r5 = 0; r5 < t5.length; r5++)
                    this.glyphs[r5] = t5[r5];
                this.length = t5 && t5.length || 0;
              }
              h.prototype.bindConstructorValues = function(e5) {
                var t5;
                this.index = e5.index || 0, this.name = e5.name || null, this.unicode = e5.unicode || void 0, this.unicodes = e5.unicodes || void 0 !== e5.unicode ? [e5.unicode] : [], e5.xMin && (this.xMin = e5.xMin), e5.yMin && (this.yMin = e5.yMin), e5.xMax && (this.xMax = e5.xMax), e5.yMax && (this.yMax = e5.yMax), e5.advanceWidth && (this.advanceWidth = e5.advanceWidth), Object.defineProperty(this, "path", (e5 = e5.path, t5 = e5 || new f(), { configurable: true, get: function() {
                  return t5 = "function" == typeof t5 ? t5() : t5;
                }, set: function(e6) {
                  t5 = e6;
                } }));
              }, h.prototype.addUnicode = function(e5) {
                0 === this.unicodes.length && (this.unicode = e5), this.unicodes.push(e5);
              }, h.prototype.getBoundingBox = function() {
                return this.path.getBoundingBox();
              }, h.prototype.getPath = function(e5, t5, r5, o4, n3) {
                e5 = void 0 !== e5 ? e5 : 0, t5 = void 0 !== t5 ? t5 : 0, r5 = void 0 !== r5 ? r5 : 72;
                for (var s4, i3, a2 = (o4 = o4 || {}).xScale, l2 = o4.yScale, u2 = ((s4 = o4.hinting && n3 && n3.hinting ? this.path && n3.hinting.exec(this, r5) : s4) ? (i3 = n3.hinting.getCommands(s4), e5 = Math.round(e5), t5 = Math.round(t5), a2 = l2 = 1) : (i3 = this.path.commands, o4 = 1 / this.path.unitsPerEm * r5, void 0 === a2 && (a2 = o4), void 0 === l2 && (l2 = o4)), new f()), c2 = 0; c2 < i3.length; c2 += 1) {
                  var d2 = i3[c2];
                  "M" === d2.type ? u2.moveTo(e5 + d2.x * a2, t5 + -d2.y * l2) : "L" === d2.type ? u2.lineTo(e5 + d2.x * a2, t5 + -d2.y * l2) : "Q" === d2.type ? u2.quadraticCurveTo(e5 + d2.x1 * a2, t5 + -d2.y1 * l2, e5 + d2.x * a2, t5 + -d2.y * l2) : "C" === d2.type ? u2.curveTo(e5 + d2.x1 * a2, t5 + -d2.y1 * l2, e5 + d2.x2 * a2, t5 + -d2.y2 * l2, e5 + d2.x * a2, t5 + -d2.y * l2) : "Z" === d2.type && u2.closePath();
                }
                return u2;
              }, h.prototype.getContours = function() {
                if (void 0 === this.points)
                  return [];
                for (var e5 = [], t5 = [], r5 = 0; r5 < this.points.length; r5 += 1) {
                  var o4 = this.points[r5];
                  t5.push(o4), o4.lastPointOfContour && (e5.push(t5), t5 = []);
                }
                return L.argument(0 === t5.length, "There are still points left in the current contour."), e5;
              }, h.prototype.getMetrics = function() {
                for (var e5 = this.path.commands, t5 = [], r5 = [], o4 = 0; o4 < e5.length; o4 += 1) {
                  var n3 = e5[o4];
                  "Z" !== n3.type && (t5.push(n3.x), r5.push(n3.y)), "Q" !== n3.type && "C" !== n3.type || (t5.push(n3.x1), r5.push(n3.y1)), "C" === n3.type && (t5.push(n3.x2), r5.push(n3.y2));
                }
                var s4 = { xMin: Math.min.apply(null, t5), yMin: Math.min.apply(null, r5), xMax: Math.max.apply(null, t5), yMax: Math.max.apply(null, r5), leftSideBearing: this.leftSideBearing };
                return isFinite(s4.xMin) || (s4.xMin = 0), isFinite(s4.xMax) || (s4.xMax = this.advanceWidth), isFinite(s4.yMin) || (s4.yMin = 0), isFinite(s4.yMax) || (s4.yMax = 0), s4.rightSideBearing = this.advanceWidth - s4.leftSideBearing - (s4.xMax - s4.xMin), s4;
              }, h.prototype.draw = function(e5, t5, r5, o4, n3) {
                this.getPath(t5, r5, o4, n3).draw(e5);
              }, h.prototype.drawPoints = function(i3, e5, t5, r5) {
                function o4(e6, t6, r6, o5) {
                  var n4 = 2 * Math.PI;
                  i3.beginPath();
                  for (var s5 = 0; s5 < e6.length; s5 += 1)
                    i3.moveTo(t6 + e6[s5].x * o5, r6 + e6[s5].y * o5), i3.arc(t6 + e6[s5].x * o5, r6 + e6[s5].y * o5, 2, 0, n4, false);
                  i3.closePath(), i3.fill();
                }
                e5 = void 0 !== e5 ? e5 : 0, t5 = void 0 !== t5 ? t5 : 0;
                for (var r5 = 1 / this.path.unitsPerEm * (r5 = void 0 !== r5 ? r5 : 24), n3 = [], s4 = [], a2 = this.path, l2 = 0; l2 < a2.commands.length; l2 += 1) {
                  var u2 = a2.commands[l2];
                  void 0 !== u2.x && n3.push({ x: u2.x, y: -u2.y }), void 0 !== u2.x1 && s4.push({ x: u2.x1, y: -u2.y1 }), void 0 !== u2.x2 && s4.push({ x: u2.x2, y: -u2.y2 });
                }
                i3.fillStyle = "blue", o4(n3, e5, t5, r5), i3.fillStyle = "red", o4(s4, e5, t5, r5);
              }, h.prototype.drawMetrics = function(e5, t5, r5, o4) {
                t5 = void 0 !== t5 ? t5 : 0, r5 = void 0 !== r5 ? r5 : 0, o4 = 1 / this.path.unitsPerEm * (o4 = void 0 !== o4 ? o4 : 24), e5.lineWidth = 1, e5.strokeStyle = "black", d.line(e5, t5, -1e4, t5, 1e4), d.line(e5, -1e4, r5, 1e4, r5);
                var n3 = this.xMin || 0, s4 = this.yMin || 0, i3 = this.xMax || 0, a2 = this.yMax || 0, l2 = this.advanceWidth || 0;
                e5.strokeStyle = "blue", d.line(e5, t5 + n3 * o4, -1e4, t5 + n3 * o4, 1e4), d.line(e5, t5 + i3 * o4, -1e4, t5 + i3 * o4, 1e4), d.line(e5, -1e4, r5 + -s4 * o4, 1e4, r5 + -s4 * o4), d.line(e5, -1e4, r5 + -a2 * o4, 1e4, r5 + -a2 * o4), e5.strokeStyle = "green", d.line(e5, t5 + l2 * o4, -1e4, t5 + l2 * o4, 1e4);
              }, Pe.prototype.get = function(e5) {
                return "function" == typeof this.glyphs[e5] && (this.glyphs[e5] = this.glyphs[e5]()), this.glyphs[e5];
              }, Pe.prototype.push = function(e5, t5) {
                this.glyphs[e5] = t5, this.length++;
              };
              var p = { GlyphSet: Pe, glyphLoader: function(e5, t5) {
                return new h({ index: t5, font: e5 });
              }, ttfGlyphLoader: function(r5, e5, o4, n3, s4, i3) {
                return function() {
                  var t5 = new h({ index: e5, font: r5 });
                  return t5.path = function() {
                    o4(t5, n3, s4);
                    var e6 = i3(r5.glyphs, t5);
                    return e6.unitsPerEm = r5.unitsPerEm, e6;
                  }, Ae(t5, "xMin", "_xMin"), Ae(t5, "xMax", "_xMax"), Ae(t5, "yMin", "_yMin"), Ae(t5, "yMax", "_yMax"), t5;
                };
              }, cffGlyphLoader: function(r5, e5, o4, n3) {
                return function() {
                  var t5 = new h({ index: e5, font: r5 });
                  return t5.path = function() {
                    var e6 = o4(r5, t5, n3);
                    return e6.unitsPerEm = r5.unitsPerEm, e6;
                  }, t5;
                };
              } };
              function Le(e5) {
                e5 = e5.length < 1240 ? 107 : e5.length < 33900 ? 1131 : 32768;
                return e5;
              }
              function y(e5, t5, r5) {
                var o4, n3 = [], s4 = [], i3 = R.getCard16(e5, t5);
                if (0 !== i3) {
                  for (var a2 = R.getByte(e5, t5 + 2), l2 = t5 + (i3 + 1) * a2 + 2, u2 = t5 + 3, c2 = 0; c2 < i3 + 1; c2 += 1)
                    n3.push(R.getOffset(e5, u2, a2)), u2 += a2;
                  o4 = l2 + n3[i3];
                } else
                  o4 = t5 + 2;
                for (var d2 = 0; d2 < n3.length - 1; d2 += 1) {
                  var f2 = R.getBytes(e5, l2 + n3[d2], l2 + n3[d2 + 1]);
                  r5 && (f2 = r5(f2)), s4.push(f2);
                }
                return { objects: s4, startOffset: t5, endOffset: o4 };
              }
              function Re(e5, t5) {
                if (28 === t5)
                  return e5.parseByte() << 8 | e5.parseByte();
                if (29 === t5)
                  return e5.parseByte() << 24 | e5.parseByte() << 16 | e5.parseByte() << 8 | e5.parseByte();
                if (30 === t5) {
                  for (var r5 = e5, o4 = "", n3 = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"]; ; ) {
                    var s4 = r5.parseByte(), i3 = s4 >> 4, s4 = 15 & s4;
                    if (15 == i3)
                      break;
                    if (o4 += n3[i3], 15 == s4)
                      break;
                    o4 += n3[s4];
                  }
                  return parseFloat(o4);
                }
                if (32 <= t5 && t5 <= 246)
                  return t5 - 139;
                if (247 <= t5 && t5 <= 250)
                  return 256 * (t5 - 247) + e5.parseByte() + 108;
                if (251 <= t5 && t5 <= 254)
                  return 256 * -(t5 - 251) - e5.parseByte() - 108;
                throw new Error("Invalid b0 " + t5);
              }
              function Ie(e5, t5, r5) {
                var o4 = new R.Parser(e5, t5 = void 0 !== t5 ? t5 : 0), n3 = [], s4 = [];
                for (r5 = void 0 !== r5 ? r5 : e5.length; o4.relativeOffset < r5; ) {
                  var i3 = o4.parseByte();
                  i3 <= 21 ? (12 === i3 && (i3 = 1200 + o4.parseByte()), n3.push([i3, s4]), s4 = []) : s4.push(Re(o4, i3));
                }
                for (var a2 = n3, l2 = {}, u2 = 0; u2 < a2.length; u2 += 1) {
                  var c2 = a2[u2][0], d2 = a2[u2][1], f2 = void 0, f2 = 1 === d2.length ? d2[0] : d2;
                  if (l2.hasOwnProperty(c2) && !isNaN(l2[c2]))
                    throw new Error("Object " + l2 + " already has key " + c2);
                  l2[c2] = f2;
                }
                return l2;
              }
              function De(e5, t5) {
                return t5 = t5 <= 390 ? Se[t5] : e5[t5 - 391];
              }
              function Fe(e5, t5, r5) {
                for (var o4, n3 = {}, s4 = 0; s4 < t5.length; s4 += 1) {
                  var i3 = t5[s4];
                  if (Array.isArray(i3.type)) {
                    var a2 = [];
                    a2.length = i3.type.length;
                    for (var l2 = 0; l2 < i3.type.length; l2++)
                      void 0 === (o4 = void 0 !== e5[i3.op] ? e5[i3.op][l2] : void 0) && (o4 = void 0 !== i3.value && void 0 !== i3.value[l2] ? i3.value[l2] : null), "SID" === i3.type[l2] && (o4 = De(r5, o4)), a2[l2] = o4;
                    n3[i3.name] = a2;
                  } else
                    void 0 === (o4 = e5[i3.op]) && (o4 = void 0 !== i3.value ? i3.value : null), "SID" === i3.type && (o4 = De(r5, o4)), n3[i3.name] = o4;
                }
                return n3;
              }
              var Ue = [{ name: "version", op: 0, type: "SID" }, { name: "notice", op: 1, type: "SID" }, { name: "copyright", op: 1200, type: "SID" }, { name: "fullName", op: 2, type: "SID" }, { name: "familyName", op: 3, type: "SID" }, { name: "weight", op: 4, type: "SID" }, { name: "isFixedPitch", op: 1201, type: "number", value: 0 }, { name: "italicAngle", op: 1202, type: "number", value: 0 }, { name: "underlinePosition", op: 1203, type: "number", value: -100 }, { name: "underlineThickness", op: 1204, type: "number", value: 50 }, { name: "paintType", op: 1205, type: "number", value: 0 }, { name: "charstringType", op: 1206, type: "number", value: 2 }, { name: "fontMatrix", op: 1207, type: ["real", "real", "real", "real", "real", "real"], value: [1e-3, 0, 0, 1e-3, 0, 0] }, { name: "uniqueId", op: 13, type: "number" }, { name: "fontBBox", op: 5, type: ["number", "number", "number", "number"], value: [0, 0, 0, 0] }, { name: "strokeWidth", op: 1208, type: "number", value: 0 }, { name: "xuid", op: 14, type: [], value: null }, { name: "charset", op: 15, type: "offset", value: 0 }, { name: "encoding", op: 16, type: "offset", value: 0 }, { name: "charStrings", op: 17, type: "offset", value: 0 }, { name: "private", op: 18, type: ["number", "offset"], value: [0, 0] }, { name: "ros", op: 1230, type: ["SID", "SID", "number"] }, { name: "cidFontVersion", op: 1231, type: "number", value: 0 }, { name: "cidFontRevision", op: 1232, type: "number", value: 0 }, { name: "cidFontType", op: 1233, type: "number", value: 0 }, { name: "cidCount", op: 1234, type: "number", value: 8720 }, { name: "uidBase", op: 1235, type: "number" }, { name: "fdArray", op: 1236, type: "offset" }, { name: "fdSelect", op: 1237, type: "offset" }, { name: "fontName", op: 1238, type: "SID" }], Ne = [{ name: "subrs", op: 19, type: "offset", value: 0 }, { name: "defaultWidthX", op: 20, type: "number", value: 0 }, { name: "nominalWidthX", op: 21, type: "number", value: 0 }];
              function Be(e5, t5, r5, o4) {
                return Fe(Ie(e5, t5, r5), Ne, o4);
              }
              function Ge(e5, t5, r5, o4) {
                for (var n3 = [], s4 = 0; s4 < r5.length; s4 += 1) {
                  var i3 = new DataView(new Uint8Array(r5[s4]).buffer), i3 = (a2 = o4, Fe(Ie(i3, 0, i3.byteLength), Ue, a2)), a2 = (i3._subrs = [], i3._subrsBias = 0, i3.private[0]), l2 = i3.private[1];
                  0 !== a2 && 0 !== l2 && (a2 = Be(e5, l2 + t5, a2, o4), i3._defaultWidthX = a2.defaultWidthX, i3._nominalWidthX = a2.nominalWidthX, 0 !== a2.subrs && (l2 = y(e5, l2 + a2.subrs + t5), i3._subrs = l2.objects, i3._subrsBias = Le(i3._subrs)), i3._privateDict = a2), n3.push(i3);
                }
                return n3;
              }
              function Ve(y2, g2, e5) {
                var v2, b2, j2, _2, t5, x2, w2, r5, S2, E2 = new f(), M2 = [], T2 = 0, k2 = false, O2 = false, C2 = 0, A2 = 0, P2 = (S2 = (y2.isCIDFont ? (t5 = y2.tables.cff.topDict._fdSelect[g2.index], t5 = y2.tables.cff.topDict._fdArray[t5], x2 = t5._subrs, w2 = t5._subrsBias, r5 = t5._defaultWidthX, t5) : (x2 = y2.tables.cff.topDict._subrs, w2 = y2.tables.cff.topDict._subrsBias, r5 = y2.tables.cff.topDict._defaultWidthX, y2.tables.cff.topDict))._nominalWidthX, r5);
                function L2(e6, t6) {
                  O2 && E2.closePath(), E2.moveTo(e6, t6), O2 = true;
                }
                function R2() {
                  M2.length % 2 == 0 || k2 || (P2 = M2.shift() + S2), T2 += M2.length >> 1, M2.length = 0, k2 = true;
                }
                return function e6(t6) {
                  for (var r6, o4, n3, s4, i3, a2, l2, u2, c2, d2, f2, h2, p2 = 0; p2 < t6.length; ) {
                    var m2 = t6[p2];
                    switch (p2 += 1, m2) {
                      case 1:
                      case 3:
                        R2();
                        break;
                      case 4:
                        1 < M2.length && !k2 && (P2 = M2.shift() + S2, k2 = true), A2 += M2.pop(), L2(C2, A2);
                        break;
                      case 5:
                        for (; 0 < M2.length; )
                          C2 += M2.shift(), A2 += M2.shift(), E2.lineTo(C2, A2);
                        break;
                      case 6:
                        for (; 0 < M2.length && (C2 += M2.shift(), E2.lineTo(C2, A2), 0 !== M2.length); )
                          A2 += M2.shift(), E2.lineTo(C2, A2);
                        break;
                      case 7:
                        for (; 0 < M2.length && (A2 += M2.shift(), E2.lineTo(C2, A2), 0 !== M2.length); )
                          C2 += M2.shift(), E2.lineTo(C2, A2);
                        break;
                      case 8:
                        for (; 0 < M2.length; )
                          v2 = C2 + M2.shift(), b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), C2 = j2 + M2.shift(), A2 = _2 + M2.shift(), E2.curveTo(v2, b2, j2, _2, C2, A2);
                        break;
                      case 10:
                        i3 = M2.pop() + w2, (a2 = x2[i3]) && e6(a2);
                        break;
                      case 11:
                        return;
                      case 12:
                        switch (m2 = t6[p2], p2 += 1, m2) {
                          case 35:
                            v2 = C2 + M2.shift(), b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2 + M2.shift(), c2 = l2 + M2.shift(), d2 = u2 + M2.shift(), f2 = c2 + M2.shift(), h2 = d2 + M2.shift(), C2 = f2 + M2.shift(), A2 = h2 + M2.shift(), M2.shift(), E2.curveTo(v2, b2, j2, _2, l2, u2), E2.curveTo(c2, d2, f2, h2, C2, A2);
                            break;
                          case 34:
                            v2 = C2 + M2.shift(), b2 = A2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2, c2 = l2 + M2.shift(), d2 = _2, f2 = c2 + M2.shift(), h2 = A2, C2 = f2 + M2.shift(), E2.curveTo(v2, b2, j2, _2, l2, u2), E2.curveTo(c2, d2, f2, h2, C2, A2);
                            break;
                          case 36:
                            v2 = C2 + M2.shift(), b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2, c2 = l2 + M2.shift(), d2 = _2, f2 = c2 + M2.shift(), h2 = d2 + M2.shift(), C2 = f2 + M2.shift(), E2.curveTo(v2, b2, j2, _2, l2, u2), E2.curveTo(c2, d2, f2, h2, C2, A2);
                            break;
                          case 37:
                            v2 = C2 + M2.shift(), b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), l2 = j2 + M2.shift(), u2 = _2 + M2.shift(), c2 = l2 + M2.shift(), d2 = u2 + M2.shift(), f2 = c2 + M2.shift(), h2 = d2 + M2.shift(), Math.abs(f2 - C2) > Math.abs(h2 - A2) ? C2 = f2 + M2.shift() : A2 = h2 + M2.shift(), E2.curveTo(v2, b2, j2, _2, l2, u2), E2.curveTo(c2, d2, f2, h2, C2, A2);
                            break;
                          default:
                            console.log("Glyph " + g2.index + ": unknown operator 1200" + m2), M2.length = 0;
                        }
                        break;
                      case 14:
                        0 < M2.length && !k2 && (P2 = M2.shift() + S2, k2 = true), O2 && (E2.closePath(), O2 = false);
                        break;
                      case 18:
                        R2();
                        break;
                      case 19:
                      case 20:
                        R2(), p2 += T2 + 7 >> 3;
                        break;
                      case 21:
                        2 < M2.length && !k2 && (P2 = M2.shift() + S2, k2 = true), A2 += M2.pop(), L2(C2 += M2.pop(), A2);
                        break;
                      case 22:
                        1 < M2.length && !k2 && (P2 = M2.shift() + S2, k2 = true), L2(C2 += M2.pop(), A2);
                        break;
                      case 23:
                        R2();
                        break;
                      case 24:
                        for (; 2 < M2.length; )
                          v2 = C2 + M2.shift(), b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), C2 = j2 + M2.shift(), A2 = _2 + M2.shift(), E2.curveTo(v2, b2, j2, _2, C2, A2);
                        C2 += M2.shift(), A2 += M2.shift(), E2.lineTo(C2, A2);
                        break;
                      case 25:
                        for (; 6 < M2.length; )
                          C2 += M2.shift(), A2 += M2.shift(), E2.lineTo(C2, A2);
                        v2 = C2 + M2.shift(), b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), C2 = j2 + M2.shift(), A2 = _2 + M2.shift(), E2.curveTo(v2, b2, j2, _2, C2, A2);
                        break;
                      case 26:
                        for (M2.length % 2 && (C2 += M2.shift()); 0 < M2.length; )
                          v2 = C2, b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), C2 = j2, A2 = _2 + M2.shift(), E2.curveTo(v2, b2, j2, _2, C2, A2);
                        break;
                      case 27:
                        for (M2.length % 2 && (A2 += M2.shift()); 0 < M2.length; )
                          v2 = C2 + M2.shift(), b2 = A2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), C2 = j2 + M2.shift(), A2 = _2, E2.curveTo(v2, b2, j2, _2, C2, A2);
                        break;
                      case 28:
                        r6 = t6[p2], o4 = t6[p2 + 1], M2.push((r6 << 24 | o4 << 16) >> 16), p2 += 2;
                        break;
                      case 29:
                        i3 = M2.pop() + y2.gsubrsBias, (a2 = y2.gsubrs[i3]) && e6(a2);
                        break;
                      case 30:
                        for (; 0 < M2.length && (v2 = C2, b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), C2 = j2 + M2.shift(), A2 = _2 + (1 === M2.length ? M2.shift() : 0), E2.curveTo(v2, b2, j2, _2, C2, A2), 0 !== M2.length); )
                          v2 = C2 + M2.shift(), b2 = A2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), A2 = _2 + M2.shift(), C2 = j2 + (1 === M2.length ? M2.shift() : 0), E2.curveTo(v2, b2, j2, _2, C2, A2);
                        break;
                      case 31:
                        for (; 0 < M2.length && (v2 = C2 + M2.shift(), b2 = A2, j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), A2 = _2 + M2.shift(), C2 = j2 + (1 === M2.length ? M2.shift() : 0), E2.curveTo(v2, b2, j2, _2, C2, A2), 0 !== M2.length); )
                          v2 = C2, b2 = A2 + M2.shift(), j2 = v2 + M2.shift(), _2 = b2 + M2.shift(), C2 = j2 + M2.shift(), A2 = _2 + (1 === M2.length ? M2.shift() : 0), E2.curveTo(v2, b2, j2, _2, C2, A2);
                        break;
                      default:
                        m2 < 32 ? console.log("Glyph " + g2.index + ": unknown operator " + m2) : m2 < 247 ? M2.push(m2 - 139) : m2 < 251 ? (r6 = t6[p2], p2 += 1, M2.push(256 * (m2 - 247) + r6 + 108)) : m2 < 255 ? (r6 = t6[p2], p2 += 1, M2.push(256 * -(m2 - 251) - r6 - 108)) : (r6 = t6[p2], o4 = t6[p2 + 1], n3 = t6[p2 + 2], s4 = t6[p2 + 3], p2 += 4, M2.push((r6 << 24 | o4 << 16 | n3 << 8 | s4) / 65536));
                    }
                  }
                }(e5), g2.advanceWidth = P2, E2;
              }
              function ze(e5, t5) {
                var r5, o4 = Se.indexOf(e5);
                return 0 <= o4 && (r5 = o4), 0 <= (o4 = t5.indexOf(e5)) ? r5 = o4 + Se.length : (r5 = Se.length + t5.length, t5.push(e5)), r5;
              }
              function He(e5, t5, r5) {
                for (var o4 = {}, n3 = 0; n3 < e5.length; n3 += 1) {
                  var s4 = e5[n3], i3 = t5[s4.name];
                  void 0 === i3 || function e6(t6, r6) {
                    if (t6 === r6)
                      return 1;
                    if (Array.isArray(t6) && Array.isArray(r6) && t6.length === r6.length) {
                      for (var o5 = 0; o5 < t6.length; o5 += 1)
                        if (!e6(t6[o5], r6[o5]))
                          return;
                      return 1;
                    }
                  }(i3, s4.value) || ("SID" === s4.type && (i3 = ze(i3, r5)), o4[s4.op] = { name: s4.name, type: s4.type, value: i3 });
                }
                return o4;
              }
              function We(e5, t5) {
                var r5 = new S.Record("Top DICT", [{ name: "dict", type: "DICT", value: {} }]);
                return r5.dict = He(Ue, e5, t5), r5;
              }
              function qe(e5) {
                var t5 = new S.Record("Top DICT INDEX", [{ name: "topDicts", type: "INDEX", value: [] }]);
                return t5.topDicts = [{ name: "topDict_0", type: "TABLE", value: e5 }], t5;
              }
              function Xe(e5) {
                for (var t5 = new S.Record("CharStrings INDEX", [{ name: "charStrings", type: "INDEX", value: [] }]), r5 = 0; r5 < e5.length; r5 += 1) {
                  var o4 = e5.get(r5), n3 = function(e6) {
                    for (var t6 = [], r6 = e6.path, o5 = (t6.push({ name: "width", type: "NUMBER", value: e6.advanceWidth }), 0), n4 = 0, s4 = 0; s4 < r6.commands.length; s4 += 1) {
                      var i3, a2, l2, u2, c2 = void 0, d2 = void 0, f2 = r6.commands[s4];
                      "M" === (f2 = "Q" === f2.type ? { type: "C", x: f2.x, y: f2.y, x1: 1 / 3 * o5 + 2 / 3 * f2.x1, y1: 1 / 3 * n4 + 2 / 3 * f2.y1, x2: 1 / 3 * f2.x + 2 / 3 * f2.x1, y2: 1 / 3 * f2.y + 2 / 3 * f2.y1 } : f2).type ? (c2 = Math.round(f2.x - o5), d2 = Math.round(f2.y - n4), t6.push({ name: "dx", type: "NUMBER", value: c2 }), t6.push({ name: "dy", type: "NUMBER", value: d2 }), t6.push({ name: "rmoveto", type: "OP", value: 21 }), o5 = Math.round(f2.x), n4 = Math.round(f2.y)) : "L" === f2.type ? (c2 = Math.round(f2.x - o5), d2 = Math.round(f2.y - n4), t6.push({ name: "dx", type: "NUMBER", value: c2 }), t6.push({ name: "dy", type: "NUMBER", value: d2 }), t6.push({ name: "rlineto", type: "OP", value: 5 }), o5 = Math.round(f2.x), n4 = Math.round(f2.y)) : "C" === f2.type && (i3 = Math.round(f2.x1 - o5), a2 = Math.round(f2.y1 - n4), l2 = Math.round(f2.x2 - f2.x1), u2 = Math.round(f2.y2 - f2.y1), c2 = Math.round(f2.x - f2.x2), d2 = Math.round(f2.y - f2.y2), t6.push({ name: "dx1", type: "NUMBER", value: i3 }), t6.push({ name: "dy1", type: "NUMBER", value: a2 }), t6.push({ name: "dx2", type: "NUMBER", value: l2 }), t6.push({ name: "dy2", type: "NUMBER", value: u2 }), t6.push({ name: "dx", type: "NUMBER", value: c2 }), t6.push({ name: "dy", type: "NUMBER", value: d2 }), t6.push({ name: "rrcurveto", type: "OP", value: 8 }), o5 = Math.round(f2.x), n4 = Math.round(f2.y));
                    }
                    return t6.push({ name: "endchar", type: "OP", value: 14 }), t6;
                  }(o4);
                  t5.charStrings.push({ name: o4.name, type: "CHARSTRING", value: n3 });
                }
                return t5;
              }
              var Ye = { parse: function(e5, t5, r5) {
                r5.tables.cff = {}, o4 = e5, n3 = t5, (s4 = {}).formatMajor = R.getCard8(o4, n3), s4.formatMinor = R.getCard8(o4, n3 + 1), s4.size = R.getCard8(o4, n3 + 2), s4.offsetSize = R.getCard8(o4, n3 + 3), s4.startOffset = n3, s4.endOffset = n3 + 4;
                var o4 = y(e5, s4.endOffset, R.bytesToString), n3 = y(e5, o4.endOffset), s4 = y(e5, n3.endOffset, R.bytesToString), o4 = y(e5, s4.endOffset);
                if (r5.gsubrs = o4.objects, r5.gsubrsBias = Le(r5.gsubrs), 1 !== (o4 = Ge(e5, t5, n3.objects, s4.objects)).length)
                  throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + o4.length);
                if (n3 = o4[0], (r5.tables.cff.topDict = n3)._privateDict && (r5.defaultWidthX = n3._privateDict.defaultWidthX, r5.nominalWidthX = n3._privateDict.nominalWidthX), void 0 !== n3.ros[0] && void 0 !== n3.ros[1] && (r5.isCIDFont = true), r5.isCIDFont) {
                  var o4 = n3.fdArray, i3 = n3.fdSelect;
                  if (0 === o4 || 0 === i3)
                    throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
                  o4 = Ge(e5, t5, y(e5, o4 += t5).objects, s4.objects);
                  n3._fdArray = o4, n3._fdSelect = function(e6, t6, r6, o5) {
                    var n4, s5 = [], i4 = new R.Parser(e6, t6);
                    if (0 === (e6 = i4.parseCard8()))
                      for (var a3 = 0; a3 < r6; a3++) {
                        if (o5 <= (n4 = i4.parseCard8()))
                          throw new Error("CFF table CID Font FDSelect has bad FD index value " + n4 + " (FD count " + o5 + ")");
                        s5.push(n4);
                      }
                    else {
                      if (3 !== e6)
                        throw new Error("CFF Table CID Font FDSelect table has unsupported format " + e6);
                      var l3, u3 = i4.parseCard16(), c2 = i4.parseCard16();
                      if (0 !== c2)
                        throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c2);
                      for (var d2 = 0; d2 < u3; d2++) {
                        if (n4 = i4.parseCard8(), l3 = i4.parseCard16(), o5 <= n4)
                          throw new Error("CFF table CID Font FDSelect has bad FD index value " + n4 + " (FD count " + o5 + ")");
                        if (r6 < l3)
                          throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + l3);
                        for (; c2 < l3; c2++)
                          s5.push(n4);
                        c2 = l3;
                      }
                      if (l3 !== r6)
                        throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + l3);
                    }
                    return s5;
                  }(e5, i3 += t5, r5.numGlyphs, o4.length);
                }
                var i3 = t5 + n3.private[1], o4 = Be(e5, i3, n3.private[0], s4.objects), a2 = (r5.defaultWidthX = o4.defaultWidthX, r5.nominalWidthX = o4.nominalWidthX, 0 !== o4.subrs ? (i3 = y(e5, i3 + o4.subrs), r5.subrs = i3.objects, r5.subrsBias = Le(r5.subrs)) : (r5.subrs = [], r5.subrsBias = 0), y(e5, t5 + n3.charStrings)), o4 = (r5.nGlyphs = a2.objects.length, function(e6, t6, r6, o5) {
                  var n4 = new R.Parser(e6, t6), s5 = (--r6, [".notdef"]);
                  if (0 === (e6 = n4.parseCard8()))
                    for (var i4 = 0; i4 < r6; i4 += 1)
                      a3 = n4.parseSID(), s5.push(De(o5, a3));
                  else if (1 === e6)
                    for (; s5.length <= r6; )
                      for (var a3 = n4.parseSID(), l3 = n4.parseCard8(), u3 = 0; u3 <= l3; u3 += 1)
                        s5.push(De(o5, a3)), a3 += 1;
                  else {
                    if (2 !== e6)
                      throw new Error("Unknown charset format " + e6);
                    for (; s5.length <= r6; ) {
                      a3 = n4.parseSID(), l3 = n4.parseCard16();
                      for (var c2 = 0; c2 <= l3; c2 += 1)
                        s5.push(De(o5, a3)), a3 += 1;
                    }
                  }
                  return s5;
                }(e5, t5 + n3.charset, r5.nGlyphs, s4.objects));
                0 === n3.encoding ? r5.cffEncoding = new Oe(Ee, o4) : 1 === n3.encoding ? r5.cffEncoding = new Oe(Me, o4) : r5.cffEncoding = function(e6, t6, r6) {
                  var o5 = {}, n4 = new R.Parser(e6, t6);
                  if (0 === (e6 = n4.parseCard8()))
                    for (var s5 = n4.parseCard8(), i4 = 0; i4 < s5; i4 += 1)
                      o5[l3 = n4.parseCard8()] = i4;
                  else {
                    if (1 !== e6)
                      throw new Error("Unknown encoding format " + e6);
                    for (var a3 = n4.parseCard8(), l3 = 1, u3 = 0; u3 < a3; u3 += 1)
                      for (var c2 = n4.parseCard8(), d2 = n4.parseCard8(), f2 = c2; f2 <= c2 + d2; f2 += 1)
                        o5[f2] = l3, l3 += 1;
                  }
                  return new Oe(o5, r6);
                }(e5, t5 + n3.encoding, o4), r5.encoding = r5.encoding || r5.cffEncoding, r5.glyphs = new p.GlyphSet(r5);
                for (var l2 = 0; l2 < r5.nGlyphs; l2 += 1) {
                  var u2 = a2.objects[l2];
                  r5.glyphs.push(l2, p.cffGlyphLoader(r5, l2, Ve, u2));
                }
              }, make: function(e5, t5) {
                for (var r5, o4 = new S.Table("CFF ", [{ name: "header", type: "RECORD" }, { name: "nameIndex", type: "RECORD" }, { name: "topDictIndex", type: "RECORD" }, { name: "stringIndex", type: "RECORD" }, { name: "globalSubrIndex", type: "RECORD" }, { name: "charsets", type: "RECORD" }, { name: "charStringsIndex", type: "RECORD" }, { name: "privateDict", type: "RECORD" }]), n3 = 1 / t5.unitsPerEm, n3 = { version: t5.version, fullName: t5.fullName, familyName: t5.familyName, weight: t5.weightName, fontBBox: t5.fontBBox || [0, 0, 0, 0], fontMatrix: [n3, 0, 0, n3, 0, 0], charset: 999, encoding: 0, charStrings: 999, private: [0, 999] }, s4 = [], i3 = 1; i3 < e5.length; i3 += 1)
                  r5 = e5.get(i3), s4.push(r5.name);
                var a2, l2, u2 = [], t5 = (o4.header = new S.Record("Header", [{ name: "major", type: "Card8", value: 1 }, { name: "minor", type: "Card8", value: 0 }, { name: "hdrSize", type: "Card8", value: 4 }, { name: "major", type: "Card8", value: 1 }]), o4.nameIndex = function(e6) {
                  var t6 = new S.Record("Name INDEX", [{ name: "names", type: "INDEX", value: [] }]);
                  t6.names = [];
                  for (var r6 = 0; r6 < e6.length; r6 += 1)
                    t6.names.push({ name: "name_" + r6, type: "NAME", value: e6[r6] });
                  return t6;
                }([t5.postScriptName]), We(n3, u2)), c2 = (o4.topDictIndex = qe(t5), o4.globalSubrIndex = new S.Record("Global Subr INDEX", [{ name: "subrs", type: "INDEX", value: [] }]), o4.charsets = function(e6, t6) {
                  for (var r6 = new S.Record("Charsets", [{ name: "format", type: "Card8", value: 0 }]), o5 = 0; o5 < e6.length; o5 += 1) {
                    var n4 = ze(e6[o5], t6);
                    r6.fields.push({ name: "glyph_" + o5, type: "SID", value: n4 });
                  }
                  return r6;
                }(s4, u2), o4.charStringsIndex = Xe(e5), o4.privateDict = (c2 = {}, a2 = u2, (l2 = new S.Record("Private DICT", [{ name: "dict", type: "DICT", value: {} }])).dict = He(Ne, c2, a2), l2), o4.stringIndex = function(e6) {
                  var t6 = new S.Record("String INDEX", [{ name: "strings", type: "INDEX", value: [] }]);
                  t6.strings = [];
                  for (var r6 = 0; r6 < e6.length; r6 += 1)
                    t6.strings.push({ name: "string_" + r6, type: "STRING", value: e6[r6] });
                  return t6;
                }(u2), o4.header.sizeOf() + o4.nameIndex.sizeOf() + o4.topDictIndex.sizeOf() + o4.stringIndex.sizeOf() + o4.globalSubrIndex.sizeOf());
                return n3.charset = c2, n3.encoding = 0, n3.charStrings = n3.charset + o4.charsets.sizeOf(), n3.private[1] = n3.charStrings + o4.charStringsIndex.sizeOf(), t5 = We(n3, u2), o4.topDictIndex = qe(t5), o4;
              } };
              var Ze = { parse: function(e5, t5) {
                var r5 = {}, e5 = new R.Parser(e5, t5);
                return r5.version = e5.parseVersion(), r5.fontRevision = Math.round(1e3 * e5.parseFixed()) / 1e3, r5.checkSumAdjustment = e5.parseULong(), r5.magicNumber = e5.parseULong(), L.argument(1594834165 === r5.magicNumber, "Font header has wrong magic number."), r5.flags = e5.parseUShort(), r5.unitsPerEm = e5.parseUShort(), r5.created = e5.parseLongDateTime(), r5.modified = e5.parseLongDateTime(), r5.xMin = e5.parseShort(), r5.yMin = e5.parseShort(), r5.xMax = e5.parseShort(), r5.yMax = e5.parseShort(), r5.macStyle = e5.parseUShort(), r5.lowestRecPPEM = e5.parseUShort(), r5.fontDirectionHint = e5.parseShort(), r5.indexToLocFormat = e5.parseShort(), r5.glyphDataFormat = e5.parseShort(), r5;
              }, make: function(e5) {
                var t5 = Math.round((/* @__PURE__ */ new Date()).getTime() / 1e3) + 2082844800, r5 = t5;
                return e5.createdTimestamp && (r5 = e5.createdTimestamp + 2082844800), new S.Table("head", [{ name: "version", type: "FIXED", value: 65536 }, { name: "fontRevision", type: "FIXED", value: 65536 }, { name: "checkSumAdjustment", type: "ULONG", value: 0 }, { name: "magicNumber", type: "ULONG", value: 1594834165 }, { name: "flags", type: "USHORT", value: 0 }, { name: "unitsPerEm", type: "USHORT", value: 1e3 }, { name: "created", type: "LONGDATETIME", value: r5 }, { name: "modified", type: "LONGDATETIME", value: t5 }, { name: "xMin", type: "SHORT", value: 0 }, { name: "yMin", type: "SHORT", value: 0 }, { name: "xMax", type: "SHORT", value: 0 }, { name: "yMax", type: "SHORT", value: 0 }, { name: "macStyle", type: "USHORT", value: 0 }, { name: "lowestRecPPEM", type: "USHORT", value: 0 }, { name: "fontDirectionHint", type: "SHORT", value: 2 }, { name: "indexToLocFormat", type: "SHORT", value: 0 }, { name: "glyphDataFormat", type: "SHORT", value: 0 }], e5);
              } };
              var Qe = { parse: function(e5, t5) {
                var r5 = {}, e5 = new R.Parser(e5, t5);
                return r5.version = e5.parseVersion(), r5.ascender = e5.parseShort(), r5.descender = e5.parseShort(), r5.lineGap = e5.parseShort(), r5.advanceWidthMax = e5.parseUShort(), r5.minLeftSideBearing = e5.parseShort(), r5.minRightSideBearing = e5.parseShort(), r5.xMaxExtent = e5.parseShort(), r5.caretSlopeRise = e5.parseShort(), r5.caretSlopeRun = e5.parseShort(), r5.caretOffset = e5.parseShort(), e5.relativeOffset += 8, r5.metricDataFormat = e5.parseShort(), r5.numberOfHMetrics = e5.parseUShort(), r5;
              }, make: function(e5) {
                return new S.Table("hhea", [{ name: "version", type: "FIXED", value: 65536 }, { name: "ascender", type: "FWORD", value: 0 }, { name: "descender", type: "FWORD", value: 0 }, { name: "lineGap", type: "FWORD", value: 0 }, { name: "advanceWidthMax", type: "UFWORD", value: 0 }, { name: "minLeftSideBearing", type: "FWORD", value: 0 }, { name: "minRightSideBearing", type: "FWORD", value: 0 }, { name: "xMaxExtent", type: "FWORD", value: 0 }, { name: "caretSlopeRise", type: "SHORT", value: 1 }, { name: "caretSlopeRun", type: "SHORT", value: 0 }, { name: "caretOffset", type: "SHORT", value: 0 }, { name: "reserved1", type: "SHORT", value: 0 }, { name: "reserved2", type: "SHORT", value: 0 }, { name: "reserved3", type: "SHORT", value: 0 }, { name: "reserved4", type: "SHORT", value: 0 }, { name: "metricDataFormat", type: "SHORT", value: 0 }, { name: "numberOfHMetrics", type: "USHORT", value: 0 }], e5);
              } };
              var Je = { parse: function(e5, t5, r5, o4, n3) {
                for (var s4, i3, a2 = new R.Parser(e5, t5), l2 = 0; l2 < o4; l2 += 1) {
                  l2 < r5 && (s4 = a2.parseUShort(), i3 = a2.parseShort());
                  var u2 = n3.get(l2);
                  u2.advanceWidth = s4, u2.leftSideBearing = i3;
                }
              }, make: function(e5) {
                for (var t5 = new S.Table("hmtx", []), r5 = 0; r5 < e5.length; r5 += 1) {
                  var o4 = e5.get(r5), n3 = o4.advanceWidth || 0, o4 = o4.leftSideBearing || 0;
                  t5.fields.push({ name: "advanceWidth_" + r5, type: "USHORT", value: n3 }), t5.fields.push({ name: "leftSideBearing_" + r5, type: "SHORT", value: o4 });
                }
                return t5;
              } };
              var Ke = { make: function(e5) {
                for (var t5 = new S.Table("ltag", [{ name: "version", type: "ULONG", value: 1 }, { name: "flags", type: "ULONG", value: 0 }, { name: "numTags", type: "ULONG", value: e5.length }]), r5 = "", o4 = 12 + 4 * e5.length, n3 = 0; n3 < e5.length; ++n3) {
                  var s4 = r5.indexOf(e5[n3]);
                  s4 < 0 && (s4 = r5.length, r5 += e5[n3]), t5.fields.push({ name: "offset " + n3, type: "USHORT", value: o4 + s4 }), t5.fields.push({ name: "length " + n3, type: "USHORT", value: e5[n3].length });
                }
                return t5.fields.push({ name: "stringPool", type: "CHARARRAY", value: r5 }), t5;
              }, parse: function(e5, t5) {
                for (var r5 = new R.Parser(e5, t5), o4 = r5.parseULong(), n3 = (L.argument(1 === o4, "Unsupported ltag table version."), r5.skip("uLong", 1), r5.parseULong()), s4 = [], i3 = 0; i3 < n3; i3++) {
                  for (var a2 = "", l2 = t5 + r5.parseUShort(), u2 = r5.parseUShort(), c2 = l2; c2 < l2 + u2; ++c2)
                    a2 += String.fromCharCode(e5.getInt8(c2));
                  s4.push(a2);
                }
                return s4;
              } };
              var $e = { parse: function(e5, t5) {
                var r5 = {}, e5 = new R.Parser(e5, t5);
                return r5.version = e5.parseVersion(), r5.numGlyphs = e5.parseUShort(), 1 === r5.version && (r5.maxPoints = e5.parseUShort(), r5.maxContours = e5.parseUShort(), r5.maxCompositePoints = e5.parseUShort(), r5.maxCompositeContours = e5.parseUShort(), r5.maxZones = e5.parseUShort(), r5.maxTwilightPoints = e5.parseUShort(), r5.maxStorage = e5.parseUShort(), r5.maxFunctionDefs = e5.parseUShort(), r5.maxInstructionDefs = e5.parseUShort(), r5.maxStackElements = e5.parseUShort(), r5.maxSizeOfInstructions = e5.parseUShort(), r5.maxComponentElements = e5.parseUShort(), r5.maxComponentDepth = e5.parseUShort()), r5;
              }, make: function(e5) {
                return new S.Table("maxp", [{ name: "version", type: "FIXED", value: 20480 }, { name: "numGlyphs", type: "USHORT", value: e5 }]);
              } }, et = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"], tt = { 0: "en", 1: "fr", 2: "de", 3: "it", 4: "nl", 5: "sv", 6: "es", 7: "da", 8: "pt", 9: "no", 10: "he", 11: "ja", 12: "ar", 13: "fi", 14: "el", 15: "is", 16: "mt", 17: "tr", 18: "hr", 19: "zh-Hant", 20: "ur", 21: "hi", 22: "th", 23: "ko", 24: "lt", 25: "pl", 26: "hu", 27: "es", 28: "lv", 29: "se", 30: "fo", 31: "fa", 32: "ru", 33: "zh", 34: "nl-BE", 35: "ga", 36: "sq", 37: "ro", 38: "cz", 39: "sk", 40: "si", 41: "yi", 42: "sr", 43: "mk", 44: "bg", 45: "uk", 46: "be", 47: "uz", 48: "kk", 49: "az-Cyrl", 50: "az-Arab", 51: "hy", 52: "ka", 53: "mo", 54: "ky", 55: "tg", 56: "tk", 57: "mn-CN", 58: "mn", 59: "ps", 60: "ks", 61: "ku", 62: "sd", 63: "bo", 64: "ne", 65: "sa", 66: "mr", 67: "bn", 68: "as", 69: "gu", 70: "pa", 71: "or", 72: "ml", 73: "kn", 74: "ta", 75: "te", 76: "si", 77: "my", 78: "km", 79: "lo", 80: "vi", 81: "id", 82: "tl", 83: "ms", 84: "ms-Arab", 85: "am", 86: "ti", 87: "om", 88: "so", 89: "sw", 90: "rw", 91: "rn", 92: "ny", 93: "mg", 94: "eo", 128: "cy", 129: "eu", 130: "ca", 131: "la", 132: "qu", 133: "gn", 134: "ay", 135: "tt", 136: "ug", 137: "dz", 138: "jv", 139: "su", 140: "gl", 141: "af", 142: "br", 143: "iu", 144: "gd", 145: "gv", 146: "ga", 147: "to", 148: "el-polyton", 149: "kl", 150: "az", 151: "nn" }, rt = { 0: 0, 1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0, 10: 5, 11: 1, 12: 4, 13: 0, 14: 6, 15: 0, 16: 0, 17: 0, 18: 0, 19: 2, 20: 4, 21: 9, 22: 21, 23: 3, 24: 29, 25: 29, 26: 29, 27: 29, 28: 29, 29: 0, 30: 0, 31: 4, 32: 7, 33: 25, 34: 0, 35: 0, 36: 0, 37: 0, 38: 29, 39: 29, 40: 0, 41: 5, 42: 7, 43: 7, 44: 7, 45: 7, 46: 7, 47: 7, 48: 7, 49: 7, 50: 4, 51: 24, 52: 23, 53: 7, 54: 7, 55: 7, 56: 7, 57: 27, 58: 7, 59: 4, 60: 4, 61: 4, 62: 4, 63: 26, 64: 9, 65: 9, 66: 9, 67: 13, 68: 13, 69: 11, 70: 10, 71: 12, 72: 17, 73: 16, 74: 14, 75: 15, 76: 18, 77: 19, 78: 20, 79: 22, 80: 30, 81: 0, 82: 0, 83: 0, 84: 4, 85: 28, 86: 28, 87: 28, 88: 0, 89: 0, 90: 0, 91: 0, 92: 0, 93: 0, 94: 0, 128: 0, 129: 0, 130: 0, 131: 0, 132: 0, 133: 0, 134: 0, 135: 7, 136: 4, 137: 26, 138: 0, 139: 0, 140: 0, 141: 0, 142: 0, 143: 28, 144: 0, 145: 0, 146: 0, 147: 0, 148: 6, 149: 0, 150: 0, 151: 0 }, ot = { 1078: "af", 1052: "sq", 1156: "gsw", 1118: "am", 5121: "ar-DZ", 15361: "ar-BH", 3073: "ar", 2049: "ar-IQ", 11265: "ar-JO", 13313: "ar-KW", 12289: "ar-LB", 4097: "ar-LY", 6145: "ary", 8193: "ar-OM", 16385: "ar-QA", 1025: "ar-SA", 10241: "ar-SY", 7169: "aeb", 14337: "ar-AE", 9217: "ar-YE", 1067: "hy", 1101: "as", 2092: "az-Cyrl", 1068: "az", 1133: "ba", 1069: "eu", 1059: "be", 2117: "bn", 1093: "bn-IN", 8218: "bs-Cyrl", 5146: "bs", 1150: "br", 1026: "bg", 1027: "ca", 3076: "zh-HK", 5124: "zh-MO", 2052: "zh", 4100: "zh-SG", 1028: "zh-TW", 1155: "co", 1050: "hr", 4122: "hr-BA", 1029: "cs", 1030: "da", 1164: "prs", 1125: "dv", 2067: "nl-BE", 1043: "nl", 3081: "en-AU", 10249: "en-BZ", 4105: "en-CA", 9225: "en-029", 16393: "en-IN", 6153: "en-IE", 8201: "en-JM", 17417: "en-MY", 5129: "en-NZ", 13321: "en-PH", 18441: "en-SG", 7177: "en-ZA", 11273: "en-TT", 2057: "en-GB", 1033: "en", 12297: "en-ZW", 1061: "et", 1080: "fo", 1124: "fil", 1035: "fi", 2060: "fr-BE", 3084: "fr-CA", 1036: "fr", 5132: "fr-LU", 6156: "fr-MC", 4108: "fr-CH", 1122: "fy", 1110: "gl", 1079: "ka", 3079: "de-AT", 1031: "de", 5127: "de-LI", 4103: "de-LU", 2055: "de-CH", 1032: "el", 1135: "kl", 1095: "gu", 1128: "ha", 1037: "he", 1081: "hi", 1038: "hu", 1039: "is", 1136: "ig", 1057: "id", 1117: "iu", 2141: "iu-Latn", 2108: "ga", 1076: "xh", 1077: "zu", 1040: "it", 2064: "it-CH", 1041: "ja", 1099: "kn", 1087: "kk", 1107: "km", 1158: "quc", 1159: "rw", 1089: "sw", 1111: "kok", 1042: "ko", 1088: "ky", 1108: "lo", 1062: "lv", 1063: "lt", 2094: "dsb", 1134: "lb", 1071: "mk", 2110: "ms-BN", 1086: "ms", 1100: "ml", 1082: "mt", 1153: "mi", 1146: "arn", 1102: "mr", 1148: "moh", 1104: "mn", 2128: "mn-CN", 1121: "ne", 1044: "nb", 2068: "nn", 1154: "oc", 1096: "or", 1123: "ps", 1045: "pl", 1046: "pt", 2070: "pt-PT", 1094: "pa", 1131: "qu-BO", 2155: "qu-EC", 3179: "qu", 1048: "ro", 1047: "rm", 1049: "ru", 9275: "smn", 4155: "smj-NO", 5179: "smj", 3131: "se-FI", 1083: "se", 2107: "se-SE", 8251: "sms", 6203: "sma-NO", 7227: "sms", 1103: "sa", 7194: "sr-Cyrl-BA", 3098: "sr", 6170: "sr-Latn-BA", 2074: "sr-Latn", 1132: "nso", 1074: "tn", 1115: "si", 1051: "sk", 1060: "sl", 11274: "es-AR", 16394: "es-BO", 13322: "es-CL", 9226: "es-CO", 5130: "es-CR", 7178: "es-DO", 12298: "es-EC", 17418: "es-SV", 4106: "es-GT", 18442: "es-HN", 2058: "es-MX", 19466: "es-NI", 6154: "es-PA", 15370: "es-PY", 10250: "es-PE", 20490: "es-PR", 3082: "es", 1034: "es", 21514: "es-US", 14346: "es-UY", 8202: "es-VE", 2077: "sv-FI", 1053: "sv", 1114: "syr", 1064: "tg", 2143: "tzm", 1097: "ta", 1092: "tt", 1098: "te", 1054: "th", 1105: "bo", 1055: "tr", 1090: "tk", 1152: "ug", 1058: "uk", 1070: "hsb", 1056: "ur", 2115: "uz-Cyrl", 1091: "uz", 1066: "vi", 1106: "cy", 1160: "wo", 1157: "sah", 1144: "ii", 1130: "yo" };
              var nt = "utf-16", st = { 0: "macintosh", 1: "x-mac-japanese", 2: "x-mac-chinesetrad", 3: "x-mac-korean", 6: "x-mac-greek", 7: "x-mac-cyrillic", 9: "x-mac-devanagai", 10: "x-mac-gurmukhi", 11: "x-mac-gujarati", 12: "x-mac-oriya", 13: "x-mac-bengali", 14: "x-mac-tamil", 15: "x-mac-telugu", 16: "x-mac-kannada", 17: "x-mac-malayalam", 18: "x-mac-sinhalese", 19: "x-mac-burmese", 20: "x-mac-khmer", 21: "x-mac-thai", 22: "x-mac-lao", 23: "x-mac-georgian", 24: "x-mac-armenian", 25: "x-mac-chinesesimp", 26: "x-mac-tibetan", 27: "x-mac-mongolian", 28: "x-mac-ethiopic", 29: "x-mac-ce", 30: "x-mac-vietnamese", 31: "x-mac-extarabic" }, it = { 15: "x-mac-icelandic", 17: "x-mac-turkish", 18: "x-mac-croatian", 24: "x-mac-ce", 25: "x-mac-ce", 26: "x-mac-ce", 27: "x-mac-ce", 28: "x-mac-ce", 30: "x-mac-icelandic", 37: "x-mac-romanian", 38: "x-mac-ce", 39: "x-mac-ce", 40: "x-mac-ce", 143: "x-mac-inuit", 146: "x-mac-gaelic" };
              function at(e5, t5, r5) {
                switch (e5) {
                  case 0:
                    return nt;
                  case 1:
                    return it[r5] || st[t5];
                  case 3:
                    if (1 === t5 || 10 === t5)
                      return nt;
                }
              }
              function lt(e5) {
                var t5, r5 = {};
                for (t5 in e5)
                  r5[e5[t5]] = parseInt(t5);
                return r5;
              }
              function ut(e5, t5, r5, o4, n3, s4) {
                return new S.Record("NameRecord", [{ name: "platformID", type: "USHORT", value: e5 }, { name: "encodingID", type: "USHORT", value: t5 }, { name: "languageID", type: "USHORT", value: r5 }, { name: "nameID", type: "USHORT", value: o4 }, { name: "length", type: "USHORT", value: n3 }, { name: "offset", type: "USHORT", value: s4 }]);
              }
              function ct(e5, t5) {
                if ((r5 = function(e6, t6) {
                  var r6 = e6.length, o5 = t6.length - r6 + 1;
                  e:
                    for (var n4 = 0; n4 < o5; n4++)
                      for (; n4 < o5; n4++) {
                        for (var s4 = 0; s4 < r6; s4++)
                          if (t6[n4 + s4] !== e6[s4])
                            continue e;
                        return n4;
                      }
                  return -1;
                }(e5, t5)) < 0)
                  for (var r5 = t5.length, o4 = 0, n3 = e5.length; o4 < n3; ++o4)
                    t5.push(e5[o4]);
                return r5;
              }
              var dt = { parse: function(e5, t5, r5) {
                for (var o4 = {}, n3 = new R.Parser(e5, t5), t5 = n3.parseUShort(), s4 = n3.parseUShort(), i3 = n3.offset + n3.parseUShort(), a2 = 0; a2 < s4; a2++) {
                  var l2 = n3.parseUShort(), u2 = n3.parseUShort(), c2 = n3.parseUShort(), d2 = n3.parseUShort(), d2 = et[d2] || d2, f2 = n3.parseUShort(), h2 = n3.parseUShort(), p2 = function(e6, t6, r6) {
                    switch (e6) {
                      case 0:
                        if (65535 === t6)
                          return "und";
                        if (r6)
                          return r6[t6];
                        break;
                      case 1:
                        return tt[t6];
                      case 3:
                        return ot[t6];
                    }
                  }(l2, c2, r5), l2 = at(l2, u2, c2);
                  void 0 !== l2 && void 0 !== p2 && (u2 = void 0, (u2 = l2 === nt ? m.UTF16(e5, i3 + h2, f2) : m.MACSTRING(e5, i3 + h2, f2, l2)) && ((c2 = void 0 === (c2 = o4[d2]) ? o4[d2] = {} : c2)[p2] = u2));
                }
                return 1 === t5 && n3.parseUShort(), o4;
              }, make: function(e5, t5) {
                var r5, o4 = [], n3 = {}, s4 = lt(et);
                for (r5 in e5) {
                  var i3 = s4[r5];
                  if (void 0 === i3 && (i3 = r5), f2 = parseInt(i3), isNaN(f2))
                    throw new Error('Name table entry "' + r5 + '" does not exist, see nameTableNames for complete list.');
                  n3[f2] = e5[r5], o4.push(f2);
                }
                for (var a2 = lt(tt), l2 = lt(ot), u2 = [], c2 = [], d2 = 0; d2 < o4.length; d2++) {
                  var f2, h2, p2 = n3[f2 = o4[d2]];
                  for (h2 in p2) {
                    var m2 = p2[h2], y2 = 1, g2 = a2[h2], v2 = rt[g2], b2 = at(y2, v2, g2), b2 = w.MACSTRING(m2, b2), j2 = (void 0 === b2 && (y2 = 0, (g2 = t5.indexOf(h2)) < 0 && (g2 = t5.length, t5.push(h2)), v2 = 4, b2 = w.UTF16(m2)), ct(b2, c2)), y2 = (u2.push(ut(y2, v2, g2, f2, b2.length, j2)), l2[h2]);
                    void 0 !== y2 && (g2 = ct(v2 = w.UTF16(m2), c2), u2.push(ut(3, 1, y2, f2, v2.length, g2)));
                  }
                }
                u2.sort(function(e6, t6) {
                  return e6.platformID - t6.platformID || e6.encodingID - t6.encodingID || e6.languageID - t6.languageID || e6.nameID - t6.nameID;
                });
                for (var _2 = new S.Table("name", [{ name: "format", type: "USHORT", value: 0 }, { name: "count", type: "USHORT", value: u2.length }, { name: "stringOffset", type: "USHORT", value: 6 + 12 * u2.length }]), x2 = 0; x2 < u2.length; x2++)
                  _2.fields.push({ name: "record_" + x2, type: "RECORD", value: u2[x2] });
                return _2.fields.push({ name: "strings", type: "LITERAL", value: c2 }), _2;
              } }, ft = [{ begin: 0, end: 127 }, { begin: 128, end: 255 }, { begin: 256, end: 383 }, { begin: 384, end: 591 }, { begin: 592, end: 687 }, { begin: 688, end: 767 }, { begin: 768, end: 879 }, { begin: 880, end: 1023 }, { begin: 11392, end: 11519 }, { begin: 1024, end: 1279 }, { begin: 1328, end: 1423 }, { begin: 1424, end: 1535 }, { begin: 42240, end: 42559 }, { begin: 1536, end: 1791 }, { begin: 1984, end: 2047 }, { begin: 2304, end: 2431 }, { begin: 2432, end: 2559 }, { begin: 2560, end: 2687 }, { begin: 2688, end: 2815 }, { begin: 2816, end: 2943 }, { begin: 2944, end: 3071 }, { begin: 3072, end: 3199 }, { begin: 3200, end: 3327 }, { begin: 3328, end: 3455 }, { begin: 3584, end: 3711 }, { begin: 3712, end: 3839 }, { begin: 4256, end: 4351 }, { begin: 6912, end: 7039 }, { begin: 4352, end: 4607 }, { begin: 7680, end: 7935 }, { begin: 7936, end: 8191 }, { begin: 8192, end: 8303 }, { begin: 8304, end: 8351 }, { begin: 8352, end: 8399 }, { begin: 8400, end: 8447 }, { begin: 8448, end: 8527 }, { begin: 8528, end: 8591 }, { begin: 8592, end: 8703 }, { begin: 8704, end: 8959 }, { begin: 8960, end: 9215 }, { begin: 9216, end: 9279 }, { begin: 9280, end: 9311 }, { begin: 9312, end: 9471 }, { begin: 9472, end: 9599 }, { begin: 9600, end: 9631 }, { begin: 9632, end: 9727 }, { begin: 9728, end: 9983 }, { begin: 9984, end: 10175 }, { begin: 12288, end: 12351 }, { begin: 12352, end: 12447 }, { begin: 12448, end: 12543 }, { begin: 12544, end: 12591 }, { begin: 12592, end: 12687 }, { begin: 43072, end: 43135 }, { begin: 12800, end: 13055 }, { begin: 13056, end: 13311 }, { begin: 44032, end: 55215 }, { begin: 55296, end: 57343 }, { begin: 67840, end: 67871 }, { begin: 19968, end: 40959 }, { begin: 57344, end: 63743 }, { begin: 12736, end: 12783 }, { begin: 64256, end: 64335 }, { begin: 64336, end: 65023 }, { begin: 65056, end: 65071 }, { begin: 65040, end: 65055 }, { begin: 65104, end: 65135 }, { begin: 65136, end: 65279 }, { begin: 65280, end: 65519 }, { begin: 65520, end: 65535 }, { begin: 3840, end: 4095 }, { begin: 1792, end: 1871 }, { begin: 1920, end: 1983 }, { begin: 3456, end: 3583 }, { begin: 4096, end: 4255 }, { begin: 4608, end: 4991 }, { begin: 5024, end: 5119 }, { begin: 5120, end: 5759 }, { begin: 5760, end: 5791 }, { begin: 5792, end: 5887 }, { begin: 6016, end: 6143 }, { begin: 6144, end: 6319 }, { begin: 10240, end: 10495 }, { begin: 40960, end: 42127 }, { begin: 5888, end: 5919 }, { begin: 66304, end: 66351 }, { begin: 66352, end: 66383 }, { begin: 66560, end: 66639 }, { begin: 118784, end: 119039 }, { begin: 119808, end: 120831 }, { begin: 1044480, end: 1048573 }, { begin: 65024, end: 65039 }, { begin: 917504, end: 917631 }, { begin: 6400, end: 6479 }, { begin: 6480, end: 6527 }, { begin: 6528, end: 6623 }, { begin: 6656, end: 6687 }, { begin: 11264, end: 11359 }, { begin: 11568, end: 11647 }, { begin: 19904, end: 19967 }, { begin: 43008, end: 43055 }, { begin: 65536, end: 65663 }, { begin: 65856, end: 65935 }, { begin: 66432, end: 66463 }, { begin: 66464, end: 66527 }, { begin: 66640, end: 66687 }, { begin: 66688, end: 66735 }, { begin: 67584, end: 67647 }, { begin: 68096, end: 68191 }, { begin: 119552, end: 119647 }, { begin: 73728, end: 74751 }, { begin: 119648, end: 119679 }, { begin: 7040, end: 7103 }, { begin: 7168, end: 7247 }, { begin: 7248, end: 7295 }, { begin: 43136, end: 43231 }, { begin: 43264, end: 43311 }, { begin: 43312, end: 43359 }, { begin: 43520, end: 43615 }, { begin: 65936, end: 65999 }, { begin: 66e3, end: 66047 }, { begin: 66208, end: 66271 }, { begin: 127024, end: 127135 }];
              var ht = { parse: function(e5, t5) {
                var r5 = {}, o4 = new R.Parser(e5, t5);
                r5.version = o4.parseUShort(), r5.xAvgCharWidth = o4.parseShort(), r5.usWeightClass = o4.parseUShort(), r5.usWidthClass = o4.parseUShort(), r5.fsType = o4.parseUShort(), r5.ySubscriptXSize = o4.parseShort(), r5.ySubscriptYSize = o4.parseShort(), r5.ySubscriptXOffset = o4.parseShort(), r5.ySubscriptYOffset = o4.parseShort(), r5.ySuperscriptXSize = o4.parseShort(), r5.ySuperscriptYSize = o4.parseShort(), r5.ySuperscriptXOffset = o4.parseShort(), r5.ySuperscriptYOffset = o4.parseShort(), r5.yStrikeoutSize = o4.parseShort(), r5.yStrikeoutPosition = o4.parseShort(), r5.sFamilyClass = o4.parseShort(), r5.panose = [];
                for (var n3 = 0; n3 < 10; n3++)
                  r5.panose[n3] = o4.parseByte();
                return r5.ulUnicodeRange1 = o4.parseULong(), r5.ulUnicodeRange2 = o4.parseULong(), r5.ulUnicodeRange3 = o4.parseULong(), r5.ulUnicodeRange4 = o4.parseULong(), r5.achVendID = String.fromCharCode(o4.parseByte(), o4.parseByte(), o4.parseByte(), o4.parseByte()), r5.fsSelection = o4.parseUShort(), r5.usFirstCharIndex = o4.parseUShort(), r5.usLastCharIndex = o4.parseUShort(), r5.sTypoAscender = o4.parseShort(), r5.sTypoDescender = o4.parseShort(), r5.sTypoLineGap = o4.parseShort(), r5.usWinAscent = o4.parseUShort(), r5.usWinDescent = o4.parseUShort(), 1 <= r5.version && (r5.ulCodePageRange1 = o4.parseULong(), r5.ulCodePageRange2 = o4.parseULong()), 2 <= r5.version && (r5.sxHeight = o4.parseShort(), r5.sCapHeight = o4.parseShort(), r5.usDefaultChar = o4.parseUShort(), r5.usBreakChar = o4.parseUShort(), r5.usMaxContent = o4.parseUShort()), r5;
              }, make: function(e5) {
                return new S.Table("OS/2", [{ name: "version", type: "USHORT", value: 3 }, { name: "xAvgCharWidth", type: "SHORT", value: 0 }, { name: "usWeightClass", type: "USHORT", value: 0 }, { name: "usWidthClass", type: "USHORT", value: 0 }, { name: "fsType", type: "USHORT", value: 0 }, { name: "ySubscriptXSize", type: "SHORT", value: 650 }, { name: "ySubscriptYSize", type: "SHORT", value: 699 }, { name: "ySubscriptXOffset", type: "SHORT", value: 0 }, { name: "ySubscriptYOffset", type: "SHORT", value: 140 }, { name: "ySuperscriptXSize", type: "SHORT", value: 650 }, { name: "ySuperscriptYSize", type: "SHORT", value: 699 }, { name: "ySuperscriptXOffset", type: "SHORT", value: 0 }, { name: "ySuperscriptYOffset", type: "SHORT", value: 479 }, { name: "yStrikeoutSize", type: "SHORT", value: 49 }, { name: "yStrikeoutPosition", type: "SHORT", value: 258 }, { name: "sFamilyClass", type: "SHORT", value: 0 }, { name: "bFamilyType", type: "BYTE", value: 0 }, { name: "bSerifStyle", type: "BYTE", value: 0 }, { name: "bWeight", type: "BYTE", value: 0 }, { name: "bProportion", type: "BYTE", value: 0 }, { name: "bContrast", type: "BYTE", value: 0 }, { name: "bStrokeVariation", type: "BYTE", value: 0 }, { name: "bArmStyle", type: "BYTE", value: 0 }, { name: "bLetterform", type: "BYTE", value: 0 }, { name: "bMidline", type: "BYTE", value: 0 }, { name: "bXHeight", type: "BYTE", value: 0 }, { name: "ulUnicodeRange1", type: "ULONG", value: 0 }, { name: "ulUnicodeRange2", type: "ULONG", value: 0 }, { name: "ulUnicodeRange3", type: "ULONG", value: 0 }, { name: "ulUnicodeRange4", type: "ULONG", value: 0 }, { name: "achVendID", type: "CHARARRAY", value: "XXXX" }, { name: "fsSelection", type: "USHORT", value: 0 }, { name: "usFirstCharIndex", type: "USHORT", value: 0 }, { name: "usLastCharIndex", type: "USHORT", value: 0 }, { name: "sTypoAscender", type: "SHORT", value: 0 }, { name: "sTypoDescender", type: "SHORT", value: 0 }, { name: "sTypoLineGap", type: "SHORT", value: 0 }, { name: "usWinAscent", type: "USHORT", value: 0 }, { name: "usWinDescent", type: "USHORT", value: 0 }, { name: "ulCodePageRange1", type: "ULONG", value: 0 }, { name: "ulCodePageRange2", type: "ULONG", value: 0 }, { name: "sxHeight", type: "SHORT", value: 0 }, { name: "sCapHeight", type: "SHORT", value: 0 }, { name: "usDefaultChar", type: "USHORT", value: 0 }, { name: "usBreakChar", type: "USHORT", value: 0 }, { name: "usMaxContext", type: "USHORT", value: 0 }], e5);
              }, unicodeRanges: ft, getUnicodeRange: function(e5) {
                for (var t5 = 0; t5 < ft.length; t5 += 1) {
                  var r5 = ft[t5];
                  if (e5 >= r5.begin && e5 < r5.end)
                    return t5;
                }
                return -1;
              } };
              var pt = { parse: function(e5, t5) {
                var r5 = {}, o4 = new R.Parser(e5, t5);
                switch (r5.version = o4.parseVersion(), r5.italicAngle = o4.parseFixed(), r5.underlinePosition = o4.parseShort(), r5.underlineThickness = o4.parseShort(), r5.isFixedPitch = o4.parseULong(), r5.minMemType42 = o4.parseULong(), r5.maxMemType42 = o4.parseULong(), r5.minMemType1 = o4.parseULong(), r5.maxMemType1 = o4.parseULong(), r5.version) {
                  case 1:
                    r5.names = c.slice();
                    break;
                  case 2:
                    r5.numberOfGlyphs = o4.parseUShort(), r5.glyphNameIndex = new Array(r5.numberOfGlyphs);
                    for (var n3 = 0; n3 < r5.numberOfGlyphs; n3++)
                      r5.glyphNameIndex[n3] = o4.parseUShort();
                    r5.names = [];
                    for (var s4, i3 = 0; i3 < r5.numberOfGlyphs; i3++)
                      r5.glyphNameIndex[i3] >= c.length && (s4 = o4.parseChar(), r5.names.push(o4.parseString(s4)));
                    break;
                  case 2.5:
                    r5.numberOfGlyphs = o4.parseUShort(), r5.offset = new Array(r5.numberOfGlyphs);
                    for (var a2 = 0; a2 < r5.numberOfGlyphs; a2++)
                      r5.offset[a2] = o4.parseChar();
                }
                return r5;
              }, make: function() {
                return new S.Table("post", [{ name: "version", type: "FIXED", value: 196608 }, { name: "italicAngle", type: "FIXED", value: 0 }, { name: "underlinePosition", type: "FWORD", value: 0 }, { name: "underlineThickness", type: "FWORD", value: 0 }, { name: "isFixedPitch", type: "ULONG", value: 0 }, { name: "minMemType42", type: "ULONG", value: 0 }, { name: "maxMemType42", type: "ULONG", value: 0 }, { name: "minMemType1", type: "ULONG", value: 0 }, { name: "maxMemType1", type: "ULONG", value: 0 }]);
              } }, o3 = new Array(9), s3 = (o3[1] = function() {
                var e5 = this.offset + this.relativeOffset, t5 = this.parseUShort();
                return 1 === t5 ? { substFormat: 1, coverage: this.parsePointer(u.coverage), deltaGlyphId: this.parseUShort() } : 2 === t5 ? { substFormat: 2, coverage: this.parsePointer(u.coverage), substitute: this.parseOffset16List() } : void L.assert(false, "0x" + e5.toString(16) + ": lookup type 1 format must be 1 or 2.");
              }, o3[2] = function() {
                var e5 = this.parseUShort();
                return L.argument(1 === e5, "GSUB Multiple Substitution Subtable identifier-format must be 1"), { substFormat: e5, coverage: this.parsePointer(u.coverage), sequences: this.parseListOfLists() };
              }, o3[3] = function() {
                var e5 = this.parseUShort();
                return L.argument(1 === e5, "GSUB Alternate Substitution Subtable identifier-format must be 1"), { substFormat: e5, coverage: this.parsePointer(u.coverage), alternateSets: this.parseListOfLists() };
              }, o3[4] = function() {
                var e5 = this.parseUShort();
                return L.argument(1 === e5, "GSUB ligature table identifier-format must be 1"), { substFormat: e5, coverage: this.parsePointer(u.coverage), ligatureSets: this.parseListOfLists(function() {
                  return { ligGlyph: this.parseUShort(), components: this.parseUShortList(this.parseUShort() - 1) };
                }) };
              }, { sequenceIndex: u.uShort, lookupListIndex: u.uShort });
              o3[5] = function() {
                var e5, t5, r5 = this.offset + this.relativeOffset, o4 = this.parseUShort();
                return 1 === o4 ? { substFormat: o4, coverage: this.parsePointer(u.coverage), ruleSets: this.parseListOfLists(function() {
                  var e6 = this.parseUShort(), t6 = this.parseUShort();
                  return { input: this.parseUShortList(e6 - 1), lookupRecords: this.parseRecordList(t6, s3) };
                }) } : 2 === o4 ? { substFormat: o4, coverage: this.parsePointer(u.coverage), classDef: this.parsePointer(u.classDef), classSets: this.parseListOfLists(function() {
                  var e6 = this.parseUShort(), t6 = this.parseUShort();
                  return { classes: this.parseUShortList(e6 - 1), lookupRecords: this.parseRecordList(t6, s3) };
                }) } : 3 === o4 ? (e5 = this.parseUShort(), t5 = this.parseUShort(), { substFormat: o4, coverages: this.parseList(e5, u.pointer(u.coverage)), lookupRecords: this.parseRecordList(t5, s3) }) : void L.assert(false, "0x" + r5.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
              }, o3[6] = function() {
                var e5 = this.offset + this.relativeOffset, t5 = this.parseUShort();
                return 1 === t5 ? { substFormat: 1, coverage: this.parsePointer(u.coverage), chainRuleSets: this.parseListOfLists(function() {
                  return { backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(s3) };
                }) } : 2 === t5 ? { substFormat: 2, coverage: this.parsePointer(u.coverage), backtrackClassDef: this.parsePointer(u.classDef), inputClassDef: this.parsePointer(u.classDef), lookaheadClassDef: this.parsePointer(u.classDef), chainClassSet: this.parseListOfLists(function() {
                  return { backtrack: this.parseUShortList(), input: this.parseUShortList(this.parseShort() - 1), lookahead: this.parseUShortList(), lookupRecords: this.parseRecordList(s3) };
                }) } : 3 === t5 ? { substFormat: 3, backtrackCoverage: this.parseList(u.pointer(u.coverage)), inputCoverage: this.parseList(u.pointer(u.coverage)), lookaheadCoverage: this.parseList(u.pointer(u.coverage)), lookupRecords: this.parseRecordList(s3) } : void L.assert(false, "0x" + e5.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
              }, o3[7] = function() {
                var e5 = this.parseUShort(), e5 = (L.argument(1 === e5, "GSUB Extension Substitution subtable identifier-format must be 1"), this.parseUShort()), t5 = new u(this.data, this.offset + this.parseULong());
                return { substFormat: 1, lookupType: e5, extension: o3[e5].call(t5) };
              }, o3[8] = function() {
                var e5 = this.parseUShort();
                return L.argument(1 === e5, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), { substFormat: e5, coverage: this.parsePointer(u.coverage), backtrackCoverage: this.parseList(u.pointer(u.coverage)), lookaheadCoverage: this.parseList(u.pointer(u.coverage)), substitutes: this.parseUShortList() };
              };
              var mt = new Array(9);
              mt[1] = function(e5) {
                return 1 === e5.substFormat ? new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e5.coverage) }, { name: "deltaGlyphID", type: "USHORT", value: e5.deltaGlyphId }]) : new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 2 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e5.coverage) }].concat(S.ushortList("substitute", e5.substitute)));
              }, mt[3] = function(e5) {
                return L.assert(1 === e5.substFormat, "Lookup type 3 substFormat must be 1."), new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e5.coverage) }].concat(S.tableList("altSet", e5.alternateSets, function(e6) {
                  return new S.Table("alternateSetTable", S.ushortList("alternate", e6));
                })));
              }, mt[4] = function(e5) {
                return L.assert(1 === e5.substFormat, "Lookup type 4 substFormat must be 1."), new S.Table("substitutionTable", [{ name: "substFormat", type: "USHORT", value: 1 }, { name: "coverage", type: "TABLE", value: new S.Coverage(e5.coverage) }].concat(S.tableList("ligSet", e5.ligatureSets, function(e6) {
                  return new S.Table("ligatureSetTable", S.tableList("ligature", e6, function(e7) {
                    return new S.Table("ligatureTable", [{ name: "ligGlyph", type: "USHORT", value: e7.ligGlyph }].concat(S.ushortList("component", e7.components, e7.components.length + 1)));
                  }));
                })));
              };
              var yt = { parse: function(e5, t5) {
                return t5 = (e5 = new u(e5, t5 = t5 || 0)).parseVersion(1), L.argument(1 === t5 || 1.1 === t5, "Unsupported GSUB table version."), 1 === t5 ? { version: t5, scripts: e5.parseScriptList(), features: e5.parseFeatureList(), lookups: e5.parseLookupList(o3) } : { version: t5, scripts: e5.parseScriptList(), features: e5.parseFeatureList(), lookups: e5.parseLookupList(o3), variations: e5.parseFeatureVariationsList() };
              }, make: function(e5) {
                return new S.Table("GSUB", [{ name: "version", type: "ULONG", value: 65536 }, { name: "scripts", type: "TABLE", value: new S.ScriptList(e5.scripts) }, { name: "features", type: "TABLE", value: new S.FeatureList(e5.features) }, { name: "lookups", type: "TABLE", value: new S.LookupList(e5.lookups, mt) }]);
              } };
              var gt = { parse: function(e5, t5) {
                for (var r5 = new R.Parser(e5, t5), o4 = r5.parseULong(), n3 = (L.argument(1 === o4, "Unsupported META table version."), r5.parseULong(), r5.parseULong(), r5.parseULong()), s4 = {}, i3 = 0; i3 < n3; i3++) {
                  var a2 = r5.parseTag(), l2 = r5.parseULong(), u2 = r5.parseULong(), l2 = m.UTF8(e5, t5 + l2, u2);
                  s4[a2] = l2;
                }
                return s4;
              }, make: function(e5) {
                var t5, r5 = Object.keys(e5).length, o4 = "", n3 = 16 + 12 * r5, s4 = new S.Table("meta", [{ name: "version", type: "ULONG", value: 1 }, { name: "flags", type: "ULONG", value: 0 }, { name: "offset", type: "ULONG", value: n3 }, { name: "numTags", type: "ULONG", value: r5 }]);
                for (t5 in e5) {
                  var i3 = o4.length;
                  o4 += e5[t5], s4.fields.push({ name: "tag " + t5, type: "TAG", value: t5 }), s4.fields.push({ name: "offset " + t5, type: "ULONG", value: n3 + i3 }), s4.fields.push({ name: "length " + t5, type: "ULONG", value: e5[t5].length });
                }
                return s4.fields.push({ name: "stringPool", type: "CHARARRAY", value: o4 }), s4;
              } };
              function vt(e5) {
                return Math.log(e5) / Math.log(2) | 0;
              }
              function bt(e5) {
                for (; e5.length % 4 != 0; )
                  e5.push(0);
                for (var t5 = 0, r5 = 0; r5 < e5.length; r5 += 4)
                  t5 += (e5[r5] << 24) + (e5[r5 + 1] << 16) + (e5[r5 + 2] << 8) + e5[r5 + 3];
                return t5 %= Math.pow(2, 32);
              }
              function jt(e5, t5, r5, o4) {
                return new S.Record("Table Record", [{ name: "tag", type: "TAG", value: void 0 !== e5 ? e5 : "" }, { name: "checkSum", type: "ULONG", value: void 0 !== t5 ? t5 : 0 }, { name: "offset", type: "ULONG", value: void 0 !== r5 ? r5 : 0 }, { name: "length", type: "ULONG", value: void 0 !== o4 ? o4 : 0 }]);
              }
              function _t(e5) {
                for (var t5 = new S.Table("sfnt", [{ name: "version", type: "TAG", value: "OTTO" }, { name: "numTables", type: "USHORT", value: 0 }, { name: "searchRange", type: "USHORT", value: 0 }, { name: "entrySelector", type: "USHORT", value: 0 }, { name: "rangeShift", type: "USHORT", value: 0 }]), r5 = (t5.tables = e5, t5.numTables = e5.length, Math.pow(2, vt(t5.numTables))), o4 = (t5.searchRange = 16 * r5, t5.entrySelector = vt(r5), t5.rangeShift = 16 * t5.numTables - t5.searchRange, []), n3 = [], s4 = t5.sizeOf() + jt().sizeOf() * t5.numTables; s4 % 4 != 0; )
                  s4 += 1, n3.push({ name: "padding", type: "BYTE", value: 0 });
                for (var i3 = 0; i3 < e5.length; i3 += 1) {
                  var a2 = e5[i3], l2 = (L.argument(4 === a2.tableName.length, "Table name" + a2.tableName + " is invalid."), a2.sizeOf()), u2 = jt(a2.tableName, bt(a2.encode()), s4, l2);
                  for (o4.push({ name: u2.tag + " Table Record", type: "RECORD", value: u2 }), n3.push({ name: a2.tableName + " table", type: "RECORD", value: a2 }), s4 += l2, L.argument(!isNaN(s4), "Something went wrong calculating the offset."); s4 % 4 != 0; )
                    s4 += 1, n3.push({ name: "padding", type: "BYTE", value: 0 });
                }
                return o4.sort(function(e6, t6) {
                  return e6.value.tag > t6.value.tag ? 1 : -1;
                }), t5.fields = t5.fields.concat(o4), t5.fields = t5.fields.concat(n3), t5;
              }
              function xt(e5, t5, r5) {
                for (var o4 = 0; o4 < t5.length; o4 += 1) {
                  var n3 = e5.charToGlyphIndex(t5[o4]);
                  if (0 < n3)
                    return e5.glyphs.get(n3).getMetrics();
                }
                return r5;
              }
              var wt = { make: _t, fontToTable: function(e5) {
                for (var t5, r5 = [], o4 = [], n3 = [], s4 = [], i3 = [], a2 = [], l2 = [], u2 = 0, c2 = 0, d2 = 0, f2 = 0, h2 = 0, p2 = 0; p2 < e5.glyphs.length; p2 += 1) {
                  var m2 = e5.glyphs.get(p2), y2 = 0 | m2.unicode;
                  if (isNaN(m2.advanceWidth))
                    throw new Error("Glyph " + m2.name + " (" + p2 + "): advanceWidth is not a number.");
                  (y2 < t5 || void 0 === t5) && 0 < y2 && (t5 = y2), u2 < y2 && (u2 = y2);
                  var y2 = ht.getUnicodeRange(y2);
                  if (y2 < 32)
                    c2 |= 1 << y2;
                  else if (y2 < 64)
                    d2 |= 1 << y2 - 32;
                  else if (y2 < 96)
                    f2 |= 1 << y2 - 64;
                  else {
                    if (!(y2 < 123))
                      throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                    h2 |= 1 << y2 - 96;
                  }
                  ".notdef" !== m2.name && (y2 = m2.getMetrics(), r5.push(y2.xMin), o4.push(y2.yMin), n3.push(y2.xMax), s4.push(y2.yMax), a2.push(y2.leftSideBearing), l2.push(y2.rightSideBearing), i3.push(m2.advanceWidth));
                }
                var g2, v2 = { xMin: Math.min.apply(null, r5), yMin: Math.min.apply(null, o4), xMax: Math.max.apply(null, n3), yMax: Math.max.apply(null, s4), advanceWidthMax: Math.max.apply(null, i3), advanceWidthAvg: function(e6) {
                  for (var t6 = 0, r6 = 0; r6 < e6.length; r6 += 1)
                    t6 += e6[r6];
                  return t6 / e6.length;
                }(i3), minLeftSideBearing: Math.min.apply(null, a2), maxLeftSideBearing: Math.max.apply(null, a2), minRightSideBearing: Math.min.apply(null, l2) }, b2 = (v2.ascender = e5.ascender, v2.descender = e5.descender, Ze.make({ flags: 3, unitsPerEm: e5.unitsPerEm, xMin: v2.xMin, yMin: v2.yMin, xMax: v2.xMax, yMax: v2.yMax, lowestRecPPEM: 3, createdTimestamp: e5.createdTimestamp })), j2 = Qe.make({ ascender: v2.ascender, descender: v2.descender, advanceWidthMax: v2.advanceWidthMax, minLeftSideBearing: v2.minLeftSideBearing, minRightSideBearing: v2.minRightSideBearing, xMaxExtent: v2.maxLeftSideBearing + (v2.xMax - v2.xMin), numberOfHMetrics: e5.glyphs.length }), _2 = $e.make(e5.glyphs.length), x2 = ht.make({ xAvgCharWidth: Math.round(v2.advanceWidthAvg), usWeightClass: e5.tables.os2.usWeightClass, usWidthClass: e5.tables.os2.usWidthClass, usFirstCharIndex: t5, usLastCharIndex: u2, ulUnicodeRange1: c2, ulUnicodeRange2: d2, ulUnicodeRange3: f2, ulUnicodeRange4: h2, fsSelection: e5.tables.os2.fsSelection, sTypoAscender: v2.ascender, sTypoDescender: v2.descender, sTypoLineGap: 0, usWinAscent: v2.yMax, usWinDescent: Math.abs(v2.yMin), ulCodePageRange1: 1, sxHeight: xt(e5, "xyvw", { yMax: Math.round(v2.ascender / 2) }).yMax, sCapHeight: xt(e5, "HIKLEFJMNTZBDPRAGOQSUVWXY", v2).yMax, usDefaultChar: e5.hasChar(" ") ? 32 : 0, usBreakChar: e5.hasChar(" ") ? 32 : 0 }), w2 = Je.make(e5.glyphs), S2 = we.make(e5.glyphs), E2 = e5.getEnglishName("fontFamily"), M2 = e5.getEnglishName("fontSubfamily"), T2 = E2 + " " + M2, k2 = (k2 = e5.getEnglishName("postScriptName")) || E2.replace(/\s/g, "") + "-" + M2, O2 = {};
                for (g2 in e5.names)
                  O2[g2] = e5.names[g2];
                O2.uniqueID || (O2.uniqueID = { en: e5.getEnglishName("manufacturer") + ":" + T2 }), O2.postScriptName || (O2.postScriptName = { en: k2 }), O2.preferredFamily || (O2.preferredFamily = e5.names.fontFamily), O2.preferredSubfamily || (O2.preferredSubfamily = e5.names.fontSubfamily);
                var C2 = [], A2 = dt.make(O2, C2), C2 = 0 < C2.length ? Ke.make(C2) : void 0, P2 = pt.make(), T2 = Ye.make(e5.glyphs, { version: e5.getEnglishName("version"), fullName: T2, familyName: E2, weightName: M2, postScriptName: k2, unitsPerEm: e5.unitsPerEm, fontBBox: [0, v2.yMin, v2.ascender, v2.advanceWidthMax] }), E2 = e5.metas && 0 < Object.keys(e5.metas).length ? gt.make(e5.metas) : void 0, M2 = [b2, j2, _2, x2, A2, S2, P2, T2, w2];
                C2 && M2.push(C2), e5.tables.gsub && M2.push(yt.make(e5.tables.gsub)), E2 && M2.push(E2);
                for (var D2 = bt((k2 = _t(M2)).encode()), L2 = k2.fields, R2 = false, I2 = 0; I2 < L2.length; I2 += 1)
                  if ("head table" === L2[I2].name) {
                    L2[I2].value.checkSumAdjustment = 2981146554 - D2, R2 = true;
                    break;
                  }
                if (R2)
                  return k2;
                throw new Error("Could not find head table with checkSum to adjust.");
              }, computeCheckSum: bt };
              function St(e5, t5) {
                for (var r5 = 0, o4 = e5.length - 1; r5 <= o4; ) {
                  var n3 = r5 + o4 >>> 1, s4 = e5[n3].tag;
                  if (s4 === t5)
                    return n3;
                  s4 < t5 ? r5 = 1 + n3 : o4 = n3 - 1;
                }
                return -r5 - 1;
              }
              function Et(e5, t5) {
                for (var r5 = 0, o4 = e5.length - 1; r5 <= o4; ) {
                  var n3 = r5 + o4 >>> 1, s4 = e5[n3];
                  if (s4 === t5)
                    return n3;
                  s4 < t5 ? r5 = 1 + n3 : o4 = n3 - 1;
                }
                return -r5 - 1;
              }
              function Mt(e5, t5) {
                for (var r5 = 0, o4 = e5.length - 1; r5 <= o4; ) {
                  var n3, s4 = r5 + o4 >>> 1, i3 = (n3 = e5[s4]).start;
                  if (i3 === t5)
                    return n3;
                  i3 < t5 ? r5 = 1 + s4 : o4 = s4 - 1;
                }
                if (0 < r5)
                  return t5 > (n3 = e5[r5 - 1]).end ? 0 : n3;
              }
              function Tt(e5, t5) {
                this.font = e5, this.tableName = t5;
              }
              function kt(e5) {
                Tt.call(this, e5, "gpos");
              }
              function i2(e5) {
                Tt.call(this, e5, "gsub");
              }
              function Ot(e5, t5, r5) {
                for (var o4 = e5.subtables, n3 = 0; n3 < o4.length; n3++) {
                  var s4 = o4[n3];
                  if (s4.substFormat === t5)
                    return s4;
                }
                if (r5)
                  return o4.push(r5), r5;
              }
              function Ct(e5) {
                for (var t5 = new ArrayBuffer(e5.length), r5 = new Uint8Array(t5), o4 = 0; o4 < e5.length; ++o4)
                  r5[o4] = e5[o4];
                return t5;
              }
              function _(e5, t5) {
                if (!e5)
                  throw t5;
              }
              function At(e5, t5, r5, o4, n3) {
                var s4 = 0 < (t5 & o4) ? (s4 = e5.parseByte(), r5 + (s4 = 0 == (t5 & n3) ? -s4 : s4)) : 0 < (t5 & n3) ? r5 : r5 + e5.parseShort();
                return s4;
              }
              function Pt(e5, t5, r5) {
                var o4, n3 = new R.Parser(t5, r5);
                if (e5.numberOfContours = n3.parseShort(), e5._xMin = n3.parseShort(), e5._yMin = n3.parseShort(), e5._xMax = n3.parseShort(), e5._yMax = n3.parseShort(), 0 < e5.numberOfContours) {
                  for (var s4 = e5.endPointIndices = [], i3 = 0; i3 < e5.numberOfContours; i3 += 1)
                    s4.push(n3.parseUShort());
                  e5.instructionLength = n3.parseUShort(), e5.instructions = [];
                  for (var a2 = 0; a2 < e5.instructionLength; a2 += 1)
                    e5.instructions.push(n3.parseByte());
                  for (var l2 = s4[s4.length - 1] + 1, u2 = [], c2 = 0; c2 < l2; c2 += 1)
                    if (o4 = n3.parseByte(), u2.push(o4), 0 < (8 & o4))
                      for (var d2 = n3.parseByte(), f2 = 0; f2 < d2; f2 += 1)
                        u2.push(o4), c2 += 1;
                  if (L.argument(u2.length === l2, "Bad flags."), 0 < s4.length) {
                    var h2, p2 = [];
                    if (0 < l2) {
                      for (var m2 = 0; m2 < l2; m2 += 1)
                        o4 = u2[m2], (h2 = {}).onCurve = !!(1 & o4), h2.lastPointOfContour = 0 <= s4.indexOf(m2), p2.push(h2);
                      for (var y2 = 0, g2 = 0; g2 < l2; g2 += 1)
                        o4 = u2[g2], (h2 = p2[g2]).x = At(n3, o4, y2, 2, 16), y2 = h2.x;
                      for (var v2 = 0, b2 = 0; b2 < l2; b2 += 1)
                        o4 = u2[b2], (h2 = p2[b2]).y = At(n3, o4, v2, 4, 32), v2 = h2.y;
                    }
                    e5.points = p2;
                  } else
                    e5.points = [];
                } else if (0 === e5.numberOfContours)
                  e5.points = [];
                else {
                  e5.isComposite = true, e5.points = [], e5.components = [];
                  for (var j2 = true; j2; ) {
                    u2 = n3.parseUShort();
                    var _2 = { glyphIndex: n3.parseUShort(), xScale: 1, scale01: 0, scale10: 0, yScale: 1, dx: 0, dy: 0 };
                    0 < (1 & u2) ? 0 < (2 & u2) ? (_2.dx = n3.parseShort(), _2.dy = n3.parseShort()) : _2.matchedPoints = [n3.parseUShort(), n3.parseUShort()] : 0 < (2 & u2) ? (_2.dx = n3.parseChar(), _2.dy = n3.parseChar()) : _2.matchedPoints = [n3.parseByte(), n3.parseByte()], 0 < (8 & u2) ? _2.xScale = _2.yScale = n3.parseF2Dot14() : 0 < (64 & u2) ? (_2.xScale = n3.parseF2Dot14(), _2.yScale = n3.parseF2Dot14()) : 0 < (128 & u2) && (_2.xScale = n3.parseF2Dot14(), _2.scale01 = n3.parseF2Dot14(), _2.scale10 = n3.parseF2Dot14(), _2.yScale = n3.parseF2Dot14()), e5.components.push(_2), j2 = !!(32 & u2);
                  }
                  if (256 & u2) {
                    e5.instructionLength = n3.parseUShort(), e5.instructions = [];
                    for (var x2 = 0; x2 < e5.instructionLength; x2 += 1)
                      e5.instructions.push(n3.parseByte());
                  }
                }
              }
              function Lt(e5, t5) {
                for (var r5 = [], o4 = 0; o4 < e5.length; o4 += 1) {
                  var n3 = e5[o4], n3 = { x: t5.xScale * n3.x + t5.scale01 * n3.y + t5.dx, y: t5.scale10 * n3.x + t5.yScale * n3.y + t5.dy, onCurve: n3.onCurve, lastPointOfContour: n3.lastPointOfContour };
                  r5.push(n3);
                }
                return r5;
              }
              function Rt(e5) {
                var t5 = new f();
                if (e5)
                  for (var r5 = function(e6) {
                    for (var t6 = [], r6 = [], o5 = 0; o5 < e6.length; o5 += 1) {
                      var n4 = e6[o5];
                      r6.push(n4), n4.lastPointOfContour && (t6.push(r6), r6 = []);
                    }
                    return L.argument(0 === r6.length, "There are still points left in the current contour."), t6;
                  }(e5), o4 = 0; o4 < r5.length; ++o4) {
                    var n3, s4 = r5[o4], i3 = s4[s4.length - 1], a2 = s4[0];
                    i3.onCurve ? t5.moveTo(i3.x, i3.y) : a2.onCurve ? t5.moveTo(a2.x, a2.y) : (n3 = { x: 0.5 * (i3.x + a2.x), y: 0.5 * (i3.y + a2.y) }, t5.moveTo(n3.x, n3.y));
                    for (var l2 = 0; l2 < s4.length; ++l2) {
                      var u2, c2 = i3, i3 = a2, a2 = s4[(l2 + 1) % s4.length];
                      i3.onCurve ? t5.lineTo(i3.x, i3.y) : (u2 = a2, c2.onCurve || (i3.x, c2.x, i3.y, c2.y), a2.onCurve || (u2 = { x: 0.5 * (i3.x + a2.x), y: 0.5 * (i3.y + a2.y) }), t5.quadraticCurveTo(i3.x, i3.y, u2.x, u2.y));
                    }
                    t5.closePath();
                  }
                return t5;
              }
              function It(e5, t5) {
                if (t5.isComposite)
                  for (var r5 = 0; r5 < t5.components.length; r5 += 1) {
                    var o4 = t5.components[r5], n3 = e5.get(o4.glyphIndex);
                    if (n3.getPath(), n3.points) {
                      var s4 = void 0;
                      if (void 0 === o4.matchedPoints)
                        s4 = Lt(n3.points, o4);
                      else {
                        if (o4.matchedPoints[0] > t5.points.length - 1 || o4.matchedPoints[1] > n3.points.length - 1)
                          throw Error("Matched points out of range in " + t5.name);
                        var i3 = t5.points[o4.matchedPoints[0]], a2 = n3.points[o4.matchedPoints[1]], o4 = { xScale: o4.xScale, scale01: o4.scale01, scale10: o4.scale10, yScale: o4.yScale, dx: 0, dy: 0 }, a2 = Lt([a2], o4)[0];
                        o4.dx = i3.x - a2.x, o4.dy = i3.y - a2.y, s4 = Lt(n3.points, o4);
                      }
                      t5.points = t5.points.concat(s4);
                    }
                  }
                return Rt(t5.points);
              }
              (kt.prototype = Tt.prototype = { searchTag: St, binSearch: Et, getTable: function(e5) {
                var t5 = this.font.tables[this.tableName];
                return t5 = !t5 && e5 ? this.font.tables[this.tableName] = this.createDefaultTable() : t5;
              }, getScriptNames: function() {
                var e5 = this.getTable();
                return e5 ? e5.scripts.map(function(e6) {
                  return e6.tag;
                }) : [];
              }, getDefaultScriptName: function() {
                var e5 = this.getTable();
                if (e5) {
                  for (var t5 = false, r5 = 0; r5 < e5.scripts.length; r5++) {
                    var o4 = e5.scripts[r5].tag;
                    if ("DFLT" === o4)
                      return o4;
                    "latn" === o4 && (t5 = true);
                  }
                  return t5 ? "latn" : void 0;
                }
              }, getScriptTable: function(e5, t5) {
                var r5, o4 = this.getTable(t5);
                if (o4)
                  return r5 = o4.scripts, 0 <= (o4 = St(o4.scripts, e5 = e5 || "DFLT")) ? r5[o4].script : t5 ? (r5.splice(-1 - o4, 0, t5 = { tag: e5, script: { defaultLangSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] }, langSysRecords: [] } }), t5.script) : void 0;
              }, getLangSysTable: function(e5, t5, r5) {
                var o4, e5 = this.getScriptTable(e5, r5);
                if (e5)
                  return t5 && "dflt" !== t5 && "DFLT" !== t5 ? 0 <= (o4 = St(e5.langSysRecords, t5)) ? e5.langSysRecords[o4].langSys : r5 ? (e5.langSysRecords.splice(-1 - o4, 0, r5 = { tag: t5, langSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] } }), r5.langSys) : void 0 : e5.defaultLangSys;
              }, getFeatureTable: function(e5, t5, r5, o4) {
                e5 = this.getLangSysTable(e5, t5, o4);
                if (e5) {
                  for (var n3, s4 = e5.featureIndexes, i3 = this.font.tables[this.tableName].features, a2 = 0; a2 < s4.length; a2++)
                    if ((n3 = i3[s4[a2]]).tag === r5)
                      return n3.feature;
                  if (o4)
                    return t5 = i3.length, L.assert(0 === t5 || r5 >= i3[t5 - 1].tag, "Features must be added in alphabetical order."), i3.push(n3 = { tag: r5, feature: { params: 0, lookupListIndexes: [] } }), s4.push(t5), n3.feature;
                }
              }, getLookupTables: function(e5, t5, r5, o4, n3) {
                var e5 = this.getFeatureTable(e5, t5, r5, n3), s4 = [];
                if (e5) {
                  for (var i3, a2 = e5.lookupListIndexes, l2 = this.font.tables[this.tableName].lookups, u2 = 0; u2 < a2.length; u2++)
                    (i3 = l2[a2[u2]]).lookupType === o4 && s4.push(i3);
                  if (0 === s4.length && n3)
                    return t5 = l2.length, l2.push(i3 = { lookupType: o4, lookupFlag: 0, subtables: [], markFilteringSet: void 0 }), a2.push(t5), [i3];
                }
                return s4;
              }, getGlyphClass: function(e5, t5) {
                switch (e5.format) {
                  case 1:
                    return e5.startGlyph <= t5 && t5 < e5.startGlyph + e5.classes.length ? e5.classes[t5 - e5.startGlyph] : 0;
                  case 2:
                    var r5 = Mt(e5.ranges, t5);
                    return r5 ? r5.classId : 0;
                }
              }, getCoverageIndex: function(e5, t5) {
                switch (e5.format) {
                  case 1:
                    var r5 = Et(e5.glyphs, t5);
                    return 0 <= r5 ? r5 : -1;
                  case 2:
                    r5 = Mt(e5.ranges, t5);
                    return r5 ? r5.index + t5 - r5.start : -1;
                }
              }, expandCoverage: function(e5) {
                if (1 === e5.format)
                  return e5.glyphs;
                for (var t5 = [], r5 = e5.ranges, o4 = 0; o4 < r5.length; o4++)
                  for (var n3 = r5[o4], s4 = n3.start, i3 = n3.end, a2 = s4; a2 <= i3; a2++)
                    t5.push(a2);
                return t5;
              } }).init = function() {
                var e5 = this.getDefaultScriptName();
                this.defaultKerningTables = this.getKerningTables(e5);
              }, kt.prototype.getKerningValue = function(e5, t5, r5) {
                for (var o4 = 0; o4 < e5.length; o4++)
                  for (var n3 = e5[o4].subtables, s4 = 0; s4 < n3.length; s4++) {
                    var i3 = n3[s4], a2 = this.getCoverageIndex(i3.coverage, t5);
                    if (!(a2 < 0))
                      switch (i3.posFormat) {
                        case 1:
                          for (var l2 = i3.pairSets[a2], u2 = 0; u2 < l2.length; u2++) {
                            var c2 = l2[u2];
                            if (c2.secondGlyph === r5)
                              return c2.value1 && c2.value1.xAdvance || 0;
                          }
                          break;
                        case 2:
                          var d2 = this.getGlyphClass(i3.classDef1, t5), f2 = this.getGlyphClass(i3.classDef2, r5), d2 = i3.classRecords[d2][f2];
                          return d2.value1 && d2.value1.xAdvance || 0;
                      }
                  }
                return 0;
              }, kt.prototype.getKerningTables = function(e5, t5) {
                if (this.font.tables.gpos)
                  return this.getLookupTables(e5, t5, "kern", 2);
              }, (i2.prototype = Tt.prototype).createDefaultTable = function() {
                return { version: 1, scripts: [{ tag: "DFLT", script: { defaultLangSys: { reserved: 0, reqFeatureIndex: 65535, featureIndexes: [] }, langSysRecords: [] } }], features: [], lookups: [] };
              }, i2.prototype.getSingle = function(e5, t5, r5) {
                for (var o4 = [], n3 = this.getLookupTables(t5, r5, e5, 1), s4 = 0; s4 < n3.length; s4++)
                  for (var i3 = n3[s4].subtables, a2 = 0; a2 < i3.length; a2++) {
                    var l2 = i3[a2], u2 = this.expandCoverage(l2.coverage), c2 = void 0;
                    if (1 === l2.substFormat)
                      for (var d2 = l2.deltaGlyphId, c2 = 0; c2 < u2.length; c2++) {
                        var f2 = u2[c2];
                        o4.push({ sub: f2, by: f2 + d2 });
                      }
                    else {
                      var h2 = l2.substitute;
                      for (c2 = 0; c2 < u2.length; c2++)
                        o4.push({ sub: u2[c2], by: h2[c2] });
                    }
                  }
                return o4;
              }, i2.prototype.getAlternates = function(e5, t5, r5) {
                for (var o4 = [], n3 = this.getLookupTables(t5, r5, e5, 3), s4 = 0; s4 < n3.length; s4++)
                  for (var i3 = n3[s4].subtables, a2 = 0; a2 < i3.length; a2++)
                    for (var l2 = i3[a2], u2 = this.expandCoverage(l2.coverage), c2 = l2.alternateSets, d2 = 0; d2 < u2.length; d2++)
                      o4.push({ sub: u2[d2], by: c2[d2] });
                return o4;
              }, i2.prototype.getLigatures = function(e5, t5, r5) {
                for (var o4 = [], n3 = this.getLookupTables(t5, r5, e5, 4), s4 = 0; s4 < n3.length; s4++)
                  for (var i3 = n3[s4].subtables, a2 = 0; a2 < i3.length; a2++)
                    for (var l2 = i3[a2], u2 = this.expandCoverage(l2.coverage), c2 = l2.ligatureSets, d2 = 0; d2 < u2.length; d2++)
                      for (var f2 = u2[d2], h2 = c2[d2], p2 = 0; p2 < h2.length; p2++) {
                        var m2 = h2[p2];
                        o4.push({ sub: [f2].concat(m2.components), by: m2.ligGlyph });
                      }
                return o4;
              }, i2.prototype.addSingle = function(e5, t5, r5, o4) {
                r5 = Ot(this.getLookupTables(r5, o4, e5, 1, true)[0], 2, { substFormat: 2, coverage: { format: 1, glyphs: [] }, substitute: [] }), L.assert(1 === r5.coverage.format, "Ligature: unable to modify coverage table format " + r5.coverage.format), o4 = t5.sub, e5 = this.binSearch(r5.coverage.glyphs, o4);
                e5 < 0 && (r5.coverage.glyphs.splice(e5 = -1 - e5, 0, o4), r5.substitute.splice(e5, 0, 0)), r5.substitute[e5] = t5.by;
              }, i2.prototype.addAlternate = function(e5, t5, r5, o4) {
                r5 = Ot(this.getLookupTables(r5, o4, e5, 3, true)[0], 1, { substFormat: 1, coverage: { format: 1, glyphs: [] }, alternateSets: [] }), L.assert(1 === r5.coverage.format, "Ligature: unable to modify coverage table format " + r5.coverage.format), o4 = t5.sub, e5 = this.binSearch(r5.coverage.glyphs, o4);
                e5 < 0 && (r5.coverage.glyphs.splice(e5 = -1 - e5, 0, o4), r5.alternateSets.splice(e5, 0, 0)), r5.alternateSets[e5] = t5.by;
              }, i2.prototype.addLigature = function(e5, t5, r5, o4) {
                var r5 = this.getLookupTables(r5, o4, e5, 4, true)[0], o4 = r5.subtables[0], e5 = (o4 || (r5.subtables[0] = o4 = { substFormat: 1, coverage: { format: 1, glyphs: [] }, ligatureSets: [] }), L.assert(1 === o4.coverage.format, "Ligature: unable to modify coverage table format " + o4.coverage.format), t5.sub[0]), n3 = t5.sub.slice(1), r5 = { ligGlyph: t5.by, components: n3 }, t5 = this.binSearch(o4.coverage.glyphs, e5);
                if (0 <= t5) {
                  for (var s4 = o4.ligatureSets[t5], i3 = 0; i3 < s4.length; i3++)
                    if (function(e6, t6) {
                      var r6 = e6.length;
                      if (r6 === t6.length) {
                        for (var o5 = 0; o5 < r6; o5++)
                          if (e6[o5] !== t6[o5])
                            return;
                        return 1;
                      }
                    }(s4[i3].components, n3))
                      return;
                  s4.push(r5);
                } else
                  o4.coverage.glyphs.splice(t5 = -1 - t5, 0, e5), o4.ligatureSets.splice(t5, 0, [r5]);
              }, i2.prototype.getFeature = function(e5, t5, r5) {
                if (/ss\d\d/.test(e5))
                  return this.getSingle(e5, t5, r5);
                switch (e5) {
                  case "aalt":
                  case "salt":
                    return this.getSingle(e5, t5, r5).concat(this.getAlternates(e5, t5, r5));
                  case "dlig":
                  case "liga":
                  case "rlig":
                    return this.getLigatures(e5, t5, r5);
                }
              }, i2.prototype.add = function(e5, t5, r5, o4) {
                if (/ss\d\d/.test(e5))
                  return this.addSingle(e5, t5, r5, o4);
                switch (e5) {
                  case "aalt":
                  case "salt":
                    return "number" == typeof t5.by ? this.addSingle(e5, t5, r5, o4) : this.addAlternate(e5, t5, r5, o4);
                  case "dlig":
                  case "liga":
                  case "rlig":
                    return this.addLigature(e5, t5, r5, o4);
                }
              };
              var Dt = { getPath: Rt, parse: function(e5, t5, r5, o4) {
                for (var n3 = new p.GlyphSet(o4), s4 = 0; s4 < r5.length - 1; s4 += 1) {
                  var i3 = r5[s4];
                  i3 !== r5[s4 + 1] ? n3.push(s4, p.ttfGlyphLoader(o4, s4, Pt, e5, t5 + i3, It)) : n3.push(s4, p.glyphLoader(o4, s4));
                }
                return n3;
              } };
              function Ft(e5) {
                this.font = e5, this.getCommands = function(e6) {
                  return Dt.getPath(e6).commands;
                }, this._fpgmState = this._prepState = void 0, this._errorState = 0;
              }
              function Ut(e5) {
                return e5;
              }
              function Nt(e5) {
                return Math.sign(e5) * Math.round(Math.abs(e5));
              }
              function Bt(e5) {
                return Math.sign(e5) * Math.round(Math.abs(2 * e5)) / 2;
              }
              function Gt(e5) {
                return Math.sign(e5) * (Math.round(Math.abs(e5) + 0.5) - 0.5);
              }
              function Vt(e5) {
                return Math.sign(e5) * Math.ceil(Math.abs(e5));
              }
              function zt(e5) {
                return Math.sign(e5) * Math.floor(Math.abs(e5));
              }
              function Ht(e5) {
                var t5 = this.srPeriod, r5 = this.srPhase, o4 = 1;
                return e5 < 0 && (e5 = -e5, o4 = -1), e5 += this.srThreshold - r5, e5 = Math.trunc(e5 / t5) * t5, (e5 += r5) < 0 ? r5 * o4 : e5 * o4;
              }
              var x = { x: 1, y: 0, axis: "x", distance: function(e5, t5, r5, o4) {
                return (r5 ? e5.xo : e5.x) - (o4 ? t5.xo : t5.x);
              }, interpolate: function(e5, t5, r5, o4) {
                var n3, s4, i3, a2, l2, u2, c2;
                if (!o4 || o4 === this)
                  return n3 = e5.xo - t5.xo, s4 = e5.xo - r5.xo, l2 = t5.x - t5.xo, u2 = r5.x - r5.xo, 0 === (c2 = (i3 = Math.abs(n3)) + (a2 = Math.abs(s4))) ? void (e5.x = e5.xo + (l2 + u2) / 2) : void (e5.x = e5.xo + (l2 * a2 + u2 * i3) / c2);
                n3 = o4.distance(e5, t5, true, true), s4 = o4.distance(e5, r5, true, true), l2 = o4.distance(t5, t5, false, true), u2 = o4.distance(r5, r5, false, true), 0 === (c2 = (i3 = Math.abs(n3)) + (a2 = Math.abs(s4))) ? x.setRelative(e5, e5, (l2 + u2) / 2, o4, true) : x.setRelative(e5, e5, (l2 * a2 + u2 * i3) / c2, o4, true);
              }, normalSlope: Number.NEGATIVE_INFINITY, setRelative: function(e5, t5, r5, o4, n3) {
                var s4, i3;
                o4 && o4 !== this ? (s4 = n3 ? t5.xo : t5.x, i3 = n3 ? t5.yo : t5.y, s4 += r5 * o4.x, i3 += r5 * o4.y, e5.x = s4 + (e5.y - i3) / o4.normalSlope) : e5.x = (n3 ? t5.xo : t5.x) + r5;
              }, slope: 0, touch: function(e5) {
                e5.xTouched = true;
              }, touched: function(e5) {
                return e5.xTouched;
              }, untouch: function(e5) {
                e5.xTouched = false;
              } }, E = { x: 0, y: 1, axis: "y", distance: function(e5, t5, r5, o4) {
                return (r5 ? e5.yo : e5.y) - (o4 ? t5.yo : t5.y);
              }, interpolate: function(e5, t5, r5, o4) {
                var n3, s4, i3, a2, l2, u2, c2;
                if (!o4 || o4 === this)
                  return n3 = e5.yo - t5.yo, s4 = e5.yo - r5.yo, l2 = t5.y - t5.yo, u2 = r5.y - r5.yo, 0 === (c2 = (i3 = Math.abs(n3)) + (a2 = Math.abs(s4))) ? void (e5.y = e5.yo + (l2 + u2) / 2) : void (e5.y = e5.yo + (l2 * a2 + u2 * i3) / c2);
                n3 = o4.distance(e5, t5, true, true), s4 = o4.distance(e5, r5, true, true), l2 = o4.distance(t5, t5, false, true), u2 = o4.distance(r5, r5, false, true), 0 === (c2 = (i3 = Math.abs(n3)) + (a2 = Math.abs(s4))) ? E.setRelative(e5, e5, (l2 + u2) / 2, o4, true) : E.setRelative(e5, e5, (l2 * a2 + u2 * i3) / c2, o4, true);
              }, normalSlope: 0, setRelative: function(e5, t5, r5, o4, n3) {
                var s4, i3;
                o4 && o4 !== this ? (s4 = n3 ? t5.xo : t5.x, i3 = n3 ? t5.yo : t5.y, s4 += r5 * o4.x, i3 += r5 * o4.y, e5.y = i3 + o4.normalSlope * (e5.x - s4)) : e5.y = (n3 ? t5.yo : t5.y) + r5;
              }, slope: Number.POSITIVE_INFINITY, touch: function(e5) {
                e5.yTouched = true;
              }, touched: function(e5) {
                return e5.yTouched;
              }, untouch: function(e5) {
                e5.yTouched = false;
              } };
              function Wt(e5, t5) {
                this.x = e5, this.y = t5, this.axis = void 0, this.slope = t5 / e5, this.normalSlope = -e5 / t5, Object.freeze(this);
              }
              function qt(e5, t5) {
                var r5 = Math.sqrt(e5 * e5 + t5 * t5);
                return t5 /= r5, 1 === (e5 /= r5) && 0 === t5 ? x : 0 === e5 && 1 === t5 ? E : new Wt(e5, t5);
              }
              function M(e5, t5, r5, o4) {
                this.x = this.xo = Math.round(64 * e5) / 64, this.y = this.yo = Math.round(64 * t5) / 64, this.lastPointOfContour = r5, this.onCurve = o4, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = false, this.yTouched = false, Object.preventExtensions(this);
              }
              Object.freeze(x), Object.freeze(E), Wt.prototype.distance = function(e5, t5, r5, o4) {
                return this.x * x.distance(e5, t5, r5, o4) + this.y * E.distance(e5, t5, r5, o4);
              }, Wt.prototype.interpolate = function(e5, t5, r5, o4) {
                var n3 = o4.distance(e5, t5, true, true), s4 = o4.distance(e5, r5, true, true), t5 = o4.distance(t5, t5, false, true), r5 = o4.distance(r5, r5, false, true), n3 = Math.abs(n3), s4 = Math.abs(s4), i3 = n3 + s4;
                0 === i3 ? this.setRelative(e5, e5, (t5 + r5) / 2, o4, true) : this.setRelative(e5, e5, (t5 * s4 + r5 * n3) / i3, o4, true);
              }, Wt.prototype.setRelative = function(e5, t5, r5, o4, n3) {
                var s4 = n3 ? t5.xo : t5.x, n3 = n3 ? t5.yo : t5.y, t5 = s4 + r5 * (o4 = o4 || this).x, s4 = n3 + r5 * o4.y, n3 = o4.normalSlope, r5 = this.slope, o4 = e5.x, i3 = e5.y;
                e5.x = (r5 * o4 - n3 * t5 + s4 - i3) / (r5 - n3), e5.y = r5 * (e5.x - o4) + i3;
              }, Wt.prototype.touch = function(e5) {
                e5.xTouched = true, e5.yTouched = true;
              }, M.prototype.nextTouched = function(e5) {
                for (var t5 = this.nextPointOnContour; !e5.touched(t5) && t5 !== this; )
                  t5 = t5.nextPointOnContour;
                return t5;
              }, M.prototype.prevTouched = function(e5) {
                for (var t5 = this.prevPointOnContour; !e5.touched(t5) && t5 !== this; )
                  t5 = t5.prevPointOnContour;
                return t5;
              };
              var Xt = Object.freeze(new M(0, 0)), Yt = { cvCutIn: 17 / 16, deltaBase: 9, deltaShift: 0.125, loop: 1, minDis: 1, autoFlip: true };
              function T(e5, t5) {
                switch (this.env = e5, this.stack = [], this.prog = t5, e5) {
                  case "glyf":
                    this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;
                  case "prep":
                    this.fv = this.pv = this.dpv = x, this.round = Nt;
                }
              }
              function Zt(e5) {
                for (var t5 = e5.tZone = new Array(e5.gZone.length), r5 = 0; r5 < t5.length; r5++)
                  t5[r5] = new M(0, 0);
              }
              function Qt(e5, t5) {
                var r5, o4 = e5.prog, n3 = e5.ip, s4 = 1;
                do {
                  if (88 === (r5 = o4[++n3]))
                    s4++;
                  else if (89 === r5)
                    s4--;
                  else if (64 === r5)
                    n3 += o4[n3 + 1] + 1;
                  else if (65 === r5)
                    n3 += 2 * o4[n3 + 1] + 1;
                  else if (176 <= r5 && r5 <= 183)
                    n3 += r5 - 176 + 1;
                  else if (184 <= r5 && r5 <= 191)
                    n3 += 2 * (r5 - 184 + 1);
                  else if (t5 && 1 === s4 && 27 === r5)
                    break;
                } while (0 < s4);
                e5.ip = n3;
              }
              function Jt(e5, t5) {
                j.DEBUG && console.log(t5.step, "SVTCA[" + e5.axis + "]"), t5.fv = t5.pv = t5.dpv = e5;
              }
              function Kt(e5, t5) {
                j.DEBUG && console.log(t5.step, "SPVTCA[" + e5.axis + "]"), t5.pv = t5.dpv = e5;
              }
              function $t(e5, t5) {
                j.DEBUG && console.log(t5.step, "SFVTCA[" + e5.axis + "]"), t5.fv = e5;
              }
              function er(e5, t5) {
                var r5, o4 = t5.stack, n3 = o4.pop(), o4 = o4.pop(), s4 = t5.z2[n3], i3 = t5.z1[o4];
                j.DEBUG && console.log("SPVTL[" + e5 + "]", n3, o4), n3 = e5 ? (r5 = s4.y - i3.y, i3.x - s4.x) : (r5 = i3.x - s4.x, i3.y - s4.y), t5.pv = t5.dpv = qt(r5, n3);
              }
              function tr(e5, t5) {
                var r5, o4 = t5.stack, n3 = o4.pop(), o4 = o4.pop(), s4 = t5.z2[n3], i3 = t5.z1[o4];
                j.DEBUG && console.log("SFVTL[" + e5 + "]", n3, o4), n3 = e5 ? (r5 = s4.y - i3.y, i3.x - s4.x) : (r5 = i3.x - s4.x, i3.y - s4.y), t5.fv = qt(r5, n3);
              }
              function rr(e5) {
                j.DEBUG && console.log(e5.step, "POP[]"), e5.stack.pop();
              }
              function or(e5, t5) {
                var r5 = t5.stack.pop(), o4 = t5.z0[r5], n3 = t5.fv, s4 = t5.pv, i3 = (j.DEBUG && console.log(t5.step, "MDAP[" + e5 + "]", r5), s4.distance(o4, Xt));
                e5 && (i3 = t5.round(i3)), n3.setRelative(o4, Xt, i3, s4), n3.touch(o4), t5.rp0 = t5.rp1 = r5;
              }
              function nr(e5, t5) {
                var r5, o4, n3, s4 = t5.z2, i3 = s4.length - 2;
                j.DEBUG && console.log(t5.step, "IUP[" + e5.axis + "]");
                for (var a2 = 0; a2 < i3; a2++)
                  r5 = s4[a2], e5.touched(r5) || (o4 = r5.prevTouched(e5)) !== r5 && (o4 === (n3 = r5.nextTouched(e5)) && e5.setRelative(r5, r5, e5.distance(o4, o4, false, true), e5, true), e5.interpolate(r5, o4, n3, e5));
              }
              function sr(e5, t5) {
                for (var r5 = t5.stack, o4 = e5 ? t5.rp1 : t5.rp2, n3 = (e5 ? t5.z0 : t5.z1)[o4], s4 = t5.fv, i3 = t5.pv, a2 = t5.loop, l2 = t5.z2; a2--; ) {
                  var u2 = r5.pop(), c2 = l2[u2], d2 = i3.distance(n3, n3, false, true);
                  s4.setRelative(c2, c2, d2, i3), s4.touch(c2), j.DEBUG && console.log(t5.step, (1 < t5.loop ? "loop " + (t5.loop - a2) + ": " : "") + "SHP[" + (e5 ? "rp1" : "rp2") + "]", u2);
                }
                t5.loop = 1;
              }
              function ir(e5, t5) {
                for (var r5 = t5.stack, o4 = e5 ? t5.rp1 : t5.rp2, n3 = (e5 ? t5.z0 : t5.z1)[o4], s4 = t5.fv, i3 = t5.pv, o4 = r5.pop(), a2 = t5.z2[t5.contours[o4]], l2 = a2, u2 = (j.DEBUG && console.log(t5.step, "SHC[" + e5 + "]", o4), i3.distance(n3, n3, false, true)); l2 !== n3 && s4.setRelative(l2, l2, u2, i3), (l2 = l2.nextPointOnContour) !== a2; )
                  ;
              }
              function ar(e5, t5) {
                var r5, o4, n3 = t5.stack, s4 = e5 ? t5.rp1 : t5.rp2, s4 = (e5 ? t5.z0 : t5.z1)[s4], i3 = t5.fv, a2 = t5.pv, n3 = n3.pop();
                switch (j.DEBUG && console.log(t5.step, "SHZ[" + e5 + "]", n3), n3) {
                  case 0:
                    r5 = t5.tZone;
                    break;
                  case 1:
                    r5 = t5.gZone;
                    break;
                  default:
                    throw new Error("Invalid zone");
                }
                for (var l2 = a2.distance(s4, s4, false, true), u2 = r5.length - 2, c2 = 0; c2 < u2; c2++)
                  o4 = r5[c2], i3.setRelative(o4, o4, l2, a2);
              }
              function lr(e5, t5) {
                var r5 = t5.stack, o4 = r5.pop() / 64, r5 = r5.pop(), n3 = t5.z1[r5], s4 = t5.z0[t5.rp0], i3 = t5.fv, a2 = t5.pv;
                i3.setRelative(n3, s4, o4, a2), i3.touch(n3), j.DEBUG && console.log(t5.step, "MSIRP[" + e5 + "]", o4, r5), t5.rp1 = t5.rp0, t5.rp2 = r5, e5 && (t5.rp0 = r5);
              }
              function ur(e5, t5) {
                var r5 = t5.stack, o4 = r5.pop(), r5 = r5.pop(), n3 = t5.z0[r5], s4 = t5.fv, i3 = t5.pv, a2 = t5.cvt[o4], o4 = (j.DEBUG && console.log(t5.step, "MIAP[" + e5 + "]", o4, "(", a2, ")", r5), i3.distance(n3, Xt));
                e5 && (Math.abs(o4 - a2) < t5.cvCutIn && (o4 = a2), o4 = t5.round(o4)), s4.setRelative(n3, Xt, o4, i3), 0 === t5.zp0 && (n3.xo = n3.x, n3.yo = n3.y), s4.touch(n3), t5.rp0 = t5.rp1 = r5;
              }
              function cr(e5, t5) {
                var r5 = t5.stack, o4 = r5.pop(), n3 = t5.z2[o4];
                j.DEBUG && console.log(t5.step, "GC[" + e5 + "]", o4), r5.push(64 * t5.dpv.distance(n3, Xt, e5, false));
              }
              function dr(e5, t5) {
                var r5 = t5.stack, o4 = r5.pop(), r5 = r5.pop(), n3 = t5.z1[o4], s4 = t5.z0[r5], s4 = t5.dpv.distance(s4, n3, e5, e5);
                j.DEBUG && console.log(t5.step, "MD[" + e5 + "]", o4, r5, "->", s4), t5.stack.push(Math.round(64 * s4));
              }
              function fr(e5, t5) {
                var r5 = t5.stack, o4 = r5.pop(), n3 = t5.fv, s4 = t5.pv, i3 = t5.ppem, a2 = t5.deltaBase + 16 * (e5 - 1), l2 = t5.deltaShift, u2 = t5.z0;
                j.DEBUG && console.log(t5.step, "DELTAP[" + e5 + "]", o4, r5);
                for (var c2 = 0; c2 < o4; c2++) {
                  var d2 = r5.pop(), f2 = r5.pop();
                  a2 + ((240 & f2) >> 4) === i3 && (0 <= (f2 = (15 & f2) - 8) && f2++, j.DEBUG && console.log(t5.step, "DELTAPFIX", d2, "by", f2 * l2), d2 = u2[d2], n3.setRelative(d2, d2, f2 * l2, s4));
                }
              }
              function hr(e5, t5) {
                var r5 = t5.stack, o4 = r5.pop();
                j.DEBUG && console.log(t5.step, "ROUND[]"), r5.push(64 * t5.round(o4 / 64));
              }
              function pr(e5, t5) {
                var r5 = t5.stack, o4 = r5.pop(), n3 = t5.ppem, s4 = t5.deltaBase + 16 * (e5 - 1), i3 = t5.deltaShift;
                j.DEBUG && console.log(t5.step, "DELTAC[" + e5 + "]", o4, r5);
                for (var a2 = 0; a2 < o4; a2++) {
                  var l2 = r5.pop(), u2 = r5.pop();
                  s4 + ((240 & u2) >> 4) === n3 && (0 <= (u2 = (15 & u2) - 8) && u2++, u2 = u2 * i3, j.DEBUG && console.log(t5.step, "DELTACFIX", l2, "by", u2), t5.cvt[l2] += u2);
                }
              }
              function mr(e5, t5) {
                var r5, o4 = t5.stack, n3 = o4.pop(), o4 = o4.pop(), s4 = t5.z2[n3], i3 = t5.z1[o4];
                j.DEBUG && console.log(t5.step, "SDPVTL[" + e5 + "]", n3, o4), n3 = e5 ? (r5 = s4.y - i3.y, i3.x - s4.x) : (r5 = i3.x - s4.x, i3.y - s4.y), t5.dpv = qt(r5, n3);
              }
              function k(e5, t5) {
                var r5 = t5.stack, o4 = t5.prog, n3 = t5.ip;
                j.DEBUG && console.log(t5.step, "PUSHB[" + e5 + "]");
                for (var s4 = 0; s4 < e5; s4++)
                  r5.push(o4[++n3]);
                t5.ip = n3;
              }
              function O(e5, t5) {
                var r5 = t5.ip, o4 = t5.prog, n3 = t5.stack;
                j.DEBUG && console.log(t5.ip, "PUSHW[" + e5 + "]");
                for (var s4 = 0; s4 < e5; s4++) {
                  var i3 = o4[++r5] << 8 | o4[++r5];
                  32768 & i3 && (i3 = -(1 + (65535 ^ i3))), n3.push(i3);
                }
                t5.ip = r5;
              }
              function C(e5, t5, r5, o4, n3, s4) {
                var i3, a2, l2 = s4.stack, u2 = e5 && l2.pop(), l2 = l2.pop(), c2 = s4.rp0, c2 = s4.z0[c2], d2 = s4.z1[l2], f2 = s4.minDis, h2 = s4.fv, p2 = s4.dpv, m2 = i3 = p2.distance(d2, c2, true, true), y2 = 0 <= m2 ? 1 : -1;
                m2 = Math.abs(m2), e5 && (a2 = s4.cvt[u2], o4 && Math.abs(m2 - a2) < s4.cvCutIn && (m2 = a2)), r5 && m2 < f2 && (m2 = f2), o4 && (m2 = s4.round(m2)), h2.setRelative(d2, c2, y2 * m2, p2), h2.touch(d2), j.DEBUG && console.log(s4.step, (e5 ? "MIRP[" : "MDRP[") + (t5 ? "M" : "m") + (r5 ? ">" : "_") + (o4 ? "R" : "_") + (0 === n3 ? "Gr" : 1 === n3 ? "Bl" : 2 === n3 ? "Wh" : "") + "]", e5 ? u2 + "(" + s4.cvt[u2] + "," + a2 + ")" : "", l2, "(d =", i3, "->", y2 * m2, ")"), s4.rp1 = s4.rp0, s4.rp2 = l2, t5 && (s4.rp0 = l2);
              }
              Ft.prototype.exec = function(e5, t5) {
                if ("number" != typeof t5)
                  throw new Error("Point size is not a number!");
                if (!(2 < this._errorState)) {
                  var r5 = this.font, o4 = this._prepState;
                  if (!o4 || o4.ppem !== t5) {
                    var n3 = this._fpgmState;
                    if (!n3) {
                      T.prototype = Yt, (n3 = this._fpgmState = new T("fpgm", r5.tables.fpgm)).funcs = [], n3.font = r5, j.DEBUG && (console.log("---EXEC FPGM---"), n3.step = -1);
                      try {
                        vr(n3);
                      } catch (e6) {
                        return console.log("Hinting error in FPGM:" + e6), void (this._errorState = 3);
                      }
                    }
                    T.prototype = n3, (o4 = this._prepState = new T("prep", r5.tables.prep)).ppem = t5;
                    var s4 = r5.tables.cvt;
                    if (s4)
                      for (var i3 = o4.cvt = new Array(s4.length), a2 = t5 / r5.unitsPerEm, l2 = 0; l2 < s4.length; l2++)
                        i3[l2] = s4[l2] * a2;
                    else
                      o4.cvt = [];
                    j.DEBUG && (console.log("---EXEC PREP---"), o4.step = -1);
                    try {
                      vr(o4);
                    } catch (e6) {
                      this._errorState < 2 && console.log("Hinting error in PREP:" + e6), this._errorState = 2;
                    }
                  }
                  if (!(1 < this._errorState))
                    try {
                      return yr(e5, o4);
                    } catch (e6) {
                      this._errorState < 1 && (console.log("Hinting error:" + e6), console.log("Note: further hinting errors are silenced")), this._errorState = 1;
                    }
                }
              };
              var yr = function(e5, t5) {
                var r5 = t5.ppem / t5.font.unitsPerEm, o4 = r5, n3 = e5.components;
                if (T.prototype = t5, n3) {
                  for (var s4 = t5.font, i3 = [], a2 = [], l2 = 0; l2 < n3.length; l2++) {
                    var u2 = n3[l2], c2 = s4.glyphs.get(u2.glyphIndex), d2 = new T("glyf", c2.instructions);
                    j.DEBUG && (console.log("---EXEC COMP " + l2 + "---"), d2.step = -1), gr(c2, d2, r5, o4);
                    for (var f2 = Math.round(u2.dx * r5), h2 = Math.round(u2.dy * o4), p2 = d2.gZone, m2 = d2.contours, y2 = 0; y2 < p2.length; y2++) {
                      var g2 = p2[y2];
                      g2.xTouched = g2.yTouched = false, g2.xo = g2.x = g2.x + f2, g2.yo = g2.y = g2.y + h2;
                    }
                    var v2 = i3.length;
                    i3.push.apply(i3, p2);
                    for (var b2 = 0; b2 < m2.length; b2++)
                      a2.push(m2[b2] + v2);
                  }
                  e5.instructions && !d2.inhibitGridFit && ((d2 = new T("glyf", e5.instructions)).gZone = d2.z0 = d2.z1 = d2.z2 = i3, d2.contours = a2, i3.push(new M(0, 0), new M(Math.round(e5.advanceWidth * r5), 0)), j.DEBUG && (console.log("---EXEC COMPOSITE---"), d2.step = -1), vr(d2), i3.length -= 2);
                } else
                  d2 = new T("glyf", e5.instructions), j.DEBUG && (console.log("---EXEC GLYPH---"), d2.step = -1), gr(e5, d2, r5, o4), i3 = d2.gZone;
                return i3;
              }, gr = function(e5, t5, r5, o4) {
                for (var n3, s4, i3, a2 = e5.points || [], l2 = a2.length, u2 = t5.gZone = t5.z0 = t5.z1 = t5.z2 = [], c2 = t5.contours = [], d2 = 0; d2 < l2; d2++)
                  n3 = a2[d2], u2[d2] = new M(n3.x * r5, n3.y * o4, n3.lastPointOfContour, n3.onCurve);
                for (var f2 = 0; f2 < l2; f2++)
                  n3 = u2[f2], s4 || (s4 = n3, c2.push(f2)), n3.lastPointOfContour ? ((n3.nextPointOnContour = s4).prevPointOnContour = n3, s4 = void 0) : (i3 = u2[f2 + 1], (n3.nextPointOnContour = i3).prevPointOnContour = n3);
                if (!t5.inhibitGridFit) {
                  if (j.DEBUG) {
                    console.log("PROCESSING GLYPH", t5.stack);
                    for (var h2 = 0; h2 < l2; h2++)
                      console.log(h2, u2[h2].x, u2[h2].y);
                  }
                  if (u2.push(new M(0, 0), new M(Math.round(e5.advanceWidth * r5), 0)), vr(t5), u2.length -= 2, j.DEBUG) {
                    console.log("FINISHED GLYPH", t5.stack);
                    for (var p2 = 0; p2 < l2; p2++)
                      console.log(p2, u2[p2].x, u2[p2].y);
                  }
                }
              }, vr = function(e5) {
                var t5 = e5.prog;
                if (t5) {
                  var r5, o4 = t5.length;
                  for (e5.ip = 0; e5.ip < o4; e5.ip++) {
                    if (j.DEBUG && e5.step++, !(r5 = br[t5[e5.ip]]))
                      throw new Error("unknown instruction: 0x" + Number(t5[e5.ip]).toString(16));
                    r5(e5);
                  }
                }
              }, br = [Jt.bind(void 0, E), Jt.bind(void 0, x), Kt.bind(void 0, E), Kt.bind(void 0, x), $t.bind(void 0, E), $t.bind(void 0, x), er.bind(void 0, 0), er.bind(void 0, 1), tr.bind(void 0, 0), tr.bind(void 0, 1), function(e5) {
                var t5 = (r5 = e5.stack).pop(), r5 = r5.pop();
                j.DEBUG && console.log(e5.step, "SPVFS[]", t5, r5), e5.pv = e5.dpv = qt(r5, t5);
              }, function(e5) {
                var t5 = (r5 = e5.stack).pop(), r5 = r5.pop();
                j.DEBUG && console.log(e5.step, "SPVFS[]", t5, r5), e5.fv = qt(r5, t5);
              }, function(e5) {
                var t5 = e5.stack, r5 = e5.pv;
                j.DEBUG && console.log(e5.step, "GPV[]"), t5.push(16384 * r5.x), t5.push(16384 * r5.y);
              }, function(e5) {
                var t5 = e5.stack, r5 = e5.fv;
                j.DEBUG && console.log(e5.step, "GFV[]"), t5.push(16384 * r5.x), t5.push(16384 * r5.y);
              }, function(e5) {
                e5.fv = e5.pv, j.DEBUG && console.log(e5.step, "SFVTPV[]");
              }, function(e5) {
                var t5 = (s4 = e5.stack).pop(), r5 = s4.pop(), o4 = s4.pop(), n3 = s4.pop(), s4 = s4.pop(), i3 = e5.z0, a2 = e5.z1, l2 = i3[t5], i3 = i3[r5], u2 = a2[o4], a2 = a2[n3], e5 = e5.z2[s4], t5 = (j.DEBUG && console.log("ISECT[], ", t5, r5, o4, n3, s4), l2.x), r5 = l2.y, o4 = i3.x, n3 = i3.y, s4 = u2.x, l2 = u2.y, i3 = a2.x, u2 = a2.y, a2 = (t5 - o4) * (l2 - u2) - (r5 - n3) * (s4 - i3), c2 = t5 * n3 - r5 * o4, d2 = s4 * u2 - l2 * i3;
                e5.x = (c2 * (s4 - i3) - d2 * (t5 - o4)) / a2, e5.y = (c2 * (l2 - u2) - d2 * (r5 - n3)) / a2;
              }, function(e5) {
                e5.rp0 = e5.stack.pop(), j.DEBUG && console.log(e5.step, "SRP0[]", e5.rp0);
              }, function(e5) {
                e5.rp1 = e5.stack.pop(), j.DEBUG && console.log(e5.step, "SRP1[]", e5.rp1);
              }, function(e5) {
                e5.rp2 = e5.stack.pop(), j.DEBUG && console.log(e5.step, "SRP2[]", e5.rp2);
              }, function(e5) {
                var t5 = e5.stack.pop();
                switch (j.DEBUG && console.log(e5.step, "SZP0[]", t5), e5.zp0 = t5) {
                  case 0:
                    e5.tZone || Zt(e5), e5.z0 = e5.tZone;
                    break;
                  case 1:
                    e5.z0 = e5.gZone;
                    break;
                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function(e5) {
                var t5 = e5.stack.pop();
                switch (j.DEBUG && console.log(e5.step, "SZP1[]", t5), e5.zp1 = t5) {
                  case 0:
                    e5.tZone || Zt(e5), e5.z1 = e5.tZone;
                    break;
                  case 1:
                    e5.z1 = e5.gZone;
                    break;
                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function(e5) {
                var t5 = e5.stack.pop();
                switch (j.DEBUG && console.log(e5.step, "SZP2[]", t5), e5.zp2 = t5) {
                  case 0:
                    e5.tZone || Zt(e5), e5.z2 = e5.tZone;
                    break;
                  case 1:
                    e5.z2 = e5.gZone;
                    break;
                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function(e5) {
                var t5 = e5.stack.pop();
                switch (j.DEBUG && console.log(e5.step, "SZPS[]", t5), e5.zp0 = e5.zp1 = e5.zp2 = t5) {
                  case 0:
                    e5.tZone || Zt(e5), e5.z0 = e5.z1 = e5.z2 = e5.tZone;
                    break;
                  case 1:
                    e5.z0 = e5.z1 = e5.z2 = e5.gZone;
                    break;
                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function(e5) {
                e5.loop = e5.stack.pop(), j.DEBUG && console.log(e5.step, "SLOOP[]", e5.loop);
              }, function(e5) {
                j.DEBUG && console.log(e5.step, "RTG[]"), e5.round = Nt;
              }, function(e5) {
                j.DEBUG && console.log(e5.step, "RTHG[]"), e5.round = Gt;
              }, function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "SMD[]", t5), e5.minDis = t5 / 64;
              }, function(e5) {
                j.DEBUG && console.log(e5.step, "ELSE[]"), Qt(e5, false);
              }, function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "JMPR[]", t5), e5.ip += t5 - 1;
              }, function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "SCVTCI[]", t5), e5.cvCutIn = t5 / 64;
              }, void 0, void 0, function(e5) {
                var t5 = e5.stack;
                j.DEBUG && console.log(e5.step, "DUP[]"), t5.push(t5[t5.length - 1]);
              }, rr, function(e5) {
                j.DEBUG && console.log(e5.step, "CLEAR[]"), e5.stack.length = 0;
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "SWAP[]"), t5.push(r5), t5.push(o4);
              }, function(e5) {
                var t5 = e5.stack;
                j.DEBUG && console.log(e5.step, "DEPTH[]"), t5.push(t5.length);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "CINDEX[]", r5), t5.push(t5[t5.length - r5]);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "MINDEX[]", r5), t5.push(t5.splice(t5.length - r5, 1)[0]);
              }, void 0, void 0, void 0, function(e5) {
                var t5 = (o4 = e5.stack).pop(), r5 = o4.pop(), o4 = (j.DEBUG && console.log(e5.step, "LOOPCALL[]", t5, r5), e5.ip), n3 = e5.prog;
                e5.prog = e5.funcs[t5];
                for (var s4 = 0; s4 < r5; s4++)
                  vr(e5), j.DEBUG && console.log(++e5.step, s4 + 1 < r5 ? "next loopcall" : "done loopcall", s4);
                e5.ip = o4, e5.prog = n3;
              }, function(e5) {
                var t5 = e5.stack.pop(), r5 = (j.DEBUG && console.log(e5.step, "CALL[]", t5), e5.ip), o4 = e5.prog;
                e5.prog = e5.funcs[t5], vr(e5), e5.ip = r5, e5.prog = o4, j.DEBUG && console.log(++e5.step, "returning from", t5);
              }, function(e5) {
                if ("fpgm" !== e5.env)
                  throw new Error("FDEF not allowed here");
                var t5 = e5.stack, r5 = e5.prog, o4 = e5.ip, t5 = t5.pop(), n3 = o4;
                for (j.DEBUG && console.log(e5.step, "FDEF[]", t5); 45 !== r5[++o4]; )
                  ;
                e5.ip = o4, e5.funcs[t5] = r5.slice(n3 + 1, o4);
              }, void 0, or.bind(void 0, 0), or.bind(void 0, 1), nr.bind(void 0, E), nr.bind(void 0, x), sr.bind(void 0, 0), sr.bind(void 0, 1), ir.bind(void 0, 0), ir.bind(void 0, 1), ar.bind(void 0, 0), ar.bind(void 0, 1), function(e5) {
                for (var t5 = e5.stack, r5 = e5.loop, o4 = e5.fv, n3 = t5.pop() / 64, s4 = e5.z2; r5--; ) {
                  var i3 = t5.pop(), a2 = s4[i3];
                  j.DEBUG && console.log(e5.step, (1 < e5.loop ? "loop " + (e5.loop - r5) + ": " : "") + "SHPIX[]", i3, n3), o4.setRelative(a2, a2, n3), o4.touch(a2);
                }
                e5.loop = 1;
              }, function(e5) {
                for (var t5 = e5.stack, r5 = e5.rp1, o4 = e5.rp2, n3 = e5.loop, s4 = e5.z0[r5], i3 = e5.z1[o4], a2 = e5.fv, l2 = e5.dpv, u2 = e5.z2; n3--; ) {
                  var c2 = t5.pop(), d2 = u2[c2];
                  j.DEBUG && console.log(e5.step, (1 < e5.loop ? "loop " + (e5.loop - n3) + ": " : "") + "IP[]", c2, r5, "<->", o4), a2.interpolate(d2, s4, i3, l2), a2.touch(d2);
                }
                e5.loop = 1;
              }, lr.bind(void 0, 0), lr.bind(void 0, 1), function(e5) {
                for (var t5 = e5.stack, r5 = e5.rp0, o4 = e5.z0[r5], n3 = e5.loop, s4 = e5.fv, i3 = e5.pv, a2 = e5.z1; n3--; ) {
                  var l2 = t5.pop(), u2 = a2[l2];
                  j.DEBUG && console.log(e5.step, (1 < e5.loop ? "loop " + (e5.loop - n3) + ": " : "") + "ALIGNRP[]", l2), s4.setRelative(u2, o4, 0, i3), s4.touch(u2);
                }
                e5.loop = 1;
              }, function(e5) {
                j.DEBUG && console.log(e5.step, "RTDG[]"), e5.round = Bt;
              }, ur.bind(void 0, 0), ur.bind(void 0, 1), function(e5) {
                var t5 = e5.prog, r5 = e5.ip, o4 = e5.stack, n3 = t5[++r5];
                j.DEBUG && console.log(e5.step, "NPUSHB[]", n3);
                for (var s4 = 0; s4 < n3; s4++)
                  o4.push(t5[++r5]);
                e5.ip = r5;
              }, function(e5) {
                var t5 = e5.ip, r5 = e5.prog, o4 = e5.stack, n3 = r5[++t5];
                j.DEBUG && console.log(e5.step, "NPUSHW[]", n3);
                for (var s4 = 0; s4 < n3; s4++) {
                  var i3 = r5[++t5] << 8 | r5[++t5];
                  32768 & i3 && (i3 = -(1 + (65535 ^ i3))), o4.push(i3);
                }
                e5.ip = t5;
              }, function(e5) {
                var t5 = e5.stack, r5 = (r5 = e5.store) || (e5.store = []), o4 = t5.pop(), t5 = t5.pop();
                j.DEBUG && console.log(e5.step, "WS", o4, t5), r5[t5] = o4;
              }, function(e5) {
                var t5 = e5.stack, r5 = e5.store, o4 = t5.pop(), e5 = (j.DEBUG && console.log(e5.step, "RS", o4), r5 && r5[o4] || 0);
                t5.push(e5);
              }, function(e5) {
                var t5 = (r5 = e5.stack).pop(), r5 = r5.pop();
                j.DEBUG && console.log(e5.step, "WCVTP", t5, r5), e5.cvt[r5] = t5 / 64;
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "RCVT", r5), t5.push(64 * e5.cvt[r5]);
              }, cr.bind(void 0, 0), cr.bind(void 0, 1), void 0, dr.bind(void 0, 0), dr.bind(void 0, 1), function(e5) {
                j.DEBUG && console.log(e5.step, "MPPEM[]"), e5.stack.push(e5.ppem);
              }, void 0, function(e5) {
                j.DEBUG && console.log(e5.step, "FLIPON[]"), e5.autoFlip = true;
              }, void 0, void 0, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "LT[]", r5, o4), t5.push(o4 < r5 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "LTEQ[]", r5, o4), t5.push(o4 <= r5 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "GT[]", r5, o4), t5.push(r5 < o4 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "GTEQ[]", r5, o4), t5.push(r5 <= o4 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "EQ[]", r5, o4), t5.push(r5 === o4 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "NEQ[]", r5, o4), t5.push(r5 !== o4 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "ODD[]", r5), t5.push(Math.trunc(r5) % 2 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "EVEN[]", r5), t5.push(Math.trunc(r5) % 2 ? 0 : 1);
              }, function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "IF[]", t5), t5 || (Qt(e5, true), j.DEBUG && console.log(e5.step, "EIF[]"));
              }, function(e5) {
                j.DEBUG && console.log(e5.step, "EIF[]");
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "AND[]", r5, o4), t5.push(r5 && o4 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "OR[]", r5, o4), t5.push(r5 || o4 ? 1 : 0);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "NOT[]", r5), t5.push(r5 ? 0 : 1);
              }, fr.bind(void 0, 1), function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "SDB[]", t5), e5.deltaBase = t5;
              }, function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "SDS[]", t5), e5.deltaShift = Math.pow(0.5, t5);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "ADD[]", r5, o4), t5.push(o4 + r5);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "SUB[]", r5, o4), t5.push(o4 - r5);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "DIV[]", r5, o4), t5.push(64 * o4 / r5);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "MUL[]", r5, o4), t5.push(o4 * r5 / 64);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "ABS[]", r5), t5.push(Math.abs(r5));
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "NEG[]", r5), t5.push(-r5);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "FLOOR[]", r5), t5.push(64 * Math.floor(r5 / 64));
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop();
                j.DEBUG && console.log(e5.step, "CEILING[]", r5), t5.push(64 * Math.ceil(r5 / 64));
              }, hr.bind(void 0, 0), hr.bind(void 0, 1), hr.bind(void 0, 2), hr.bind(void 0, 3), void 0, void 0, void 0, void 0, function(e5) {
                var t5 = (r5 = e5.stack).pop(), r5 = r5.pop();
                j.DEBUG && console.log(e5.step, "WCVTF[]", t5, r5), e5.cvt[r5] = t5 * e5.ppem / e5.font.unitsPerEm;
              }, fr.bind(void 0, 2), fr.bind(void 0, 3), pr.bind(void 0, 1), pr.bind(void 0, 2), pr.bind(void 0, 3), function(e5) {
                var t5, r5 = e5.stack.pop();
                switch (j.DEBUG && console.log(e5.step, "SROUND[]", r5), e5.round = Ht, 192 & r5) {
                  case 0:
                    t5 = 0.5;
                    break;
                  case 64:
                    t5 = 1;
                    break;
                  case 128:
                    t5 = 2;
                    break;
                  default:
                    throw new Error("invalid SROUND value");
                }
                switch (e5.srPeriod = t5, 48 & r5) {
                  case 0:
                    e5.srPhase = 0;
                    break;
                  case 16:
                    e5.srPhase = 0.25 * t5;
                    break;
                  case 32:
                    e5.srPhase = 0.5 * t5;
                    break;
                  case 48:
                    e5.srPhase = 0.75 * t5;
                    break;
                  default:
                    throw new Error("invalid SROUND value");
                }
                e5.srThreshold = 0 === (r5 &= 15) ? 0 : (r5 / 8 - 0.5) * t5;
              }, function(e5) {
                var t5, r5 = e5.stack.pop();
                switch (j.DEBUG && console.log(e5.step, "S45ROUND[]", r5), e5.round = Ht, 192 & r5) {
                  case 0:
                    t5 = Math.sqrt(2) / 2;
                    break;
                  case 64:
                    t5 = Math.sqrt(2);
                    break;
                  case 128:
                    t5 = 2 * Math.sqrt(2);
                    break;
                  default:
                    throw new Error("invalid S45ROUND value");
                }
                switch (e5.srPeriod = t5, 48 & r5) {
                  case 0:
                    e5.srPhase = 0;
                    break;
                  case 16:
                    e5.srPhase = 0.25 * t5;
                    break;
                  case 32:
                    e5.srPhase = 0.5 * t5;
                    break;
                  case 48:
                    e5.srPhase = 0.75 * t5;
                    break;
                  default:
                    throw new Error("invalid S45ROUND value");
                }
                e5.srThreshold = 0 === (r5 &= 15) ? 0 : (r5 / 8 - 0.5) * t5;
              }, void 0, void 0, function(e5) {
                j.DEBUG && console.log(e5.step, "ROFF[]"), e5.round = Ut;
              }, void 0, function(e5) {
                j.DEBUG && console.log(e5.step, "RUTG[]"), e5.round = Vt;
              }, function(e5) {
                j.DEBUG && console.log(e5.step, "RDTG[]"), e5.round = zt;
              }, rr, rr, void 0, void 0, void 0, void 0, void 0, function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "SCANCTRL[]", t5);
              }, mr.bind(void 0, 0), mr.bind(void 0, 1), function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = 0;
                j.DEBUG && console.log(e5.step, "GETINFO[]", r5), 1 & r5 && (o4 = 35), 32 & r5 && (o4 |= 4096), t5.push(o4);
              }, void 0, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop(), n3 = t5.pop();
                j.DEBUG && console.log(e5.step, "ROLL[]"), t5.push(o4), t5.push(r5), t5.push(n3);
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "MAX[]", r5, o4), t5.push(Math.max(o4, r5));
              }, function(e5) {
                var t5 = e5.stack, r5 = t5.pop(), o4 = t5.pop();
                j.DEBUG && console.log(e5.step, "MIN[]", r5, o4), t5.push(Math.min(o4, r5));
              }, function(e5) {
                var t5 = e5.stack.pop();
                j.DEBUG && console.log(e5.step, "SCANTYPE[]", t5);
              }, function(e5) {
                var t5 = e5.stack.pop(), r5 = e5.stack.pop();
                switch (j.DEBUG && console.log(e5.step, "INSTCTRL[]", t5, r5), t5) {
                  case 1:
                    return void (e5.inhibitGridFit = !!r5);
                  case 2:
                    return void (e5.ignoreCvt = !!r5);
                  default:
                    throw new Error("invalid INSTCTRL[] selector");
                }
              }, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, k.bind(void 0, 1), k.bind(void 0, 2), k.bind(void 0, 3), k.bind(void 0, 4), k.bind(void 0, 5), k.bind(void 0, 6), k.bind(void 0, 7), k.bind(void 0, 8), O.bind(void 0, 1), O.bind(void 0, 2), O.bind(void 0, 3), O.bind(void 0, 4), O.bind(void 0, 5), O.bind(void 0, 6), O.bind(void 0, 7), O.bind(void 0, 8), C.bind(void 0, 0, 0, 0, 0, 0), C.bind(void 0, 0, 0, 0, 0, 1), C.bind(void 0, 0, 0, 0, 0, 2), C.bind(void 0, 0, 0, 0, 0, 3), C.bind(void 0, 0, 0, 0, 1, 0), C.bind(void 0, 0, 0, 0, 1, 1), C.bind(void 0, 0, 0, 0, 1, 2), C.bind(void 0, 0, 0, 0, 1, 3), C.bind(void 0, 0, 0, 1, 0, 0), C.bind(void 0, 0, 0, 1, 0, 1), C.bind(void 0, 0, 0, 1, 0, 2), C.bind(void 0, 0, 0, 1, 0, 3), C.bind(void 0, 0, 0, 1, 1, 0), C.bind(void 0, 0, 0, 1, 1, 1), C.bind(void 0, 0, 0, 1, 1, 2), C.bind(void 0, 0, 0, 1, 1, 3), C.bind(void 0, 0, 1, 0, 0, 0), C.bind(void 0, 0, 1, 0, 0, 1), C.bind(void 0, 0, 1, 0, 0, 2), C.bind(void 0, 0, 1, 0, 0, 3), C.bind(void 0, 0, 1, 0, 1, 0), C.bind(void 0, 0, 1, 0, 1, 1), C.bind(void 0, 0, 1, 0, 1, 2), C.bind(void 0, 0, 1, 0, 1, 3), C.bind(void 0, 0, 1, 1, 0, 0), C.bind(void 0, 0, 1, 1, 0, 1), C.bind(void 0, 0, 1, 1, 0, 2), C.bind(void 0, 0, 1, 1, 0, 3), C.bind(void 0, 0, 1, 1, 1, 0), C.bind(void 0, 0, 1, 1, 1, 1), C.bind(void 0, 0, 1, 1, 1, 2), C.bind(void 0, 0, 1, 1, 1, 3), C.bind(void 0, 1, 0, 0, 0, 0), C.bind(void 0, 1, 0, 0, 0, 1), C.bind(void 0, 1, 0, 0, 0, 2), C.bind(void 0, 1, 0, 0, 0, 3), C.bind(void 0, 1, 0, 0, 1, 0), C.bind(void 0, 1, 0, 0, 1, 1), C.bind(void 0, 1, 0, 0, 1, 2), C.bind(void 0, 1, 0, 0, 1, 3), C.bind(void 0, 1, 0, 1, 0, 0), C.bind(void 0, 1, 0, 1, 0, 1), C.bind(void 0, 1, 0, 1, 0, 2), C.bind(void 0, 1, 0, 1, 0, 3), C.bind(void 0, 1, 0, 1, 1, 0), C.bind(void 0, 1, 0, 1, 1, 1), C.bind(void 0, 1, 0, 1, 1, 2), C.bind(void 0, 1, 0, 1, 1, 3), C.bind(void 0, 1, 1, 0, 0, 0), C.bind(void 0, 1, 1, 0, 0, 1), C.bind(void 0, 1, 1, 0, 0, 2), C.bind(void 0, 1, 1, 0, 0, 3), C.bind(void 0, 1, 1, 0, 1, 0), C.bind(void 0, 1, 1, 0, 1, 1), C.bind(void 0, 1, 1, 0, 1, 2), C.bind(void 0, 1, 1, 0, 1, 3), C.bind(void 0, 1, 1, 1, 0, 0), C.bind(void 0, 1, 1, 1, 0, 1), C.bind(void 0, 1, 1, 1, 0, 2), C.bind(void 0, 1, 1, 1, 0, 3), C.bind(void 0, 1, 1, 1, 1, 0), C.bind(void 0, 1, 1, 1, 1, 1), C.bind(void 0, 1, 1, 1, 1, 2), C.bind(void 0, 1, 1, 1, 1, 3)], jr = Array.from || function(e5) {
                return e5.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
              };
              function A(e5) {
                (e5 = e5 || {}).empty || (_(e5.familyName, "When creating a new Font object, familyName is required."), _(e5.styleName, "When creating a new Font object, styleName is required."), _(e5.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), _(e5.ascender, "When creating a new Font object, ascender is required."), _(e5.descender, "When creating a new Font object, descender is required."), _(e5.descender < 0, "Descender should be negative (e.g. -512)."), this.names = { fontFamily: { en: e5.familyName || " " }, fontSubfamily: { en: e5.styleName || " " }, fullName: { en: e5.fullName || e5.familyName + " " + e5.styleName }, postScriptName: { en: e5.postScriptName || (e5.familyName + e5.styleName).replace(/\s/g, "") }, designer: { en: e5.designer || " " }, designerURL: { en: e5.designerURL || " " }, manufacturer: { en: e5.manufacturer || " " }, manufacturerURL: { en: e5.manufacturerURL || " " }, license: { en: e5.license || " " }, licenseURL: { en: e5.licenseURL || " " }, version: { en: e5.version || "Version 0.1" }, description: { en: e5.description || " " }, copyright: { en: e5.copyright || " " }, trademark: { en: e5.trademark || " " } }, this.unitsPerEm = e5.unitsPerEm || 1e3, this.ascender = e5.ascender, this.descender = e5.descender, this.createdTimestamp = e5.createdTimestamp, this.tables = { os2: { usWeightClass: e5.weightClass || this.usWeightClasses.MEDIUM, usWidthClass: e5.widthClass || this.usWidthClasses.MEDIUM, fsSelection: e5.fsSelection || this.fsSelectionValues.REGULAR } }), this.supported = true, this.glyphs = new p.GlyphSet(this, e5.glyphs || []), this.encoding = new Te(this), this.position = new kt(this), this.substitution = new i2(this), this.tables = this.tables || {}, Object.defineProperty(this, "hinting", { get: function() {
                  return this._hinting || ("truetype" === this.outlinesFormat ? this._hinting = new Ft(this) : void 0);
                } });
              }
              function _r(e5, t5) {
                var r5, o4 = JSON.stringify(e5), n3 = 256;
                for (r5 in t5) {
                  var s4 = parseInt(r5);
                  if (s4 && !(s4 < 256)) {
                    if (JSON.stringify(t5[r5]) === o4)
                      return s4;
                    n3 <= s4 && (n3 = s4 + 1);
                  }
                }
                return t5[n3] = e5, n3;
              }
              A.prototype.hasChar = function(e5) {
                return null !== this.encoding.charToGlyphIndex(e5);
              }, A.prototype.charToGlyphIndex = function(e5) {
                return this.encoding.charToGlyphIndex(e5);
              }, A.prototype.charToGlyph = function(e5) {
                e5 = this.charToGlyphIndex(e5);
                return this.glyphs.get(e5) || this.glyphs.get(0);
              }, A.prototype.stringToGlyphs = function(e5, t5) {
                t5 = t5 || this.defaultRenderOptions;
                for (var r5 = jr(e5), o4 = [], n3 = 0; n3 < r5.length; n3 += 1) {
                  var s4 = r5[n3];
                  o4.push(this.charToGlyphIndex(s4));
                }
                var i3 = o4.length;
                if (t5.features) {
                  var e5 = t5.script || this.substitution.getDefaultScriptName(), a2 = [];
                  t5.features.liga && (a2 = a2.concat(this.substitution.getFeature("liga", e5, t5.language))), t5.features.rlig && (a2 = a2.concat(this.substitution.getFeature("rlig", e5, t5.language)));
                  for (var l2 = 0; l2 < i3; l2 += 1)
                    for (var u2 = 0; u2 < a2.length; u2++) {
                      for (var c2 = a2[u2], d2 = c2.sub, f2 = d2.length, h2 = 0; h2 < f2 && d2[h2] === o4[l2 + h2]; )
                        h2++;
                      h2 === f2 && (o4.splice(l2, f2, c2.by), i3 = i3 - f2 + 1);
                    }
                }
                for (var p2 = new Array(i3), m2 = this.glyphs.get(0), y2 = 0; y2 < i3; y2 += 1)
                  p2[y2] = this.glyphs.get(o4[y2]) || m2;
                return p2;
              }, A.prototype.nameToGlyphIndex = function(e5) {
                return this.glyphNames.nameToGlyphIndex(e5);
              }, A.prototype.nameToGlyph = function(e5) {
                e5 = this.nameToGlyphIndex(e5);
                return this.glyphs.get(e5) || this.glyphs.get(0);
              }, A.prototype.glyphIndexToName = function(e5) {
                return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e5) : "";
              }, A.prototype.getKerningValue = function(e5, t5) {
                e5 = e5.index || e5, t5 = t5.index || t5;
                var r5 = this.position.defaultKerningTables;
                return r5 ? this.position.getKerningValue(r5, e5, t5) : this.kerningPairs[e5 + "," + t5] || 0;
              }, A.prototype.defaultRenderOptions = { kerning: true, features: { liga: true, rlig: true } }, A.prototype.forEachGlyph = function(e5, t5, r5, o4, n3, s4) {
                t5 = void 0 !== t5 ? t5 : 0, r5 = void 0 !== r5 ? r5 : 0, n3 = n3 || this.defaultRenderOptions;
                var i3, a2 = 1 / this.unitsPerEm * (o4 = void 0 !== o4 ? o4 : 72), l2 = this.stringToGlyphs(e5, n3);
                n3.kerning && (e5 = n3.script || this.position.getDefaultScriptName(), i3 = this.position.getKerningTables(e5, n3.language));
                for (var u2 = 0; u2 < l2.length; u2 += 1) {
                  var c2 = l2[u2];
                  s4.call(this, c2, t5, r5, o4, n3), c2.advanceWidth && (t5 += c2.advanceWidth * a2), n3.kerning && u2 < l2.length - 1 && (t5 += (i3 ? this.position.getKerningValue(i3, c2.index, l2[u2 + 1].index) : this.getKerningValue(c2, l2[u2 + 1])) * a2), n3.letterSpacing ? t5 += n3.letterSpacing * o4 : n3.tracking && (t5 += n3.tracking / 1e3 * o4);
                }
                return t5;
              }, A.prototype.getPath = function(e5, t5, r5, o4, n3) {
                var s4 = new f();
                return this.forEachGlyph(e5, t5, r5, o4, n3, function(e6, t6, r6, o5) {
                  e6 = e6.getPath(t6, r6, o5, n3, this);
                  s4.extend(e6);
                }), s4;
              }, A.prototype.getPaths = function(e5, t5, r5, o4, n3) {
                var s4 = [];
                return this.forEachGlyph(e5, t5, r5, o4, n3, function(e6, t6, r6, o5) {
                  e6 = e6.getPath(t6, r6, o5, n3, this);
                  s4.push(e6);
                }), s4;
              }, A.prototype.getAdvanceWidth = function(e5, t5, r5) {
                return this.forEachGlyph(e5, 0, 0, t5, r5, function() {
                });
              }, A.prototype.draw = function(e5, t5, r5, o4, n3, s4) {
                this.getPath(t5, r5, o4, n3, s4).draw(e5);
              }, A.prototype.drawPoints = function(n3, e5, t5, r5, o4, s4) {
                this.forEachGlyph(e5, t5, r5, o4, s4, function(e6, t6, r6, o5) {
                  e6.drawPoints(n3, t6, r6, o5);
                });
              }, A.prototype.drawMetrics = function(n3, e5, t5, r5, o4, s4) {
                this.forEachGlyph(e5, t5, r5, o4, s4, function(e6, t6, r6, o5) {
                  e6.drawMetrics(n3, t6, r6, o5);
                });
              }, A.prototype.getEnglishName = function(e5) {
                e5 = this.names[e5];
                if (e5)
                  return e5.en;
              }, A.prototype.validate = function() {
                var t5 = this;
                function e5(e6) {
                  e6 = t5.getEnglishName(e6);
                  e6 && e6.trim().length;
                }
                e5("fontFamily"), e5("weightName"), e5("manufacturer"), e5("copyright"), e5("version"), this.unitsPerEm;
              }, A.prototype.toTables = function() {
                return wt.fontToTable(this);
              }, A.prototype.toBuffer = function() {
                return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
              }, A.prototype.toArrayBuffer = function() {
                for (var e5 = this.toTables().encode(), t5 = new ArrayBuffer(e5.length), r5 = new Uint8Array(t5), o4 = 0; o4 < e5.length; o4++)
                  r5[o4] = e5[o4];
                return t5;
              }, A.prototype.download = function(t5) {
                var e5 = this.getEnglishName("fontFamily"), r5 = this.getEnglishName("fontSubfamily"), o4 = (t5 = t5 || e5.replace(/\s/g, "") + "-" + r5 + ".otf", this.toArrayBuffer());
                "undefined" != typeof window ? (window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, window.requestFileSystem(window.TEMPORARY, o4.byteLength, function(e6) {
                  e6.root.getFile(t5, { create: true }, function(r6) {
                    r6.createWriter(function(e7) {
                      var t6 = new DataView(o4), t6 = new Blob([t6], { type: "font/opentype" });
                      e7.write(t6), e7.addEventListener("writeend", function() {
                        location.href = r6.toURL();
                      }, false);
                    });
                  });
                }, function(e6) {
                  throw new Error(e6.name + ": " + e6.message);
                })) : (e5 = Pr("fs"), r5 = function(e6) {
                  for (var t6 = new Ar(e6.byteLength), r6 = new Uint8Array(e6), o5 = 0; o5 < t6.length; ++o5)
                    t6[o5] = r6[o5];
                  return t6;
                }(o4), e5.writeFileSync(t5, r5));
              }, A.prototype.fsSelectionValues = { ITALIC: 1, UNDERSCORE: 2, NEGATIVE: 4, OUTLINED: 8, STRIKEOUT: 16, BOLD: 32, REGULAR: 64, USER_TYPO_METRICS: 128, WWS: 256, OBLIQUE: 512 }, A.prototype.usWidthClasses = { ULTRA_CONDENSED: 1, EXTRA_CONDENSED: 2, CONDENSED: 3, SEMI_CONDENSED: 4, MEDIUM: 5, SEMI_EXPANDED: 6, EXPANDED: 7, EXTRA_EXPANDED: 8, ULTRA_EXPANDED: 9 }, A.prototype.usWeightClasses = { THIN: 100, EXTRA_LIGHT: 200, LIGHT: 300, NORMAL: 400, MEDIUM: 500, SEMI_BOLD: 600, BOLD: 700, EXTRA_BOLD: 800, BLACK: 900 };
              var xr = { make: function(e5, t5) {
                var r5 = new S.Table("fvar", [{ name: "version", type: "ULONG", value: 65536 }, { name: "offsetToData", type: "USHORT", value: 0 }, { name: "countSizePairs", type: "USHORT", value: 2 }, { name: "axisCount", type: "USHORT", value: e5.axes.length }, { name: "axisSize", type: "USHORT", value: 20 }, { name: "instanceCount", type: "USHORT", value: e5.instances.length }, { name: "instanceSize", type: "USHORT", value: 4 + 4 * e5.axes.length }]);
                r5.offsetToData = r5.sizeOf();
                for (var o4, n3, s4, i3 = 0; i3 < e5.axes.length; i3++)
                  r5.fields = r5.fields.concat((o4 = i3, n3 = e5.axes[i3], s4 = t5, s4 = _r(n3.name, t5), [{ name: "tag_" + o4, type: "TAG", value: n3.tag }, { name: "minValue_" + o4, type: "FIXED", value: n3.minValue << 16 }, { name: "defaultValue_" + o4, type: "FIXED", value: n3.defaultValue << 16 }, { name: "maxValue_" + o4, type: "FIXED", value: n3.maxValue << 16 }, { name: "flags_" + o4, type: "USHORT", value: 0 }, { name: "nameID_" + o4, type: "USHORT", value: s4 }]));
                for (var a2 = 0; a2 < e5.instances.length; a2++)
                  r5.fields = r5.fields.concat(function(e6, t6, r6, o5) {
                    for (var n4 = [{ name: "nameID_" + e6, type: "USHORT", value: _r(t6.name, o5) }, { name: "flags_" + e6, type: "USHORT", value: 0 }], s5 = 0; s5 < r6.length; ++s5) {
                      var i4 = r6[s5].tag;
                      n4.push({ name: "axis_" + e6 + " " + i4, type: "FIXED", value: t6.coordinates[i4] << 16 });
                    }
                    return n4;
                  }(a2, e5.instances[a2], e5.axes, t5));
                return r5;
              }, parse: function(e5, t5, r5) {
                for (var o4, n3, s4, i3, a2 = new R.Parser(e5, t5), l2 = a2.parseULong(), u2 = (L.argument(65536 === l2, "Unsupported fvar table version."), a2.parseOffset16()), c2 = (a2.skip("uShort", 1), a2.parseUShort()), d2 = a2.parseUShort(), f2 = a2.parseUShort(), h2 = a2.parseUShort(), p2 = [], m2 = 0; m2 < c2; m2++)
                  p2.push((o4 = e5, n3 = t5 + u2 + m2 * d2, s4 = r5, void 0, i3 = {}, o4 = new R.Parser(o4, n3), i3.tag = o4.parseTag(), i3.minValue = o4.parseFixed(), i3.defaultValue = o4.parseFixed(), i3.maxValue = o4.parseFixed(), o4.skip("uShort", 1), i3.name = s4[o4.parseUShort()] || {}, i3));
                for (var y2 = [], g2 = t5 + u2 + c2 * d2, v2 = 0; v2 < f2; v2++)
                  y2.push(function(e6, t6, r6, o5) {
                    var n4 = {}, s5 = new R.Parser(e6, t6);
                    n4.name = o5[s5.parseUShort()] || {}, s5.skip("uShort", 1), n4.coordinates = {};
                    for (var i4 = 0; i4 < r6.length; ++i4)
                      n4.coordinates[r6[i4].tag] = s5.parseFixed();
                    return n4;
                  }(e5, g2 + v2 * h2, p2, r5));
                return { axes: p2, instances: y2 };
              } }, P = new Array(10);
              P[1] = function() {
                var e5 = this.offset + this.relativeOffset, t5 = this.parseUShort();
                return 1 === t5 ? { posFormat: 1, coverage: this.parsePointer(u.coverage), value: this.parseValueRecord() } : 2 === t5 ? { posFormat: 2, coverage: this.parsePointer(u.coverage), values: this.parseValueRecordList() } : void L.assert(false, "0x" + e5.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
              }, P[2] = function() {
                var e5, t5, r5, o4, n3 = this.offset + this.relativeOffset, s4 = this.parseUShort(), n3 = (L.assert(1 === s4 || 2 === s4, "0x" + n3.toString(16) + ": GPOS lookup type 2 format must be 1 or 2."), this.parsePointer(u.coverage)), i3 = this.parseUShort(), a2 = this.parseUShort();
                return 1 === s4 ? { posFormat: s4, coverage: n3, valueFormat1: i3, valueFormat2: a2, pairSets: this.parseList(u.pointer(u.list(function() {
                  return { secondGlyph: this.parseUShort(), value1: this.parseValueRecord(i3), value2: this.parseValueRecord(a2) };
                }))) } : 2 === s4 ? (e5 = this.parsePointer(u.classDef), t5 = this.parsePointer(u.classDef), r5 = this.parseUShort(), o4 = this.parseUShort(), { posFormat: s4, coverage: n3, valueFormat1: i3, valueFormat2: a2, classDef1: e5, classDef2: t5, class1Count: r5, class2Count: o4, classRecords: this.parseList(r5, u.list(o4, function() {
                  return { value1: this.parseValueRecord(i3), value2: this.parseValueRecord(a2) };
                })) }) : void 0;
              }, P[3] = function() {
                return { error: "GPOS Lookup 3 not supported" };
              }, P[4] = function() {
                return { error: "GPOS Lookup 4 not supported" };
              }, P[5] = function() {
                return { error: "GPOS Lookup 5 not supported" };
              }, P[6] = function() {
                return { error: "GPOS Lookup 6 not supported" };
              }, P[7] = function() {
                return { error: "GPOS Lookup 7 not supported" };
              }, P[8] = function() {
                return { error: "GPOS Lookup 8 not supported" };
              }, P[9] = function() {
                return { error: "GPOS Lookup 9 not supported" };
              };
              var wr = new Array(10);
              var Sr = { parse: function(e5, t5) {
                return t5 = (e5 = new u(e5, t5 = t5 || 0)).parseVersion(1), L.argument(1 === t5 || 1.1 === t5, "Unsupported GPOS table version " + t5), 1 === t5 ? { version: t5, scripts: e5.parseScriptList(), features: e5.parseFeatureList(), lookups: e5.parseLookupList(P) } : { version: t5, scripts: e5.parseScriptList(), features: e5.parseFeatureList(), lookups: e5.parseLookupList(P), variations: e5.parseFeatureVariationsList() };
              }, make: function(e5) {
                return new S.Table("GPOS", [{ name: "version", type: "ULONG", value: 65536 }, { name: "scripts", type: "TABLE", value: new S.ScriptList(e5.scripts) }, { name: "features", type: "TABLE", value: new S.FeatureList(e5.features) }, { name: "lookups", type: "TABLE", value: new S.LookupList(e5.lookups, wr) }]);
              } };
              var Er = { parse: function(e5, t5) {
                if (e5 = new R.Parser(e5, t5), 0 === (t5 = e5.parseUShort())) {
                  var r5 = e5, o4 = {}, n3 = (r5.skip("uShort"), r5.parseUShort()), s4 = (L.argument(0 === n3, "Unsupported kern sub-table version."), r5.skip("uShort", 2), r5.parseUShort());
                  r5.skip("uShort", 3);
                  for (var i3 = 0; i3 < s4; i3 += 1) {
                    var a2 = r5.parseUShort(), l2 = r5.parseUShort(), u2 = r5.parseShort();
                    o4[a2 + "," + l2] = u2;
                  }
                  return o4;
                }
                if (1 !== t5)
                  throw new Error("Unsupported kern table version (" + t5 + ").");
                var c2 = e5, d2 = {}, n3 = (c2.skip("uShort"), 1 < c2.parseULong() && console.warn("Only the first kern subtable is supported."), c2.skip("uLong"), 255 & c2.parseUShort());
                if (c2.skip("uShort"), 0 == n3) {
                  var f2 = c2.parseUShort();
                  c2.skip("uShort", 3);
                  for (var h2 = 0; h2 < f2; h2 += 1) {
                    var p2 = c2.parseUShort(), m2 = c2.parseUShort(), y2 = c2.parseShort();
                    d2[p2 + "," + m2] = y2;
                  }
                }
                return d2;
              } };
              var Mr = { parse: function(e5, t5, r5, o4) {
                for (var n3 = new R.Parser(e5, t5), s4 = o4 ? n3.parseUShort : n3.parseULong, i3 = [], a2 = 0; a2 < r5 + 1; a2 += 1) {
                  var l2 = s4.call(n3);
                  o4 && (l2 *= 2), i3.push(l2);
                }
                return i3;
              } };
              function Tr(e5, r5) {
                Pr("fs").readFile(e5, function(e6, t5) {
                  if (e6)
                    return r5(e6.message);
                  r5(null, Ct(t5));
                });
              }
              function kr(e5, t5) {
                var r5 = new XMLHttpRequest();
                r5.open("get", e5, true), r5.responseType = "arraybuffer", r5.onload = function() {
                  return r5.response ? t5(null, r5.response) : t5("Font could not be loaded: " + r5.statusText);
                }, r5.onerror = function() {
                  t5("Font could not be loaded");
                }, r5.send();
              }
              function Or(e5, t5) {
                for (var r5 = [], o4 = 12, n3 = 0; n3 < t5; n3 += 1) {
                  var s4 = R.getTag(e5, o4), i3 = R.getULong(e5, o4 + 4), a2 = R.getULong(e5, o4 + 8), l2 = R.getULong(e5, o4 + 12);
                  r5.push({ tag: s4, checksum: i3, offset: a2, length: l2, compression: false }), o4 += 16;
                }
                return r5;
              }
              function I(e5, t5) {
                if ("WOFF" !== t5.compression)
                  return { data: e5, offset: t5.offset };
                var e5 = new Uint8Array(e5.buffer, t5.offset + 2, t5.compressedLength - 2), r5 = new Uint8Array(t5.length);
                if (re(e5, r5), r5.byteLength !== t5.length)
                  throw new Error("Decompression error: " + t5.tag + " decompressed length doesn't match recorded length");
                return { data: new DataView(r5.buffer, 0), offset: 0 };
              }
              function Cr(e5) {
                var t5, r5, o4, n3, s4, i3, a2, l2, u2, c2, d2, f2, h2, p2, m2 = new A({ empty: true }), y2 = new DataView(e5, 0), g2 = [], e5 = R.getTag(y2, 0);
                if (e5 === String.fromCharCode(0, 1, 0, 0) || "true" === e5 || "typ1" === e5)
                  m2.outlinesFormat = "truetype", g2 = Or(y2, o4 = R.getUShort(y2, 4));
                else if ("OTTO" === e5)
                  m2.outlinesFormat = "cff", g2 = Or(y2, o4 = R.getUShort(y2, 4));
                else {
                  if ("wOFF" !== e5)
                    throw new Error("Unsupported OpenType signature " + e5);
                  var v2 = R.getTag(y2, 4);
                  if (v2 === String.fromCharCode(0, 1, 0, 0))
                    m2.outlinesFormat = "truetype";
                  else {
                    if ("OTTO" !== v2)
                      throw new Error("Unsupported OpenType flavor " + e5);
                    m2.outlinesFormat = "cff";
                  }
                  g2 = function(e6, t6) {
                    for (var r6 = [], o5 = 44, n4 = 0; n4 < t6; n4 += 1) {
                      var s5 = R.getTag(e6, o5), i4 = R.getULong(e6, o5 + 4), a3 = R.getULong(e6, o5 + 8), l3 = R.getULong(e6, o5 + 12), u3 = void 0, u3 = a3 < l3 && "WOFF";
                      r6.push({ tag: s5, offset: i4, compression: u3, compressedLength: a3, length: l3 }), o5 += 20;
                    }
                    return r6;
                  }(y2, o4 = R.getUShort(y2, 12));
                }
                for (var b2 = 0; b2 < o4; b2 += 1) {
                  var j2 = g2[b2], _2 = void 0;
                  switch (j2.tag) {
                    case "cmap":
                      _2 = I(y2, j2), m2.tables.cmap = we.parse(_2.data, _2.offset), m2.encoding = new ke(m2.tables.cmap);
                      break;
                    case "cvt ":
                      _2 = I(y2, j2), p2 = new R.Parser(_2.data, _2.offset), m2.tables.cvt = p2.parseShortList(j2.length / 2);
                      break;
                    case "fvar":
                      s4 = j2;
                      break;
                    case "fpgm":
                      _2 = I(y2, j2), p2 = new R.Parser(_2.data, _2.offset), m2.tables.fpgm = p2.parseByteList(j2.length);
                      break;
                    case "head":
                      _2 = I(y2, j2), m2.tables.head = Ze.parse(_2.data, _2.offset), m2.unitsPerEm = m2.tables.head.unitsPerEm, t5 = m2.tables.head.indexToLocFormat;
                      break;
                    case "hhea":
                      _2 = I(y2, j2), m2.tables.hhea = Qe.parse(_2.data, _2.offset), m2.ascender = m2.tables.hhea.ascender, m2.descender = m2.tables.hhea.descender, m2.numberOfHMetrics = m2.tables.hhea.numberOfHMetrics;
                      break;
                    case "hmtx":
                      u2 = j2;
                      break;
                    case "ltag":
                      _2 = I(y2, j2), r5 = Ke.parse(_2.data, _2.offset);
                      break;
                    case "maxp":
                      _2 = I(y2, j2), m2.tables.maxp = $e.parse(_2.data, _2.offset), m2.numGlyphs = m2.tables.maxp.numGlyphs;
                      break;
                    case "name":
                      f2 = j2;
                      break;
                    case "OS/2":
                      _2 = I(y2, j2), m2.tables.os2 = ht.parse(_2.data, _2.offset);
                      break;
                    case "post":
                      _2 = I(y2, j2), m2.tables.post = pt.parse(_2.data, _2.offset), m2.glyphNames = new Ce(m2.tables.post);
                      break;
                    case "prep":
                      _2 = I(y2, j2), p2 = new R.Parser(_2.data, _2.offset), m2.tables.prep = p2.parseByteList(j2.length);
                      break;
                    case "glyf":
                      i3 = j2;
                      break;
                    case "loca":
                      d2 = j2;
                      break;
                    case "CFF ":
                      n3 = j2;
                      break;
                    case "kern":
                      c2 = j2;
                      break;
                    case "GPOS":
                      a2 = j2;
                      break;
                    case "GSUB":
                      l2 = j2;
                      break;
                    case "meta":
                      h2 = j2;
                  }
                }
                v2 = I(y2, f2);
                if (m2.tables.name = dt.parse(v2.data, v2.offset, r5), m2.names = m2.tables.name, i3 && d2) {
                  e5 = 0 === t5, v2 = I(y2, d2), v2 = Mr.parse(v2.data, v2.offset, m2.numGlyphs, e5), e5 = I(y2, i3);
                  m2.glyphs = Dt.parse(e5.data, e5.offset, v2, m2);
                } else {
                  if (!n3)
                    throw new Error("Font doesn't contain TrueType or CFF outlines.");
                  e5 = I(y2, n3);
                  Ye.parse(e5.data, e5.offset, m2);
                }
                for (var v2 = I(y2, u2), x2 = (Je.parse(v2.data, v2.offset, m2.numberOfHMetrics, m2.numGlyphs, m2.glyphs), m2), w2 = x2.tables.cmap.glyphIndexMap, S2 = Object.keys(w2), E2 = 0; E2 < S2.length; E2 += 1) {
                  var M2, T2 = S2[E2], k2 = w2[T2];
                  (M2 = x2.glyphs.get(k2)).addUnicode(parseInt(T2));
                }
                for (var O2 = 0; O2 < x2.glyphs.length; O2 += 1)
                  M2 = x2.glyphs.get(O2), x2.cffEncoding ? x2.isCIDFont ? M2.name = "gid" + O2 : M2.name = x2.cffEncoding.charset[O2] : x2.glyphNames.names && (M2.name = x2.glyphNames.glyphIndexToName(O2));
                return c2 ? (e5 = I(y2, c2), m2.kerningPairs = Er.parse(e5.data, e5.offset)) : m2.kerningPairs = {}, a2 && (v2 = I(y2, a2), m2.tables.gpos = Sr.parse(v2.data, v2.offset), m2.position.init()), l2 && (e5 = I(y2, l2), m2.tables.gsub = yt.parse(e5.data, e5.offset)), s4 && (v2 = I(y2, s4), m2.tables.fvar = xr.parse(v2.data, v2.offset, m2.names)), h2 && (e5 = I(y2, h2), m2.tables.meta = gt.parse(e5.data, e5.offset), m2.metas = m2.tables.meta), m2;
              }
              j.Font = A, j.Glyph = h, j.Path = f, j.BoundingBox = a, j._parse = R, j.parse = Cr, j.load = function(e5, o4) {
                ("undefined" == typeof window ? Tr : kr)(e5, function(e6, t5) {
                  if (e6)
                    return o4(e6);
                  var r5;
                  try {
                    r5 = Cr(t5);
                  } catch (e7) {
                    return o4(e7, null);
                  }
                  return o4(null, r5);
                });
              }, j.loadSync = function(e5) {
                return Cr(Ct(Pr("fs").readFileSync(e5)));
              }, Object.defineProperty(j, "__esModule", { value: true });
            }, "object" == typeof o2 && void 0 !== r3 ? t3(o2) : "function" == typeof s2 && s2.amd ? s2(["exports"], t3) : t3(e3.opentype = {});
          }.call(this, Pr("buffer").Buffer);
        }, { buffer: 4, fs: 2 }], 248: [function(e3, t3, u) {
          !function(n2) {
            function s3(e4, t4) {
              for (var r3 = 0, o3 = e4.length - 1; 0 <= o3; o3--) {
                var n3 = e4[o3];
                "." === n3 ? e4.splice(o3, 1) : ".." === n3 ? (e4.splice(o3, 1), r3++) : r3 && (e4.splice(o3, 1), r3--);
              }
              if (t4)
                for (; r3--; )
                  e4.unshift("..");
              return e4;
            }
            function i2(e4, t4) {
              if (e4.filter)
                return e4.filter(t4);
              for (var r3 = [], o3 = 0; o3 < e4.length; o3++)
                t4(e4[o3], o3, e4) && r3.push(e4[o3]);
              return r3;
            }
            u.resolve = function() {
              for (var e4 = "", t4 = false, r3 = arguments.length - 1; -1 <= r3 && !t4; r3--) {
                var o3 = 0 <= r3 ? arguments[r3] : n2.cwd();
                if ("string" != typeof o3)
                  throw new TypeError("Arguments to path.resolve must be strings");
                o3 && (e4 = o3 + "/" + e4, t4 = "/" === o3.charAt(0));
              }
              return (t4 ? "/" : "") + (e4 = s3(i2(e4.split("/"), function(e5) {
                return !!e5;
              }), !t4).join("/")) || ".";
            }, u.normalize = function(e4) {
              var t4 = u.isAbsolute(e4), r3 = "/" === o2(e4, -1);
              return (e4 = (e4 = s3(i2(e4.split("/"), function(e5) {
                return !!e5;
              }), !t4).join("/")) || t4 ? e4 : ".") && r3 && (e4 += "/"), (t4 ? "/" : "") + e4;
            }, u.isAbsolute = function(e4) {
              return "/" === e4.charAt(0);
            }, u.join = function() {
              var e4 = Array.prototype.slice.call(arguments, 0);
              return u.normalize(i2(e4, function(e5, t4) {
                if ("string" != typeof e5)
                  throw new TypeError("Arguments to path.join must be strings");
                return e5;
              }).join("/"));
            }, u.relative = function(e4, t4) {
              function r3(e5) {
                for (var t5 = 0; t5 < e5.length && "" === e5[t5]; t5++)
                  ;
                for (var r4 = e5.length - 1; 0 <= r4 && "" === e5[r4]; r4--)
                  ;
                return r4 < t5 ? [] : e5.slice(t5, r4 - t5 + 1);
              }
              e4 = u.resolve(e4).substr(1), t4 = u.resolve(t4).substr(1);
              for (var o3 = r3(e4.split("/")), n3 = r3(t4.split("/")), s4 = Math.min(o3.length, n3.length), i3 = s4, a = 0; a < s4; a++)
                if (o3[a] !== n3[a]) {
                  i3 = a;
                  break;
                }
              for (var l = [], a = i3; a < o3.length; a++)
                l.push("..");
              return (l = l.concat(n3.slice(i3))).join("/");
            }, u.sep = "/", u.delimiter = ":", u.dirname = function(e4) {
              if ("string" != typeof e4 && (e4 += ""), 0 === e4.length)
                return ".";
              for (var t4 = 47 === e4.charCodeAt(0), r3 = -1, o3 = true, n3 = e4.length - 1; 1 <= n3; --n3)
                if (47 === e4.charCodeAt(n3)) {
                  if (!o3) {
                    r3 = n3;
                    break;
                  }
                } else
                  o3 = false;
              return -1 === r3 ? t4 ? "/" : "." : t4 && 1 === r3 ? "/" : e4.slice(0, r3);
            }, u.basename = function(e4, t4) {
              e4 = function(e5) {
                "string" != typeof e5 && (e5 += "");
                for (var t5 = 0, r3 = -1, o3 = true, n3 = e5.length - 1; 0 <= n3; --n3)
                  if (47 === e5.charCodeAt(n3)) {
                    if (!o3) {
                      t5 = n3 + 1;
                      break;
                    }
                  } else
                    -1 === r3 && (o3 = false, r3 = n3 + 1);
                return -1 === r3 ? "" : e5.slice(t5, r3);
              }(e4);
              return e4 = t4 && e4.substr(-1 * t4.length) === t4 ? e4.substr(0, e4.length - t4.length) : e4;
            }, u.extname = function(e4) {
              "string" != typeof e4 && (e4 += "");
              for (var t4 = -1, r3 = 0, o3 = -1, n3 = true, s4 = 0, i3 = e4.length - 1; 0 <= i3; --i3) {
                var a = e4.charCodeAt(i3);
                if (47 === a) {
                  if (n3)
                    continue;
                  r3 = i3 + 1;
                  break;
                }
                -1 === o3 && (n3 = false, o3 = i3 + 1), 46 === a ? -1 === t4 ? t4 = i3 : 1 !== s4 && (s4 = 1) : -1 !== t4 && (s4 = -1);
              }
              return -1 === t4 || -1 === o3 || 0 === s4 || 1 === s4 && t4 === o3 - 1 && t4 === r3 + 1 ? "" : e4.slice(t4, o3);
            };
            var o2 = "b" === "ab".substr(-1) ? function(e4, t4, r3) {
              return e4.substr(t4, r3);
            } : function(e4, t4, r3) {
              return t4 < 0 && (t4 = e4.length + t4), e4.substr(t4, r3);
            };
          }.call(this, e3("_process"));
        }, { _process: 249 }], 249: [function(e3, t3, r3) {
          var o2, n2, t3 = t3.exports = {};
          function s3() {
            throw new Error("setTimeout has not been defined");
          }
          function i2() {
            throw new Error("clearTimeout has not been defined");
          }
          try {
            o2 = "function" == typeof setTimeout ? setTimeout : s3;
          } catch (e4) {
            o2 = s3;
          }
          try {
            n2 = "function" == typeof clearTimeout ? clearTimeout : i2;
          } catch (e4) {
            n2 = i2;
          }
          function a(t4) {
            if (o2 === setTimeout)
              return setTimeout(t4, 0);
            if ((o2 === s3 || !o2) && setTimeout)
              return (o2 = setTimeout)(t4, 0);
            try {
              return o2(t4, 0);
            } catch (e4) {
              try {
                return o2.call(null, t4, 0);
              } catch (e5) {
                return o2.call(this, t4, 0);
              }
            }
          }
          var l, u = [], c = false, d = -1;
          function f() {
            c && l && (c = false, l.length ? u = l.concat(u) : d = -1, u.length && h());
          }
          function h() {
            if (!c) {
              for (var e4 = a(f), t4 = (c = true, u.length); t4; ) {
                for (l = u, u = []; ++d < t4; )
                  l && l[d].run();
                d = -1, t4 = u.length;
              }
              l = null, c = false, !function(t5) {
                if (n2 === clearTimeout)
                  return clearTimeout(t5);
                if ((n2 === i2 || !n2) && clearTimeout)
                  return (n2 = clearTimeout)(t5);
                try {
                  n2(t5);
                } catch (e5) {
                  try {
                    return n2.call(null, t5);
                  } catch (e6) {
                    return n2.call(this, t5);
                  }
                }
              }(e4);
            }
          }
          function p(e4, t4) {
            this.fun = e4, this.array = t4;
          }
          function m() {
          }
          t3.nextTick = function(e4) {
            var t4 = new Array(arguments.length - 1);
            if (1 < arguments.length)
              for (var r4 = 1; r4 < arguments.length; r4++)
                t4[r4 - 1] = arguments[r4];
            u.push(new p(e4, t4)), 1 !== u.length || c || a(h);
          }, p.prototype.run = function() {
            this.fun.apply(null, this.array);
          }, t3.title = "browser", t3.browser = true, t3.env = {}, t3.argv = [], t3.version = "", t3.versions = {}, t3.on = m, t3.addListener = m, t3.once = m, t3.off = m, t3.removeListener = m, t3.removeAllListeners = m, t3.emit = m, t3.prependListener = m, t3.prependOnceListener = m, t3.listeners = function(e4) {
            return [];
          }, t3.binding = function(e4) {
            throw new Error("process.binding is not supported");
          }, t3.cwd = function() {
            return "/";
          }, t3.chdir = function(e4) {
            throw new Error("process.chdir is not supported");
          }, t3.umask = function() {
            return 0;
          };
        }, {}], 250: [function(e3, t3, r3) {
          t3 = function(s3) {
            "use strict";
            var l, e4 = Object.prototype, u = e4.hasOwnProperty, t4 = "function" == typeof Symbol ? Symbol : {}, o2 = t4.iterator || "@@iterator", r4 = t4.asyncIterator || "@@asyncIterator", n2 = t4.toStringTag || "@@toStringTag";
            function i2(e5, t5, r5, o3) {
              var n3, s4, i3, a2, t5 = t5 && t5.prototype instanceof y ? t5 : y, t5 = Object.create(t5.prototype), o3 = new S(o3 || []);
              return t5._invoke = (n3 = e5, s4 = r5, i3 = o3, a2 = d, function(e6, t6) {
                if (a2 === h)
                  throw new Error("Generator is already running");
                if (a2 === p) {
                  if ("throw" === e6)
                    throw t6;
                  return M();
                }
                for (i3.method = e6, i3.arg = t6; ; ) {
                  var r6 = i3.delegate;
                  if (r6) {
                    r6 = function e7(t7, r7) {
                      var o4 = t7.iterator[r7.method];
                      if (o4 === l) {
                        if (r7.delegate = null, "throw" === r7.method) {
                          if (t7.iterator.return && (r7.method = "return", r7.arg = l, e7(t7, r7), "throw" === r7.method))
                            return m;
                          r7.method = "throw", r7.arg = new TypeError("The iterator does not provide a 'throw' method");
                        }
                        return m;
                      }
                      o4 = c(o4, t7.iterator, r7.arg);
                      if ("throw" === o4.type)
                        return r7.method = "throw", r7.arg = o4.arg, r7.delegate = null, m;
                      o4 = o4.arg;
                      if (!o4)
                        return r7.method = "throw", r7.arg = new TypeError("iterator result is not an object"), r7.delegate = null, m;
                      {
                        if (!o4.done)
                          return o4;
                        r7[t7.resultName] = o4.value, r7.next = t7.nextLoc, "return" !== r7.method && (r7.method = "next", r7.arg = l);
                      }
                      r7.delegate = null;
                      return m;
                    }(r6, i3);
                    if (r6) {
                      if (r6 === m)
                        continue;
                      return r6;
                    }
                  }
                  if ("next" === i3.method)
                    i3.sent = i3._sent = i3.arg;
                  else if ("throw" === i3.method) {
                    if (a2 === d)
                      throw a2 = p, i3.arg;
                    i3.dispatchException(i3.arg);
                  } else
                    "return" === i3.method && i3.abrupt("return", i3.arg);
                  a2 = h;
                  r6 = c(n3, s4, i3);
                  if ("normal" === r6.type) {
                    if (a2 = i3.done ? p : f, r6.arg !== m)
                      return { value: r6.arg, done: i3.done };
                  } else
                    "throw" === r6.type && (a2 = p, i3.method = "throw", i3.arg = r6.arg);
                }
              }), t5;
            }
            function c(e5, t5, r5) {
              try {
                return { type: "normal", arg: e5.call(t5, r5) };
              } catch (e6) {
                return { type: "throw", arg: e6 };
              }
            }
            s3.wrap = i2;
            var d = "suspendedStart", f = "suspendedYield", h = "executing", p = "completed", m = {};
            function y() {
            }
            function a() {
            }
            function g() {
            }
            var t4 = {}, v = (t4[o2] = function() {
              return this;
            }, Object.getPrototypeOf), v = v && v(v(E([]))), b = (v && v !== e4 && u.call(v, o2) && (t4 = v), g.prototype = y.prototype = Object.create(t4));
            function j(e5) {
              ["next", "throw", "return"].forEach(function(t5) {
                e5[t5] = function(e6) {
                  return this._invoke(t5, e6);
                };
              });
            }
            function _(i3) {
              var t5;
              this._invoke = function(r5, o3) {
                function e5() {
                  return new Promise(function(e6, t6) {
                    !function t7(e7, r6, o4, n3) {
                      var s4, e7 = c(i3[e7], i3, r6);
                      if ("throw" !== e7.type)
                        return (r6 = (s4 = e7.arg).value) && "object" == typeof r6 && u.call(r6, "__await") ? Promise.resolve(r6.__await).then(function(e8) {
                          t7("next", e8, o4, n3);
                        }, function(e8) {
                          t7("throw", e8, o4, n3);
                        }) : Promise.resolve(r6).then(function(e8) {
                          s4.value = e8, o4(s4);
                        }, function(e8) {
                          return t7("throw", e8, o4, n3);
                        });
                      n3(e7.arg);
                    }(r5, o3, e6, t6);
                  });
                }
                return t5 = t5 ? t5.then(e5, e5) : e5();
              };
            }
            function x(e5) {
              var t5 = { tryLoc: e5[0] };
              1 in e5 && (t5.catchLoc = e5[1]), 2 in e5 && (t5.finallyLoc = e5[2], t5.afterLoc = e5[3]), this.tryEntries.push(t5);
            }
            function w(e5) {
              var t5 = e5.completion || {};
              t5.type = "normal", delete t5.arg, e5.completion = t5;
            }
            function S(e5) {
              this.tryEntries = [{ tryLoc: "root" }], e5.forEach(x, this), this.reset(true);
            }
            function E(t5) {
              if (t5) {
                var r5, e5 = t5[o2];
                if (e5)
                  return e5.call(t5);
                if ("function" == typeof t5.next)
                  return t5;
                if (!isNaN(t5.length))
                  return r5 = -1, (e5 = function e6() {
                    for (; ++r5 < t5.length; )
                      if (u.call(t5, r5))
                        return e6.value = t5[r5], e6.done = false, e6;
                    return e6.value = l, e6.done = true, e6;
                  }).next = e5;
              }
              return { next: M };
            }
            function M() {
              return { value: l, done: true };
            }
            return (a.prototype = b.constructor = g).constructor = a, g[n2] = a.displayName = "GeneratorFunction", s3.isGeneratorFunction = function(e5) {
              e5 = "function" == typeof e5 && e5.constructor;
              return !!e5 && (e5 === a || "GeneratorFunction" === (e5.displayName || e5.name));
            }, s3.mark = function(e5) {
              return Object.setPrototypeOf ? Object.setPrototypeOf(e5, g) : (e5.__proto__ = g, n2 in e5 || (e5[n2] = "GeneratorFunction")), e5.prototype = Object.create(b), e5;
            }, s3.awrap = function(e5) {
              return { __await: e5 };
            }, j(_.prototype), _.prototype[r4] = function() {
              return this;
            }, s3.AsyncIterator = _, s3.async = function(e5, t5, r5, o3) {
              var n3 = new _(i2(e5, t5, r5, o3));
              return s3.isGeneratorFunction(t5) ? n3 : n3.next().then(function(e6) {
                return e6.done ? e6.value : n3.next();
              });
            }, j(b), b[n2] = "Generator", b[o2] = function() {
              return this;
            }, b.toString = function() {
              return "[object Generator]";
            }, s3.keys = function(r5) {
              var e5, o3 = [];
              for (e5 in r5)
                o3.push(e5);
              return o3.reverse(), function e6() {
                for (; o3.length; ) {
                  var t5 = o3.pop();
                  if (t5 in r5)
                    return e6.value = t5, e6.done = false, e6;
                }
                return e6.done = true, e6;
              };
            }, s3.values = E, S.prototype = { constructor: S, reset: function(e5) {
              if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = false, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(w), !e5)
                for (var t5 in this)
                  "t" === t5.charAt(0) && u.call(this, t5) && !isNaN(+t5.slice(1)) && (this[t5] = l);
            }, stop: function() {
              this.done = true;
              var e5 = this.tryEntries[0].completion;
              if ("throw" === e5.type)
                throw e5.arg;
              return this.rval;
            }, dispatchException: function(r5) {
              if (this.done)
                throw r5;
              var o3 = this;
              function e5(e6, t6) {
                return s4.type = "throw", s4.arg = r5, o3.next = e6, t6 && (o3.method = "next", o3.arg = l), !!t6;
              }
              for (var t5 = this.tryEntries.length - 1; 0 <= t5; --t5) {
                var n3 = this.tryEntries[t5], s4 = n3.completion;
                if ("root" === n3.tryLoc)
                  return e5("end");
                if (n3.tryLoc <= this.prev) {
                  var i3 = u.call(n3, "catchLoc"), a2 = u.call(n3, "finallyLoc");
                  if (i3 && a2) {
                    if (this.prev < n3.catchLoc)
                      return e5(n3.catchLoc, true);
                    if (this.prev < n3.finallyLoc)
                      return e5(n3.finallyLoc);
                  } else if (i3) {
                    if (this.prev < n3.catchLoc)
                      return e5(n3.catchLoc, true);
                  } else {
                    if (!a2)
                      throw new Error("try statement without catch or finally");
                    if (this.prev < n3.finallyLoc)
                      return e5(n3.finallyLoc);
                  }
                }
              }
            }, abrupt: function(e5, t5) {
              for (var r5 = this.tryEntries.length - 1; 0 <= r5; --r5) {
                var o3 = this.tryEntries[r5];
                if (o3.tryLoc <= this.prev && u.call(o3, "finallyLoc") && this.prev < o3.finallyLoc) {
                  var n3 = o3;
                  break;
                }
              }
              var s4 = (n3 = n3 && ("break" === e5 || "continue" === e5) && n3.tryLoc <= t5 && t5 <= n3.finallyLoc ? null : n3) ? n3.completion : {};
              return s4.type = e5, s4.arg = t5, n3 ? (this.method = "next", this.next = n3.finallyLoc, m) : this.complete(s4);
            }, complete: function(e5, t5) {
              if ("throw" === e5.type)
                throw e5.arg;
              return "break" === e5.type || "continue" === e5.type ? this.next = e5.arg : "return" === e5.type ? (this.rval = this.arg = e5.arg, this.method = "return", this.next = "end") : "normal" === e5.type && t5 && (this.next = t5), m;
            }, finish: function(e5) {
              for (var t5 = this.tryEntries.length - 1; 0 <= t5; --t5) {
                var r5 = this.tryEntries[t5];
                if (r5.finallyLoc === e5)
                  return this.complete(r5.completion, r5.afterLoc), w(r5), m;
              }
            }, catch: function(e5) {
              for (var t5 = this.tryEntries.length - 1; 0 <= t5; --t5) {
                var r5, o3, n3 = this.tryEntries[t5];
                if (n3.tryLoc === e5)
                  return "throw" === (r5 = n3.completion).type && (o3 = r5.arg, w(n3)), o3;
              }
              throw new Error("illegal catch attempt");
            }, delegateYield: function(e5, t5, r5) {
              return this.delegate = { iterator: E(e5), resultName: t5, nextLoc: r5 }, "next" === this.method && (this.arg = l), m;
            } }, s3;
          }("object" == typeof t3 ? t3.exports : {});
          try {
            regeneratorRuntime = t3;
          } catch (e4) {
            Function("r", "regeneratorRuntime = r")(t3);
          }
        }, {}], 251: [function(e3, t3, r3) {
          !function(e4) {
            "use strict";
            var t4, r4, i2, o2, n2, s3, a, l, u, c;
            function d(e5) {
              if ("string" != typeof e5 && (e5 = String(e5)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e5))
                throw new TypeError("Invalid character in header field name");
              return e5.toLowerCase();
            }
            function f(e5) {
              return e5 = "string" != typeof e5 ? String(e5) : e5;
            }
            function h(t5) {
              var e5 = { next: function() {
                var e6 = t5.shift();
                return { done: void 0 === e6, value: e6 };
              } };
              return r4 && (e5[Symbol.iterator] = function() {
                return e5;
              }), e5;
            }
            function p(t5) {
              this.map = {}, t5 instanceof p ? t5.forEach(function(e5, t6) {
                this.append(t6, e5);
              }, this) : Array.isArray(t5) ? t5.forEach(function(e5) {
                this.append(e5[0], e5[1]);
              }, this) : t5 && Object.getOwnPropertyNames(t5).forEach(function(e5) {
                this.append(e5, t5[e5]);
              }, this);
            }
            function m(e5) {
              if (e5.bodyUsed)
                return Promise.reject(new TypeError("Already read"));
              e5.bodyUsed = true;
            }
            function y(r5) {
              return new Promise(function(e5, t5) {
                r5.onload = function() {
                  e5(r5.result);
                }, r5.onerror = function() {
                  t5(r5.error);
                };
              });
            }
            function g(e5) {
              var t5 = new FileReader(), r5 = y(t5);
              return t5.readAsArrayBuffer(e5), r5;
            }
            function v(e5) {
              var t5;
              return e5.slice ? e5.slice(0) : ((t5 = new Uint8Array(e5.byteLength)).set(new Uint8Array(e5)), t5.buffer);
            }
            function b() {
              return this.bodyUsed = false, this._initBody = function(e5) {
                if (this._bodyInit = e5)
                  if ("string" == typeof e5)
                    this._bodyText = e5;
                  else if (i2 && Blob.prototype.isPrototypeOf(e5))
                    this._bodyBlob = e5;
                  else if (o2 && FormData.prototype.isPrototypeOf(e5))
                    this._bodyFormData = e5;
                  else if (t4 && URLSearchParams.prototype.isPrototypeOf(e5))
                    this._bodyText = e5.toString();
                  else if (n2 && i2 && a(e5))
                    this._bodyArrayBuffer = v(e5.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer]);
                  else {
                    if (!n2 || !ArrayBuffer.prototype.isPrototypeOf(e5) && !l(e5))
                      throw new Error("unsupported BodyInit type");
                    this._bodyArrayBuffer = v(e5);
                  }
                else
                  this._bodyText = "";
                this.headers.get("content-type") || ("string" == typeof e5 ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t4 && URLSearchParams.prototype.isPrototypeOf(e5) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
              }, i2 && (this.blob = function() {
                var e5 = m(this);
                if (e5)
                  return e5;
                if (this._bodyBlob)
                  return Promise.resolve(this._bodyBlob);
                if (this._bodyArrayBuffer)
                  return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                if (this._bodyFormData)
                  throw new Error("could not read FormData body as blob");
                return Promise.resolve(new Blob([this._bodyText]));
              }, this.arrayBuffer = function() {
                return this._bodyArrayBuffer ? m(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(g);
              }), this.text = function() {
                var e5, t5, r5 = m(this);
                if (r5)
                  return r5;
                if (this._bodyBlob)
                  return r5 = this._bodyBlob, e5 = new FileReader(), t5 = y(e5), e5.readAsText(r5), t5;
                if (this._bodyArrayBuffer)
                  return Promise.resolve(function(e6) {
                    for (var t6 = new Uint8Array(e6), r6 = new Array(t6.length), o3 = 0; o3 < t6.length; o3++)
                      r6[o3] = String.fromCharCode(t6[o3]);
                    return r6.join("");
                  }(this._bodyArrayBuffer));
                if (this._bodyFormData)
                  throw new Error("could not read FormData body as text");
                return Promise.resolve(this._bodyText);
              }, o2 && (this.formData = function() {
                return this.text().then(_);
              }), this.json = function() {
                return this.text().then(JSON.parse);
              }, this;
            }
            function j(e5, t5) {
              var r5, o3 = (t5 = t5 || {}).body;
              if (e5 instanceof j) {
                if (e5.bodyUsed)
                  throw new TypeError("Already read");
                this.url = e5.url, this.credentials = e5.credentials, t5.headers || (this.headers = new p(e5.headers)), this.method = e5.method, this.mode = e5.mode, o3 || null == e5._bodyInit || (o3 = e5._bodyInit, e5.bodyUsed = true);
              } else
                this.url = String(e5);
              if (this.credentials = t5.credentials || this.credentials || "omit", !t5.headers && this.headers || (this.headers = new p(t5.headers)), this.method = (e5 = t5.method || this.method || "GET", r5 = e5.toUpperCase(), -1 < u.indexOf(r5) ? r5 : e5), this.mode = t5.mode || this.mode || null, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && o3)
                throw new TypeError("Body not allowed for GET or HEAD requests");
              this._initBody(o3);
            }
            function _(e5) {
              var r5 = new FormData();
              return e5.trim().split("&").forEach(function(e6) {
                var t5;
                e6 && (t5 = (e6 = e6.split("=")).shift().replace(/\+/g, " "), e6 = e6.join("=").replace(/\+/g, " "), r5.append(decodeURIComponent(t5), decodeURIComponent(e6)));
              }), r5;
            }
            function x(e5, t5) {
              t5 = t5 || {}, this.type = "default", this.status = void 0 === t5.status ? 200 : t5.status, this.ok = 200 <= this.status && this.status < 300, this.statusText = "statusText" in t5 ? t5.statusText : "OK", this.headers = new p(t5.headers), this.url = t5.url || "", this._initBody(e5);
            }
            e4.fetch || (t4 = "URLSearchParams" in e4, r4 = "Symbol" in e4 && "iterator" in Symbol, i2 = "FileReader" in e4 && "Blob" in e4 && function() {
              try {
                return new Blob(), true;
              } catch (e5) {
                return false;
              }
            }(), o2 = "FormData" in e4, (n2 = "ArrayBuffer" in e4) && (s3 = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"], a = function(e5) {
              return e5 && DataView.prototype.isPrototypeOf(e5);
            }, l = ArrayBuffer.isView || function(e5) {
              return e5 && -1 < s3.indexOf(Object.prototype.toString.call(e5));
            }), p.prototype.append = function(e5, t5) {
              e5 = d(e5), t5 = f(t5);
              var r5 = this.map[e5];
              this.map[e5] = r5 ? r5 + "," + t5 : t5;
            }, p.prototype.delete = function(e5) {
              delete this.map[d(e5)];
            }, p.prototype.get = function(e5) {
              return e5 = d(e5), this.has(e5) ? this.map[e5] : null;
            }, p.prototype.has = function(e5) {
              return this.map.hasOwnProperty(d(e5));
            }, p.prototype.set = function(e5, t5) {
              this.map[d(e5)] = f(t5);
            }, p.prototype.forEach = function(e5, t5) {
              for (var r5 in this.map)
                this.map.hasOwnProperty(r5) && e5.call(t5, this.map[r5], r5, this);
            }, p.prototype.keys = function() {
              var r5 = [];
              return this.forEach(function(e5, t5) {
                r5.push(t5);
              }), h(r5);
            }, p.prototype.values = function() {
              var t5 = [];
              return this.forEach(function(e5) {
                t5.push(e5);
              }), h(t5);
            }, p.prototype.entries = function() {
              var r5 = [];
              return this.forEach(function(e5, t5) {
                r5.push([t5, e5]);
              }), h(r5);
            }, r4 && (p.prototype[Symbol.iterator] = p.prototype.entries), u = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"], j.prototype.clone = function() {
              return new j(this, { body: this._bodyInit });
            }, b.call(j.prototype), b.call(x.prototype), x.prototype.clone = function() {
              return new x(this._bodyInit, { status: this.status, statusText: this.statusText, headers: new p(this.headers), url: this.url });
            }, x.error = function() {
              var e5 = new x(null, { status: 0, statusText: "" });
              return e5.type = "error", e5;
            }, c = [301, 302, 303, 307, 308], x.redirect = function(e5, t5) {
              if (-1 === c.indexOf(t5))
                throw new RangeError("Invalid status code");
              return new x(null, { status: t5, headers: { location: e5 } });
            }, e4.Headers = p, e4.Request = j, e4.Response = x, e4.fetch = function(r5, s4) {
              return new Promise(function(o3, e5) {
                var t5 = new j(r5, s4), n3 = new XMLHttpRequest();
                n3.onload = function() {
                  var r6, e6 = { status: n3.status, statusText: n3.statusText, headers: (e6 = n3.getAllResponseHeaders() || "", r6 = new p(), e6.replace(/\r?\n[\t ]+/g, " ").split(/\r?\n/).forEach(function(e7) {
                    var e7 = e7.split(":"), t7 = e7.shift().trim();
                    t7 && (e7 = e7.join(":").trim(), r6.append(t7, e7));
                  }), r6) }, t6 = (e6.url = "responseURL" in n3 ? n3.responseURL : e6.headers.get("X-Request-URL"), "response" in n3 ? n3.response : n3.responseText);
                  o3(new x(t6, e6));
                }, n3.onerror = function() {
                  e5(new TypeError("Network request failed"));
                }, n3.ontimeout = function() {
                  e5(new TypeError("Network request failed"));
                }, n3.open(t5.method, t5.url, true), "include" === t5.credentials ? n3.withCredentials = true : "omit" === t5.credentials && (n3.withCredentials = false), "responseType" in n3 && i2 && (n3.responseType = "blob"), t5.headers.forEach(function(e6, t6) {
                  n3.setRequestHeader(t6, e6);
                }), n3.send(void 0 === t5._bodyInit ? null : t5._bodyInit);
              });
            }, e4.fetch.polyfill = true);
          }("undefined" != typeof self ? self : this);
        }, {}], 252: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.function.name"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.split"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var l, o2 = n2(e3("../core/main")), u = n2(e3("../color/color_conversion"));
          function n2(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          var c = [{ h: 0, s: 0, b: 0.8275, name: "gray" }, { h: 0, s: 0, b: 0.8627, name: "gray" }, { h: 0, s: 0, b: 0.7529, name: "gray" }, { h: 0.0167, s: 0.1176, b: 1, name: "light pink" }], d = [{ h: 0, s: 0, b: 0, name: "black" }, { h: 0, s: 0, b: 0.5, name: "gray" }, { h: 0, s: 0, b: 1, name: "white" }, { h: 0, s: 0.5, b: 0.5, name: "dark maroon" }, { h: 0, s: 0.5, b: 1, name: "salmon pink" }, { h: 0, s: 1, b: 0, name: "black" }, { h: 0, s: 1, b: 0.5, name: "dark red" }, { h: 0, s: 1, b: 1, name: "red" }, { h: 5, s: 0, b: 1, name: "very light peach" }, { h: 5, s: 0.5, b: 0.5, name: "brown" }, { h: 5, s: 0.5, b: 1, name: "peach" }, { h: 5, s: 1, b: 0.5, name: "brick red" }, { h: 5, s: 1, b: 1, name: "crimson" }, { h: 10, s: 0, b: 1, name: "light peach" }, { h: 10, s: 0.5, b: 0.5, name: "brown" }, { h: 10, s: 0.5, b: 1, name: "light orange" }, { h: 10, s: 1, b: 0.5, name: "brown" }, { h: 10, s: 1, b: 1, name: "orange" }, { h: 15, s: 0, b: 1, name: "very light yellow" }, { h: 15, s: 0.5, b: 0.5, name: "olive green" }, { h: 15, s: 0.5, b: 1, name: "light yellow" }, { h: 15, s: 1, b: 0, name: "dark olive green" }, { h: 15, s: 1, b: 0.5, name: "olive green" }, { h: 15, s: 1, b: 1, name: "yellow" }, { h: 20, s: 0, b: 1, name: "very light yellow" }, { h: 20, s: 0.5, b: 0.5, name: "olive green" }, { h: 20, s: 0.5, b: 1, name: "light yellow green" }, { h: 20, s: 1, b: 0, name: "dark olive green" }, { h: 20, s: 1, b: 0.5, name: "dark yellow green" }, { h: 20, s: 1, b: 1, name: "yellow green" }, { h: 25, s: 0.5, b: 0.5, name: "dark yellow green" }, { h: 25, s: 0.5, b: 1, name: "light green" }, { h: 25, s: 1, b: 0.5, name: "dark green" }, { h: 25, s: 1, b: 1, name: "green" }, { h: 30, s: 0.5, b: 1, name: "light green" }, { h: 30, s: 1, b: 0.5, name: "dark green" }, { h: 30, s: 1, b: 1, name: "green" }, { h: 35, s: 0, b: 0.5, name: "light green" }, { h: 35, s: 0, b: 1, name: "very light green" }, { h: 35, s: 0.5, b: 0.5, name: "dark green" }, { h: 35, s: 0.5, b: 1, name: "light green" }, { h: 35, s: 1, b: 0, name: "very dark green" }, { h: 35, s: 1, b: 0.5, name: "dark green" }, { h: 35, s: 1, b: 1, name: "green" }, { h: 40, s: 0, b: 1, name: "very light green" }, { h: 40, s: 0.5, b: 0.5, name: "dark green" }, { h: 40, s: 0.5, b: 1, name: "light green" }, { h: 40, s: 1, b: 0.5, name: "dark green" }, { h: 40, s: 1, b: 1, name: "green" }, { h: 45, s: 0.5, b: 1, name: "light turquoise" }, { h: 45, s: 1, b: 0.5, name: "dark turquoise" }, { h: 45, s: 1, b: 1, name: "turquoise" }, { h: 50, s: 0, b: 1, name: "light sky blue" }, { h: 50, s: 0.5, b: 0.5, name: "dark cyan" }, { h: 50, s: 0.5, b: 1, name: "light cyan" }, { h: 50, s: 1, b: 0.5, name: "dark cyan" }, { h: 50, s: 1, b: 1, name: "cyan" }, { h: 55, s: 0, b: 1, name: "light sky blue" }, { h: 55, s: 0.5, b: 1, name: "light sky blue" }, { h: 55, s: 1, b: 0.5, name: "dark blue" }, { h: 55, s: 1, b: 1, name: "sky blue" }, { h: 60, s: 0, b: 0.5, name: "gray" }, { h: 60, s: 0, b: 1, name: "very light blue" }, { h: 60, s: 0.5, b: 0.5, name: "blue" }, { h: 60, s: 0.5, b: 1, name: "light blue" }, { h: 60, s: 1, b: 0.5, name: "navy blue" }, { h: 60, s: 1, b: 1, name: "blue" }, { h: 65, s: 0, b: 1, name: "lavender" }, { h: 65, s: 0.5, b: 0.5, name: "navy blue" }, { h: 65, s: 0.5, b: 1, name: "light purple" }, { h: 65, s: 1, b: 0.5, name: "dark navy blue" }, { h: 65, s: 1, b: 1, name: "blue" }, { h: 70, s: 0, b: 1, name: "lavender" }, { h: 70, s: 0.5, b: 0.5, name: "navy blue" }, { h: 70, s: 0.5, b: 1, name: "lavender blue" }, { h: 70, s: 1, b: 0.5, name: "dark navy blue" }, { h: 70, s: 1, b: 1, name: "blue" }, { h: 75, s: 0.5, b: 1, name: "lavender" }, { h: 75, s: 1, b: 0.5, name: "dark purple" }, { h: 75, s: 1, b: 1, name: "purple" }, { h: 80, s: 0.5, b: 1, name: "pinkish purple" }, { h: 80, s: 1, b: 0.5, name: "dark purple" }, { h: 80, s: 1, b: 1, name: "purple" }, { h: 85, s: 0, b: 1, name: "light pink" }, { h: 85, s: 0.5, b: 0.5, name: "purple" }, { h: 85, s: 0.5, b: 1, name: "light fuchsia" }, { h: 85, s: 1, b: 0.5, name: "dark fuchsia" }, { h: 85, s: 1, b: 1, name: "fuchsia" }, { h: 90, s: 0.5, b: 0.5, name: "dark fuchsia" }, { h: 90, s: 0.5, b: 1, name: "hot pink" }, { h: 90, s: 1, b: 0.5, name: "dark fuchsia" }, { h: 90, s: 1, b: 1, name: "fuchsia" }, { h: 95, s: 0, b: 1, name: "pink" }, { h: 95, s: 0.5, b: 1, name: "light pink" }, { h: 95, s: 1, b: 0.5, name: "dark magenta" }, { h: 95, s: 1, b: 1, name: "magenta" }];
          o2.default.prototype._rgbColorName = function(e4) {
            var t4, r4, e4 = u.default._rgbaToHSBA(e4), o3 = [(l = e4)[0], e4[1], e4[2]];
            0 !== o3[0] && (o3[0] = Math.round(100 * o3[0]), (e4 = o3[0].toString().split(""))[r4 = e4.length - 1] = parseInt(e4[r4]), e4[r4] < 2.5 ? e4[r4] = 0 : 2.5 <= e4[r4] && e4[r4] < 7.5 && (e4[r4] = 5), 2 === e4.length ? (e4[0] = parseInt(e4[0]), 7.5 <= e4[r4] && (e4[r4] = 0, e4[0] = e4[0] + 1), o3[0] = 10 * e4[0] + e4[1]) : 7.5 <= e4[r4] ? o3[0] = 10 : o3[0] = e4[r4]), o3[2] = o3[2] / 255;
            for (var n3 = o3.length - 1; 1 <= n3; n3--)
              o3[n3] <= 0.25 ? o3[n3] = 0 : 0.25 < o3[n3] && o3[n3] < 0.75 ? o3[n3] = 0.5 : o3[n3] = 1;
            if (0 === o3[0] && 0 === o3[1] && 1 === o3[2]) {
              for (var s3 = 2; 0 <= s3; s3--)
                l[s3] = Math.round(1e4 * l[s3]) / 1e4;
              for (var i2 = 0; i2 < c.length; i2++) {
                if (c[i2].h === l[0] && c[i2].s === l[1] && c[i2].b === l[2]) {
                  t4 = c[i2].name;
                  break;
                }
                t4 = "white";
              }
            } else
              for (var a = 0; a < d.length; a++)
                if (d[a].h === o3[0] && d[a].s === o3[1] && d[a].b === o3[2]) {
                  t4 = d[a].name;
                  break;
                }
            return t4;
          };
          e3 = o2.default;
          r3.default = e3;
        }, { "../color/color_conversion": 258, "../core/main": 273, "core-js/modules/es.function.name": 167, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.split": 196 }], 253: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.ends-with"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.ends-with"), e3("core-js/modules/es.string.replace"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var s3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          var i2 = "_Description", a = "_fallbackDesc", l = "_fallbackTable", u = "_Label", c = "_labelDesc", d = "_labelTable";
          function f(e4) {
            if ("label" === e4 || "fallback" === e4)
              throw new Error("description should not be LABEL or FALLBACK");
            return e4.endsWith(".") || e4.endsWith(";") || e4.endsWith(",") || e4.endsWith("?") || e4.endsWith("!") || (e4 += "."), e4;
          }
          s3.default.prototype.describe = function(e4, t4) {
            var r4;
            s3.default._validateParameters("describe", arguments), "string" == typeof e4 && (r4 = this.canvas.id, e4 = f(e4), this.dummyDOM || (this.dummyDOM = document.getElementById(r4).parentNode), this.descriptions || (this.descriptions = {}), this.descriptions.fallback ? this.descriptions.fallback.innerHTML !== e4 && (this.descriptions.fallback.innerHTML = e4) : this._describeHTML("fallback", e4), t4 === this.LABEL && (this.descriptions.label ? this.descriptions.label.innerHTML !== e4 && (this.descriptions.label.innerHTML = e4) : this._describeHTML("label", e4)));
          }, s3.default.prototype.describeElement = function(e4, t4, r4) {
            var o2, n2;
            s3.default._validateParameters("describeElement", arguments), "string" == typeof t4 && "string" == typeof e4 && (o2 = this.canvas.id, t4 = f(t4), n2 = function(e5) {
              if ("label" === e5 || "fallback" === e5)
                throw new Error("element name should not be LABEL or FALLBACK");
              e5.endsWith(".") || e5.endsWith(";") || e5.endsWith(",") ? e5 = e5.replace(/.$/, ":") : e5.endsWith(":") || (e5 += ":");
              return e5;
            }(e4), e4 = e4.replace(/[^a-zA-Z0-9]/g, ""), n2 = '<th scope="row">'.concat(n2, "</th><td>").concat(t4, "</td>"), this.dummyDOM || (this.dummyDOM = document.getElementById(o2).parentNode), this.descriptions ? this.descriptions.fallbackElements || (this.descriptions.fallbackElements = {}) : this.descriptions = { fallbackElements: {} }, this.descriptions.fallbackElements[e4] ? this.descriptions.fallbackElements[e4].innerHTML !== n2 && (this.descriptions.fallbackElements[e4].innerHTML = n2) : this._describeElementHTML("fallback", e4, n2), r4 === this.LABEL && (this.descriptions.labelElements || (this.descriptions.labelElements = {}), this.descriptions.labelElements[e4] ? this.descriptions.labelElements[e4].innerHTML !== n2 && (this.descriptions.labelElements[e4].innerHTML = n2) : this._describeElementHTML("label", e4, n2)));
          }, s3.default.prototype._describeHTML = function(e4, t4) {
            var r4, o2 = this.canvas.id;
            "fallback" === e4 ? (this.dummyDOM.querySelector("#".concat(o2 + i2)) ? this.dummyDOM.querySelector("#" + o2 + l).insertAdjacentHTML("beforebegin", '<p id="'.concat(o2 + a, '"></p>')) : (r4 = '<div id="'.concat(o2).concat(i2, '" role="region" aria-label="Canvas Description"><p id="').concat(o2).concat(a, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o2, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(o2, "accessibleOutput")).insertAdjacentHTML("beforebegin", r4) : this.dummyDOM.querySelector("#".concat(o2)).innerHTML = r4), this.descriptions.fallback = this.dummyDOM.querySelector("#".concat(o2).concat(a)), this.descriptions.fallback.innerHTML = t4) : "label" === e4 && (this.dummyDOM.querySelector("#".concat(o2 + u)) ? this.dummyDOM.querySelector("#".concat(o2 + d)) && this.dummyDOM.querySelector("#".concat(o2 + d)).insertAdjacentHTML("beforebegin", '<p id="'.concat(o2).concat(c, '"></p>')) : (r4 = '<div id="'.concat(o2).concat(u, '" class="p5Label"><p id="').concat(o2).concat(c, '"></p></div>'), this.dummyDOM.querySelector("#".concat(o2, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(o2, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", r4) : this.dummyDOM.querySelector("#" + o2).insertAdjacentHTML("afterend", r4)), this.descriptions.label = this.dummyDOM.querySelector("#" + o2 + c), this.descriptions.label.innerHTML = t4);
          }, s3.default.prototype._describeElementHTML = function(e4, t4, r4) {
            var o2, n2 = this.canvas.id;
            "fallback" === e4 ? (this.dummyDOM.querySelector("#".concat(n2 + i2)) ? this.dummyDOM.querySelector("#" + n2 + l) || this.dummyDOM.querySelector("#" + n2 + a).insertAdjacentHTML("afterend", '<table id="'.concat(n2).concat(l, '"><caption>Canvas elements and their descriptions</caption></table>')) : (o2 = '<div id="'.concat(n2).concat(i2, '" role="region" aria-label="Canvas Description"><table id="').concat(n2).concat(l, '"><caption>Canvas elements and their descriptions</caption></table></div>'), this.dummyDOM.querySelector("#".concat(n2, "accessibleOutput")) ? this.dummyDOM.querySelector("#".concat(n2, "accessibleOutput")).insertAdjacentHTML("beforebegin", o2) : this.dummyDOM.querySelector("#" + n2).innerHTML = o2), (o2 = document.createElement("tr")).id = n2 + "_fte_" + t4, this.dummyDOM.querySelector("#" + n2 + l).appendChild(o2), this.descriptions.fallbackElements[t4] = this.dummyDOM.querySelector("#".concat(n2).concat("_fte_").concat(t4)), this.descriptions.fallbackElements[t4].innerHTML = r4) : "label" === e4 && (this.dummyDOM.querySelector("#".concat(n2 + u)) ? this.dummyDOM.querySelector("#".concat(n2 + d)) || this.dummyDOM.querySelector("#" + n2 + c).insertAdjacentHTML("afterend", '<table id="'.concat(n2 + d, '"></table>')) : (o2 = '<div id="'.concat(n2).concat(u, '" class="p5Label"><table id="').concat(n2).concat(d, '"></table></div>'), this.dummyDOM.querySelector("#".concat(n2, "accessibleOutputLabel")) ? this.dummyDOM.querySelector("#".concat(n2, "accessibleOutputLabel")).insertAdjacentHTML("beforebegin", o2) : this.dummyDOM.querySelector("#" + n2).insertAdjacentHTML("afterend", o2)), (e4 = document.createElement("tr")).id = n2 + "_lte_" + t4, this.dummyDOM.querySelector("#" + n2 + d).appendChild(e4), this.descriptions.labelElements[t4] = this.dummyDOM.querySelector("#".concat(n2).concat("_lte_").concat(t4)), this.descriptions.labelElements[t4].innerHTML = r4);
          };
          e3 = s3.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.ends-with": 188, "core-js/modules/es.string.replace": 194 }], 254: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.string.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.prototype._updateGridOutput = function(e4) {
            var t4, r4, o2, n2;
            this.dummyDOM.querySelector("#".concat(e4, "_summary")) && (t4 = this._accessibleOutputs[e4], o2 = function(e5, t5, r5, o3) {
              t5 = "".concat(t5, " canvas, ").concat(r5, " by ").concat(o3, " pixels, contains ").concat(e5[0]);
              t5 = (1 === e5[0] ? "".concat(t5, " shape: ") : "".concat(t5, " shapes: ")).concat(e5[1]);
              return t5;
            }((r4 = function(e5, t5) {
              var r5, o3 = "", n3 = "", s3 = 0;
              for (r5 in t5) {
                var i2, a = 0;
                for (i2 in t5[r5]) {
                  var l = '<li id="'.concat(e5, "shape").concat(s3, '">').concat(t5[r5][i2].color, " ").concat(r5, ",");
                  "line" === r5 ? l += " location = ".concat(t5[r5][i2].pos, ", length = ").concat(t5[r5][i2].length, " pixels") : (l += " location = ".concat(t5[r5][i2].pos), "point" !== r5 && (l += ", area = ".concat(t5[r5][i2].area, " %")), l += "</li>"), o3 += l, a++, s3++;
                }
                n3 = 1 < a ? "".concat(n3, " ").concat(a, " ").concat(r5, "s") : "".concat(n3, " ").concat(a, " ").concat(r5);
              }
              return { numShapes: [s3, n3], details: o3 };
            }(e4, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n2 = function(e5, t5) {
              var r5, o3, n3 = 0, s3 = "", i2 = Array.from(Array(10), function() {
                return Array(10);
              });
              for (r5 in t5)
                for (var a in t5[r5]) {
                  var l = void 0;
                  l = "line" !== r5 ? '<a href="#'.concat(e5, "shape").concat(n3, '">').concat(t5[r5][a].color, " ").concat(r5, "</a>") : '<a href="#'.concat(e5, "shape").concat(n3, '">').concat(t5[r5][a].color, " ").concat(r5, " midpoint</a>"), i2[t5[r5][a].loc.locY][t5[r5][a].loc.locX] ? i2[t5[r5][a].loc.locY][t5[r5][a].loc.locX] = i2[t5[r5][a].loc.locY][t5[r5][a].loc.locX] + "  " + l : i2[t5[r5][a].loc.locY][t5[r5][a].loc.locX] = l, n3++;
                }
              for (o3 in i2) {
                var u, c = "<tr>";
                for (u in i2[o3])
                  c += "<td>", void 0 !== i2[o3][u] && (c += i2[o3][u]), c += "</td>";
                s3 = s3 + c + "</tr>";
              }
              return s3;
            }(e4, this.ingredients.shapes), o2 !== t4.summary.innerHTML && (t4.summary.innerHTML = o2), n2 !== t4.map.innerHTML && (t4.map.innerHTML = n2), r4.details !== t4.shapeDetails.innerHTML && (t4.shapeDetails.innerHTML = r4.details), this._accessibleOutputs[e4] = t4);
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.map": 163, "core-js/modules/es.string.iterator": 190 }], 255: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var o2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function l(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          function u(e4, t4, r4) {
            t4 = Math.floor(e4[0] / t4 * 10), e4 = Math.floor(e4[1] / r4 * 10);
            return 10 === t4 && (t4 -= 1), 10 === e4 && (e4 -= 1), { locX: t4, locY: e4 };
          }
          o2.default.prototype.textOutput = function(e4) {
            o2.default._validateParameters("textOutput", arguments), this._accessibleOutputs.text || (this._accessibleOutputs.text = true, this._createOutput("textOutput", "Fallback"), e4 === this.LABEL && (this._accessibleOutputs.textLabel = true, this._createOutput("textOutput", "Label")));
          }, o2.default.prototype.gridOutput = function(e4) {
            o2.default._validateParameters("gridOutput", arguments), this._accessibleOutputs.grid || (this._accessibleOutputs.grid = true, this._createOutput("gridOutput", "Fallback"), e4 === this.LABEL && (this._accessibleOutputs.gridLabel = true, this._createOutput("gridOutput", "Label")));
          }, o2.default.prototype._addAccsOutput = function() {
            return this._accessibleOutputs || (this._accessibleOutputs = { text: false, grid: false, textLabel: false, gridLabel: false }), this._accessibleOutputs.grid || this._accessibleOutputs.text;
          }, o2.default.prototype._createOutput = function(e4, t4) {
            var r4, o3, n2, s3 = this.canvas.id, i2 = (this.ingredients || (this.ingredients = { shapes: {}, colors: { background: "white", fill: "white", stroke: "black" }, pShapes: "" }), this.dummyDOM || (this.dummyDOM = document.getElementById(s3).parentNode), "");
            "Fallback" === t4 ? (r4 = s3 + e4, this.dummyDOM.querySelector("#".concat(o3 = s3 + "accessibleOutput")) || (this.dummyDOM.querySelector("#".concat(s3, "_Description")) ? this.dummyDOM.querySelector("#".concat(s3, "_Description")).insertAdjacentHTML("afterend", '<div id="'.concat(o3, '" role="region" aria-label="Canvas Outputs"></div>')) : this.dummyDOM.querySelector("#".concat(s3)).innerHTML = '<div id="'.concat(o3, '" role="region" aria-label="Canvas Outputs"></div>'))) : "Label" === t4 && (r4 = s3 + e4 + (i2 = t4), this.dummyDOM.querySelector("#".concat(o3 = s3 + "accessibleOutput" + t4)) || (this.dummyDOM.querySelector("#".concat(s3, "_Label")) ? this.dummyDOM.querySelector("#".concat(s3, "_Label")) : this.dummyDOM.querySelector("#".concat(s3))).insertAdjacentHTML("afterend", '<div id="'.concat(o3, '"></div>'))), this._accessibleOutputs[r4] = {}, "textOutput" === e4 ? (i2 = "#".concat(s3, "gridOutput").concat(i2), n2 = '<div id="'.concat(r4, '">Text Output<div id="').concat(r4, 'Summary" aria-label="text output summary"><p id="').concat(r4, '_summary"></p><ul id="').concat(r4, '_list"></ul></div><table id="').concat(r4, '_shapeDetails" summary="text output shape details"></table></div>'), this.dummyDOM.querySelector(i2) ? this.dummyDOM.querySelector(i2).insertAdjacentHTML("beforebegin", n2) : this.dummyDOM.querySelector("#".concat(o3)).innerHTML = n2, this._accessibleOutputs[r4].list = this.dummyDOM.querySelector("#".concat(r4, "_list"))) : "gridOutput" === e4 && (i2 = "#".concat(s3, "textOutput").concat(i2), n2 = '<div id="'.concat(r4, '">Grid Output<p id="').concat(r4, '_summary" aria-label="grid output summary"><table id="').concat(r4, '_map" summary="grid output content"></table><ul id="').concat(r4, '_shapeDetails" aria-label="grid output shape details"></ul></div>'), this.dummyDOM.querySelector(i2) ? this.dummyDOM.querySelector(i2).insertAdjacentHTML("afterend", n2) : this.dummyDOM.querySelector("#".concat(o3)).innerHTML = n2, this._accessibleOutputs[r4].map = this.dummyDOM.querySelector("#".concat(r4, "_map"))), this._accessibleOutputs[r4].shapeDetails = this.dummyDOM.querySelector("#".concat(r4, "_shapeDetails")), this._accessibleOutputs[r4].summary = this.dummyDOM.querySelector("#".concat(r4, "_summary"));
          }, o2.default.prototype._updateAccsOutput = function() {
            var e4 = this.canvas.id;
            JSON.stringify(this.ingredients.shapes) !== this.ingredients.pShapes && (this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this._accessibleOutputs.text && this._updateTextOutput(e4 + "textOutput"), this._accessibleOutputs.grid && this._updateGridOutput(e4 + "gridOutput"), this._accessibleOutputs.textLabel && this._updateTextOutput(e4 + "textOutputLabel"), this._accessibleOutputs.gridLabel && this._updateGridOutput(e4 + "gridOutputLabel"));
          }, o2.default.prototype._accsBackground = function(e4) {
            this.ingredients.pShapes = JSON.stringify(this.ingredients.shapes), this.ingredients.shapes = {}, this.ingredients.colors.backgroundRGBA !== e4 && (this.ingredients.colors.backgroundRGBA = e4, this.ingredients.colors.background = this._rgbColorName(e4));
          }, o2.default.prototype._accsCanvasColors = function(e4, t4) {
            "fill" === e4 ? this.ingredients.colors.fillRGBA !== t4 && (this.ingredients.colors.fillRGBA = t4, this.ingredients.colors.fill = this._rgbColorName(t4)) : "stroke" === e4 && this.ingredients.colors.strokeRGBA !== t4 && (this.ingredients.colors.strokeRGBA = t4, this.ingredients.colors.stroke = this._rgbColorName(t4));
          }, o2.default.prototype._accsOutput = function(e4, t4) {
            "ellipse" === e4 && t4[2] === t4[3] ? e4 = "circle" : "rectangle" === e4 && t4[2] === t4[3] && (e4 = "square");
            var r4, o3, n2 = {}, s3 = true, i2 = function(e5, t5) {
              var r5;
              e5 = "rectangle" === e5 || "ellipse" === e5 || "arc" === e5 || "circle" === e5 || "square" === e5 ? (r5 = Math.round(t5[0] + t5[2] / 2), Math.round(t5[1] + t5[3] / 2)) : "triangle" === e5 ? (r5 = (t5[0] + t5[2] + t5[4]) / 3, (t5[1] + t5[3] + t5[5]) / 3) : "quadrilateral" === e5 ? (r5 = (t5[0] + t5[2] + t5[4] + t5[6]) / 4, (t5[1] + t5[3] + t5[5] + t5[7]) / 4) : "line" === e5 ? (r5 = (t5[0] + t5[2]) / 2, (t5[1] + t5[3]) / 2) : (r5 = t5[0], t5[1]);
              return [r5, e5];
            }(e4, t4);
            if ("line" === e4 ? (n2.color = this.ingredients.colors.stroke, n2.length = Math.round(this.dist(t4[0], t4[1], t4[2], t4[3])), r4 = this._getPos(t4[0], [1]), o3 = this._getPos(t4[2], [3]), n2.loc = u(i2, this.width, this.height), n2.pos = r4 === o3 ? "at ".concat(r4) : "from ".concat(r4, " to ").concat(o3)) : ("point" === e4 ? n2.color = this.ingredients.colors.stroke : (n2.color = this.ingredients.colors.fill, n2.area = this._getArea(e4, t4)), n2.pos = this._getPos.apply(this, l(i2)), n2.loc = u(i2, this.width, this.height)), this.ingredients.shapes[e4]) {
              if (this.ingredients.shapes[e4] !== [n2]) {
                for (var a in this.ingredients.shapes[e4])
                  JSON.stringify(this.ingredients.shapes[e4][a]) === JSON.stringify(n2) && (s3 = false);
                true === s3 && this.ingredients.shapes[e4].push(n2);
              }
            } else
              this.ingredients.shapes[e4] = [n2];
          }, o2.default.prototype._getPos = function(e4, t4) {
            var e4 = new DOMPointReadOnly(e4, t4), t4 = this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform(), e4 = e4.matrixTransform(t4), t4 = e4.x, e4 = e4.y, r4 = this.width, o3 = this.height;
            return t4 < 0.4 * r4 ? e4 < 0.4 * o3 ? "top left" : 0.6 * o3 < e4 ? "bottom left" : "mid left" : 0.6 * r4 < t4 ? e4 < 0.4 * o3 ? "top right" : 0.6 * o3 < e4 ? "bottom right" : "mid right" : e4 < 0.4 * o3 ? "top middle" : 0.6 * o3 < e4 ? "bottom middle" : "middle";
          }, o2.default.prototype._getArea = function(e4, t4) {
            var r4, o3, n2 = 0, s3 = ("arc" === e4 ? (n2 = (r4 = ((t4[5] - t4[4]) % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI)) * t4[2] * t4[3] / 8, "open" !== t4[6] && "chord" !== t4[6] || (o3 = t4[0], u2 = t4[1], s3 = t4[0] + t4[2] / 2 * Math.cos(t4[4]).toFixed(2), c = t4[1] + t4[3] / 2 * Math.sin(t4[4]).toFixed(2), a = t4[0] + t4[2] / 2 * Math.cos(t4[5]).toFixed(2), i2 = t4[1] + t4[3] / 2 * Math.sin(t4[5]).toFixed(2), o3 = Math.abs(o3 * (c - i2) + s3 * (i2 - u2) + a * (u2 - c)) / 2, r4 > Math.PI ? n2 += o3 : n2 -= o3)) : "ellipse" === e4 || "circle" === e4 ? n2 = 3.14 * t4[2] / 2 * t4[3] / 2 : "line" === e4 || "point" === e4 ? n2 = 0 : "quadrilateral" === e4 ? n2 = Math.abs((t4[6] + t4[0]) * (t4[7] - t4[1]) + (t4[0] + t4[2]) * (t4[1] - t4[3]) + (t4[2] + t4[4]) * (t4[3] - t4[5]) + (t4[4] + t4[6]) * (t4[5] - t4[7])) / 2 : "rectangle" === e4 || "square" === e4 ? n2 = t4[2] * t4[3] : "triangle" === e4 && (n2 = Math.abs(t4[0] * (t4[3] - t4[5]) + t4[2] * (t4[5] - t4[1]) + t4[4] * (t4[1] - t4[3])) / 2), this.width * this._pixelDensity), i2 = this.height * this._pixelDensity, a = [new DOMPoint(0, 0), new DOMPoint(s3, 0), new DOMPoint(s3, i2), new DOMPoint(0, i2)], l2 = (this._renderer.isP3D ? new DOMMatrix(this._renderer.uMVMatrix.mat4) : this.drawingContext.getTransform()).inverse(), u2 = a.map(function(e5) {
              return e5.matrixTransform(l2);
            }), c = Math.abs((u2[3].x + u2[0].x) * (u2[3].y - u2[0].y) + (u2[0].x + u2[1].x) * (u2[0].y - u2[1].y) + (u2[1].x + u2[2].x) * (u2[1].y - u2[2].y) + (u2[2].x + u2[3].x) * (u2[2].y - u2[3].y)) / 2;
            return Math.round(100 * n2 / c);
          };
          e3 = o2.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.map": 163, "core-js/modules/es.number.to-fixed": 173, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 256: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.concat"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.prototype._updateTextOutput = function(e4) {
            var t4, r4, o2, n2;
            this.dummyDOM.querySelector("#".concat(e4, "_summary")) && (t4 = this._accessibleOutputs[e4], o2 = function(e5, t5, r5, o3) {
              r5 = "Your output is a, ".concat(r5, " by ").concat(o3, " pixels, ").concat(t5, " canvas containing the following");
              r5 = 1 === e5 ? "".concat(r5, " shape:") : "".concat(r5, " ").concat(e5, " shapes:");
              return r5;
            }((r4 = function(e5, t5) {
              var r5, o3 = "", n3 = 0;
              for (r5 in t5)
                for (var s3 in t5[r5]) {
                  var i2 = '<li><a href="#'.concat(e5, "shape").concat(n3, '">').concat(t5[r5][s3].color, " ").concat(r5, "</a>");
                  "line" === r5 ? i2 += ", ".concat(t5[r5][s3].pos, ", ").concat(t5[r5][s3].length, " pixels long.</li>") : (i2 += ", at ".concat(t5[r5][s3].pos), "point" !== r5 && (i2 += ", covering ".concat(t5[r5][s3].area, "% of the canvas")), i2 += ".</li>"), o3 += i2, n3++;
                }
              return { numShapes: n3, listShapes: o3 };
            }(e4, this.ingredients.shapes)).numShapes, this.ingredients.colors.background, this.width, this.height), n2 = function(e5, t5) {
              var r5, o3 = "", n3 = 0;
              for (r5 in t5)
                for (var s3 in t5[r5]) {
                  var i2 = '<tr id="'.concat(e5, "shape").concat(n3, '"><th>').concat(t5[r5][s3].color, " ").concat(r5, "</th>");
                  "line" === r5 ? i2 += "<td>location = ".concat(t5[r5][s3].pos, "</td><td>length = ").concat(t5[r5][s3].length, " pixels</td></tr>") : (i2 += "<td>location = ".concat(t5[r5][s3].pos, "</td>"), "point" !== r5 && (i2 += "<td> area = ".concat(t5[r5][s3].area, "%</td>")), i2 += "</tr>"), o3 += i2, n3++;
                }
              return o3;
            }(e4, this.ingredients.shapes), o2 !== t4.summary.innerHTML && (t4.summary.innerHTML = o2), r4.listShapes !== t4.list.innerHTML && (t4.list.innerHTML = r4.listShapes), n2 !== t4.shapeDetails.innerHTML && (t4.shapeDetails.innerHTML = n2), this._accessibleOutputs[e4] = t4);
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151 }], 257: [function(e3, t3, r3) {
          "use strict";
          var o2 = (o2 = e3("./core/main")) && o2.__esModule ? o2 : { default: o2 };
          e3("./core/constants"), e3("./core/environment"), e3("./core/friendly_errors/stacktrace"), e3("./core/friendly_errors/validate_params"), e3("./core/friendly_errors/file_errors"), e3("./core/friendly_errors/fes_core"), e3("./core/friendly_errors/sketch_reader"), e3("./core/helpers"), e3("./core/legacy"), e3("./core/preload"), e3("./core/p5.Element"), e3("./core/p5.Graphics"), e3("./core/p5.Renderer"), e3("./core/p5.Renderer2D"), e3("./core/rendering"), e3("./core/shim"), e3("./core/structure"), e3("./core/transform"), e3("./core/shape/2d_primitives"), e3("./core/shape/attributes"), e3("./core/shape/curves"), e3("./core/shape/vertex"), e3("./accessibility/outputs"), e3("./accessibility/textOutput"), e3("./accessibility/gridOutput"), e3("./accessibility/color_namer"), e3("./color/color_conversion"), e3("./color/creating_reading"), e3("./color/p5.Color"), e3("./color/setting"), e3("./data/p5.TypedDict"), e3("./data/local_storage.js"), e3("./dom/dom"), e3("./accessibility/describe"), e3("./events/acceleration"), e3("./events/keyboard"), e3("./events/mouse"), e3("./events/touch"), e3("./image/filters"), e3("./image/image"), e3("./image/loading_displaying"), e3("./image/p5.Image"), e3("./image/pixels"), e3("./io/files"), e3("./io/p5.Table"), e3("./io/p5.TableRow"), e3("./io/p5.XML"), e3("./math/calculation"), e3("./math/math"), e3("./math/noise"), e3("./math/p5.Vector"), e3("./math/random"), e3("./math/trigonometry"), e3("./typography/attributes"), e3("./typography/loading_displaying"), e3("./typography/p5.Font"), e3("./utilities/array_functions"), e3("./utilities/conversion"), e3("./utilities/string_functions"), e3("./utilities/time_date"), e3("./webgl/3d_primitives"), e3("./webgl/interaction"), e3("./webgl/light"), e3("./webgl/loading"), e3("./webgl/material"), e3("./webgl/p5.Camera"), e3("./webgl/p5.Geometry"), e3("./webgl/p5.Matrix"), e3("./webgl/p5.RendererGL.Immediate"), e3("./webgl/p5.RendererGL"), e3("./webgl/p5.RendererGL.Retained"), e3("./webgl/p5.Framebuffer"), e3("./webgl/p5.Shader"), e3("./webgl/p5.RenderBuffer"), e3("./webgl/p5.Texture"), e3("./webgl/text"), e3("./core/init"), t3.exports = o2.default;
        }, { "./accessibility/color_namer": 252, "./accessibility/describe": 253, "./accessibility/gridOutput": 254, "./accessibility/outputs": 255, "./accessibility/textOutput": 256, "./color/color_conversion": 258, "./color/creating_reading": 259, "./color/p5.Color": 260, "./color/setting": 261, "./core/constants": 262, "./core/environment": 263, "./core/friendly_errors/fes_core": 264, "./core/friendly_errors/file_errors": 265, "./core/friendly_errors/sketch_reader": 266, "./core/friendly_errors/stacktrace": 267, "./core/friendly_errors/validate_params": 268, "./core/helpers": 269, "./core/init": 270, "./core/legacy": 272, "./core/main": 273, "./core/p5.Element": 274, "./core/p5.Graphics": 275, "./core/p5.Renderer": 276, "./core/p5.Renderer2D": 277, "./core/preload": 278, "./core/rendering": 279, "./core/shape/2d_primitives": 280, "./core/shape/attributes": 281, "./core/shape/curves": 282, "./core/shape/vertex": 283, "./core/shim": 284, "./core/structure": 285, "./core/transform": 286, "./data/local_storage.js": 287, "./data/p5.TypedDict": 288, "./dom/dom": 289, "./events/acceleration": 290, "./events/keyboard": 291, "./events/mouse": 292, "./events/touch": 293, "./image/filters": 294, "./image/image": 295, "./image/loading_displaying": 296, "./image/p5.Image": 297, "./image/pixels": 298, "./io/files": 299, "./io/p5.Table": 300, "./io/p5.TableRow": 301, "./io/p5.XML": 302, "./math/calculation": 303, "./math/math": 304, "./math/noise": 305, "./math/p5.Vector": 306, "./math/random": 307, "./math/trigonometry": 308, "./typography/attributes": 309, "./typography/loading_displaying": 310, "./typography/p5.Font": 311, "./utilities/array_functions": 312, "./utilities/conversion": 313, "./utilities/string_functions": 314, "./utilities/time_date": 315, "./webgl/3d_primitives": 316, "./webgl/interaction": 317, "./webgl/light": 318, "./webgl/loading": 319, "./webgl/material": 320, "./webgl/p5.Camera": 321, "./webgl/p5.Framebuffer": 322, "./webgl/p5.Geometry": 323, "./webgl/p5.Matrix": 324, "./webgl/p5.RenderBuffer": 325, "./webgl/p5.RendererGL": 328, "./webgl/p5.RendererGL.Immediate": 326, "./webgl/p5.RendererGL.Retained": 327, "./webgl/p5.Shader": 329, "./webgl/p5.Texture": 330, "./webgl/text": 331 }], 258: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.ColorConversion = { _hsbaToHSLA: function(e4) {
            var t4 = e4[0], r4 = e4[1], o2 = e4[2], n2 = (2 - r4) * o2 / 2;
            return 0 != n2 && (1 == n2 ? r4 = 0 : n2 < 0.5 ? r4 /= 2 - r4 : r4 = r4 * o2 / (2 - 2 * n2)), [t4, r4, n2, e4[3]];
          }, _hsbaToRGBA: function(e4) {
            var t4, r4, o2, n2, s3, i2 = 6 * e4[0], a = e4[1], l = e4[2];
            return 0 === a ? [l, l, l, e4[3]] : (r4 = l * (1 - a), o2 = l * (1 - a * (i2 - (t4 = Math.floor(i2)))), a = l * (1 - a * (1 + t4 - i2)), i2 = 1 === t4 ? (n2 = o2, s3 = l, r4) : 2 === t4 ? (n2 = r4, s3 = l, a) : 3 === t4 ? (n2 = r4, s3 = o2, l) : 4 === t4 ? (n2 = a, s3 = r4, l) : 5 === t4 ? (n2 = l, s3 = r4, o2) : (n2 = l, s3 = a, r4), [n2, s3, i2, e4[3]]);
          }, _hslaToHSBA: function(e4) {
            var t4 = e4[0], r4 = e4[1], o2 = e4[2], n2 = o2 < 0.5 ? (1 + r4) * o2 : o2 + r4 - o2 * r4;
            return [t4, r4 = 2 * (n2 - o2) / n2, n2, e4[3]];
          }, _hslaToRGBA: function(e4) {
            var t4, r4 = 6 * e4[0], o2 = e4[1], n2 = e4[2];
            return 0 === o2 ? [n2, n2, n2, e4[3]] : [(t4 = function(e5, t5, r5) {
              return e5 < 0 ? e5 += 6 : 6 <= e5 && (e5 -= 6), e5 < 1 ? t5 + (r5 - t5) * e5 : e5 < 3 ? r5 : e5 < 4 ? t5 + (r5 - t5) * (4 - e5) : t5;
            })(2 + r4, o2 = 2 * n2 - (n2 = n2 < 0.5 ? (1 + o2) * n2 : n2 + o2 - n2 * o2), n2), t4(r4, o2, n2), t4(r4 - 2, o2, n2), e4[3]];
          }, _rgbaToHSBA: function(e4) {
            var t4, r4, o2 = e4[0], n2 = e4[1], s3 = e4[2], i2 = Math.max(o2, n2, s3), a = i2 - Math.min(o2, n2, s3);
            return 0 == a ? r4 = t4 = 0 : (r4 = a / i2, o2 === i2 ? t4 = (n2 - s3) / a : n2 === i2 ? t4 = 2 + (s3 - o2) / a : s3 === i2 && (t4 = 4 + (o2 - n2) / a), t4 < 0 ? t4 += 6 : 6 <= t4 && (t4 -= 6)), [t4 / 6, r4, i2, e4[3]];
          }, _rgbaToHSLA: function(e4) {
            var t4, r4, o2 = e4[0], n2 = e4[1], s3 = e4[2], i2 = Math.max(o2, n2, s3), a = Math.min(o2, n2, s3), l = i2 + a, a = i2 - a;
            return 0 == a ? r4 = t4 = 0 : (r4 = l < 1 ? a / l : a / (2 - l), o2 === i2 ? t4 = (n2 - s3) / a : n2 === i2 ? t4 = 2 + (s3 - o2) / a : s3 === i2 && (t4 = 4 + (o2 - n2) / a), t4 < 0 ? t4 += 6 : 6 <= t4 && (t4 -= 6)), [t4 / 6, r4, l / 2, e4[3]];
          } };
          e3 = e3.default.ColorConversion;
          r3.default = e3;
        }, { "../core/main": 273 }], 259: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.map"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var l = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, u = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s3;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s3 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r4, s3) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          e3("./p5.Color"), e3("../core/friendly_errors/validate_params"), e3("../core/friendly_errors/file_errors"), e3("../core/friendly_errors/fes_core"), l.default.prototype.alpha = function(e4) {
            return l.default._validateParameters("alpha", arguments), this.color(e4)._getAlpha();
          }, l.default.prototype.blue = function(e4) {
            return l.default._validateParameters("blue", arguments), this.color(e4)._getBlue();
          }, l.default.prototype.brightness = function(e4) {
            return l.default._validateParameters("brightness", arguments), this.color(e4)._getBrightness();
          }, l.default.prototype.color = function() {
            var e4;
            return l.default._validateParameters("color", arguments), arguments[0] instanceof l.default.Color ? arguments[0] : (e4 = arguments[0] instanceof Array ? arguments[0] : arguments, new l.default.Color(this, e4));
          }, l.default.prototype.green = function(e4) {
            return l.default._validateParameters("green", arguments), this.color(e4)._getGreen();
          }, l.default.prototype.hue = function(e4) {
            return l.default._validateParameters("hue", arguments), this.color(e4)._getHue();
          }, l.default.prototype.lerpColor = function(e4, t4, r4) {
            l.default._validateParameters("lerpColor", arguments);
            var o3, n3, s3, i3 = this._colorMode, a2 = this._colorMaxes;
            if (i3 === u.RGB)
              n3 = e4.levels.map(function(e5) {
                return e5 / 255;
              }), s3 = t4.levels.map(function(e5) {
                return e5 / 255;
              });
            else if (i3 === u.HSB)
              e4._getBrightness(), t4._getBrightness(), n3 = e4.hsba, s3 = t4.hsba;
            else {
              if (i3 !== u.HSL)
                throw new Error("".concat(i3, "cannot be used for interpolation."));
              e4._getLightness(), t4._getLightness(), n3 = e4.hsla, s3 = t4.hsla;
            }
            return r4 = Math.max(Math.min(r4, 1), 0), void 0 === this.lerp && (this.lerp = function(e5, t5, r5) {
              return r5 * (t5 - e5) + e5;
            }), e4 = this.lerp(n3[0], s3[0], r4), t4 = this.lerp(n3[1], s3[1], r4), o3 = this.lerp(n3[2], s3[2], r4), n3 = this.lerp(n3[3], s3[3], r4), e4 *= a2[i3][0], t4 *= a2[i3][1], o3 *= a2[i3][2], n3 *= a2[i3][3], this.color(e4, t4, o3, n3);
          }, l.default.prototype.lightness = function(e4) {
            return l.default._validateParameters("lightness", arguments), this.color(e4)._getLightness();
          }, l.default.prototype.red = function(e4) {
            return l.default._validateParameters("red", arguments), this.color(e4)._getRed();
          }, l.default.prototype.saturation = function(e4) {
            return l.default._validateParameters("saturation", arguments), this.color(e4)._getSaturation();
          };
          var n2 = l.default;
          r3.default = n2;
        }, { "../core/constants": 262, "../core/friendly_errors/fes_core": 264, "../core/friendly_errors/file_errors": 265, "../core/friendly_errors/validate_params": 268, "../core/main": 273, "./p5.Color": 260, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.map": 163, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 260: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.trim"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = s3(e3("../core/main")), d = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants")), f = s3(e3("./color_conversion"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          function s3(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function l(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          var h = { aliceblue: "#f0f8ff", antiquewhite: "#faebd7", aqua: "#00ffff", aquamarine: "#7fffd4", azure: "#f0ffff", beige: "#f5f5dc", bisque: "#ffe4c4", black: "#000000", blanchedalmond: "#ffebcd", blue: "#0000ff", blueviolet: "#8a2be2", brown: "#a52a2a", burlywood: "#deb887", cadetblue: "#5f9ea0", chartreuse: "#7fff00", chocolate: "#d2691e", coral: "#ff7f50", cornflowerblue: "#6495ed", cornsilk: "#fff8dc", crimson: "#dc143c", cyan: "#00ffff", darkblue: "#00008b", darkcyan: "#008b8b", darkgoldenrod: "#b8860b", darkgray: "#a9a9a9", darkgreen: "#006400", darkgrey: "#a9a9a9", darkkhaki: "#bdb76b", darkmagenta: "#8b008b", darkolivegreen: "#556b2f", darkorange: "#ff8c00", darkorchid: "#9932cc", darkred: "#8b0000", darksalmon: "#e9967a", darkseagreen: "#8fbc8f", darkslateblue: "#483d8b", darkslategray: "#2f4f4f", darkslategrey: "#2f4f4f", darkturquoise: "#00ced1", darkviolet: "#9400d3", deeppink: "#ff1493", deepskyblue: "#00bfff", dimgray: "#696969", dimgrey: "#696969", dodgerblue: "#1e90ff", firebrick: "#b22222", floralwhite: "#fffaf0", forestgreen: "#228b22", fuchsia: "#ff00ff", gainsboro: "#dcdcdc", ghostwhite: "#f8f8ff", gold: "#ffd700", goldenrod: "#daa520", gray: "#808080", green: "#008000", greenyellow: "#adff2f", grey: "#808080", honeydew: "#f0fff0", hotpink: "#ff69b4", indianred: "#cd5c5c", indigo: "#4b0082", ivory: "#fffff0", khaki: "#f0e68c", lavender: "#e6e6fa", lavenderblush: "#fff0f5", lawngreen: "#7cfc00", lemonchiffon: "#fffacd", lightblue: "#add8e6", lightcoral: "#f08080", lightcyan: "#e0ffff", lightgoldenrodyellow: "#fafad2", lightgray: "#d3d3d3", lightgreen: "#90ee90", lightgrey: "#d3d3d3", lightpink: "#ffb6c1", lightsalmon: "#ffa07a", lightseagreen: "#20b2aa", lightskyblue: "#87cefa", lightslategray: "#778899", lightslategrey: "#778899", lightsteelblue: "#b0c4de", lightyellow: "#ffffe0", lime: "#00ff00", limegreen: "#32cd32", linen: "#faf0e6", magenta: "#ff00ff", maroon: "#800000", mediumaquamarine: "#66cdaa", mediumblue: "#0000cd", mediumorchid: "#ba55d3", mediumpurple: "#9370db", mediumseagreen: "#3cb371", mediumslateblue: "#7b68ee", mediumspringgreen: "#00fa9a", mediumturquoise: "#48d1cc", mediumvioletred: "#c71585", midnightblue: "#191970", mintcream: "#f5fffa", mistyrose: "#ffe4e1", moccasin: "#ffe4b5", navajowhite: "#ffdead", navy: "#000080", oldlace: "#fdf5e6", olive: "#808000", olivedrab: "#6b8e23", orange: "#ffa500", orangered: "#ff4500", orchid: "#da70d6", palegoldenrod: "#eee8aa", palegreen: "#98fb98", paleturquoise: "#afeeee", palevioletred: "#db7093", papayawhip: "#ffefd5", peachpuff: "#ffdab9", peru: "#cd853f", pink: "#ffc0cb", plum: "#dda0dd", powderblue: "#b0e0e6", purple: "#800080", rebeccapurple: "#663399", red: "#ff0000", rosybrown: "#bc8f8f", royalblue: "#4169e1", saddlebrown: "#8b4513", salmon: "#fa8072", sandybrown: "#f4a460", seagreen: "#2e8b57", seashell: "#fff5ee", sienna: "#a0522d", silver: "#c0c0c0", skyblue: "#87ceeb", slateblue: "#6a5acd", slategray: "#708090", slategrey: "#708090", snow: "#fffafa", springgreen: "#00ff7f", steelblue: "#4682b4", tan: "#d2b48c", teal: "#008080", thistle: "#d8bfd8", tomato: "#ff6347", turquoise: "#40e0d0", violet: "#ee82ee", wheat: "#f5deb3", white: "#ffffff", whitesmoke: "#f5f5f5", yellow: "#ffff00", yellowgreen: "#9acd32" }, e3 = /\s*/, u = /(\d{1,3})/, c = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/, p = new RegExp("".concat(c.source, "%")), m = { HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i, HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i, RGB: new RegExp(["^rgb\\(", u.source, ",", u.source, ",", u.source, "\\)$"].join(e3.source), "i"), RGB_PERCENT: new RegExp(["^rgb\\(", p.source, ",", p.source, ",", p.source, "\\)$"].join(e3.source), "i"), RGBA: new RegExp(["^rgba\\(", u.source, ",", u.source, ",", u.source, ",", c.source, "\\)$"].join(e3.source), "i"), RGBA_PERCENT: new RegExp(["^rgba\\(", p.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e3.source), "i"), HSL: new RegExp(["^hsl\\(", u.source, ",", p.source, ",", p.source, "\\)$"].join(e3.source), "i"), HSLA: new RegExp(["^hsla\\(", u.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e3.source), "i"), HSB: new RegExp(["^hsb\\(", u.source, ",", p.source, ",", p.source, "\\)$"].join(e3.source), "i"), HSBA: new RegExp(["^hsba\\(", u.source, ",", p.source, ",", p.source, ",", c.source, "\\)$"].join(e3.source), "i") }, u = (n2.default.Color = function() {
            function c2(e5, t5) {
              if (!(this instanceof c2))
                throw new TypeError("Cannot call a class as a function");
              if (this._storeModeAndMaxes(e5._colorMode, e5._colorMaxes), ![d.RGB, d.HSL, d.HSB].includes(this.mode))
                throw new Error("".concat(this.mode, " is an invalid colorMode."));
              this._array = c2._parseInputs.apply(this, t5), this._calculateLevels();
            }
            var e4, t4, r4;
            return e4 = c2, r4 = [{ key: "_parseInputs", value: function(e5, t5, r5, o3) {
              var n3, s4 = arguments.length, i3 = this.mode, a2 = this.maxes[i3], l2 = [];
              if (3 <= s4) {
                for (l2[0] = e5 / a2[0], l2[1] = t5 / a2[1], l2[2] = r5 / a2[2], l2[3] = "number" == typeof o3 ? o3 / a2[3] : 1, n3 = l2.length - 1; 0 <= n3; --n3) {
                  var u2 = l2[n3];
                  u2 < 0 ? l2[n3] = 0 : 1 < u2 && (l2[n3] = 1);
                }
                return i3 === d.HSL ? f.default._hslaToRGBA(l2) : i3 === d.HSB ? f.default._hsbaToRGBA(l2) : l2;
              }
              if (1 === s4 && "string" == typeof e5) {
                r5 = e5.trim().toLowerCase();
                if (h[r5])
                  return c2._parseInputs.call(this, h[r5]);
                if (m.HEX3.test(r5))
                  return (l2 = m.HEX3.exec(r5).slice(1).map(function(e6) {
                    return parseInt(e6 + e6, 16) / 255;
                  }))[3] = 1, l2;
                if (m.HEX6.test(r5))
                  return (l2 = m.HEX6.exec(r5).slice(1).map(function(e6) {
                    return parseInt(e6, 16) / 255;
                  }))[3] = 1, l2;
                if (m.HEX4.test(r5))
                  return l2 = m.HEX4.exec(r5).slice(1).map(function(e6) {
                    return parseInt(e6 + e6, 16) / 255;
                  });
                if (m.HEX8.test(r5))
                  return l2 = m.HEX8.exec(r5).slice(1).map(function(e6) {
                    return parseInt(e6, 16) / 255;
                  });
                if (m.RGB.test(r5))
                  return (l2 = m.RGB.exec(r5).slice(1).map(function(e6) {
                    return e6 / 255;
                  }))[3] = 1, l2;
                if (m.RGB_PERCENT.test(r5))
                  return (l2 = m.RGB_PERCENT.exec(r5).slice(1).map(function(e6) {
                    return parseFloat(e6) / 100;
                  }))[3] = 1, l2;
                if (m.RGBA.test(r5))
                  return l2 = m.RGBA.exec(r5).slice(1).map(function(e6, t6) {
                    return 3 === t6 ? parseFloat(e6) : e6 / 255;
                  });
                if (m.RGBA_PERCENT.test(r5))
                  return l2 = m.RGBA_PERCENT.exec(r5).slice(1).map(function(e6, t6) {
                    return 3 === t6 ? parseFloat(e6) : parseFloat(e6) / 100;
                  });
                if (m.HSL.test(r5) ? (l2 = m.HSL.exec(r5).slice(1).map(function(e6, t6) {
                  return 0 === t6 ? parseInt(e6, 10) / 360 : parseInt(e6, 10) / 100;
                }))[3] = 1 : m.HSLA.test(r5) && (l2 = m.HSLA.exec(r5).slice(1).map(function(e6, t6) {
                  return 0 === t6 ? parseInt(e6, 10) / 360 : 3 === t6 ? parseFloat(e6) : parseInt(e6, 10) / 100;
                })), (l2 = l2.map(function(e6) {
                  return Math.max(Math.min(e6, 1), 0);
                })).length)
                  return f.default._hslaToRGBA(l2);
                if (m.HSB.test(r5) ? (l2 = m.HSB.exec(r5).slice(1).map(function(e6, t6) {
                  return 0 === t6 ? parseInt(e6, 10) / 360 : parseInt(e6, 10) / 100;
                }))[3] = 1 : m.HSBA.test(r5) && (l2 = m.HSBA.exec(r5).slice(1).map(function(e6, t6) {
                  return 0 === t6 ? parseInt(e6, 10) / 360 : 3 === t6 ? parseFloat(e6) : parseInt(e6, 10) / 100;
                })), l2.length) {
                  for (n3 = l2.length - 1; 0 <= n3; --n3)
                    l2[n3] = Math.max(Math.min(l2[n3], 1), 0);
                  return f.default._hsbaToRGBA(l2);
                }
                l2 = [1, 1, 1, 1];
              } else {
                if (1 !== s4 && 2 !== s4 || "number" != typeof e5)
                  throw new Error("".concat(arguments, "is not a valid color representation."));
                l2[0] = e5 / a2[2], l2[1] = e5 / a2[2], l2[2] = e5 / a2[2], l2[3] = "number" == typeof t5 ? t5 / a2[3] : 1, l2 = l2.map(function(e6) {
                  return Math.max(Math.min(e6, 1), 0);
                });
              }
              return l2;
            } }], (t4 = [{ key: "toString", value: function(e5) {
              var t5 = this.levels, r5 = this._array, o3 = r5[3];
              switch (e5) {
                case "#rrggbb":
                  return "#".concat(t5[0] < 16 ? "0".concat(t5[0].toString(16)) : t5[0].toString(16), t5[1] < 16 ? "0".concat(t5[1].toString(16)) : t5[1].toString(16), t5[2] < 16 ? "0".concat(t5[2].toString(16)) : t5[2].toString(16));
                case "#rrggbbaa":
                  return "#".concat(t5[0] < 16 ? "0".concat(t5[0].toString(16)) : t5[0].toString(16), t5[1] < 16 ? "0".concat(t5[1].toString(16)) : t5[1].toString(16), t5[2] < 16 ? "0".concat(t5[2].toString(16)) : t5[2].toString(16), t5[3] < 16 ? "0".concat(t5[3].toString(16)) : t5[3].toString(16));
                case "#rgb":
                  return "#".concat(Math.round(15 * r5[0]).toString(16), Math.round(15 * r5[1]).toString(16), Math.round(15 * r5[2]).toString(16));
                case "#rgba":
                  return "#".concat(Math.round(15 * r5[0]).toString(16), Math.round(15 * r5[1]).toString(16), Math.round(15 * r5[2]).toString(16), Math.round(15 * r5[3]).toString(16));
                case "rgb":
                  return "rgb(".concat(t5[0], ", ", t5[1], ", ", t5[2], ")");
                case "rgb%":
                  return "rgb(".concat((100 * r5[0]).toPrecision(3), "%, ", (100 * r5[1]).toPrecision(3), "%, ", (100 * r5[2]).toPrecision(3), "%)");
                case "rgba%":
                  return "rgba(".concat((100 * r5[0]).toPrecision(3), "%, ", (100 * r5[1]).toPrecision(3), "%, ", (100 * r5[2]).toPrecision(3), "%, ", (100 * r5[3]).toPrecision(3), "%)");
                case "hsb":
                case "hsv":
                  return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsb(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ")");
                case "hsb%":
                case "hsv%":
                  return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");
                case "hsba":
                case "hsva":
                  return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsba(".concat(this.hsba[0] * this.maxes[d.HSB][0], ", ", this.hsba[1] * this.maxes[d.HSB][1], ", ", this.hsba[2] * this.maxes[d.HSB][2], ", ", o3, ")");
                case "hsba%":
                case "hsva%":
                  return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * o3).toPrecision(3), "%)");
                case "hsl":
                  return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ")");
                case "hsl%":
                  return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");
                case "hsla":
                  return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsla(".concat(this.hsla[0] * this.maxes[d.HSL][0], ", ", this.hsla[1] * this.maxes[d.HSL][1], ", ", this.hsla[2] * this.maxes[d.HSL][2], ", ", o3, ")");
                case "hsla%":
                  return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * o3).toPrecision(3), "%)");
                default:
                  return "rgba(".concat(t5[0], ",", t5[1], ",", t5[2], ",", o3, ")");
              }
            } }, { key: "setRed", value: function(e5) {
              this._array[0] = e5 / this.maxes[d.RGB][0], this._calculateLevels();
            } }, { key: "setGreen", value: function(e5) {
              this._array[1] = e5 / this.maxes[d.RGB][1], this._calculateLevels();
            } }, { key: "setBlue", value: function(e5) {
              this._array[2] = e5 / this.maxes[d.RGB][2], this._calculateLevels();
            } }, { key: "setAlpha", value: function(e5) {
              this._array[3] = e5 / this.maxes[this.mode][3], this._calculateLevels();
            } }, { key: "_calculateLevels", value: function() {
              for (var e5 = this._array, t5 = this.levels = new Array(e5.length), r5 = e5.length - 1; 0 <= r5; --r5)
                t5[r5] = Math.round(255 * e5[r5]);
              this.hsla = null, this.hsba = null;
            } }, { key: "_getAlpha", value: function() {
              return this._array[3] * this.maxes[this.mode][3];
            } }, { key: "_storeModeAndMaxes", value: function(e5, t5) {
              this.mode = e5, this.maxes = t5;
            } }, { key: "_getMode", value: function() {
              return this.mode;
            } }, { key: "_getMaxes", value: function() {
              return this.maxes;
            } }, { key: "_getBlue", value: function() {
              return this._array[2] * this.maxes[d.RGB][2];
            } }, { key: "_getBrightness", value: function() {
              return this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[d.HSB][2];
            } }, { key: "_getGreen", value: function() {
              return this._array[1] * this.maxes[d.RGB][1];
            } }, { key: "_getHue", value: function() {
              return this.mode === d.HSB ? (this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[0] * this.maxes[d.HSB][0]) : (this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[0] * this.maxes[d.HSL][0]);
            } }, { key: "_getLightness", value: function() {
              return this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[d.HSL][2];
            } }, { key: "_getRed", value: function() {
              return this._array[0] * this.maxes[d.RGB][0];
            } }, { key: "_getSaturation", value: function() {
              return this.mode === d.HSB ? (this.hsba || (this.hsba = f.default._rgbaToHSBA(this._array)), this.hsba[1] * this.maxes[d.HSB][1]) : (this.hsla || (this.hsla = f.default._rgbaToHSLA(this._array)), this.hsla[1] * this.maxes[d.HSL][1]);
            } }]) && l(e4.prototype, t4), r4 && l(e4, r4), c2;
          }(), n2.default.Color);
          r3.default = u;
        }, { "../core/constants": 262, "../core/main": 273, "./color_conversion": 258, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.constructor": 184, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.trim": 199, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 261: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.fill"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var s3 = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, a = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = l();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function l() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), l = function() {
              return e4;
            }, e4);
          }
          e3("./p5.Color"), s3.default.prototype.background = function() {
            var e4;
            return (e4 = this._renderer).background.apply(e4, arguments), this;
          }, s3.default.prototype.clear = function() {
            return this._renderer.clear((arguments.length <= 0 ? void 0 : arguments[0]) || 0, (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0, (arguments.length <= 3 ? void 0 : arguments[3]) || 0), this;
          }, s3.default.prototype.colorMode = function(e4, t4, r4, o3, n3) {
            return s3.default._validateParameters("colorMode", arguments), e4 !== a.RGB && e4 !== a.HSB && e4 !== a.HSL || (this._colorMode = e4, e4 = this._colorMaxes[e4], 2 === arguments.length ? (e4[0] = t4, e4[1] = t4, e4[2] = t4, e4[3] = t4) : 4 === arguments.length ? (e4[0] = t4, e4[1] = r4, e4[2] = o3) : 5 === arguments.length && (e4[0] = t4, e4[1] = r4, e4[2] = o3, e4[3] = n3)), this;
          }, s3.default.prototype.fill = function() {
            var e4;
            return this._renderer._setProperty("_fillSet", true), this._renderer._setProperty("_doFill", true), (e4 = this._renderer).fill.apply(e4, arguments), this;
          }, s3.default.prototype.noFill = function() {
            return this._renderer._setProperty("_doFill", false), this;
          }, s3.default.prototype.noStroke = function() {
            return this._renderer._setProperty("_doStroke", false), this;
          }, s3.default.prototype.stroke = function() {
            var e4;
            return this._renderer._setProperty("_strokeSet", true), this._renderer._setProperty("_doStroke", true), (e4 = this._renderer).stroke.apply(e4, arguments), this;
          }, s3.default.prototype.erase = function() {
            return this._renderer.erase(0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 255, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 255), this;
          }, s3.default.prototype.noErase = function() {
            return this._renderer.noErase(), this;
          };
          var n2 = s3.default;
          r3.default = n2;
        }, { "../core/constants": 262, "../core/main": 273, "./p5.Color": 260, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 262: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.QUADRATIC = r3.LINEAR = r3._CTX_MIDDLE = r3._DEFAULT_LEADMULT = r3._DEFAULT_TEXT_FILL = r3.WORD = r3.CHAR = r3.BOLDITALIC = r3.BOLD = r3.ITALIC = r3.NORMAL = r3.BLUR = r3.ERODE = r3.DILATE = r3.POSTERIZE = r3.INVERT = r3.OPAQUE = r3.GRAY = r3.THRESHOLD = r3.BURN = r3.DODGE = r3.SOFT_LIGHT = r3.HARD_LIGHT = r3.OVERLAY = r3.REPLACE = r3.SCREEN = r3.MULTIPLY = r3.EXCLUSION = r3.SUBTRACT = r3.DIFFERENCE = r3.LIGHTEST = r3.DARKEST = r3.ADD = r3.REMOVE = r3.BLEND = r3.UP_ARROW = r3.TAB = r3.SHIFT = r3.RIGHT_ARROW = r3.RETURN = r3.OPTION = r3.LEFT_ARROW = r3.ESCAPE = r3.ENTER = r3.DOWN_ARROW = r3.DELETE = r3.CONTROL = r3.BACKSPACE = r3.ALT = r3.AUTO = r3.HSL = r3.HSB = r3.RGB = r3.MITER = r3.BEVEL = r3.ROUND = r3.SQUARE = r3.PROJECT = r3.PIE = r3.CHORD = r3.OPEN = r3.CLOSE = r3.TESS = r3.QUAD_STRIP = r3.QUADS = r3.TRIANGLE_STRIP = r3.TRIANGLE_FAN = r3.TRIANGLES = r3.LINE_LOOP = r3.LINE_STRIP = r3.LINES = r3.POINTS = r3.BASELINE = r3.BOTTOM = r3.TOP = r3.CENTER = r3.LEFT = r3.RIGHT = r3.RADIUS = r3.CORNERS = r3.CORNER = r3.RAD_TO_DEG = r3.DEG_TO_RAD = r3.RADIANS = r3.DEGREES = r3.TWO_PI = r3.TAU = r3.QUARTER_PI = r3.PI = r3.HALF_PI = r3.WAIT = r3.TEXT = r3.MOVE = r3.HAND = r3.CROSS = r3.ARROW = r3.WEBGL2 = r3.WEBGL = r3.P2D = r3.VERSION = void 0, r3.RGBA = r3.HALF_FLOAT = r3.FLOAT = r3.UNSIGNED_INT = r3.UNSIGNED_BYTE = r3.COVER = r3.CONTAIN = r3.FALLBACK = r3.LABEL = r3.AXES = r3.GRID = r3._DEFAULT_FILL = r3._DEFAULT_STROKE = r3.PORTRAIT = r3.LANDSCAPE = r3.MIRROR = r3.CLAMP = r3.REPEAT = r3.NEAREST = r3.IMAGE = r3.IMMEDIATE = r3.TEXTURE = r3.FILL = r3.STROKE = r3.CURVE = r3.BEZIER = void 0;
          var o2 = Math.PI, n2 = (r3.VERSION = "1.7.0", r3.P2D = "p2d", r3.WEBGL = "webgl", r3.WEBGL2 = "webgl2", r3.ARROW = "default", r3.CROSS = "crosshair", r3.HAND = "pointer", r3.MOVE = "move", r3.TEXT = "text", r3.WAIT = "wait", o2 / 2), n2 = (r3.HALF_PI = n2, o2), n2 = (r3.PI = n2, o2 / 4), n2 = (r3.QUARTER_PI = n2, 2 * o2), n2 = (r3.TAU = n2, 2 * o2), n2 = (r3.TWO_PI = n2, r3.DEGREES = "degrees", r3.RADIANS = "radians", o2 / 180), n2 = (r3.DEG_TO_RAD = n2, 180 / o2);
          r3.RAD_TO_DEG = n2, r3.CORNER = "corner", r3.CORNERS = "corners", r3.RADIUS = "radius", r3.RIGHT = "right", r3.LEFT = "left", r3.CENTER = "center", r3.TOP = "top", r3.BOTTOM = "bottom", r3.BASELINE = "alphabetic", r3.POINTS = 0, r3.LINES = 1, r3.LINE_STRIP = 3, r3.LINE_LOOP = 2, r3.TRIANGLES = 4, r3.TRIANGLE_FAN = 6, r3.TRIANGLE_STRIP = 5, r3.QUADS = "quads", r3.QUAD_STRIP = "quad_strip", r3.TESS = "tess", r3.CLOSE = "close", r3.OPEN = "open", r3.CHORD = "chord", r3.PIE = "pie", r3.PROJECT = "square", r3.SQUARE = "butt", r3.ROUND = "round", r3.BEVEL = "bevel", r3.MITER = "miter", r3.RGB = "rgb", r3.HSB = "hsb", r3.HSL = "hsl", r3.AUTO = "auto", r3.ALT = 18, r3.BACKSPACE = 8, r3.CONTROL = 17, r3.DELETE = 46, r3.DOWN_ARROW = 40, r3.ENTER = 13, r3.ESCAPE = 27, r3.LEFT_ARROW = 37, r3.OPTION = 18, r3.RETURN = 13, r3.RIGHT_ARROW = 39, r3.SHIFT = 16, r3.TAB = 9, r3.UP_ARROW = 38, r3.BLEND = "source-over", r3.REMOVE = "destination-out", r3.ADD = "lighter", r3.DARKEST = "darken", r3.LIGHTEST = "lighten", r3.DIFFERENCE = "difference", r3.SUBTRACT = "subtract", r3.EXCLUSION = "exclusion", r3.MULTIPLY = "multiply", r3.SCREEN = "screen", r3.REPLACE = "copy", r3.OVERLAY = "overlay", r3.HARD_LIGHT = "hard-light", r3.SOFT_LIGHT = "soft-light", r3.DODGE = "color-dodge", r3.BURN = "color-burn", r3.THRESHOLD = "threshold", r3.GRAY = "gray", r3.OPAQUE = "opaque", r3.INVERT = "invert", r3.POSTERIZE = "posterize", r3.DILATE = "dilate", r3.ERODE = "erode", r3.BLUR = "blur", r3.NORMAL = "normal", r3.ITALIC = "italic", r3.BOLD = "bold", r3.BOLDITALIC = "bold italic", r3.CHAR = "CHAR", r3.WORD = "WORD", r3._DEFAULT_TEXT_FILL = "#000000", r3._DEFAULT_LEADMULT = 1.25, r3._CTX_MIDDLE = "middle", r3.LINEAR = "linear", r3.QUADRATIC = "quadratic", r3.BEZIER = "bezier", r3.CURVE = "curve", r3.STROKE = "stroke", r3.FILL = "fill", r3.TEXTURE = "texture", r3.IMMEDIATE = "immediate", r3.IMAGE = "image", r3.NEAREST = "nearest", r3.REPEAT = "repeat", r3.CLAMP = "clamp", r3.MIRROR = "mirror", r3.LANDSCAPE = "landscape", r3.PORTRAIT = "portrait", r3._DEFAULT_STROKE = "#000000", r3._DEFAULT_FILL = "#FFFFFF", r3.GRID = "grid", r3.AXES = "axes", r3.LABEL = "label", r3.FALLBACK = "fallback", r3.CONTAIN = "contain", r3.COVER = "cover", r3.UNSIGNED_BYTE = "unsigned-byte", r3.UNSIGNED_INT = "unsigned-int", r3.FLOAT = "float", r3.HALF_FLOAT = "half-float";
          r3.RGBA = "rgba";
        }, {}], 263: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.search"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.search"), e3("core-js/modules/es.string.split"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (s3 = e3("./main")) && s3.__esModule ? s3 : { default: s3 }, s3 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("./constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          var l = [s3.ARROW, s3.CROSS, s3.HAND, s3.MOVE, s3.TEXT, s3.WAIT], u = (n2.default.prototype._frameRate = 0, n2.default.prototype._lastFrameTime = window.performance.now(), n2.default.prototype._targetFrameRate = 60, window.print);
          function c() {
            return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
          }
          function d() {
            return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
          }
          n2.default.prototype.print = function() {
            var e4;
            arguments.length ? (e4 = console).log.apply(e4, arguments) : u();
          }, n2.default.prototype.frameCount = 0, n2.default.prototype.deltaTime = 0, n2.default.prototype.focused = document.hasFocus(), n2.default.prototype.cursor = function(e4, t4, r4) {
            var o3, n3 = "auto", s4 = this._curElement.elt;
            l.includes(e4) ? n3 = e4 : "string" == typeof e4 && (o3 = "", t4 && r4 && "number" == typeof t4 && "number" == typeof r4 && (o3 = "".concat(t4, " ").concat(r4)), n3 = "http://" === e4.substring(0, 7) || "https://" === e4.substring(0, 8) || /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e4) ? "url(".concat(e4, ") ").concat(o3, ", auto") : e4), s4.style.cursor = n3;
          }, n2.default.prototype.frameRate = function(e4) {
            return n2.default._validateParameters("frameRate", arguments), "number" != typeof e4 || e4 < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e4), 0 === e4 && this._setProperty("_frameRate", e4), this);
          }, n2.default.prototype.getFrameRate = function() {
            return this.frameRate();
          }, n2.default.prototype.setFrameRate = function(e4) {
            return this.frameRate(e4);
          }, n2.default.prototype.getTargetFrameRate = function() {
            return this._targetFrameRate;
          }, n2.default.prototype.noCursor = function() {
            this._curElement.elt.style.cursor = "none";
          }, n2.default.prototype.webglVersion = s3.P2D, n2.default.prototype.displayWidth = screen.width, n2.default.prototype.displayHeight = screen.height, n2.default.prototype.windowWidth = c(), n2.default.prototype.windowHeight = d(), n2.default.prototype._onresize = function(e4) {
            this._setProperty("windowWidth", c()), this._setProperty("windowHeight", d());
            var t4 = this._isGlobal ? window : this;
            "function" != typeof t4.windowResized || void 0 === (t4 = t4.windowResized(e4)) || t4 || e4.preventDefault();
          }, n2.default.prototype.width = 0, n2.default.prototype.height = 0, n2.default.prototype.fullscreen = function(e4) {
            if (n2.default._validateParameters("fullscreen", arguments), void 0 === e4)
              return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
            if (e4) {
              e4 = document.documentElement;
              if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled))
                throw new Error("Fullscreen not enabled in this browser.");
              e4.requestFullscreen ? e4.requestFullscreen() : e4.mozRequestFullScreen ? e4.mozRequestFullScreen() : e4.webkitRequestFullscreen ? e4.webkitRequestFullscreen() : e4.msRequestFullscreen && e4.msRequestFullscreen();
            } else
              document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
          }, n2.default.prototype.pixelDensity = function(e4) {
            var t4;
            return n2.default._validateParameters("pixelDensity", arguments), "number" == typeof e4 ? (e4 !== this._pixelDensity && (this._pixelDensity = e4), (t4 = this).resizeCanvas(this.width, this.height, true)) : t4 = this._pixelDensity, t4;
          }, n2.default.prototype.displayDensity = function() {
            return window.devicePixelRatio;
          }, n2.default.prototype.getURL = function() {
            return location.href;
          }, n2.default.prototype.getURLPath = function() {
            return location.pathname.split("/").filter(function(e4) {
              return "" !== e4;
            });
          }, n2.default.prototype.getURLParams = function() {
            for (var e4, t4 = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, r4 = {}; null != (e4 = t4.exec(location.search)); )
              e4.index === t4.lastIndex && t4.lastIndex++, r4[e4[1]] = e4[2];
            return r4;
          };
          e3 = n2.default;
          r3.default = e3;
        }, { "./constants": 262, "./main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.search": 195, "core-js/modules/es.string.split": 196, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 264: [function(r3, e3, t3) {
          "use strict";
          r3("core-js/modules/es.symbol"), r3("core-js/modules/es.symbol.description"), r3("core-js/modules/es.symbol.iterator"), r3("core-js/modules/es.array.concat"), r3("core-js/modules/es.array.filter"), r3("core-js/modules/es.array.for-each"), r3("core-js/modules/es.array.includes"), r3("core-js/modules/es.array.iterator"), r3("core-js/modules/es.array.join"), r3("core-js/modules/es.array.map"), r3("core-js/modules/es.array.slice"), r3("core-js/modules/es.array.some"), r3("core-js/modules/es.function.name"), r3("core-js/modules/es.object.assign"), r3("core-js/modules/es.object.get-own-property-names"), r3("core-js/modules/es.object.keys"), r3("core-js/modules/es.object.to-string"), r3("core-js/modules/es.regexp.constructor"), r3("core-js/modules/es.regexp.exec"), r3("core-js/modules/es.regexp.to-string"), r3("core-js/modules/es.string.iterator"), r3("core-js/modules/es.string.match"), r3("core-js/modules/es.string.replace"), r3("core-js/modules/es.string.split"), r3("core-js/modules/es.string.starts-with"), r3("core-js/modules/web.dom-collections.for-each"), r3("core-js/modules/web.dom-collections.iterator"), r3("core-js/modules/es.symbol"), r3("core-js/modules/es.symbol.description"), r3("core-js/modules/es.symbol.iterator"), r3("core-js/modules/es.array.concat"), r3("core-js/modules/es.array.filter"), r3("core-js/modules/es.array.for-each"), r3("core-js/modules/es.array.includes"), r3("core-js/modules/es.array.iterator"), r3("core-js/modules/es.array.join"), r3("core-js/modules/es.array.map"), r3("core-js/modules/es.array.slice"), r3("core-js/modules/es.array.some"), r3("core-js/modules/es.function.name"), r3("core-js/modules/es.object.assign"), r3("core-js/modules/es.object.get-own-property-names"), r3("core-js/modules/es.object.keys"), r3("core-js/modules/es.object.to-string"), r3("core-js/modules/es.regexp.constructor"), r3("core-js/modules/es.regexp.exec"), r3("core-js/modules/es.regexp.to-string"), r3("core-js/modules/es.string.iterator"), r3("core-js/modules/es.string.match"), r3("core-js/modules/es.string.replace"), r3("core-js/modules/es.string.split"), r3("core-js/modules/es.string.starts-with"), r3("core-js/modules/web.dom-collections.for-each"), r3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(t3, "__esModule", { value: true }), t3.default = void 0;
          var o2 = (l = r3("../main")) && l.__esModule ? l : { default: l };
          r3("../internationalization");
          function n2(r4, o3) {
            o3 = o3 || console.log.bind(console), s3 || i2(), s3.some(function(e4) {
              var t4;
              if (r4.message && null !== r4.message.match("\\W?".concat(e4.name, "\\W")))
                return t4 = "function" === e4.type ? "".concat(e4.name, "()") : e4.name, o3("Did you just try to use p5.js's ".concat(t4, " ").concat(e4.type, "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: ").concat(a)), true;
            });
          }
          var s3 = null, i2 = null, a = (o2.default._friendlyError = o2.default._checkForUserDefinedFunctions = o2.default._fesErrorMonitor = function() {
          }, s3 = null, "https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"), i2 = function() {
            function e4(r4) {
              return Object.getOwnPropertyNames(r4).filter(function(e5) {
                return "_" !== e5[0] && (!(e5 in t4) && (t4[e5] = true));
              }).map(function(e5) {
                var t5 = "function" == typeof r4[e5] ? "function" : e5 === e5.toUpperCase() ? "constant" : "variable";
                return { name: e5, type: t5 };
              });
            }
            var t4 = {};
            (s3 = [].concat(e4(o2.default.prototype), e4(r3("../constants")))).sort(function(e5, t5) {
              return t5.name.length - e5.name.length;
            });
          }, l = (o2.default.prototype._helpForMisusedAtTopLevelCode = n2, "complete" !== document.readyState && (window.addEventListener("error", n2, false), window.addEventListener("load", function() {
            window.removeEventListener("error", n2, false);
          })), o2.default);
          t3.default = l;
        }, { "../constants": 262, "../internationalization": 271, "../main": 273, "./browser_errors": void 0, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.some": 165, "core-js/modules/es.function.name": 167, "core-js/modules/es.object.assign": 174, "core-js/modules/es.object.get-own-property-names": 177, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.constructor": 184, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.match": 191, "core-js/modules/es.string.replace": 194, "core-js/modules/es.string.split": 196, "core-js/modules/es.string.starts-with": 197, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.for-each": 235, "core-js/modules/web.dom-collections.iterator": 236 }], 265: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var o2 = (o2 = e3("../main")) && o2.__esModule ? o2 : { default: o2 };
          e3("../internationalization");
          o2.default._friendlyFileLoadError = function() {
          };
          e3 = o2.default;
          r3.default = e3;
        }, { "../internationalization": 271, "../main": 273 }], 266: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = C(e3("../main")), s3 = e3("../internationalization"), a = O(e3("../constants")), l, u, c, d, f, h, p, m, y, g, v, b, j, _, x, w, S, E, M, T, I;
          function k() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), k = function() {
              return e4;
            }, e4);
          }
          function O(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = k();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3, n3 = {}, s4 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4)
              Object.prototype.hasOwnProperty.call(e4, r4) && ((o3 = s4 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (o3.get || o3.set) ? Object.defineProperty(n3, r4, o3) : n3[r4] = e4[r4]);
            return n3.default = e4, t4 && t4.set(e4, n3), n3;
          }
          function C(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function D(e4) {
            return L(e4) || P(e4) || A();
          }
          function A() {
            throw new TypeError("Invalid attempt to spread non-iterable instance");
          }
          function P(e4) {
            if (Symbol.iterator in Object(e4) || "[object Arguments]" === Object.prototype.toString.call(e4))
              return Array.from(e4);
          }
          function L(e4) {
            if (Array.isArray(e4)) {
              for (var t4 = 0, r4 = new Array(e4.length); t4 < e4.length; t4++)
                r4[t4] = e4[t4];
              return r4;
            }
          }
          n2.default._fesCodeReader = function() {
          };
          var R = n2.default;
          r3.default = R;
        }, { "../constants": 262, "../internationalization": 271, "../main": 273, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.constructor": 184, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.match": 191, "core-js/modules/es.string.split": 196, "core-js/modules/es.string.trim": 199, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.for-each": 235, "core-js/modules/web.dom-collections.iterator": 236 }], 267: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../main")) && e3.__esModule ? e3 : { default: e3 };
          function o2() {
            var t4 = /(^|@)\S+:\d+/, r4 = /^\s*at .*(\S+:\d+|\(native\))/m, o3 = /^(eval@)?(\[native code])?$/;
            return { parse: function(e4) {
              return void 0 !== e4.stacktrace || void 0 !== e4["opera#sourceloc"] ? this.parseOpera(e4) : e4.stack && e4.stack.match(r4) ? this.parseV8OrIE(e4) : e4.stack ? this.parseFFOrSafari(e4) : void 0;
            }, extractLocation: function(e4) {
              return -1 === e4.indexOf(":") ? [e4] : [(e4 = /(.+?)(?::(\d+))?(?::(\d+))?$/.exec(e4.replace(/[()]/g, "")))[1], e4[2] || void 0, e4[3] || void 0];
            }, parseV8OrIE: function(e4) {
              return e4.stack.split("\n").filter(function(e5) {
                return !!e5.match(r4);
              }, this).map(function(e5) {
                var t5 = (e5 = -1 < e5.indexOf("(eval ") ? e5.replace(/eval code/g, "eval").replace(/(\(eval at [^()]*)|(\),.*$)/g, "") : e5).replace(/^\s+/, "").replace(/\(eval code/g, "("), r5 = t5.match(/ (\((.+):(\d+):(\d+)\)$)/), t5 = (t5 = r5 ? t5.replace(r5[0], "") : t5).split(/\s+/).slice(1), r5 = this.extractLocation(r5 ? r5[1] : t5.pop());
                return { functionName: t5.join(" ") || void 0, fileName: -1 < ["eval", "<anonymous>"].indexOf(r5[0]) ? void 0 : r5[0], lineNumber: r5[1], columnNumber: r5[2], source: e5 };
              }, this);
            }, parseFFOrSafari: function(e4) {
              return e4.stack.split("\n").filter(function(e5) {
                return !e5.match(o3);
              }, this).map(function(e5) {
                var t5, r5;
                return -1 === (e5 = -1 < e5.indexOf(" > eval") ? e5.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g, ":$1") : e5).indexOf("@") && -1 === e5.indexOf(":") ? { functionName: e5 } : { functionName: (r5 = e5.match(t5 = /((.*".+"[^@]*)?[^@]*)(?:@)/)) && r5[1] ? r5[1] : void 0, fileName: (r5 = this.extractLocation(e5.replace(t5, "")))[0], lineNumber: r5[1], columnNumber: r5[2], source: e5 };
              }, this);
            }, parseOpera: function(e4) {
              return !e4.stacktrace || -1 < e4.message.indexOf("\n") && e4.message.split("\n").length > e4.stacktrace.split("\n").length ? this.parseOpera9(e4) : e4.stack ? this.parseOpera11(e4) : this.parseOpera10(e4);
            }, parseOpera9: function(e4) {
              for (var t5 = /Line (\d+).*script (?:in )?(\S+)/i, r5 = e4.message.split("\n"), o4 = [], n2 = 2, s3 = r5.length; n2 < s3; n2 += 2) {
                var i2 = t5.exec(r5[n2]);
                i2 && o4.push({ fileName: i2[2], lineNumber: i2[1], source: r5[n2] });
              }
              return o4;
            }, parseOpera10: function(e4) {
              for (var t5 = /Line (\d+).*script (?:in )?(\S+)(?:: In function (\S+))?$/i, r5 = e4.stacktrace.split("\n"), o4 = [], n2 = 0, s3 = r5.length; n2 < s3; n2 += 2) {
                var i2 = t5.exec(r5[n2]);
                i2 && o4.push({ functionName: i2[3] || void 0, fileName: i2[2], lineNumber: i2[1], source: r5[n2] });
              }
              return o4;
            }, parseOpera11: function(e4) {
              return e4.stack.split("\n").filter(function(e5) {
                return !!e5.match(t4) && !e5.match(/^Error created at/);
              }, this).map(function(e5) {
                var t5, r5 = e5.split("@"), o4 = this.extractLocation(r5.pop()), r5 = r5.shift() || "";
                return { functionName: r5.replace(/<anonymous function(: (\w+))?>/, "$2").replace(/\([^)]*\)/g, "") || void 0, args: void 0 === (t5 = r5.match(/\(([^)]*)\)/) ? r5.replace(/^[^(]+\(([^)]*)\)$/, "$1") : t5) || "[arguments not available]" === t5 ? void 0 : t5.split(","), fileName: o4[0], lineNumber: o4[1], columnNumber: o4[2], source: e5 };
              }, this);
            } };
          }
          e3.default._getErrorStackParser = function() {
            return new o2();
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "../main": 273, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.match": 191, "core-js/modules/es.string.replace": 194, "core-js/modules/es.string.split": 196 }], 268: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.last-index-of"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.map"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.set"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.last-index-of"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.map"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.set"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (n2 = e3("../main")) && n2.__esModule ? n2 : { default: n2 };
          (function(e4) {
            if (e4 && e4.__esModule)
              return;
            if (null === e4 || "object" !== a(e4) && "function" != typeof e4)
              return;
            var t4 = i2();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s3;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s3 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r4, s3) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
          })(e3("../constants")), e3("../internationalization");
          function i2() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), i2 = function() {
              return e4;
            }, e4);
          }
          function a(e4) {
            return (a = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          n2.default._validateParameters = n2.default._clearValidateParamsCache = function() {
          };
          e3 = n2.default;
          r3.default = e3;
        }, { "../../../docs/parameterData.json": void 0, "../constants": 262, "../internationalization": 271, "../main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.last-index-of": 162, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.function.name": 167, "core-js/modules/es.map": 168, "core-js/modules/es.number.constructor": 171, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.set": 187, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.split": 196, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.for-each": 235, "core-js/modules/web.dom-collections.iterator": 236 }], 269: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var s3 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n2 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n2 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("./constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          r3.default = { modeAdjust: function(e4, t4, r4, o3, n2) {
            return n2 === s3.CORNER ? { x: e4, y: t4, w: r4, h: o3 } : n2 === s3.CORNERS ? { x: e4, y: t4, w: r4 - e4, h: o3 - t4 } : n2 === s3.RADIUS ? { x: e4 - r4, y: t4 - o3, w: 2 * r4, h: 2 * o3 } : n2 === s3.CENTER ? { x: e4 - 0.5 * r4, y: t4 - 0.5 * o3, w: r4, h: o3 } : void 0;
          } };
        }, { "./constants": 262, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 270: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator");
          var o2 = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 };
          e3("./internationalization");
          var n2 = Promise.resolve();
          Promise.all([new Promise(function(e4, t4) {
            "complete" === document.readyState ? e4() : window.addEventListener("load", e4, false);
          }), n2]).then(function() {
            void 0 !== window._setupDone ? console.warn("p5.js seems to have been imported multiple times. Please remove the duplicate import") : window.mocha || (window.setup && "function" == typeof window.setup || window.draw && "function" == typeof window.draw) && !o2.default.instance && new o2.default();
          });
        }, { "../core/main": 273, "./internationalization": 271, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.promise": 181, "core-js/modules/es.string.iterator": 190, "core-js/modules/web.dom-collections.iterator": 236 }], 271: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.setTranslatorLanguage = r3.currentTranslatorLanguage = r3.availableTranslatorLanguages = r3.initialize = r3.translator = void 0;
          var n2, s3, o2 = a(e3("i18next")), i2 = a(e3("i18next-browser-languagedetector"));
          function a(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function l(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          var u = function() {
            function r4(e5, t5) {
              if (!(this instanceof r4))
                throw new TypeError("Cannot call a class as a function");
              this.init(e5, t5);
            }
            var e4, t4, o3;
            return e4 = r4, (t4 = [{ key: "fetchWithTimeout", value: function(e5, t5) {
              var r5 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 2e3;
              return Promise.race([fetch(e5, t5), new Promise(function(e6, t6) {
                return setTimeout(function() {
                  return t6(new Error("timeout"));
                }, r5);
              })]);
            } }, { key: "init", value: function(e5) {
              var t5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
              this.services = e5, this.options = t5;
            } }, { key: "read", value: function(e5, t5, r5) {
              var o4 = this.options.loadPath;
              e5 === this.options.fallback ? r5(null, n2[e5][t5]) : s3.includes(e5) ? (o4 = this.services.interpolator.interpolate(o4, { lng: e5, ns: t5 }), this.loadUrl(o4, r5)) : r5("Not found", false);
            } }, { key: "loadUrl", value: function(t5, r5) {
              this.fetchWithTimeout(t5).then(function(e5) {
                if (e5.ok)
                  return e5.json();
                throw new Error("failed loading ".concat(t5));
              }, function() {
                throw new Error("failed loading ".concat(t5));
              }).then(function(e5) {
                return r5(null, e5);
              }).catch(r5);
            } }]) && l(e4.prototype, t4), o3 && l(e4, o3), r4;
          }();
          u.type = "backend", r3.translator = function(e4, t4) {
            console.debug("p5.js translator called before translations were loaded"), o2.default.t(e4, t4);
          }, r3.initialize = function() {
            return o2.default.use(i2.default).use(u).init({ fallbackLng: "en", nestingPrefix: "$tr(", nestingSuffix: ")", defaultNS: "translation", returnEmptyString: false, interpolation: { escapeValue: false }, detection: { checkWhitelist: false, order: ["querystring", "navigator", "htmlTag", "path", "subdomain"], caches: [] }, backend: { fallback: "en", loadPath: "https://cdn.jsdelivr.net/npm/p5/translations/{{lng}}/{{ns}}.json" }, partialBundledLanguages: true, resources: n2 }).then(function(e4) {
              r3.translator = e4;
            }, function(e4) {
              return console.debug("Translations failed to load (".concat(e4, ")"));
            });
          }, r3.availableTranslatorLanguages = function() {
            return o2.default.languages;
          }, r3.currentTranslatorLanguage = function(e4) {
            return o2.default.language;
          };
          r3.setTranslatorLanguage = function(e4) {
            return o2.default.changeLanguage(e4 || void 0, function(e5) {
              return console.debug("Translations failed to load (".concat(e5, ")"));
            });
          };
        }, { "../../translations": void 0, "../../translations/dev": void 0, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.promise": 181, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.split": 196, "core-js/modules/web.dom-collections.iterator": 236, i18next: 3, "i18next-browser-languagedetector": 3 }], 272: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("./main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.prototype.pushStyle = function() {
            throw new Error("pushStyle() not used, see push()");
          }, e3.default.prototype.popStyle = function() {
            throw new Error("popStyle() not used, see pop()");
          }, e3.default.prototype.popMatrix = function() {
            throw new Error("popMatrix() not used, see pop()");
          }, e3.default.prototype.pushMatrix = function() {
            throw new Error("pushMatrix() not used, see push()");
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "./main": 273 }], 273: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-own-property-names"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-names"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0, e3("./shim");
          var n2 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("./constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          function s3(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          var l, u = function() {
            function v(e5, t5, r5) {
              var d = this;
              if (!(this instanceof v))
                throw new TypeError("Cannot call a class as a function");
              this._setupDone = false, this._preloadDone = false, this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._userNode = t5, this._curElement = null, this._elements = [], this._glAttributes = null, this._requestAnimId = 0, this._preloadCount = 0, this._isGlobal = false, this._loop = true, this._initializeInstanceVariables(), this._defaultCanvasSize = { width: 100, height: 100 }, this._events = { mousemove: null, mousedown: null, mouseup: null, dragend: null, dragover: null, click: null, dblclick: null, mouseover: null, mouseout: null, keydown: null, keyup: null, keypress: null, touchstart: null, touchmove: null, touchend: null, resize: null, blur: null }, this._millisStart = -1, this._recording = false, this._lcg_random_state = null, this._gaussian_previous = false, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};
              var t5 = Object.getOwnPropertyNames(v.prototype._registeredMethods), o3 = true, n3 = false, s4 = void 0;
              try {
                for (var i3, a2 = t5[Symbol.iterator](); !(o3 = (i3 = a2.next()).done); o3 = true) {
                  var l2 = i3.value;
                  this._registeredMethods[l2] = v.prototype._registeredMethods[l2].slice();
                }
              } catch (e6) {
                n3 = true, s4 = e6;
              } finally {
                try {
                  o3 || null == a2.return || a2.return();
                } finally {
                  if (n3)
                    throw s4;
                }
              }
              window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), this._start = function() {
                d._userNode && "string" == typeof d._userNode && (d._userNode = document.getElementById(d._userNode));
                var e6 = d._isGlobal ? window : d;
                if (e6.preload) {
                  var t6, r6 = document.getElementById(d._loadingScreenId), o4 = (r6 || ((r6 = document.createElement("div")).innerHTML = "Loading...", r6.style.position = "absolute", r6.id = d._loadingScreenId, (d._userNode || document.body).appendChild(r6)), d._preloadMethods);
                  for (t6 in o4) {
                    o4[t6] = o4[t6] || v;
                    var n4 = o4[t6];
                    n4 !== v.prototype && n4 !== v || (d._isGlobal && (window[t6] = d._wrapPreload(d, t6)), n4 = d), d._registeredPreloadMethods[t6] = n4[t6], n4[t6] = d._wrapPreload(n4, t6);
                  }
                  e6.preload(), d._runIfPreloadsAreDone();
                } else
                  d._setup(), d._recording || d._draw();
              }, this._runIfPreloadsAreDone = function() {
                var e6, t6 = this._isGlobal ? window : this;
                0 === t6._preloadCount && ((e6 = document.getElementById(t6._loadingScreenId)) && e6.parentNode.removeChild(e6), this._setupDone || (this._lastTargetFrameTime = window.performance.now(), this._lastRealFrameTime = window.performance.now(), t6._setup(), this._recording || t6._draw()));
              }, this._decrementPreload = function() {
                var e6 = this._isGlobal ? window : this;
                e6._preloadDone || "function" != typeof e6.preload || (e6._setProperty("_preloadCount", e6._preloadCount - 1), e6._runIfPreloadsAreDone());
              }, this._wrapPreload = function(o4, n4) {
                var s5 = this;
                return function() {
                  s5._incrementPreload();
                  for (var e6 = arguments.length, t6 = new Array(e6), r6 = 0; r6 < e6; r6++)
                    t6[r6] = arguments[r6];
                  return s5._registeredPreloadMethods[n4].apply(o4, t6);
                };
              }, this._incrementPreload = function() {
                var e6 = this._isGlobal ? window : this;
                e6._preloadDone || e6._setProperty("_preloadCount", e6._preloadCount + 1);
              }, this._setup = function() {
                d.createCanvas(d._defaultCanvasSize.width, d._defaultCanvasSize.height, "p2d");
                var e6 = d._isGlobal ? window : d;
                if ("function" == typeof e6.preload)
                  for (var t6 in d._preloadMethods)
                    e6[t6] = d._preloadMethods[t6][t6], e6[t6] && d && (e6[t6] = e6[t6].bind(d));
                d._millisStart = window.performance.now(), e6._preloadDone = true, "function" == typeof e6.setup && e6.setup();
                var r6 = document.getElementsByTagName("canvas"), o4 = true, n4 = false, s5 = void 0;
                try {
                  for (var i4, a3 = r6[Symbol.iterator](); !(o4 = (i4 = a3.next()).done); o4 = true) {
                    var l3 = i4.value;
                    "true" === l3.dataset.hidden && (l3.style.visibility = "", delete l3.dataset.hidden);
                  }
                } catch (e7) {
                  n4 = true, s5 = e7;
                } finally {
                  try {
                    o4 || null == a3.return || a3.return();
                  } finally {
                    if (n4)
                      throw s5;
                  }
                }
                d._lastTargetFrameTime = window.performance.now(), d._lastRealFrameTime = window.performance.now(), d._setupDone = true, (d._accessibleOutputs.grid || d._accessibleOutputs.text) && d._updateAccsOutput();
              }, this._draw = function() {
                var e6 = window.performance.now(), t6 = e6 - d._lastTargetFrameTime, r6 = 1e3 / d._targetFrameRate;
                (!d._loop || r6 - 5 <= t6) && (d.deltaTime = e6 - d._lastRealFrameTime, d._setProperty("deltaTime", d.deltaTime), d._frameRate = 1e3 / d.deltaTime, d.redraw(), d._lastTargetFrameTime = Math.max(d._lastTargetFrameTime + r6, e6), d._lastRealFrameTime = e6, void 0 !== d._updateMouseCoords && (d._updateMouseCoords(), d._setProperty("movedX", 0), d._setProperty("movedY", 0))), d._loop && (d._requestAnimId = window.requestAnimationFrame(d._draw));
              }, this._setProperty = function(e6, t6) {
                d[e6] = t6, d._isGlobal && (window[e6] = t6);
              }, this.remove = function() {
                var t6 = document.getElementById(d._loadingScreenId);
                if (t6 && (t6.parentNode.removeChild(t6), d._incrementPreload()), d._curElement) {
                  for (var e6 in d._loop = false, d._requestAnimId && window.cancelAnimationFrame(d._requestAnimId), d._events)
                    window.removeEventListener(e6, d._events[e6]);
                  var r6 = true, t6 = false, o4 = void 0;
                  try {
                    for (var n4, s5 = d._elements[Symbol.iterator](); !(r6 = (n4 = s5.next()).done); r6 = true) {
                      var i4, a3 = n4.value;
                      for (i4 in a3.elt && a3.elt.parentNode && a3.elt.parentNode.removeChild(a3.elt), a3._events)
                        a3.elt.removeEventListener(i4, a3._events[i4]);
                    }
                  } catch (e7) {
                    t6 = true, o4 = e7;
                  } finally {
                    try {
                      r6 || null == s5.return || s5.return();
                    } finally {
                      if (t6)
                        throw o4;
                    }
                  }
                  var l3 = d;
                  d._registeredMethods.remove.forEach(function(e7) {
                    void 0 !== e7 && e7.call(l3);
                  });
                }
                if (d._isGlobal) {
                  for (var u3 in v.prototype)
                    try {
                      delete window[u3];
                    } catch (e7) {
                      window[u3] = void 0;
                    }
                  for (var c2 in d)
                    if (d.hasOwnProperty(c2))
                      try {
                        delete window[c2];
                      } catch (e7) {
                        window[c2] = void 0;
                      }
                  v.instance = null;
                }
              }, this._registeredMethods.init.forEach(function(e6) {
                void 0 !== e6 && e6.call(this);
              }, this), this._setupPromisePreloads();
              var u2, c, f = this._createFriendlyGlobalFunctionBinder();
              if (e5)
                e5(this), v._checkForUserDefinedFunctions(this);
              else {
                for (var h in this._isGlobal = true, v.instance = this, v.prototype)
                  "function" == typeof v.prototype[h] ? (u2 = h.substring(2), this._events.hasOwnProperty(u2) || (Math.hasOwnProperty(h) && Math[h] === v.prototype[h] ? f(h, v.prototype[h]) : f(h, v.prototype[h].bind(this)))) : f(h, v.prototype[h]);
                for (var p in this)
                  this.hasOwnProperty(p) && f(p, this[p]);
              }
              for (c in this._events) {
                var m = this["_on".concat(c)];
                m && (m = m.bind(this), window.addEventListener(c, m, { passive: false }), this._events[c] = m);
              }
              function y() {
                d._setProperty("focused", true);
              }
              function g() {
                d._setProperty("focused", false);
              }
              window.addEventListener("focus", y), window.addEventListener("blur", g), this.registerMethod("remove", function() {
                window.removeEventListener("focus", y), window.removeEventListener("blur", g);
              }), "complete" === document.readyState ? this._start() : window.addEventListener("load", this._start.bind(this), false);
            }
            var e4, t4, r4;
            return e4 = v, (t4 = [{ key: "_initializeInstanceVariables", value: function() {
              this._accessibleOutputs = { text: false, grid: false, textLabel: false, gridLabel: false }, this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = n2.RGB, this._colorMaxes = { rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1] }, this._downKeys = {};
            } }, { key: "registerPreloadMethod", value: function(e5, t5) {
              v.prototype._preloadMethods.hasOwnProperty(e5) || (v.prototype._preloadMethods[e5] = t5);
            } }, { key: "registerMethod", value: function(e5, t5) {
              var r5 = this || v.prototype;
              r5._registeredMethods.hasOwnProperty(e5) || (r5._registeredMethods[e5] = []), r5._registeredMethods[e5].push(t5);
            } }, { key: "_createFriendlyGlobalFunctionBinder", value: function() {
              var e5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}, r5 = e5.globalObject || window;
              e5.log || console.log.bind(console);
              return function(e6, t5) {
                v.disableFriendlyErrors, r5[e6] = t5;
              };
            } }]) && s3(e4.prototype, t4), r4 && s3(e4, r4), v;
          }();
          for (l in u.instance = null, u.disableFriendlyErrors = false, n2)
            u.prototype[l] = n2[l];
          u.VERSION = n2.VERSION, u.prototype._preloadMethods = { loadJSON: u.prototype, loadImage: u.prototype, loadStrings: u.prototype, loadXML: u.prototype, loadBytes: u.prototype, loadTable: u.prototype, loadFont: u.prototype, loadModel: u.prototype, loadShader: u.prototype }, u.prototype._registeredMethods = { init: [], pre: [], post: [], remove: [] }, u.prototype._registeredPreloadMethods = {}, r3.default = u;
        }, { "./constants": 262, "./shim": 284, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.get-own-property-names": 177, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.for-each": 235, "core-js/modules/web.dom-collections.iterator": 236 }], 274: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (e3 = e3("./main")) && e3.__esModule ? e3 : { default: e3 };
          function s3(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          n2.default.Element = function() {
            function r4(e5, t5) {
              if (!(this instanceof r4))
                throw new TypeError("Cannot call a class as a function");
              this.elt = e5, this._pInst = this._pixelsState = t5, this._events = {}, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight;
            }
            var e4, t4, o2;
            return e4 = r4, o2 = [{ key: "_adjustListener", value: function(e5, t5, r5) {
              return false === t5 ? n2.default.Element._detachListener(e5, r5) : n2.default.Element._attachListener(e5, t5, r5), this;
            } }, { key: "_attachListener", value: function(e5, t5, r5) {
              r5._events[e5] && n2.default.Element._detachListener(e5, r5);
              t5 = t5.bind(r5);
              r5.elt.addEventListener(e5, t5, false), r5._events[e5] = t5;
            } }, { key: "_detachListener", value: function(e5, t5) {
              var r5 = t5._events[e5];
              t5.elt.removeEventListener(e5, r5, false), t5._events[e5] = null;
            } }], (t4 = [{ key: "parent", value: function(e5) {
              return void 0 === e5 ? this.elt.parentNode : ("string" == typeof e5 ? ("#" === e5[0] && (e5 = e5.substring(1)), e5 = document.getElementById(e5)) : e5 instanceof n2.default.Element && (e5 = e5.elt), e5.appendChild(this.elt), this);
            } }, { key: "id", value: function(e5) {
              return void 0 === e5 ? this.elt.id : (this.elt.id = e5, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this);
            } }, { key: "class", value: function(e5) {
              return void 0 === e5 ? this.elt.className : (this.elt.className = e5, this);
            } }, { key: "mousePressed", value: function(t5) {
              return n2.default.Element._adjustListener("mousedown", function(e5) {
                return this._pInst._setProperty("mouseIsPressed", true), this._pInst._setMouseButton(e5), t5.call(this, e5);
              }, this), this;
            } }, { key: "doubleClicked", value: function(e5) {
              return n2.default.Element._adjustListener("dblclick", e5, this), this;
            } }, { key: "mouseWheel", value: function(e5) {
              return n2.default.Element._adjustListener("wheel", e5, this), this;
            } }, { key: "mouseReleased", value: function(e5) {
              return n2.default.Element._adjustListener("mouseup", e5, this), this;
            } }, { key: "mouseClicked", value: function(e5) {
              return n2.default.Element._adjustListener("click", e5, this), this;
            } }, { key: "mouseMoved", value: function(e5) {
              return n2.default.Element._adjustListener("mousemove", e5, this), this;
            } }, { key: "mouseOver", value: function(e5) {
              return n2.default.Element._adjustListener("mouseover", e5, this), this;
            } }, { key: "mouseOut", value: function(e5) {
              return n2.default.Element._adjustListener("mouseout", e5, this), this;
            } }, { key: "touchStarted", value: function(e5) {
              return n2.default.Element._adjustListener("touchstart", e5, this), this;
            } }, { key: "touchMoved", value: function(e5) {
              return n2.default.Element._adjustListener("touchmove", e5, this), this;
            } }, { key: "touchEnded", value: function(e5) {
              return n2.default.Element._adjustListener("touchend", e5, this), this;
            } }, { key: "dragOver", value: function(e5) {
              return n2.default.Element._adjustListener("dragover", e5, this), this;
            } }, { key: "dragLeave", value: function(e5) {
              return n2.default.Element._adjustListener("dragleave", e5, this), this;
            } }, { key: "_setProperty", value: function(e5, t5) {
              this[e5] = t5;
            } }]) && s3(e4.prototype, t4), o2 && s3(e4, o2), r4;
          }();
          e3 = n2.default.Element;
          r3.default = e3;
        }, { "./main": 273 }], 275: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var c = (u = e3("./main")) && u.__esModule ? u : { default: u }, d = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== a(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = i2();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("./constants"));
          function i2() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), i2 = function() {
              return e4;
            }, e4);
          }
          function a(e4) {
            return (a = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function n2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function s3(e4, t4) {
            return (s3 = Object.setPrototypeOf || function(e5, t5) {
              return e5.__proto__ = t5, e5;
            })(e4, t4);
          }
          function f(r4) {
            return function() {
              var e4, t4 = l(r4);
              return h(this, function() {
                if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                  if ("function" == typeof Proxy)
                    return 1;
                  try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                    })), 1;
                  } catch (e5) {
                  }
                }
              }() ? (e4 = l(this).constructor, Reflect.construct(t4, arguments, e4)) : t4.apply(this, arguments));
            };
          }
          function h(e4, t4) {
            return !t4 || "object" !== a(t4) && "function" != typeof t4 ? p(e4) : t4;
          }
          function p(e4) {
            if (void 0 === e4)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e4;
          }
          function l(e4) {
            return (l = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
              return e5.__proto__ || Object.getPrototypeOf(e5);
            })(e4);
          }
          c.default.Graphics = function(e4) {
            var t4 = u2;
            if ("function" != typeof e4 && null !== e4)
              throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && s3(t4, e4);
            var r4, l2 = f(u2);
            function u2(e5, t5, r5, o3, n3) {
              var s4;
              if (!(this instanceof u2))
                throw new TypeError("Cannot call a class as a function");
              a2 = n3 || document.createElement("canvas"), (s4 = l2.call(this, a2, o3)).canvas = a2;
              var i3, a2 = r5 || d.P2D, r5 = o3._userNode || document.body;
              for (i3 in n3 || r5.appendChild(s4.canvas), c.default.prototype)
                s4[i3] || ("function" == typeof c.default.prototype[i3] ? s4[i3] = c.default.prototype[i3].bind(p(s4)) : s4[i3] = c.default.prototype[i3]);
              return c.default.prototype._initializeInstanceVariables.apply(p(s4)), s4.width = e5, s4.height = t5, s4._pixelDensity = o3._pixelDensity, a2 === d.WEBGL ? s4._renderer = new c.default.RendererGL(s4.canvas, p(s4), false) : s4._renderer = new c.default.Renderer2D(s4.canvas, p(s4), false), o3._elements.push(p(s4)), Object.defineProperty(p(s4), "deltaTime", { get: function() {
                return this._pInst.deltaTime;
              } }), s4._renderer.resize(e5, t5), s4._renderer._applyDefaults(), h(s4, p(s4));
            }
            return t4 = u2, (e4 = [{ key: "reset", value: function() {
              this._renderer.resetMatrix(), this._renderer.isP3D && this._renderer._update();
            } }, { key: "remove", value: function() {
              this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
              var e5, t5 = this._pInst._elements.indexOf(this);
              for (e5 in -1 !== t5 && this._pInst._elements.splice(t5, 1), this._events)
                this.elt.removeEventListener(e5, this._events[e5]);
            } }, { key: "createFramebuffer", value: function(e5) {
              return new c.default.Framebuffer(this, e5);
            } }]) && n2(t4.prototype, e4), r4 && n2(t4, r4), u2;
          }(c.default.Element);
          var u = c.default.Graphics;
          r3.default = u;
        }, { "./constants": 262, "./main": 273, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.splice": 166, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 276: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var a = (s3 = e3("./main")) && s3.__esModule ? s3 : { default: s3 }, A = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== l(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = i2();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function i2() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), i2 = function() {
              return e4;
            }, e4);
          }
          function l(e4) {
            return (l = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function u(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function c(e4, t4) {
            return (c = Object.setPrototypeOf || function(e5, t5) {
              return e5.__proto__ = t5, e5;
            })(e4, t4);
          }
          function d(o3) {
            return function() {
              var e4, t4, r4 = n2(o3);
              return e4 = function() {
                if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                  if ("function" == typeof Proxy)
                    return 1;
                  try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                    })), 1;
                  } catch (e5) {
                  }
                }
              }() ? (e4 = n2(this).constructor, Reflect.construct(r4, arguments, e4)) : r4.apply(this, arguments), r4 = this, !(t4 = e4) || "object" !== l(t4) && "function" != typeof t4 ? f(r4) : t4;
            };
          }
          function f(e4) {
            if (void 0 === e4)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e4;
          }
          function n2(e4) {
            return (n2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
              return e5.__proto__ || Object.getPrototypeOf(e5);
            })(e4);
          }
          var s3 = function(e4) {
            var t4 = s4;
            if ("function" != typeof e4 && null !== e4)
              throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && c(t4, e4);
            var r4, n3 = d(s4);
            function s4(e5, t5, r5) {
              var o3;
              if (this instanceof s4)
                return (o3 = n3.call(this, e5, t5)).canvas = e5, o3._pixelsState = t5, r5 ? (o3._isMainCanvas = true, o3._pInst._setProperty("_curElement", f(o3)), o3._pInst._setProperty("canvas", o3.canvas), o3._pInst._setProperty("width", o3.width), o3._pInst._setProperty("height", o3.height)) : (o3.canvas.style.display = "none", o3._styles = []), o3._textSize = 12, o3._textLeading = 15, o3._textFont = "sans-serif", o3._textStyle = A.NORMAL, o3._textAscent = null, o3._textDescent = null, o3._textAlign = A.LEFT, o3._textBaseline = A.BASELINE, o3._textWrap = A.WORD, o3._rectMode = A.CORNER, o3._ellipseMode = A.CENTER, o3._curveTightness = 0, o3._imageMode = A.CORNER, o3._tint = null, o3._doStroke = true, o3._doFill = true, o3._strokeSet = false, o3._fillSet = false, o3._leadingSet = false, o3;
              throw new TypeError("Cannot call a class as a function");
            }
            return t4 = s4, (e4 = [{ key: "push", value: function() {
              return { properties: { _doStroke: this._doStroke, _strokeSet: this._strokeSet, _doFill: this._doFill, _fillSet: this._fillSet, _tint: this._tint, _imageMode: this._imageMode, _rectMode: this._rectMode, _ellipseMode: this._ellipseMode, _textFont: this._textFont, _textLeading: this._textLeading, _leadingSet: this._leadingSet, _textSize: this._textSize, _textAlign: this._textAlign, _textBaseline: this._textBaseline, _textStyle: this._textStyle, _textWrap: this._textWrap } };
            } }, { key: "pop", value: function(e5) {
              e5.properties && Object.assign(this, e5.properties);
            } }, { key: "resize", value: function(e5, t5) {
              this.width = e5, this.height = t5, this.elt.width = e5 * this._pInst._pixelDensity, this.elt.height = t5 * this._pInst._pixelDensity, this.elt.style.width = "".concat(e5, "px"), this.elt.style.height = "".concat(t5, "px"), this._isMainCanvas && (this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height));
            } }, { key: "get", value: function(e5, t5, r5, o3) {
              var n4 = this._pixelsState, s5 = n4._pixelDensity, i3 = this.canvas;
              if (void 0 === e5 && void 0 === t5)
                e5 = t5 = 0, r5 = n4.width, o3 = n4.height;
              else if (e5 *= s5, t5 *= s5, void 0 === r5 && void 0 === o3)
                return e5 < 0 || t5 < 0 || e5 >= i3.width || t5 >= i3.height ? [0, 0, 0, 0] : this._getPixel(e5, t5);
              n4 = new a.default.Image(r5, o3);
              return n4.canvas.getContext("2d").drawImage(i3, e5, t5, r5 * s5, o3 * s5, 0, 0, r5, o3), n4;
            } }, { key: "textLeading", value: function(e5) {
              return "number" == typeof e5 ? (this._setProperty("_leadingSet", true), this._setProperty("_textLeading", e5), this._pInst) : this._textLeading;
            } }, { key: "textStyle", value: function(e5) {
              return e5 ? (e5 !== A.NORMAL && e5 !== A.ITALIC && e5 !== A.BOLD && e5 !== A.BOLDITALIC || this._setProperty("_textStyle", e5), this._applyTextProperties()) : this._textStyle;
            } }, { key: "textAscent", value: function() {
              return null === this._textAscent && this._updateTextMetrics(), this._textAscent;
            } }, { key: "textDescent", value: function() {
              return null === this._textDescent && this._updateTextMetrics(), this._textDescent;
            } }, { key: "textAlign", value: function(e5, t5) {
              return void 0 !== e5 ? (this._setProperty("_textAlign", e5), void 0 !== t5 && this._setProperty("_textBaseline", t5), this._applyTextProperties()) : { horizontal: this._textAlign, vertical: this._textBaseline };
            } }, { key: "textWrap", value: function(e5) {
              return this._setProperty("_textWrap", e5), this._textWrap;
            } }, { key: "text", value: function(e5, t5, r5, o3, n4) {
              var s5, i3, a2, l2, u2 = this._pInst, c2 = this._textWrap, d2 = Number.MAX_VALUE, f2 = r5;
              if ((this._doFill || this._doStroke) && void 0 !== e5) {
                if (s5 = (e5 = (e5 = "string" != typeof e5 ? e5.toString() : e5).replace(/(\t)/g, "  ")).split("\n"), void 0 !== o3) {
                  switch (this._rectMode === A.CENTER && (t5 -= o3 / 2), this._textAlign) {
                    case A.CENTER:
                      t5 += o3 / 2;
                      break;
                    case A.RIGHT:
                      t5 += o3;
                  }
                  if (void 0 !== n4) {
                    this._rectMode === A.CENTER && (r5 -= n4 / 2, f2 -= n4 / 2);
                    var e5 = r5, h2 = u2.textAscent();
                    switch (this._textBaseline) {
                      case A.BOTTOM:
                        l2 = r5 + n4, r5 = Math.max(l2, r5), f2 += h2;
                        break;
                      case A.CENTER:
                        l2 = r5 + n4 / 2, r5 = Math.max(l2, r5), f2 += h2 / 2;
                    }
                    d2 = r5 + n4 - h2, this._textBaseline === A.CENTER && (d2 = e5 + n4 - h2 / 2);
                  } else
                    this._textBaseline !== A.BOTTOM && this._textBaseline !== A.CENTER || (f2 = r5 - (e5 = u2.textSize() * this._textLeading) / 2, d2 = r5 + e5 / 2);
                  if (c2 === A.WORD) {
                    for (var p = [], m = 0; m < s5.length; m++) {
                      for (var y = "", g = s5[m].split(" "), v = 0; v < g.length; v++)
                        i3 = "".concat(y + g[v]) + " ", y = o3 < (a2 = this.textWidth(i3)) && 0 < y.length ? (p.push(y), "".concat(g[v]) + " ") : i3;
                      p.push(y);
                    }
                    var b = 0;
                    this._textBaseline === A.CENTER ? b = (p.length - 1) * u2.textLeading() / 2 : this._textBaseline === A.BOTTOM && (b = (p.length - 1) * u2.textLeading());
                    for (var j = 0; j < s5.length; j++) {
                      y = "", g = s5[j].split(" ");
                      for (var _ = 0; _ < g.length; _++)
                        i3 = "".concat(y + g[_]) + " ", o3 < (a2 = this.textWidth(i3)) && 0 < y.length ? (this._renderText(u2, y.trim(), t5, r5 - b, d2, f2), y = "".concat(g[_]) + " ", r5 += u2.textLeading()) : y = i3;
                      this._renderText(u2, y.trim(), t5, r5 - b, d2, f2), r5 += u2.textLeading();
                    }
                  } else {
                    for (var x = [], w = 0; w < s5.length; w++)
                      for (var S = s5[w].split(y = ""), E = 0; E < S.length; E++)
                        i3 = "".concat(y + S[E]), (a2 = this.textWidth(i3)) <= o3 ? y += S[E] : o3 < a2 && 0 < y.length && (x.push(y), y = "".concat(S[E]));
                    x.push(y);
                    var M = 0;
                    this._textBaseline === A.CENTER ? M = (x.length - 1) * u2.textLeading() / 2 : this._textBaseline === A.BOTTOM && (M = (x.length - 1) * u2.textLeading());
                    for (var T = 0; T < s5.length; T++) {
                      S = s5[T].split(y = "");
                      for (var k = 0; k < S.length; k++)
                        i3 = "".concat(y + S[k]), (a2 = this.textWidth(i3)) <= o3 ? y += S[k] : o3 < a2 && 0 < y.length && (this._renderText(u2, y.trim(), t5, r5 - M, d2, f2), r5 += u2.textLeading(), y = "".concat(S[k]));
                    }
                    this._renderText(u2, y.trim(), t5, r5 - M, d2, f2), r5 += u2.textLeading();
                  }
                } else {
                  var O = 0;
                  this._textBaseline === A.CENTER ? O = (s5.length - 1) * u2.textLeading() / 2 : this._textBaseline === A.BOTTOM && (O = (s5.length - 1) * u2.textLeading());
                  for (var C = 0; C < s5.length; C++)
                    this._renderText(u2, s5[C], t5, r5 - O, d2, f2 - O), r5 += u2.textLeading();
                }
                return u2;
              }
            } }, { key: "_applyDefaults", value: function() {
              return this;
            } }, { key: "_isOpenType", value: function() {
              var e5 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this._textFont;
              return "object" === l(e5) && e5.font && e5.font.supported;
            } }, { key: "_updateTextMetrics", value: function() {
              var e5, t5, r5, o3, n4, s5;
              return this._isOpenType() ? (this._setProperty("_textAscent", this._textFont._textAscent()), this._setProperty("_textDescent", this._textFont._textDescent())) : ((e5 = document.createElement("span")).style.fontFamily = this._textFont, e5.style.fontSize = "".concat(this._textSize, "px"), e5.innerHTML = "ABCjgq|", (s5 = document.createElement("div")).style.display = "inline-block", s5.style.width = "1px", s5.style.height = "0px", o3 = ((t5 = document.createElement("div")).appendChild(e5), t5.appendChild(s5), t5.style.height = "0px", t5.style.overflow = "hidden", document.body.appendChild(t5), s5.style.verticalAlign = "baseline", h(s5)), n4 = h(e5), r5 = o3[1] - n4[1], o3 = (s5.style.verticalAlign = "bottom", h(s5)), n4 = h(e5), s5 = o3[1] - n4[1] - r5, document.body.removeChild(t5), this._setProperty("_textAscent", r5), this._setProperty("_textDescent", s5)), this;
            } }]) && u(t4.prototype, e4), r4 && u(t4, r4), s4;
          }(a.default.Element);
          function h(e4) {
            var t4 = 0, r4 = 0;
            if (e4.offsetParent)
              for (; t4 += e4.offsetLeft, r4 += e4.offsetTop, e4 = e4.offsetParent; )
                ;
            else
              t4 += e4.offsetLeft, r4 += e4.offsetTop;
            return [t4, r4];
          }
          s3.prototype.textSize = function(e4) {
            return "number" == typeof e4 ? (this._setProperty("_textSize", e4), this._leadingSet || this._setProperty("_textLeading", e4 * A._DEFAULT_LEADMULT), this._applyTextProperties()) : this._textSize;
          }, a.default.Renderer = s3;
          e3 = a.default.Renderer;
          r3.default = e3;
        }, { "../core/constants": 262, "./main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.number.constructor": 171, "core-js/modules/es.object.assign": 174, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.replace": 194, "core-js/modules/es.string.split": 196, "core-js/modules/es.string.trim": 199, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 277: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.reflect.get"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.reflect.get"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var d = (n2 = e3("./main")) && n2.__esModule ? n2 : { default: n2 }, p = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== a(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = i2();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("./constants"));
          function i2() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), i2 = function() {
              return e4;
            }, e4);
          }
          function a(e4) {
            return (a = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function s3(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function l(e4, t4, r4) {
            return (l = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e5, t5, r5) {
              var e5 = function(e6, t6) {
                for (; !Object.prototype.hasOwnProperty.call(e6, t6) && null !== (e6 = f(e6)); )
                  ;
                return e6;
              }(e5, t5);
              if (e5)
                return (e5 = Object.getOwnPropertyDescriptor(e5, t5)).get ? e5.get.call(r5) : e5.value;
            })(e4, t4, r4 || e4);
          }
          function u(e4, t4) {
            return (u = Object.setPrototypeOf || function(e5, t5) {
              return e5.__proto__ = t5, e5;
            })(e4, t4);
          }
          function c(r4) {
            return function() {
              var e4, t4 = f(r4), t4 = (e4 = function() {
                if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                  if ("function" == typeof Proxy)
                    return 1;
                  try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                    })), 1;
                  } catch (e5) {
                  }
                }
              }() ? (e4 = f(this).constructor, Reflect.construct(t4, arguments, e4)) : t4.apply(this, arguments), this);
              if (!e4 || "object" !== a(e4) && "function" != typeof e4) {
                if (void 0 !== t4)
                  return t4;
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }
              return e4;
            };
          }
          function f(e4) {
            return (f = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
              return e5.__proto__ || Object.getPrototypeOf(e5);
            })(e4);
          }
          e3("./p5.Renderer");
          var h = "rgba(0,0,0,0)", n2 = function(e4) {
            var t4 = n3;
            if ("function" != typeof e4 && null !== e4)
              throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && u(t4, e4);
            var r4, o3 = c(n3);
            function n3(e5, t5, r5) {
              if (this instanceof n3)
                return (e5 = o3.call(this, e5, t5, r5)).drawingContext = e5.canvas.getContext("2d"), e5._pInst._setProperty("drawingContext", e5.drawingContext), e5;
              throw new TypeError("Cannot call a class as a function");
            }
            return t4 = n3, (e4 = [{ key: "_applyDefaults", value: function() {
              this._cachedFillStyle = this._cachedStrokeStyle = void 0, this._cachedBlendMode = p.BLEND, this._setFill(p._DEFAULT_FILL), this._setStroke(p._DEFAULT_STROKE), this.drawingContext.lineCap = p.ROUND, this.drawingContext.font = "normal 12px sans-serif";
            } }, { key: "resize", value: function(e5, t5) {
              l(f(n3.prototype), "resize", this).call(this, e5, t5), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
            } }, { key: "background", value: function() {
              var e5, t5;
              this.drawingContext.save(), this.resetMatrix(), (arguments.length <= 0 ? void 0 : arguments[0]) instanceof d.default.Image ? 0 <= (arguments.length <= 1 ? void 0 : arguments[1]) ? (e5 = arguments.length <= 0 ? void 0 : arguments[0], this.drawingContext.globalAlpha = (arguments.length <= 1 ? void 0 : arguments[1]) / 255, this._pInst.image(e5, 0, 0, this.width, this.height)) : this._pInst.image(arguments.length <= 0 ? void 0 : arguments[0], 0, 0, this.width, this.height) : (e5 = this._getFill(), t5 = (t5 = this._pInst).color.apply(t5, arguments), this._pInst._addAccsOutput() && this._pInst._accsBackground(t5.levels), t5 = t5.toString(), this._setFill(t5), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(e5), this._isErasing && this._pInst.erase()), this.drawingContext.restore();
            } }, { key: "clear", value: function() {
              this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), this.drawingContext.restore();
            } }, { key: "fill", value: function() {
              var e5 = (e5 = this._pInst).color.apply(e5, arguments);
              this._setFill(e5.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("fill", e5.levels);
            } }, { key: "stroke", value: function() {
              var e5 = (e5 = this._pInst).color.apply(e5, arguments);
              this._setStroke(e5.toString()), this._pInst._addAccsOutput() && this._pInst._accsCanvasColors("stroke", e5.levels);
            } }, { key: "erase", value: function(e5, t5) {
              this._isErasing || (this._cachedFillStyle = this.drawingContext.fillStyle, e5 = this._pInst.color(255, e5).toString(), this.drawingContext.fillStyle = e5, this._cachedStrokeStyle = this.drawingContext.strokeStyle, e5 = this._pInst.color(255, t5).toString(), this.drawingContext.strokeStyle = e5, t5 = this._cachedBlendMode, this.blendMode(p.REMOVE), this._cachedBlendMode = t5, this._isErasing = true);
            } }, { key: "noErase", value: function() {
              this._isErasing && (this.drawingContext.fillStyle = this._cachedFillStyle, this.drawingContext.strokeStyle = this._cachedStrokeStyle, this.blendMode(this._cachedBlendMode), this._isErasing = false);
            } }, { key: "image", value: function(e5, t5, r5, o4, n4, s4, i3, a2, l2) {
              e5.gifProperties && e5._animateGif(this._pInst);
              try {
                d.default.MediaElement && e5 instanceof d.default.MediaElement && e5._ensureCanvas();
                var u2 = (u2 = this._tint && e5.canvas ? this._getTintedImageCanvas(e5) : u2) || e5.canvas || e5.elt, c2 = 1;
                e5.width && 0 < e5.width && (c2 = u2.width / e5.width), this._isErasing && this.blendMode(this._cachedBlendMode), this.drawingContext.drawImage(u2, c2 * t5, c2 * r5, c2 * o4, c2 * n4, s4, i3, a2, l2), this._isErasing && this._pInst.erase();
              } catch (e6) {
                if ("NS_ERROR_NOT_AVAILABLE" !== e6.name)
                  throw e6;
              }
            } }, { key: "_getTintedImageCanvas", value: function(e5) {
              if (!e5.canvas)
                return e5;
              e5.tintCanvas || (e5.tintCanvas = document.createElement("canvas")), e5.tintCanvas.width !== e5.canvas.width && (e5.tintCanvas.width = e5.canvas.width), e5.tintCanvas.height !== e5.canvas.height && (e5.tintCanvas.height = e5.canvas.height);
              var t5 = e5.tintCanvas.getContext("2d");
              return t5.save(), t5.clearRect(0, 0, e5.canvas.width, e5.canvas.height), (this._tint[0] < 255 || this._tint[1] < 255 || this._tint[2] < 255) && (t5.drawImage(e5.canvas, 0, 0), t5.globalCompositeOperation = "luminosity", t5.drawImage(e5.canvas, 0, 0), t5.globalCompositeOperation = "color", t5.drawImage(e5.canvas, 0, 0), t5.globalCompositeOperation = "multiply", t5.fillStyle = "rgb(".concat(this._tint.slice(0, 3).join(", "), ")"), t5.fillRect(0, 0, e5.canvas.width, e5.canvas.height), t5.globalCompositeOperation = "destination-in"), t5.globalAlpha = this._tint[3] / 255, t5.drawImage(e5.canvas, 0, 0), t5.restore(), e5.tintCanvas;
            } }, { key: "blendMode", value: function(e5) {
              if (e5 === p.SUBTRACT)
                console.warn("blendMode(SUBTRACT) only works in WEBGL mode.");
              else {
                if (e5 !== p.BLEND && e5 !== p.REMOVE && e5 !== p.DARKEST && e5 !== p.LIGHTEST && e5 !== p.DIFFERENCE && e5 !== p.MULTIPLY && e5 !== p.EXCLUSION && e5 !== p.SCREEN && e5 !== p.REPLACE && e5 !== p.OVERLAY && e5 !== p.HARD_LIGHT && e5 !== p.SOFT_LIGHT && e5 !== p.DODGE && e5 !== p.BURN && e5 !== p.ADD)
                  throw new Error("Mode ".concat(e5, " not recognized."));
                this._cachedBlendMode = e5, this.drawingContext.globalCompositeOperation = e5;
              }
            } }, { key: "blend", value: function() {
              for (var e5 = this.drawingContext.globalCompositeOperation, t5 = arguments.length, r5 = new Array(t5), o4 = 0; o4 < t5; o4++)
                r5[o4] = arguments[o4];
              var n4 = r5[r5.length - 1], s4 = Array.prototype.slice.call(r5, 0, r5.length - 1);
              this.drawingContext.globalCompositeOperation = n4, d.default.prototype.copy.apply(this, s4), this.drawingContext.globalCompositeOperation = e5;
            } }, { key: "_getPixel", value: function(e5, t5) {
              e5 = this.drawingContext.getImageData(e5, t5, 1, 1).data;
              return [e5[0], e5[1], e5[2], e5[3]];
            } }, { key: "loadPixels", value: function() {
              var e5 = this._pixelsState, t5 = e5._pixelDensity, r5 = this.width * t5, t5 = this.height * t5, r5 = this.drawingContext.getImageData(0, 0, r5, t5);
              e5._setProperty("imageData", r5), e5._setProperty("pixels", r5.data);
            } }, { key: "set", value: function(e5, t5, r5) {
              e5 = Math.floor(e5), t5 = Math.floor(t5);
              var o4 = this._pixelsState;
              if (r5 instanceof d.default.Image)
                this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(o4._pixelDensity, o4._pixelDensity), this.drawingContext.clearRect(e5, t5, r5.width, r5.height), this.drawingContext.drawImage(r5.canvas, e5, t5), this.drawingContext.restore();
              else {
                var n4 = 0, s4 = 0, i3 = 0, a2 = 0, l2 = 4 * (t5 * o4._pixelDensity * (this.width * o4._pixelDensity) + e5 * o4._pixelDensity);
                if (o4.imageData || o4.loadPixels.call(o4), "number" == typeof r5)
                  l2 < o4.pixels.length && (i3 = s4 = n4 = r5, a2 = 255);
                else if (r5 instanceof Array) {
                  if (r5.length < 4)
                    throw new Error("pixel array must be of the form [R, G, B, A]");
                  l2 < o4.pixels.length && (n4 = r5[0], s4 = r5[1], i3 = r5[2], a2 = r5[3]);
                } else
                  r5 instanceof d.default.Color && l2 < o4.pixels.length && (n4 = r5.levels[0], s4 = r5.levels[1], i3 = r5.levels[2], a2 = r5.levels[3]);
                for (var u2 = 0; u2 < o4._pixelDensity; u2++)
                  for (var c2 = 0; c2 < o4._pixelDensity; c2++)
                    l2 = 4 * ((t5 * o4._pixelDensity + c2) * this.width * o4._pixelDensity + (e5 * o4._pixelDensity + u2)), o4.pixels[l2] = n4, o4.pixels[l2 + 1] = s4, o4.pixels[l2 + 2] = i3, o4.pixels[l2 + 3] = a2;
              }
            } }, { key: "updatePixels", value: function(e5, t5, r5, o4) {
              var n4 = this._pixelsState, s4 = n4._pixelDensity;
              void 0 === e5 && void 0 === t5 && void 0 === r5 && void 0 === o4 && (t5 = e5 = 0, r5 = this.width, o4 = this.height), e5 *= s4, t5 *= s4, r5 *= s4, o4 *= s4, this.gifProperties && (this.gifProperties.frames[this.gifProperties.displayIndex].image = n4.imageData), this.drawingContext.putImageData(n4.imageData, e5, t5, 0, 0, r5, o4);
            } }, { key: "_acuteArcToBezier", value: function(e5, t5) {
              var r5 = t5 / 2, o4 = Math.cos(r5), n4 = Math.sin(r5), s4 = 1 / Math.tan(r5), r5 = e5 + r5, i3 = Math.cos(r5), r5 = Math.sin(r5), a2 = (4 - o4) / 3, n4 = n4 + (o4 - a2) * s4;
              return { ax: Math.cos(e5).toFixed(7), ay: Math.sin(e5).toFixed(7), bx: (a2 * i3 + n4 * r5).toFixed(7), by: (a2 * r5 - n4 * i3).toFixed(7), cx: (a2 * i3 - n4 * r5).toFixed(7), cy: (a2 * r5 + n4 * i3).toFixed(7), dx: Math.cos(e5 + t5).toFixed(7), dy: Math.sin(e5 + t5).toFixed(7) };
            } }, { key: "arc", value: function(r5, o4, e5, t5, n4, s4, i3) {
              var a2, l2 = this.drawingContext, u2 = e5 / 2, c2 = t5 / 2, d2 = [];
              for (r5 += u2, o4 += c2; 1e-5 <= s4 - n4; )
                a2 = Math.min(s4 - n4, p.HALF_PI), d2.push(this._acuteArcToBezier(n4, a2)), n4 += a2;
              return this._doFill && (l2.beginPath(), d2.forEach(function(e6, t6) {
                0 === t6 && l2.moveTo(r5 + e6.ax * u2, o4 + e6.ay * c2), l2.bezierCurveTo(r5 + e6.bx * u2, o4 + e6.by * c2, r5 + e6.cx * u2, o4 + e6.cy * c2, r5 + e6.dx * u2, o4 + e6.dy * c2);
              }), i3 !== p.PIE && null != i3 || l2.lineTo(r5, o4), l2.closePath(), l2.fill()), this._doStroke && (l2.beginPath(), d2.forEach(function(e6, t6) {
                0 === t6 && l2.moveTo(r5 + e6.ax * u2, o4 + e6.ay * c2), l2.bezierCurveTo(r5 + e6.bx * u2, o4 + e6.by * c2, r5 + e6.cx * u2, o4 + e6.cy * c2, r5 + e6.dx * u2, o4 + e6.dy * c2);
              }), i3 === p.PIE ? (l2.lineTo(r5, o4), l2.closePath()) : i3 === p.CHORD && l2.closePath(), l2.stroke()), this;
            } }, { key: "ellipse", value: function(e5) {
              var t5 = this.drawingContext, r5 = this._doFill, o4 = this._doStroke, n4 = parseFloat(e5[0]), s4 = parseFloat(e5[1]), i3 = parseFloat(e5[2]), e5 = parseFloat(e5[3]);
              if (r5 && !o4) {
                if (this._getFill() === h)
                  return this;
              } else if (!r5 && o4 && this._getStroke() === h)
                return this;
              var a2 = i3 / 2 * 0.5522847498, l2 = e5 / 2 * 0.5522847498, u2 = n4 + i3, c2 = s4 + e5, i3 = n4 + i3 / 2, e5 = s4 + e5 / 2;
              t5.beginPath(), t5.moveTo(n4, e5), t5.bezierCurveTo(n4, e5 - l2, i3 - a2, s4, i3, s4), t5.bezierCurveTo(i3 + a2, s4, u2, e5 - l2, u2, e5), t5.bezierCurveTo(u2, e5 + l2, i3 + a2, c2, i3, c2), t5.bezierCurveTo(i3 - a2, c2, n4, e5 + l2, n4, e5), r5 && t5.fill(), o4 && t5.stroke();
            } }, { key: "line", value: function(e5, t5, r5, o4) {
              var n4 = this.drawingContext;
              return this._doStroke && this._getStroke() !== h && (n4.beginPath(), n4.moveTo(e5, t5), n4.lineTo(r5, o4), n4.stroke()), this;
            } }, { key: "point", value: function(e5, t5) {
              var r5, o4, n4 = this.drawingContext;
              return !this._doStroke || this._getStroke() === h ? this : (r5 = this._getStroke(), o4 = this._getFill(), this._setFill(r5), n4.beginPath(), n4.arc(e5, t5, n4.lineWidth / 2, 0, p.TWO_PI, false), n4.fill(), void this._setFill(o4));
            } }, { key: "quad", value: function(e5, t5, r5, o4, n4, s4, i3, a2) {
              var l2 = this.drawingContext, u2 = this._doFill, c2 = this._doStroke;
              if (u2 && !c2) {
                if (this._getFill() === h)
                  return this;
              } else if (!u2 && c2 && this._getStroke() === h)
                return this;
              return l2.beginPath(), l2.moveTo(e5, t5), l2.lineTo(r5, o4), l2.lineTo(n4, s4), l2.lineTo(i3, a2), l2.closePath(), u2 && l2.fill(), c2 && l2.stroke(), this;
            } }, { key: "rect", value: function(e5) {
              var t5, r5, o4 = e5[0], n4 = e5[1], s4 = e5[2], i3 = e5[3], a2 = e5[4], l2 = e5[5], u2 = e5[6], e5 = e5[7], c2 = this.drawingContext, d2 = this._doFill, f2 = this._doStroke;
              if (d2 && !f2) {
                if (this._getFill() === h)
                  return this;
              } else if (!d2 && f2 && this._getStroke() === h)
                return this;
              return c2.beginPath(), void 0 === a2 ? c2.rect(o4, n4, s4, i3) : (void 0 === l2 && (l2 = a2), void 0 === u2 && (u2 = l2), void 0 === e5 && (e5 = u2), f2 = (d2 = Math.abs(s4)) / 2, r5 = (t5 = Math.abs(i3)) / 2, t5 < 2 * (a2 = d2 < 2 * a2 ? f2 : a2) && (a2 = r5), t5 < 2 * (l2 = d2 < 2 * l2 ? f2 : l2) && (l2 = r5), t5 < 2 * (u2 = d2 < 2 * u2 ? f2 : u2) && (u2 = r5), t5 < 2 * (e5 = d2 < 2 * e5 ? f2 : e5) && (e5 = r5), c2.beginPath(), c2.moveTo(o4 + a2, n4), c2.arcTo(o4 + s4, n4, o4 + s4, n4 + i3, l2), c2.arcTo(o4 + s4, n4 + i3, o4, n4 + i3, u2), c2.arcTo(o4, n4 + i3, o4, n4, e5), c2.arcTo(o4, n4, o4 + s4, n4, a2), c2.closePath()), this._doFill && c2.fill(), this._doStroke && c2.stroke(), this;
            } }, { key: "triangle", value: function(e5) {
              var t5 = this.drawingContext, r5 = this._doFill, o4 = this._doStroke, n4 = e5[0], s4 = e5[1], i3 = e5[2], a2 = e5[3], l2 = e5[4], e5 = e5[5];
              if (r5 && !o4) {
                if (this._getFill() === h)
                  return this;
              } else if (!r5 && o4 && this._getStroke() === h)
                return this;
              t5.beginPath(), t5.moveTo(n4, s4), t5.lineTo(i3, a2), t5.lineTo(l2, e5), t5.closePath(), r5 && t5.fill(), o4 && t5.stroke();
            } }, { key: "endShape", value: function(e5, t5, r5, o4, n4, s4, i3) {
              if (0 !== t5.length && (this._doStroke || this._doFill)) {
                var a2, l2, u2, c2 = e5 === p.CLOSE, d2 = (c2 && !s4 && t5.push(t5[0]), t5.length);
                if (!r5 || i3 !== p.POLYGON && null !== i3)
                  if (!o4 || i3 !== p.POLYGON && null !== i3)
                    if (!n4 || i3 !== p.POLYGON && null !== i3)
                      if (i3 === p.POINTS)
                        for (l2 = 0; l2 < d2; l2++)
                          a2 = t5[l2], this._doStroke && this._pInst.stroke(a2[6]), this._pInst.point(a2[0], a2[1]);
                      else if (i3 === p.LINES)
                        for (l2 = 0; l2 + 1 < d2; l2 += 2)
                          a2 = t5[l2], this._doStroke && this._pInst.stroke(t5[l2 + 1][6]), this._pInst.line(a2[0], a2[1], t5[l2 + 1][0], t5[l2 + 1][1]);
                      else if (i3 === p.TRIANGLES)
                        for (l2 = 0; l2 + 2 < d2; l2 += 3)
                          a2 = t5[l2], this.drawingContext.beginPath(), this.drawingContext.moveTo(a2[0], a2[1]), this.drawingContext.lineTo(t5[l2 + 1][0], t5[l2 + 1][1]), this.drawingContext.lineTo(t5[l2 + 2][0], t5[l2 + 2][1]), this.drawingContext.closePath(), this._doFill && (this._pInst.fill(t5[l2 + 2][5]), this.drawingContext.fill()), this._doStroke && (this._pInst.stroke(t5[l2 + 2][6]), this.drawingContext.stroke());
                      else if (i3 === p.TRIANGLE_STRIP)
                        for (l2 = 0; l2 + 1 < d2; l2++)
                          a2 = t5[l2], this.drawingContext.beginPath(), this.drawingContext.moveTo(t5[l2 + 1][0], t5[l2 + 1][1]), this.drawingContext.lineTo(a2[0], a2[1]), this._doStroke && this._pInst.stroke(t5[l2 + 1][6]), this._doFill && this._pInst.fill(t5[l2 + 1][5]), l2 + 2 < d2 && (this.drawingContext.lineTo(t5[l2 + 2][0], t5[l2 + 2][1]), this._doStroke && this._pInst.stroke(t5[l2 + 2][6]), this._doFill && this._pInst.fill(t5[l2 + 2][5])), this._doFillStrokeClose(c2);
                      else if (i3 === p.TRIANGLE_FAN) {
                        if (2 < d2) {
                          for (this.drawingContext.beginPath(), l2 = 2; l2 < d2; l2++)
                            a2 = t5[l2], this.drawingContext.moveTo(t5[0][0], t5[0][1]), this.drawingContext.lineTo(t5[l2 - 1][0], t5[l2 - 1][1]), this.drawingContext.lineTo(a2[0], a2[1]), this.drawingContext.lineTo(t5[0][0], t5[0][1]), l2 < d2 - 1 && (this._doFill && a2[5] !== t5[l2 + 1][5] || this._doStroke && a2[6] !== t5[l2 + 1][6]) && (this._doFill && (this._pInst.fill(a2[5]), this.drawingContext.fill(), this._pInst.fill(t5[l2 + 1][5])), this._doStroke && (this._pInst.stroke(a2[6]), this.drawingContext.stroke(), this._pInst.stroke(t5[l2 + 1][6])), this.drawingContext.closePath(), this.drawingContext.beginPath());
                          this._doFillStrokeClose(c2);
                        }
                      } else if (i3 === p.QUADS)
                        for (l2 = 0; l2 + 3 < d2; l2 += 4) {
                          for (a2 = t5[l2], this.drawingContext.beginPath(), this.drawingContext.moveTo(a2[0], a2[1]), u2 = 1; u2 < 4; u2++)
                            this.drawingContext.lineTo(t5[l2 + u2][0], t5[l2 + u2][1]);
                          this.drawingContext.lineTo(a2[0], a2[1]), this._doFill && this._pInst.fill(t5[l2 + 3][5]), this._doStroke && this._pInst.stroke(t5[l2 + 3][6]), this._doFillStrokeClose(c2);
                        }
                      else if (i3 === p.QUAD_STRIP) {
                        if (3 < d2)
                          for (l2 = 0; l2 + 1 < d2; l2 += 2)
                            a2 = t5[l2], this.drawingContext.beginPath(), l2 + 3 < d2 ? (this.drawingContext.moveTo(t5[l2 + 2][0], t5[l2 + 2][1]), this.drawingContext.lineTo(a2[0], a2[1]), this.drawingContext.lineTo(t5[l2 + 1][0], t5[l2 + 1][1]), this.drawingContext.lineTo(t5[l2 + 3][0], t5[l2 + 3][1]), this._doFill && this._pInst.fill(t5[l2 + 3][5]), this._doStroke && this._pInst.stroke(t5[l2 + 3][6])) : (this.drawingContext.moveTo(a2[0], a2[1]), this.drawingContext.lineTo(t5[l2 + 1][0], t5[l2 + 1][1])), this._doFillStrokeClose(c2);
                      } else {
                        for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t5[0][0], t5[0][1]), l2 = 1; l2 < d2; l2++)
                          (a2 = t5[l2]).isVert && (a2.moveTo ? this.drawingContext.moveTo(a2[0], a2[1]) : this.drawingContext.lineTo(a2[0], a2[1]));
                        this._doFillStrokeClose(c2);
                      }
                    else {
                      for (this.drawingContext.beginPath(), l2 = 0; l2 < d2; l2++)
                        t5[l2].isVert ? t5[l2].moveTo ? this.drawingContext.moveTo(t5[l2][0], t5[l2][1]) : this.drawingContext.lineTo(t5[l2][0], t5[l2][1]) : this.drawingContext.quadraticCurveTo(t5[l2][0], t5[l2][1], t5[l2][2], t5[l2][3]);
                      this._doFillStrokeClose(c2);
                    }
                  else {
                    for (this.drawingContext.beginPath(), l2 = 0; l2 < d2; l2++)
                      t5[l2].isVert ? t5[l2].moveTo ? this.drawingContext.moveTo(t5[l2][0], t5[l2][1]) : this.drawingContext.lineTo(t5[l2][0], t5[l2][1]) : this.drawingContext.bezierCurveTo(t5[l2][0], t5[l2][1], t5[l2][2], t5[l2][3], t5[l2][4], t5[l2][5]);
                    this._doFillStrokeClose(c2);
                  }
                else if (3 < d2) {
                  var f2 = [], h2 = 1 - this._curveTightness;
                  for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t5[1][0], t5[1][1]), l2 = 1; l2 + 2 < d2; l2++)
                    a2 = t5[l2], f2[0] = [a2[0], a2[1]], f2[1] = [a2[0] + (h2 * t5[l2 + 1][0] - h2 * t5[l2 - 1][0]) / 6, a2[1] + (h2 * t5[l2 + 1][1] - h2 * t5[l2 - 1][1]) / 6], f2[2] = [t5[l2 + 1][0] + (h2 * t5[l2][0] - h2 * t5[l2 + 2][0]) / 6, t5[l2 + 1][1] + (h2 * t5[l2][1] - h2 * t5[l2 + 2][1]) / 6], f2[3] = [t5[l2 + 1][0], t5[l2 + 1][1]], this.drawingContext.bezierCurveTo(f2[1][0], f2[1][1], f2[2][0], f2[2][1], f2[3][0], f2[3][1]);
                  c2 && this.drawingContext.lineTo(t5[l2 + 1][0], t5[l2 + 1][1]), this._doFillStrokeClose(c2);
                }
                s4 = n4 = o4 = r5 = false, c2 && t5.pop();
              }
              return this;
            } }, { key: "strokeCap", value: function(e5) {
              return e5 !== p.ROUND && e5 !== p.SQUARE && e5 !== p.PROJECT || (this.drawingContext.lineCap = e5), this;
            } }, { key: "strokeJoin", value: function(e5) {
              return e5 !== p.ROUND && e5 !== p.BEVEL && e5 !== p.MITER || (this.drawingContext.lineJoin = e5), this;
            } }, { key: "strokeWeight", value: function(e5) {
              return this.drawingContext.lineWidth = void 0 === e5 || 0 === e5 ? 1e-4 : e5, this;
            } }, { key: "_getFill", value: function() {
              return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), this._cachedFillStyle;
            } }, { key: "_setFill", value: function(e5) {
              e5 !== this._cachedFillStyle && (this.drawingContext.fillStyle = e5, this._cachedFillStyle = e5);
            } }, { key: "_getStroke", value: function() {
              return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), this._cachedStrokeStyle;
            } }, { key: "_setStroke", value: function(e5) {
              e5 !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e5, this._cachedStrokeStyle = e5);
            } }, { key: "bezier", value: function(e5, t5, r5, o4, n4, s4, i3, a2) {
              return this._pInst.beginShape(), this._pInst.vertex(e5, t5), this._pInst.bezierVertex(r5, o4, n4, s4, i3, a2), this._pInst.endShape(), this;
            } }, { key: "curve", value: function(e5, t5, r5, o4, n4, s4, i3, a2) {
              return this._pInst.beginShape(), this._pInst.curveVertex(e5, t5), this._pInst.curveVertex(r5, o4), this._pInst.curveVertex(n4, s4), this._pInst.curveVertex(i3, a2), this._pInst.endShape(), this;
            } }, { key: "_doFillStrokeClose", value: function(e5) {
              e5 && this.drawingContext.closePath(), this._doFill && this.drawingContext.fill(), this._doStroke && this.drawingContext.stroke();
            } }, { key: "applyMatrix", value: function(e5, t5, r5, o4, n4, s4) {
              this.drawingContext.transform(e5, t5, r5, o4, n4, s4);
            } }, { key: "resetMatrix", value: function() {
              return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), this;
            } }, { key: "rotate", value: function(e5) {
              this.drawingContext.rotate(e5);
            } }, { key: "scale", value: function(e5, t5) {
              return this.drawingContext.scale(e5, t5), this;
            } }, { key: "translate", value: function(e5, t5) {
              return e5 instanceof d.default.Vector && (t5 = e5.y, e5 = e5.x), this.drawingContext.translate(e5, t5), this;
            } }, { key: "_renderText", value: function(e5, t5, r5, o4, n4, s4) {
              if (!(o4 < s4 || n4 <= o4))
                return e5.push(), this._isOpenType() ? this._textFont._renderPath(t5, r5, o4, { renderer: this }) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t5, r5, o4), this._doFill && (this._fillSet || this._setFill(p._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t5, r5, o4))), e5.pop(), e5;
            } }, { key: "textWidth", value: function(e5) {
              return this._isOpenType() ? this._textFont._textWidth(e5, this._textSize) : this.drawingContext.measureText(e5).width;
            } }, { key: "_applyTextProperties", value: function() {
              var e5, t5 = this._pInst;
              return this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), e5 = this._textFont, this._isOpenType() && (e5 = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), this.drawingContext.font = "".concat(this._textStyle || "normal", " ").concat(this._textSize || 12, "px ").concat(e5 || "sans-serif"), this.drawingContext.textAlign = this._textAlign, this._textBaseline === p.CENTER ? this.drawingContext.textBaseline = p._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, t5;
            } }, { key: "push", value: function() {
              return this.drawingContext.save(), l(f(n3.prototype), "push", this).call(this);
            } }, { key: "pop", value: function(e5) {
              this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, this._cachedStrokeStyle = this.drawingContext.strokeStyle, l(f(n3.prototype), "pop", this).call(this, e5);
            } }]) && s3(t4.prototype, e4), r4 && s3(t4, r4), n3;
          }(d.default.Renderer), e3 = (n2.prototype.text = function(e4, t4, r4, o3, n3) {
            void 0 !== o3 && this.drawingContext.textBaseline === p.BASELINE && (s4 = true, this.drawingContext.textBaseline = p.TOP);
            var s4, o3 = d.default.Renderer.prototype.text.apply(this, arguments);
            return s4 && (this.drawingContext.textBaseline = p.BASELINE), o3;
          }, d.default.Renderer2D = n2, d.default.Renderer2D);
          r3.default = e3;
        }, { "./constants": 262, "./main": 273, "./p5.Renderer": 276, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.slice": 164, "core-js/modules/es.function.name": 167, "core-js/modules/es.number.to-fixed": 173, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.reflect.get": 183, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 278: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator");
          var f = (e3 = e3("./main")) && e3.__esModule ? e3 : { default: e3 };
          f.default.prototype._promisePreloads = [];
          function o2() {
            return {};
          }
          var h = !(f.default.prototype.registerPromisePreload = function(e4) {
            f.default.prototype._promisePreloads.push(e4);
          });
          f.default.prototype._setupPromisePreloads = function() {
            var e4 = true, t4 = false, r4 = void 0;
            try {
              for (var o3, n2 = this._promisePreloads[Symbol.iterator](); !(e4 = (o3 = n2.next()).done); e4 = true) {
                var s3 = o3.value, i2 = this, a = s3.method, l = s3.addCallbacks, u = s3.legacyPreloadSetup, c = s3.target || this, d = c[a].bind(c);
                if (c === f.default.prototype) {
                  if (h)
                    continue;
                  i2 = null, d = c[a];
                }
                c[a] = this._wrapPromisePreload(i2, d, l), u && (c[u.method] = this._legacyPreloadGenerator(i2, u, c[a]));
              }
            } catch (e5) {
              t4 = true, r4 = e5;
            } finally {
              try {
                e4 || null == n2.return || n2.return();
              } finally {
                if (t4)
                  throw r4;
              }
            }
            h = true;
          }, f.default.prototype._wrapPromisePreload = function(e4, l, u) {
            var t4 = function() {
              for (var e5 = this, t5 = (this._incrementPreload(), null), r4 = null, o3 = arguments.length, n2 = new Array(o3), s3 = 0; s3 < o3; s3++)
                n2[s3] = arguments[s3];
              if (u)
                for (var i2 = n2.length - 1; 0 <= i2 && !r4 && "function" == typeof n2[i2]; i2--)
                  r4 = t5, t5 = n2.pop();
              var a = Promise.resolve(l.apply(this, n2));
              return t5 && a.then(t5), r4 && a.catch(r4), a.then(function() {
                return e5._decrementPreload();
              }), a;
            };
            return t4 = e4 ? t4.bind(e4) : t4;
          };
          f.default.prototype._legacyPreloadGenerator = function(e4, t4, s3) {
            var i2 = t4.createBaseObject || o2, t4 = function() {
              var t5 = this;
              this._incrementPreload();
              for (var e5 = arguments.length, r4 = new Array(e5), o3 = 0; o3 < e5; o3++)
                r4[o3] = arguments[o3];
              var n2 = i2.apply(this, r4);
              return s3.apply(this, r4).then(function(e6) {
                Object.assign(n2, e6), t5._decrementPreload();
              }), n2;
            };
            return t4 = e4 ? t4.bind(e4) : t4;
          };
        }, { "./main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.assign": 174, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.promise": 181, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 279: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var l = (n2 = e3("./main")) && n2.__esModule ? n2 : { default: n2 }, u = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== a(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = i2();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s3;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s3 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r4, s3) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("./constants"));
          function i2() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), i2 = function() {
              return e4;
            }, e4);
          }
          function a(e4) {
            return (a = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("./p5.Graphics"), e3("./p5.Renderer2D"), e3("../webgl/p5.RendererGL");
          var c = "defaultCanvas0", n2 = (l.default.prototype.createCanvas = function(e4, t4, r4, o3) {
            var n3, s3, i3;
            if (l.default._validateParameters("createCanvas", arguments), arguments[2] instanceof HTMLCanvasElement ? (r4 = u.P2D, o3 = arguments[2]) : n3 = r4 || u.P2D, o3)
              (i3 = document.getElementById(c)) && i3.parentNode.removeChild(i3), i3 = o3, this._defaultGraphicsCreated = false;
            else {
              if (n3 === u.WEBGL)
                (i3 = document.getElementById(c)) && (i3.parentNode.removeChild(i3), s3 = this._renderer, this._elements = this._elements.filter(function(e5) {
                  return e5 !== s3;
                })), (i3 = document.createElement("canvas")).id = c, i3.classList.add("p5Canvas");
              else if (this._defaultGraphicsCreated)
                i3 = this.canvas;
              else {
                i3 = o3 || document.createElement("canvas");
                for (var a2 = 0; document.getElementById("defaultCanvas".concat(a2)); )
                  a2++;
                c = "defaultCanvas".concat(a2), i3.id = c, i3.classList.add("p5Canvas");
              }
              this._setupDone || (i3.dataset.hidden = true, i3.style.visibility = "hidden"), (this._userNode || (0 === document.getElementsByTagName("main").length && (r4 = document.createElement("main"), document.body.appendChild(r4)), document.getElementsByTagName("main")[0])).appendChild(i3);
            }
            return n3 === u.WEBGL ? (this._setProperty("_renderer", new l.default.RendererGL(i3, this, true)), this._elements.push(this._renderer)) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new l.default.Renderer2D(i3, this, true)), this._defaultGraphicsCreated = true, this._elements.push(this._renderer)), this._renderer.resize(e4, t4), this._renderer._applyDefaults(), this._renderer;
          }, l.default.prototype.resizeCanvas = function(e4, t4, r4) {
            if (l.default._validateParameters("resizeCanvas", arguments), this._renderer) {
              var o3, n3, s3 = {};
              for (o3 in this.drawingContext) {
                var i3 = this.drawingContext[o3];
                "object" !== a(i3) && "function" != typeof i3 && (s3[o3] = i3);
              }
              for (n3 in this.width = e4, this.height = t4, this._renderer.resize(e4, t4), s3)
                try {
                  this.drawingContext[n3] = s3[n3];
                } catch (e5) {
                }
              r4 || this.redraw();
            }
            this._addAccsOutput() && this._updateAccsOutput();
          }, l.default.prototype.noCanvas = function() {
            this.canvas && this.canvas.parentNode.removeChild(this.canvas);
          }, l.default.prototype.createGraphics = function(e4, t4, r4, o3) {
            return arguments[2] instanceof HTMLCanvasElement && (r4 = u.P2D, o3 = arguments[2]), l.default._validateParameters("createGraphics", arguments), new l.default.Graphics(e4, t4, r4, this, o3);
          }, l.default.prototype.createFramebuffer = function(e4) {
            return new l.default.Framebuffer(this, e4);
          }, l.default.prototype.blendMode = function(e4) {
            l.default._validateParameters("blendMode", arguments), e4 === u.NORMAL && (console.warn("NORMAL has been deprecated for use in blendMode. defaulting to BLEND instead."), e4 = u.BLEND), this._renderer.blendMode(e4);
          }, l.default);
          r3.default = n2;
        }, { "../webgl/p5.RendererGL": 328, "./constants": 262, "./main": 273, "./p5.Graphics": 275, "./p5.Renderer2D": 277, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 280: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var l = n2(e3("../main")), a = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = c();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../constants")), u = n2(e3("../helpers"));
          function c() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), c = function() {
              return e4;
            }, e4);
          }
          function n2(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function s3(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          e3("../friendly_errors/fes_core"), e3("../friendly_errors/file_errors"), e3("../friendly_errors/validate_params"), l.default.prototype._normalizeArcAngles = function(e4, t4, r4, o3, n3) {
            var s4;
            return e4 -= a.TWO_PI * Math.floor(e4 / a.TWO_PI), t4 -= a.TWO_PI * Math.floor(t4 / a.TWO_PI), s4 = Math.min(Math.abs(e4 - t4), a.TWO_PI - Math.abs(e4 - t4)), n3 && (e4 = e4 <= a.HALF_PI ? Math.atan(r4 / o3 * Math.tan(e4)) : e4 > a.HALF_PI && e4 <= 3 * a.HALF_PI ? Math.atan(r4 / o3 * Math.tan(e4)) + a.PI : Math.atan(r4 / o3 * Math.tan(e4)) + a.TWO_PI, t4 = t4 <= a.HALF_PI ? Math.atan(r4 / o3 * Math.tan(t4)) : t4 > a.HALF_PI && t4 <= 3 * a.HALF_PI ? Math.atan(r4 / o3 * Math.tan(t4)) + a.PI : Math.atan(r4 / o3 * Math.tan(t4)) + a.TWO_PI), t4 < e4 && (t4 += a.TWO_PI), { start: e4, stop: t4, correspondToSamePoint: s4 < 1e-5 };
          }, l.default.prototype.arc = function(e4, t4, r4, o3, n3, s4, i3, a2) {
            return l.default._validateParameters("arc", arguments), (this._renderer._doStroke || this._renderer._doFill) && n3 !== s4 && (n3 = this._toRadians(n3), s4 = this._toRadians(s4), r4 = Math.abs(r4), o3 = Math.abs(o3), e4 = u.default.modeAdjust(e4, t4, r4, o3, this._renderer._ellipseMode), (t4 = this._normalizeArcAngles(n3, s4, e4.w, e4.h, true)).correspondToSamePoint ? this._renderer.ellipse([e4.x, e4.y, e4.w, e4.h, a2]) : (this._renderer.arc(e4.x, e4.y, e4.w, e4.h, t4.start, t4.stop, i3, a2), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("arc", [e4.x, e4.y, e4.w, e4.h, t4.start, t4.stop, i3]))), this;
          }, l.default.prototype.ellipse = function(e4, t4, r4, o3, n3) {
            return l.default._validateParameters("ellipse", arguments), this._renderEllipse.apply(this, arguments);
          }, l.default.prototype.circle = function() {
            l.default._validateParameters("circle", arguments);
            var e4 = Array.prototype.slice.call(arguments, 0, 2);
            return e4.push(arguments[2]), e4.push(arguments[2]), this._renderEllipse.apply(this, s3(e4));
          }, l.default.prototype._renderEllipse = function(e4, t4, r4, o3, n3) {
            return (this._renderer._doStroke || this._renderer._doFill) && (r4 < 0 && (r4 = Math.abs(r4)), void 0 === o3 ? o3 = r4 : o3 < 0 && (o3 = Math.abs(o3)), e4 = u.default.modeAdjust(e4, t4, r4, o3, this._renderer._ellipseMode), this._renderer.ellipse([e4.x, e4.y, e4.w, e4.h, n3]), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("ellipse", [e4.x, e4.y, e4.w, e4.h])), this;
          }, l.default.prototype.line = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return l.default._validateParameters("line", r4), this._renderer._doStroke && (e4 = this._renderer).line.apply(e4, r4), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("line", r4), this;
          }, l.default.prototype.point = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return l.default._validateParameters("point", r4), this._renderer._doStroke && (1 === r4.length && r4[0] instanceof l.default.Vector ? this._renderer.point.call(this._renderer, r4[0].x, r4[0].y, r4[0].z) : ((e4 = this._renderer).point.apply(e4, r4), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("point", r4))), this;
          }, l.default.prototype.quad = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return l.default._validateParameters("quad", r4), (this._renderer._doStroke || this._renderer._doFill) && (this._renderer.isP3D && r4.length < 12 ? this._renderer.quad.call(this._renderer, r4[0], r4[1], 0, r4[2], r4[3], 0, r4[4], r4[5], 0, r4[6], r4[7], 0, r4[8], r4[9]) : ((e4 = this._renderer).quad.apply(e4, r4), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("quadrilateral", r4))), this;
          }, l.default.prototype.rect = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            return l.default._validateParameters("rect", t4), this._renderRect.apply(this, t4);
          }, l.default.prototype.square = function(e4, t4, r4, o3, n3, s4, i3) {
            return l.default._validateParameters("square", arguments), this._renderRect.call(this, e4, t4, r4, r4, o3, n3, s4, i3);
          }, l.default.prototype._renderRect = function() {
            if (this._renderer._doStroke || this._renderer._doFill) {
              3 === arguments.length && (arguments[3] = arguments[2]);
              for (var e4 = u.default.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t4 = [e4.x, e4.y, e4.w, e4.h], r4 = 4; r4 < arguments.length; r4++)
                t4[r4] = arguments[r4];
              this._renderer.rect(t4), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("rectangle", [e4.x, e4.y, e4.w, e4.h]);
            }
            return this;
          }, l.default.prototype.triangle = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            return l.default._validateParameters("triangle", t4), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(t4), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._accsOutput("triangle", t4), this;
          };
          e3 = l.default;
          r3.default = e3;
        }, { "../constants": 262, "../friendly_errors/fes_core": 264, "../friendly_errors/file_errors": 265, "../friendly_errors/validate_params": 268, "../helpers": 269, "../main": 273, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 281: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (l = e3("../main")) && l.__esModule ? l : { default: l }, s3 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          n2.default.prototype.ellipseMode = function(e4) {
            return n2.default._validateParameters("ellipseMode", arguments), e4 !== s3.CORNER && e4 !== s3.CORNERS && e4 !== s3.RADIUS && e4 !== s3.CENTER || (this._renderer._ellipseMode = e4), this;
          }, n2.default.prototype.noSmooth = function() {
            return this._renderer.isP3D ? this.setAttributes("antialias", false) : "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = false), this;
          }, n2.default.prototype.rectMode = function(e4) {
            return n2.default._validateParameters("rectMode", arguments), e4 !== s3.CORNER && e4 !== s3.CORNERS && e4 !== s3.RADIUS && e4 !== s3.CENTER || (this._renderer._rectMode = e4), this;
          }, n2.default.prototype.smooth = function() {
            return this.setAttributes("antialias", true), this._renderer.isP3D || "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = true), this;
          }, n2.default.prototype.strokeCap = function(e4) {
            return n2.default._validateParameters("strokeCap", arguments), e4 !== s3.ROUND && e4 !== s3.SQUARE && e4 !== s3.PROJECT || this._renderer.strokeCap(e4), this;
          }, n2.default.prototype.strokeJoin = function(e4) {
            return n2.default._validateParameters("strokeJoin", arguments), e4 !== s3.ROUND && e4 !== s3.BEVEL && e4 !== s3.MITER || this._renderer.strokeJoin(e4), this;
          }, n2.default.prototype.strokeWeight = function(e4) {
            return n2.default._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e4), this;
          };
          var l = n2.default;
          r3.default = l;
        }, { "../constants": 262, "../main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 282: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var l = (o2 = e3("../main")) && o2.__esModule ? o2 : { default: o2 };
          e3("../friendly_errors/fes_core"), e3("../friendly_errors/file_errors"), e3("../friendly_errors/validate_params"), l.default.prototype.bezier = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return l.default._validateParameters("bezier", r4), (this._renderer._doStroke || this._renderer._doFill) && (e4 = this._renderer).bezier.apply(e4, r4), this;
          }, l.default.prototype.bezierDetail = function(e4) {
            return l.default._validateParameters("bezierDetail", arguments), this._bezierDetail = e4, this;
          }, l.default.prototype.bezierPoint = function(e4, t4, r4, o3, n2) {
            l.default._validateParameters("bezierPoint", arguments);
            var s3 = 1 - n2;
            return Math.pow(s3, 3) * e4 + 3 * Math.pow(s3, 2) * n2 * t4 + 3 * s3 * Math.pow(n2, 2) * r4 + Math.pow(n2, 3) * o3;
          }, l.default.prototype.bezierTangent = function(e4, t4, r4, o3, n2) {
            l.default._validateParameters("bezierTangent", arguments);
            var s3 = 1 - n2;
            return 3 * o3 * Math.pow(n2, 2) - 3 * r4 * Math.pow(n2, 2) + 6 * r4 * s3 * n2 - 6 * t4 * s3 * n2 + 3 * t4 * Math.pow(s3, 2) - 3 * e4 * Math.pow(s3, 2);
          }, l.default.prototype.curve = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return l.default._validateParameters("curve", r4), this._renderer._doStroke && (e4 = this._renderer).curve.apply(e4, r4), this;
          }, l.default.prototype.curveDetail = function(e4) {
            return l.default._validateParameters("curveDetail", arguments), this._curveDetail = e4 < 3 ? 3 : e4, this;
          }, l.default.prototype.curveTightness = function(e4) {
            return l.default._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e4, this;
          }, l.default.prototype.curvePoint = function(e4, t4, r4, o3, n2) {
            l.default._validateParameters("curvePoint", arguments);
            var s3 = this._renderer._curveTightness, i2 = n2 * n2 * n2, a = n2 * n2;
            return e4 * ((s3 - 1) / 2 * i2 + (1 - s3) * a + (s3 - 1) / 2 * n2) + t4 * ((s3 + 3) / 2 * i2 + (-5 - s3) / 2 * a + 1) + r4 * ((-3 - s3) / 2 * i2 + (s3 + 2) * a + (1 - s3) / 2 * n2) + o3 * ((1 - s3) / 2 * i2 + (s3 - 1) / 2 * a);
          }, l.default.prototype.curveTangent = function(e4, t4, r4, o3, n2) {
            l.default._validateParameters("curveTangent", arguments);
            var s3 = this._renderer._curveTightness, i2 = n2 * n2 * 3, n2 = 2 * n2;
            return e4 * ((s3 - 1) / 2 * i2 + (1 - s3) * n2 + (s3 - 1) / 2) + t4 * ((s3 + 3) / 2 * i2 + (-5 - s3) / 2 * n2) + r4 * ((-3 - s3) / 2 * i2 + (s3 + 2) * n2 + (1 - s3) / 2) + o3 * ((1 - s3) / 2 * i2 + (s3 - 1) / 2 * n2);
          };
          var o2 = l.default;
          r3.default = o2;
        }, { "../friendly_errors/fes_core": 264, "../friendly_errors/file_errors": 265, "../friendly_errors/validate_params": 268, "../main": 273 }], 283: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.slice"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var a = (y = e3("../main")) && y.__esModule ? y : { default: y }, l = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = u();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../constants"));
          function u() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), u = function() {
              return e4;
            }, e4);
          }
          var n2 = null, c = [], d = [], f = false, s3 = false, h = false, p = false, m = true, y = (a.default.prototype.beginContour = function() {
            return d = [], p = true, this;
          }, a.default.prototype.beginShape = function(e4) {
            var t4;
            return a.default._validateParameters("beginShape", arguments), this._renderer.isP3D ? (t4 = this._renderer).beginShape.apply(t4, arguments) : (n2 = e4 === l.POINTS || e4 === l.LINES || e4 === l.TRIANGLES || e4 === l.TRIANGLE_FAN || e4 === l.TRIANGLE_STRIP || e4 === l.QUADS || e4 === l.QUAD_STRIP ? e4 : null, c = [], d = []), this;
          }, a.default.prototype.bezierVertex = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            if (a.default._validateParameters("bezierVertex", r4), this._renderer.isP3D)
              (e4 = this._renderer).bezierVertex.apply(e4, r4);
            else if (0 === c.length)
              a.default._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex");
            else {
              f = true;
              for (var n3 = [], s4 = 0; s4 < r4.length; s4++)
                n3[s4] = r4[s4];
              n3.isVert = false, (p ? d : c).push(n3);
            }
            return this;
          }, a.default.prototype.curveVertex = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return a.default._validateParameters("curveVertex", r4), this._renderer.isP3D ? (e4 = this._renderer).curveVertex.apply(e4, r4) : (s3 = true, this.vertex(r4[0], r4[1])), this;
          }, a.default.prototype.endContour = function() {
            var e4 = d[0].slice();
            e4.isVert = d[0].isVert, e4.moveTo = false, d.push(e4), m && (c.push(c[0]), m = false);
            for (var t4 = 0; t4 < d.length; t4++)
              c.push(d[t4]);
            return this;
          }, a.default.prototype.endShape = function(e4) {
            if (a.default._validateParameters("endShape", arguments), this._renderer.isP3D)
              this._renderer.endShape(e4, s3, f, h, p, n2);
            else {
              if (0 === c.length)
                return this;
              if (!this._renderer._doStroke && !this._renderer._doFill)
                return this;
              var t4 = e4 === l.CLOSE;
              t4 && !p && c.push(c[0]), this._renderer.endShape(e4, c, s3, f, h, p, n2), m = !(p = h = f = s3 = false), t4 && c.pop();
            }
            return this;
          }, a.default.prototype.quadraticVertex = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            if (a.default._validateParameters("quadraticVertex", r4), this._renderer.isP3D)
              (e4 = this._renderer).quadraticVertex.apply(e4, r4);
            else {
              if (this._contourInited)
                return (e4 = {}).x = r4[0], e4.y = r4[1], e4.x3 = r4[2], e4.y3 = r4[3], e4.type = l.QUADRATIC, this._contourVertices.push(e4), this;
              if (0 < c.length) {
                h = true;
                for (var n3 = [], s4 = 0; s4 < r4.length; s4++)
                  n3[s4] = r4[s4];
                n3.isVert = false, (p ? d : c).push(n3);
              } else
                a.default._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
            }
            return this;
          }, a.default.prototype.vertex = function(e4, t4, r4, o3, n3) {
            var s4;
            return this._renderer.isP3D ? (s4 = this._renderer).vertex.apply(s4, arguments) : ((s4 = []).isVert = true, s4[0] = e4, s4[1] = t4, s4[2] = 0, s4[3] = 0, s4[4] = 0, s4[5] = this._renderer._getFill(), s4[6] = this._renderer._getStroke(), r4 && (s4.moveTo = r4), (p ? (0 === d.length && (s4.moveTo = true), d) : c).push(s4)), this;
          }, a.default.prototype.normal = function(e4, t4, r4) {
            var o3;
            return this._assert3d("normal"), a.default._validateParameters("normal", arguments), (o3 = this._renderer).normal.apply(o3, arguments), this;
          }, a.default);
          r3.default = y;
        }, { "../constants": 262, "../main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 284: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function a(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          function n2(e4) {
            return (n2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          var l, u, c;
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.uint8-clamped-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.uint8-clamped-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(e4, t4) {
            window.setTimeout(e4, 1e3 / 60);
          }, "undefined" == typeof Uint8ClampedArray || Uint8ClampedArray.prototype.slice || Object.defineProperty(Uint8ClampedArray.prototype, "slice", { value: Array.prototype.slice, writable: true, configurable: true, enumerable: false }), Object.assign || (l = Object.keys, e3 = Object.defineProperty, u = "function" == typeof Symbol && "symbol" === n2(Symbol()), c = Object.prototype.propertyIsEnumerable, e3(Object, "assign", { value: function(e4, t4) {
            if (null == e4)
              throw new TypeError("target must be an object");
            for (var r4, o3 = Object(e4), n3 = 1; n3 < arguments.length; ++n3) {
              var s3 = Object(arguments[n3]), i2 = l(s3);
              for (u && Object.getOwnPropertySymbols && i2.push.apply(i2, a(Object.getOwnPropertySymbols(s3).filter(function(t5) {
                return function(e5) {
                  return c.call(t5, e5);
                };
              }(s3)))), r4 = 0; r4 < i2.length; ++r4)
                o3[i2[r4]] = s3[i2[r4]];
            }
            return o3;
          }, configurable: true, enumerable: false, writable: true }));
        }, { "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.assign": 174, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint8-clamped-array": 233, "core-js/modules/web.dom-collections.iterator": 236 }], 285: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("./main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.prototype.noLoop = function() {
            this._loop = false;
          }, e3.default.prototype.loop = function() {
            this._loop || (this._loop = true, this._setupDone && this._draw());
          }, e3.default.prototype.isLooping = function() {
            return this._loop;
          }, e3.default.prototype.push = function() {
            this._styles.push({ props: { _colorMode: this._colorMode }, renderer: this._renderer.push() });
          }, e3.default.prototype.pop = function() {
            var e4 = this._styles.pop();
            e4 ? (this._renderer.pop(e4.renderer), Object.assign(this, e4.props)) : console.warn("pop() was called without matching push()");
          }, e3.default.prototype.redraw = function(e4) {
            if (!this._inUserDraw && this._setupDone) {
              var t4 = parseInt(e4), r4 = ((isNaN(t4) || t4 < 1) && (t4 = 1), this._isGlobal ? window : this);
              if ("function" == typeof r4.draw) {
                void 0 === r4.setup && r4.scale(r4._pixelDensity, r4._pixelDensity);
                for (var o2 = function(e5) {
                  e5.call(r4);
                }, n2 = 0; n2 < t4; n2++) {
                  r4.resetMatrix(), (this._accessibleOutputs.grid || this._accessibleOutputs.text) && this._updateAccsOutput(), r4._renderer.isP3D && r4._renderer._update(), r4._setProperty("frameCount", r4.frameCount + 1), r4._registeredMethods.pre.forEach(o2), this._inUserDraw = true;
                  try {
                    r4.draw();
                  } finally {
                    this._inUserDraw = false;
                  }
                  r4._registeredMethods.post.forEach(o2);
                }
              }
            }
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "./main": 273, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.object.assign": 174, "core-js/modules/web.dom-collections.for-each": 235 }], 286: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (e3 = e3("./main")) && e3.__esModule ? e3 : { default: e3 };
          function o2(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          n2.default.prototype.applyMatrix = function() {
            var e4 = (arguments.length <= 0 ? void 0 : arguments[0]) instanceof Object.getPrototypeOf(Uint8Array);
            return Array.isArray(arguments.length <= 0 ? void 0 : arguments[0]) || e4 ? (e4 = this._renderer).applyMatrix.apply(e4, o2(arguments.length <= 0 ? void 0 : arguments[0])) : (e4 = this._renderer).applyMatrix.apply(e4, arguments), this;
          }, n2.default.prototype.resetMatrix = function() {
            return this._renderer.resetMatrix(), this;
          }, n2.default.prototype.rotate = function(e4, t4) {
            return n2.default._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e4), t4), this;
          }, n2.default.prototype.rotateX = function(e4) {
            return this._assert3d("rotateX"), n2.default._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e4)), this;
          }, n2.default.prototype.rotateY = function(e4) {
            return this._assert3d("rotateY"), n2.default._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e4)), this;
          }, n2.default.prototype.rotateZ = function(e4) {
            return this._assert3d("rotateZ"), n2.default._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e4)), this;
          }, n2.default.prototype.scale = function(e4, t4, r4) {
            var o3;
            return n2.default._validateParameters("scale", arguments), e4 instanceof n2.default.Vector ? (e4 = (o3 = e4).x, t4 = o3.y, r4 = o3.z) : e4 instanceof Array && (e4 = (o3 = e4)[0], t4 = o3[1], r4 = o3[2] || 1), isNaN(t4) ? t4 = r4 = e4 : isNaN(r4) && (r4 = 1), this._renderer.scale.call(this._renderer, e4, t4, r4), this;
          }, n2.default.prototype.shearX = function(e4) {
            n2.default._validateParameters("shearX", arguments);
            e4 = this._toRadians(e4);
            return this._renderer.applyMatrix(1, 0, Math.tan(e4), 1, 0, 0), this;
          }, n2.default.prototype.shearY = function(e4) {
            n2.default._validateParameters("shearY", arguments);
            e4 = this._toRadians(e4);
            return this._renderer.applyMatrix(1, Math.tan(e4), 0, 1, 0, 0), this;
          }, n2.default.prototype.translate = function(e4, t4, r4) {
            return n2.default._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e4, t4, r4) : this._renderer.translate(e4, t4), this;
          };
          e3 = n2.default;
          r3.default = e3;
        }, { "./main": 273, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint8-array": 232, "core-js/modules/web.dom-collections.iterator": 236 }], 287: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.ends-with"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.ends-with"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator");
          var n2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function s3(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          n2.default.prototype.storeItem = function(e4, t4) {
            "string" != typeof e4 && console.log("The argument that you passed to storeItem() - ".concat(e4, " is not a string.")), e4.endsWith("p5TypeID") && console.log("The argument that you passed to storeItem() - ".concat(e4, " must not end with 'p5TypeID'.")), void 0 === t4 && console.log("You cannot store undefined variables using storeItem().");
            var r4 = i2(t4);
            switch (r4) {
              case "number":
              case "boolean":
                t4 = t4.toString();
                break;
              case "object":
                t4 instanceof n2.default.Color ? r4 = "p5.Color" : t4 instanceof n2.default.Vector && (r4 = "p5.Vector", t4 = [t4.x, t4.y, t4.z]), t4 = JSON.stringify(t4);
            }
            localStorage.setItem(e4, t4);
            e4 = "".concat(e4, "p5TypeID");
            localStorage.setItem(e4, r4);
          }, n2.default.prototype.getItem = function(e4) {
            var t4 = localStorage.getItem(e4), r4 = localStorage.getItem("".concat(e4, "p5TypeID"));
            if (void 0 === r4)
              console.log("Unable to determine type of item stored under ".concat(e4, "in local storage. Did you save the item with something other than setItem()?"));
            else if (null !== t4)
              switch (r4) {
                case "number":
                  t4 = parseFloat(t4);
                  break;
                case "boolean":
                  t4 = "true" === t4;
                  break;
                case "object":
                  t4 = JSON.parse(t4);
                  break;
                case "p5.Color":
                  t4 = JSON.parse(t4), t4 = this.color.apply(this, s3(t4.levels));
                  break;
                case "p5.Vector":
                  t4 = JSON.parse(t4), t4 = this.createVector.apply(this, s3(t4));
              }
            return t4;
          }, n2.default.prototype.clearStorage = function() {
            localStorage.clear();
          }, n2.default.prototype.removeItem = function(e4) {
            "string" != typeof e4 && console.log("The argument that you passed to removeItem() - ".concat(e4, " is not a string.")), localStorage.removeItem(e4), localStorage.removeItem("".concat(e4, "p5TypeID"));
          };
        }, { "../core/main": 273, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.ends-with": 188, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 288: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var s3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4) {
            return (n2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function i2(e4, t4) {
            if ("function" != typeof t4 && null !== t4)
              throw new TypeError("Super expression must either be null or a function");
            e4.prototype = Object.create(t4 && t4.prototype, { constructor: { value: e4, writable: true, configurable: true } }), t4 && a(e4, t4);
          }
          function a(e4, t4) {
            return (a = Object.setPrototypeOf || function(e5, t5) {
              return e5.__proto__ = t5, e5;
            })(e4, t4);
          }
          function l(r4) {
            return function() {
              var e4, t4 = u(r4), t4 = (e4 = function() {
                if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                  if ("function" == typeof Proxy)
                    return 1;
                  try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                    })), 1;
                  } catch (e5) {
                  }
                }
              }() ? (e4 = u(this).constructor, Reflect.construct(t4, arguments, e4)) : t4.apply(this, arguments), this);
              if (!e4 || "object" !== n2(e4) && "function" != typeof e4) {
                if (void 0 !== t4)
                  return t4;
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }
              return e4;
            };
          }
          function u(e4) {
            return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
              return e5.__proto__ || Object.getPrototypeOf(e5);
            })(e4);
          }
          function c(e4, t4) {
            if (!(e4 instanceof t4))
              throw new TypeError("Cannot call a class as a function");
          }
          function d(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function f(e4, t4, r4) {
            t4 && d(e4.prototype, t4), r4 && d(e4, r4);
          }
          s3.default.prototype.createStringDict = function(e4, t4) {
            return s3.default._validateParameters("createStringDict", arguments), new s3.default.StringDict(e4, t4);
          }, s3.default.prototype.createNumberDict = function(e4, t4) {
            return s3.default._validateParameters("createNumberDict", arguments), new s3.default.NumberDict(e4, t4);
          }, s3.default.TypedDict = function() {
            function r4(e4, t4) {
              return c(this, r4), e4 instanceof Object ? this.data = e4 : (this.data = {}, this.data[e4] = t4), this;
            }
            return f(r4, [{ key: "size", value: function() {
              return Object.keys(this.data).length;
            } }, { key: "hasKey", value: function(e4) {
              return this.data.hasOwnProperty(e4);
            } }, { key: "get", value: function(e4) {
              if (this.data.hasOwnProperty(e4))
                return this.data[e4];
              console.log("".concat(e4, " does not exist in this Dictionary"));
            } }, { key: "set", value: function(e4, t4) {
              this._validate(t4) ? this.data[e4] = t4 : console.log("Those values dont work for this dictionary type.");
            } }, { key: "_addObj", value: function(e4) {
              for (var t4 in e4)
                this.set(t4, e4[t4]);
            } }, { key: "create", value: function(e4, t4) {
              e4 instanceof Object && void 0 === t4 ? this._addObj(e4) : void 0 !== e4 ? this.set(e4, t4) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
            } }, { key: "clear", value: function() {
              this.data = {};
            } }, { key: "remove", value: function(e4) {
              if (!this.data.hasOwnProperty(e4))
                throw new Error("".concat(e4, " does not exist in this Dictionary"));
              delete this.data[e4];
            } }, { key: "print", value: function() {
              for (var e4 in this.data)
                console.log("key:".concat(e4, " value:").concat(this.data[e4]));
            } }, { key: "saveTable", value: function(e4) {
              var t4, r5 = "";
              for (t4 in this.data)
                r5 += "".concat(t4, ",").concat(this.data[t4], "\n");
              var o3 = new Blob([r5], { type: "text/csv" });
              s3.default.prototype.downloadFile(o3, e4 || "mycsv", "csv");
            } }, { key: "saveJSON", value: function(e4, t4) {
              s3.default.prototype.saveJSON(this.data, e4, t4);
            } }, { key: "_validate", value: function(e4) {
              return true;
            } }]), r4;
          }(), s3.default.StringDict = function() {
            i2(n3, s3.default.TypedDict);
            var o3 = l(n3);
            function n3() {
              c(this, n3);
              for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
                t4[r4] = arguments[r4];
              return o3.call.apply(o3, [this].concat(t4));
            }
            return f(n3, [{ key: "_validate", value: function(e4) {
              return "string" == typeof e4;
            } }]), n3;
          }(), s3.default.NumberDict = function() {
            i2(n3, s3.default.TypedDict);
            var o3 = l(n3);
            function n3() {
              c(this, n3);
              for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
                t4[r4] = arguments[r4];
              return o3.call.apply(o3, [this].concat(t4));
            }
            return f(n3, [{ key: "_validate", value: function(e4) {
              return "number" == typeof e4;
            } }, { key: "add", value: function(e4, t4) {
              this.data.hasOwnProperty(e4) ? this.data[e4] += t4 : console.log("The key - ".concat(e4, " does not exist in this dictionary."));
            } }, { key: "sub", value: function(e4, t4) {
              this.add(e4, -t4);
            } }, { key: "mult", value: function(e4, t4) {
              this.data.hasOwnProperty(e4) ? this.data[e4] *= t4 : console.log("The key - ".concat(e4, " does not exist in this dictionary."));
            } }, { key: "div", value: function(e4, t4) {
              this.data.hasOwnProperty(e4) ? this.data[e4] /= t4 : console.log("The key - ".concat(e4, " does not exist in this dictionary."));
            } }, { key: "_valueTest", value: function(e4) {
              if (0 === Object.keys(this.data).length)
                throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
              if (1 === Object.keys(this.data).length)
                return this.data[Object.keys(this.data)[0]];
              var t4, r4 = this.data[Object.keys(this.data)[0]];
              for (t4 in this.data)
                this.data[t4] * e4 < r4 * e4 && (r4 = this.data[t4]);
              return r4;
            } }, { key: "minValue", value: function() {
              return this._valueTest(1);
            } }, { key: "maxValue", value: function() {
              return this._valueTest(-1);
            } }, { key: "_keyTest", value: function(e4) {
              if (0 === Object.keys(this.data).length)
                throw new Error("Unable to use minValue on an empty NumberDict");
              if (1 === Object.keys(this.data).length)
                return Object.keys(this.data)[0];
              for (var t4 = Object.keys(this.data)[0], r4 = 1; r4 < Object.keys(this.data).length; r4++)
                Object.keys(this.data)[r4] * e4 < t4 * e4 && (t4 = Object.keys(this.data)[r4]);
              return t4;
            } }, { key: "minKey", value: function() {
              return this._keyTest(1);
            } }, { key: "maxKey", value: function() {
              return this._keyTest(-1);
            } }]), n3;
          }();
          e3 = s3.default.TypedDict;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 289: [function(t3, r3, o2) {
          "use strict";
          function n2(e3) {
            return (n2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e4) {
              return typeof e4;
            } : function(e4) {
              return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : typeof e4;
            })(e3);
          }
          t3("core-js/modules/es.symbol"), t3("core-js/modules/es.symbol.description"), t3("core-js/modules/es.symbol.iterator"), t3("core-js/modules/es.array.every"), t3("core-js/modules/es.array.filter"), t3("core-js/modules/es.array.for-each"), t3("core-js/modules/es.array.from"), t3("core-js/modules/es.array.index-of"), t3("core-js/modules/es.array.iterator"), t3("core-js/modules/es.array.map"), t3("core-js/modules/es.array.slice"), t3("core-js/modules/es.array.splice"), t3("core-js/modules/es.function.name"), t3("core-js/modules/es.object.get-prototype-of"), t3("core-js/modules/es.object.to-string"), t3("core-js/modules/es.promise"), t3("core-js/modules/es.reflect.construct"), t3("core-js/modules/es.regexp.exec"), t3("core-js/modules/es.regexp.to-string"), t3("core-js/modules/es.string.iterator"), t3("core-js/modules/es.string.replace"), t3("core-js/modules/es.string.split"), t3("core-js/modules/es.string.trim"), t3("core-js/modules/web.dom-collections.for-each"), t3("core-js/modules/web.dom-collections.iterator"), t3("core-js/modules/web.url"), t3("core-js/modules/es.symbol"), t3("core-js/modules/es.symbol.description"), t3("core-js/modules/es.symbol.iterator"), t3("core-js/modules/es.array.every"), t3("core-js/modules/es.array.filter"), t3("core-js/modules/es.array.for-each"), t3("core-js/modules/es.array.from"), t3("core-js/modules/es.array.index-of"), t3("core-js/modules/es.array.iterator"), t3("core-js/modules/es.array.map"), t3("core-js/modules/es.array.slice"), t3("core-js/modules/es.array.splice"), t3("core-js/modules/es.function.name"), t3("core-js/modules/es.object.to-string"), t3("core-js/modules/es.promise"), t3("core-js/modules/es.reflect.construct"), t3("core-js/modules/es.regexp.exec"), t3("core-js/modules/es.regexp.to-string"), t3("core-js/modules/es.string.iterator"), t3("core-js/modules/es.string.replace"), t3("core-js/modules/es.string.split"), t3("core-js/modules/es.string.trim"), t3("core-js/modules/web.dom-collections.for-each"), t3("core-js/modules/web.dom-collections.iterator"), t3("core-js/modules/web.url"), Object.defineProperty(o2, "__esModule", { value: true }), o2.default = void 0;
          var h = (t3 = t3("../core/main")) && t3.__esModule ? t3 : { default: t3 };
          function s3(e3, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e3, o3.key, o3);
            }
          }
          function a(e3, t4, r4) {
            t4 && s3(e3.prototype, t4), r4 && s3(e3, r4);
          }
          function l(e3, t4) {
            return (l = Object.setPrototypeOf || function(e4, t5) {
              return e4.__proto__ = t5, e4;
            })(e3, t4);
          }
          function u(o3) {
            return function() {
              var e3, t4, r4 = i2(o3);
              return e3 = function() {
                if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                  if ("function" == typeof Proxy)
                    return 1;
                  try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                    })), 1;
                  } catch (e4) {
                  }
                }
              }() ? (e3 = i2(this).constructor, Reflect.construct(r4, arguments, e3)) : r4.apply(this, arguments), r4 = this, !(t4 = e3) || "object" !== f(t4) && "function" != typeof t4 ? c(r4) : t4;
            };
          }
          function c(e3) {
            if (void 0 === e3)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e3;
          }
          function i2(e3) {
            return (i2 = Object.setPrototypeOf ? Object.getPrototypeOf : function(e4) {
              return e4.__proto__ || Object.getPrototypeOf(e4);
            })(e3);
          }
          function d(e3, t4) {
            if (!(e3 instanceof t4))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(e3) {
            return (f = "function" == typeof Symbol && "symbol" === n2(Symbol.iterator) ? function(e4) {
              return n2(e4);
            } : function(e4) {
              return e4 && "function" == typeof Symbol && e4.constructor === Symbol && e4 !== Symbol.prototype ? "symbol" : n2(e4);
            })(e3);
          }
          function p(e3, t4, r4) {
            (t4._userNode || document.body).appendChild(e3);
            r4 = new (r4 ? h.default.MediaElement : h.default.Element)(e3, t4);
            return t4._elements.push(r4), r4;
          }
          function m(e3, t4, r4, o3) {
            var n3 = document.createElement(t4), s4 = ("string" == typeof (r4 = r4 || "") && (r4 = [r4]), true), t4 = false, i3 = void 0;
            try {
              for (var a2, l2 = r4[Symbol.iterator](); !(s4 = (a2 = l2.next()).done); s4 = true) {
                var u2 = a2.value, c2 = document.createElement("source");
                c2.setAttribute("src", u2), n3.appendChild(c2);
              }
            } catch (e4) {
              t4 = true, i3 = e4;
            } finally {
              try {
                s4 || null == l2.return || l2.return();
              } finally {
                if (t4)
                  throw i3;
              }
            }
            "function" == typeof o3 && n3.addEventListener("canplaythrough", function e4() {
              o3(), n3.removeEventListener("canplaythrough", e4);
            });
            var d2 = p(n3, e3, true);
            return d2.loadedmetadata = false, n3.addEventListener("loadedmetadata", function() {
              d2.width = n3.videoWidth, d2.height = n3.videoHeight, 0 === d2.elt.width && (d2.elt.width = n3.videoWidth), 0 === d2.elt.height && (d2.elt.height = n3.videoHeight), d2.presetPlaybackRate && (d2.elt.playbackRate = d2.presetPlaybackRate, delete d2.presetPlaybackRate), d2.loadedmetadata = true;
            }), d2;
          }
          h.default.prototype.select = function(e3, t4) {
            h.default._validateParameters("select", arguments);
            t4 = this._getContainer(t4).querySelector(e3);
            return t4 ? this._wrapElement(t4) : null;
          }, h.default.prototype.selectAll = function(e3, t4) {
            h.default._validateParameters("selectAll", arguments);
            var r4 = [], o3 = this._getContainer(t4).querySelectorAll(e3);
            if (o3)
              for (var n3 = 0; n3 < o3.length; n3++) {
                var s4 = this._wrapElement(o3[n3]);
                r4.push(s4);
              }
            return r4;
          }, h.default.prototype._getContainer = function(e3) {
            var t4 = document;
            return "string" == typeof e3 ? t4 = document.querySelector(e3) || document : e3 instanceof h.default.Element ? t4 = e3.elt : e3 instanceof HTMLElement && (t4 = e3), t4;
          }, h.default.prototype._wrapElement = function(e3) {
            var t4, r4 = Array.prototype.slice.call(e3.children);
            return "INPUT" === e3.tagName && "checkbox" === e3.type ? ((t4 = new h.default.Element(e3, this)).checked = function() {
              return 0 === arguments.length ? this.elt.checked : (this.elt.checked = !(arguments.length <= 0 || !arguments[0]), this);
            }, t4) : "VIDEO" === e3.tagName || "AUDIO" === e3.tagName ? new h.default.MediaElement(e3, this) : "SELECT" === e3.tagName ? this.createSelect(new h.default.Element(e3, this)) : 0 < r4.length && r4.every(function(e4) {
              return "INPUT" === e4.tagName || "LABEL" === e4.tagName;
            }) ? this.createRadio(new h.default.Element(e3, this)) : new h.default.Element(e3, this);
          }, h.default.prototype.removeElements = function(e3) {
            h.default._validateParameters("removeElements", arguments);
            this._elements.filter(function(e4) {
              return !(e4.elt instanceof HTMLCanvasElement);
            }).map(function(e4) {
              return e4.remove();
            });
          }, h.default.Element.prototype.changed = function(e3) {
            return h.default.Element._adjustListener("change", e3, this), this;
          }, h.default.Element.prototype.input = function(e3) {
            return h.default.Element._adjustListener("input", e3, this), this;
          }, h.default.prototype.createDiv = function() {
            var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t4 = document.createElement("div");
            return t4.innerHTML = e3, p(t4, this);
          }, h.default.prototype.createP = function() {
            var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t4 = document.createElement("p");
            return t4.innerHTML = e3, p(t4, this);
          }, h.default.prototype.createSpan = function() {
            var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t4 = document.createElement("span");
            return t4.innerHTML = e3, p(t4, this);
          }, h.default.prototype.createImg = function() {
            h.default._validateParameters("createImg", arguments);
            var t4, r4 = document.createElement("img"), o3 = arguments;
            return 1 < o3.length && "string" == typeof o3[1] && (r4.alt = o3[1]), 2 < o3.length && "string" == typeof o3[2] && (r4.crossOrigin = o3[2]), r4.src = o3[0], t4 = p(r4, this), r4.addEventListener("load", function() {
              t4.width = r4.offsetWidth || r4.width, t4.height = r4.offsetHeight || r4.height;
              var e3 = o3[o3.length - 1];
              "function" == typeof e3 && e3(t4);
            }), t4;
          }, h.default.prototype.createA = function(e3, t4, r4) {
            h.default._validateParameters("createA", arguments);
            var o3 = document.createElement("a");
            return o3.href = e3, o3.innerHTML = t4, r4 && (o3.target = r4), p(o3, this);
          }, h.default.prototype.createSlider = function(e3, t4, r4, o3) {
            h.default._validateParameters("createSlider", arguments);
            var n3 = document.createElement("input");
            return n3.type = "range", n3.min = e3, n3.max = t4, 0 === o3 ? n3.step = 1e-18 : o3 && (n3.step = o3), "number" == typeof r4 && (n3.value = r4), p(n3, this);
          }, h.default.prototype.createButton = function(e3, t4) {
            h.default._validateParameters("createButton", arguments);
            var r4 = document.createElement("button");
            return r4.innerHTML = e3, t4 && (r4.value = t4), p(r4, this);
          }, h.default.prototype.createCheckbox = function() {
            for (var e3 = arguments.length, t4 = new Array(e3), r4 = 0; r4 < e3; r4++)
              t4[r4] = arguments[r4];
            h.default._validateParameters("createCheckbox", t4);
            var o3 = document.createElement("div"), n3 = document.createElement("input"), s4 = (n3.type = "checkbox", document.createElement("label")), i3 = (s4.appendChild(n3), o3.appendChild(s4), p(o3, this));
            return i3.checked = function() {
              var e4 = i3.elt.firstElementChild.getElementsByTagName("input")[0];
              if (e4) {
                if (0 === arguments.length)
                  return e4.checked;
                e4.checked = !(arguments.length <= 0 || !arguments[0]);
              }
              return i3;
            }, this.value = function(e4) {
              return i3.value = e4, this;
            }, t4[0] && (i3.value(t4[0]), (o3 = document.createElement("span")).innerHTML = t4[0], s4.appendChild(o3)), t4[1] && (n3.checked = true), i3;
          }, h.default.prototype.createSelect = function() {
            for (var e3, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            h.default._validateParameters("createSelect", r4);
            var n3, s4 = r4[0];
            return s4 instanceof h.default.Element && s4.elt instanceof HTMLSelectElement ? this.elt = (e3 = s4).elt : s4 instanceof HTMLSelectElement ? (e3 = p(s4, this), this.elt = s4) : (n3 = document.createElement("select"), s4 && "boolean" == typeof s4 && n3.setAttribute("multiple", "true"), e3 = p(n3, this), this.elt = n3), e3.option = function(e4, t5) {
              var r5;
              if (void 0 !== e4) {
                for (var o4, n4 = 0; n4 < this.elt.length; n4 += 1)
                  if (this.elt[n4].textContent === e4) {
                    r5 = n4;
                    break;
                  }
                void 0 !== r5 ? false === t5 ? this.elt.remove(r5) : this.elt[r5].value = t5 : ((o4 = document.createElement("option")).textContent = e4, o4.value = void 0 === t5 ? e4 : t5, this.elt.appendChild(o4), this._pInst._elements.push(o4));
              }
            }, e3.selected = function(e4) {
              if (void 0 !== e4) {
                for (var t5 = 0; t5 < this.elt.length; t5 += 1)
                  this.elt[t5].value.toString() === e4.toString() && (this.elt.selectedIndex = t5);
                return this;
              }
              if (this.elt.getAttribute("multiple")) {
                var r5 = [], o4 = true, n4 = false, s5 = void 0;
                try {
                  for (var i3, a2 = this.elt.selectedOptions[Symbol.iterator](); !(o4 = (i3 = a2.next()).done); o4 = true) {
                    var l2 = i3.value;
                    r5.push(l2.value);
                  }
                } catch (e5) {
                  n4 = true, s5 = e5;
                } finally {
                  try {
                    o4 || null == a2.return || a2.return();
                  } finally {
                    if (n4)
                      throw s5;
                  }
                }
                return r5;
              }
              return this.elt.value;
            }, e3.disable = function(e4) {
              if ("string" == typeof e4)
                for (var t5 = 0; t5 < this.elt.length; t5++)
                  this.elt[t5].value.toString() === e4 && (this.elt[t5].disabled = true, this.elt[t5].selected = false);
              else
                this.elt.disabled = true;
              return this;
            }, e3.enable = function(e4) {
              if ("string" == typeof e4)
                for (var t5 = 0; t5 < this.elt.length; t5++)
                  this.elt[t5].value.toString() === e4 && (this.elt[t5].disabled = false, this.elt[t5].selected = false);
              else {
                this.elt.disabled = false;
                for (var r5 = 0; r5 < this.elt.length; r5++)
                  this.elt[r5].disabled = false, this.elt[r5].selected = false;
              }
              return this;
            }, e3;
          }, h.default.prototype.createRadio = function() {
            function t4(e4) {
              return e4 instanceof HTMLInputElement && "radio" === e4.type;
            }
            function d2(e4) {
              return e4 instanceof HTMLLabelElement;
            }
            var f2, e3, r4, o3 = arguments.length <= 0 ? void 0 : arguments[0];
            o3 instanceof h.default.Element && (o3.elt instanceof HTMLDivElement || o3.elt instanceof HTMLSpanElement) ? (f2 = o3, this.elt = o3.elt) : o3 instanceof HTMLDivElement || o3 instanceof HTMLSpanElement ? (f2 = p(o3, this), e3 = this.elt = o3, "string" == typeof (arguments.length <= 1 ? void 0 : arguments[1]) && (r4 = arguments.length <= 1 ? void 0 : arguments[1])) : ("string" == typeof o3 && (r4 = o3), e3 = document.createElement("div"), f2 = p(e3, this), this.elt = e3), f2._name = r4 || "radioOption";
            return f2._getOptionsArray = function() {
              return Array.from(this.elt.children).filter(function(e4) {
                return t4(e4) || d2(e4) && t4(e4.firstElementChild);
              }).map(function(e4) {
                return t4(e4) ? e4 : e4.firstElementChild;
              });
            }, f2.option = function(e4, t5) {
              var r5, o4, n3, s4 = true, i3 = false, a2 = void 0;
              try {
                for (var l2, u2 = f2._getOptionsArray()[Symbol.iterator](); !(s4 = (l2 = u2.next()).done); s4 = true) {
                  var c2 = l2.value;
                  if (c2.value === e4) {
                    r5 = c2;
                    break;
                  }
                }
              } catch (e5) {
                i3 = true, a2 = e5;
              } finally {
                try {
                  s4 || null == u2.return || u2.return();
                } finally {
                  if (i3)
                    throw a2;
                }
              }
              return void 0 === r5 && ((r5 = document.createElement("input")).setAttribute("type", "radio"), r5.setAttribute("value", e4)), r5.setAttribute("name", f2._name), d2(r5.parentElement) ? o4 = r5.parentElement : (o4 = document.createElement("label")).insertAdjacentElement("afterbegin", r5), o4.lastElementChild instanceof HTMLSpanElement ? n3 = o4.lastElementChild : (n3 = document.createElement("span"), r5.insertAdjacentElement("afterend", n3)), n3.innerHTML = void 0 === t5 ? e4 : t5, this.elt.appendChild(o4), r5;
            }, f2.remove = function(e4) {
              var t5 = true, r5 = false, o4 = void 0;
              try {
                for (var n3, s4 = f2._getOptionsArray()[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true) {
                  var i3 = n3.value;
                  if (i3.value === e4)
                    return void (d2(i3.parentElement) ? i3.parentElement : i3).remove();
                }
              } catch (e5) {
                r5 = true, o4 = e5;
              } finally {
                try {
                  t5 || null == s4.return || s4.return();
                } finally {
                  if (r5)
                    throw o4;
                }
              }
            }, f2.value = function() {
              var e4 = "", t5 = true, r5 = false, o4 = void 0;
              try {
                for (var n3, s4 = f2._getOptionsArray()[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true) {
                  var i3 = n3.value;
                  if (i3.checked) {
                    e4 = i3.value;
                    break;
                  }
                }
              } catch (e5) {
                r5 = true, o4 = e5;
              } finally {
                try {
                  t5 || null == s4.return || s4.return();
                } finally {
                  if (r5)
                    throw o4;
                }
              }
              return e4;
            }, f2.selected = function(e4) {
              var t5 = null;
              if (void 0 === e4) {
                var r5 = true, o4 = false, n3 = void 0;
                try {
                  for (var s4, i3 = f2._getOptionsArray()[Symbol.iterator](); !(r5 = (s4 = i3.next()).done); r5 = true) {
                    var a2 = s4.value;
                    if (a2.checked) {
                      t5 = a2;
                      break;
                    }
                  }
                } catch (e5) {
                  o4 = true, n3 = e5;
                } finally {
                  try {
                    r5 || null == i3.return || i3.return();
                  } finally {
                    if (o4)
                      throw n3;
                  }
                }
              } else {
                f2._getOptionsArray().forEach(function(e5) {
                  e5.checked = false, e5.removeAttribute("checked");
                });
                var l2 = true, o4 = false, n3 = void 0;
                try {
                  for (var u2, c2 = f2._getOptionsArray()[Symbol.iterator](); !(l2 = (u2 = c2.next()).done); l2 = true) {
                    var d3 = u2.value;
                    d3.value === e4 && (d3.setAttribute("checked", true), d3.checked = true, t5 = d3);
                  }
                } catch (e5) {
                  o4 = true, n3 = e5;
                } finally {
                  try {
                    l2 || null == c2.return || c2.return();
                  } finally {
                    if (o4)
                      throw n3;
                  }
                }
              }
              return t5;
            }, f2.disable = function() {
              var e4 = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0], t5 = true, r5 = false, o4 = void 0;
              try {
                for (var n3, s4 = f2._getOptionsArray()[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true)
                  n3.value.setAttribute("disabled", e4);
              } catch (e5) {
                r5 = true, o4 = e5;
              } finally {
                try {
                  t5 || null == s4.return || s4.return();
                } finally {
                  if (r5)
                    throw o4;
                }
              }
            }, f2;
          }, h.default.prototype.createColorPicker = function(e3) {
            h.default._validateParameters("createColorPicker", arguments);
            var t4 = document.createElement("input");
            return t4.type = "color", e3 ? e3 instanceof h.default.Color ? t4.value = e3.toString("#rrggbb") : (h.default.prototype._colorMode = "rgb", h.default.prototype._colorMaxes = { rgb: [255, 255, 255, 255], hsb: [360, 100, 100, 1], hsl: [360, 100, 100, 1] }, t4.value = h.default.prototype.color(e3).toString("#rrggbb")) : t4.value = "#000000", (t4 = p(t4, this)).color = function() {
              return e3 && (e3.mode && (h.default.prototype._colorMode = e3.mode), e3.maxes && (h.default.prototype._colorMaxes = e3.maxes)), h.default.prototype.color(this.elt.value);
            }, t4;
          }, h.default.prototype.createInput = function() {
            var e3 = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "", t4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "text", r4 = (h.default._validateParameters("createInput", arguments), document.createElement("input"));
            return r4.setAttribute("value", e3), r4.setAttribute("type", t4), p(r4, this);
          }, h.default.prototype.createFileInput = function(a2) {
            var e3, t4 = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
            h.default._validateParameters("createFileInput", arguments);
            if (window.File && window.FileReader && window.FileList && window.Blob)
              return (e3 = document.createElement("input")).setAttribute("type", "file"), t4 && e3.setAttribute("multiple", true), e3.addEventListener("change", function(e4) {
                var t5 = true, r4 = false, o3 = void 0;
                try {
                  for (var n3, s4 = e4.target.files[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true) {
                    var i3 = n3.value;
                    h.default.File._load(i3, a2);
                  }
                } catch (e5) {
                  r4 = true, o3 = e5;
                } finally {
                  try {
                    t5 || null == s4.return || s4.return();
                  } finally {
                    if (r4)
                      throw o3;
                  }
                }
              }, false), p(e3, this);
            console.log("The File APIs are not fully supported in this browser. Cannot create element.");
          }, h.default.prototype.createVideo = function(e3, t4) {
            return h.default._validateParameters("createVideo", arguments), m(this, "video", e3, t4);
          }, h.default.prototype.createAudio = function(e3, t4) {
            return h.default._validateParameters("createAudio", arguments), m(this, "audio", e3, t4);
          }, h.default.prototype.VIDEO = "video", h.default.prototype.AUDIO = "audio", void 0 === navigator.mediaDevices && (navigator.mediaDevices = {}), void 0 === navigator.mediaDevices.getUserMedia && (navigator.mediaDevices.getUserMedia = function(r4) {
            var o3 = navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
            return o3 ? new Promise(function(e3, t4) {
              o3.call(navigator, r4, e3, t4);
            }) : Promise.reject(new Error("getUserMedia is not implemented in this browser"));
          }), h.default.prototype.createCapture = function() {
            for (var e3 = arguments.length, t4 = new Array(e3), r4 = 0; r4 < e3; r4++)
              t4[r4] = arguments[r4];
            if (h.default._validateParameters("createCapture", t4), !navigator.mediaDevices || !navigator.mediaDevices.getUserMedia)
              throw new DOMException("getUserMedia not supported in this browser");
            for (var o3, n3 = true, s4 = true, i3 = 0, a2 = t4; i3 < a2.length; i3++) {
              var l2 = a2[i3];
              l2 === h.default.prototype.VIDEO ? s4 = false : l2 === h.default.prototype.AUDIO ? n3 = false : "object" === f(l2) ? u2 = l2 : "function" == typeof l2 && (o3 = l2);
            }
            var u2 = u2 || { video: n3, audio: s4 }, c2 = document.createElement("video"), d2 = (c2.setAttribute("playsinline", ""), navigator.mediaDevices.getUserMedia(u2).then(function(t5) {
              try {
                "srcObject" in c2 ? c2.srcObject = t5 : c2.src = window.URL.createObjectURL(t5);
              } catch (e4) {
                c2.src = t5;
              }
            }, console.log), p(c2, this, true));
            return d2.loadedmetadata = false, c2.addEventListener("loadedmetadata", function() {
              c2.play(), c2.width ? (d2.width = c2.width, d2.height = c2.height) : (d2.width = d2.elt.width = c2.videoWidth, d2.height = d2.elt.height = c2.videoHeight), d2.loadedmetadata = true, o3 && o3(c2.srcObject);
            }), d2;
          }, h.default.prototype.createElement = function(e3, t4) {
            h.default._validateParameters("createElement", arguments);
            e3 = document.createElement(e3);
            return void 0 !== t4 && (e3.innerHTML = t4), p(e3, this);
          }, h.default.Element.prototype.addClass = function(e3) {
            return this.elt.className ? this.hasClass(e3) || (this.elt.className = this.elt.className + " " + e3) : this.elt.className = e3, this;
          }, h.default.Element.prototype.removeClass = function(e3) {
            return this.elt.classList.remove(e3), this;
          }, h.default.Element.prototype.hasClass = function(e3) {
            return this.elt.classList.contains(e3);
          }, h.default.Element.prototype.toggleClass = function(e3) {
            return this.elt.classList.contains(e3) ? this.elt.classList.remove(e3) : this.elt.classList.add(e3), this;
          }, h.default.Element.prototype.child = function(e3) {
            return void 0 === e3 ? this.elt.childNodes : ("string" == typeof e3 ? ("#" === e3[0] && (e3 = e3.substring(1)), e3 = document.getElementById(e3)) : e3 instanceof h.default.Element && (e3 = e3.elt), e3 instanceof HTMLElement && this.elt.appendChild(e3), this);
          }, h.default.Element.prototype.center = function(e3) {
            var t4 = this.elt.style.display, r4 = "none" === this.elt.style.display, o3 = "none" === this.parent().style.display, n3 = { x: this.elt.offsetLeft, y: this.elt.offsetTop }, s4 = (r4 && this.show(), o3 && this.parent().show(), this.elt.style.display = "block", this.position(0, 0), Math.abs(this.parent().offsetWidth - this.elt.offsetWidth)), i3 = Math.abs(this.parent().offsetHeight - this.elt.offsetHeight);
            return "both" === e3 || void 0 === e3 ? this.position(s4 / 2 + this.parent().offsetLeft, i3 / 2 + this.parent().offsetTop) : "horizontal" === e3 ? this.position(s4 / 2 + this.parent().offsetLeft, n3.y) : "vertical" === e3 && this.position(n3.x, i3 / 2 + this.parent().offsetTop), this.style("display", t4), r4 && this.hide(), o3 && this.parent().hide(), this;
          }, h.default.Element.prototype.html = function() {
            return 0 === arguments.length ? this.elt.innerHTML : (arguments.length <= 1 || !arguments[1] ? this.elt.innerHTML = arguments.length <= 0 ? void 0 : arguments[0] : this.elt.insertAdjacentHTML("beforeend", arguments.length <= 0 ? void 0 : arguments[0]), this);
          }, h.default.Element.prototype.position = function() {
            return 0 === arguments.length ? { x: this.elt.offsetLeft, y: this.elt.offsetTop } : (this.elt.style.position = "static" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "fixed" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "relative" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "sticky" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "initial" !== (arguments.length <= 2 ? void 0 : arguments[2]) && "inherit" !== (arguments.length <= 2 ? void 0 : arguments[2]) ? "absolute" : arguments.length <= 2 ? void 0 : arguments[2], this.elt.style.left = (arguments.length <= 0 ? void 0 : arguments[0]) + "px", this.elt.style.top = (arguments.length <= 1 ? void 0 : arguments[1]) + "px", this.x = arguments.length <= 0 ? void 0 : arguments[0], this.y = arguments.length <= 1 ? void 0 : arguments[1], this);
          }, h.default.Element.prototype._translate = function() {
            this.elt.style.position = "absolute";
            var e3 = "";
            return this.elt.style.transform && (e3 = (e3 = this.elt.style.transform.replace(/translate3d\(.*\)/g, "")).replace(/translate[X-Z]?\(.*\)/g, "")), 2 === arguments.length ? this.elt.style.transform = "translate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "px, " + (arguments.length <= 1 ? void 0 : arguments[1]) + "px)" : 2 < arguments.length && (this.elt.style.transform = "translate3d(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "px," + (arguments.length <= 1 ? void 0 : arguments[1]) + "px," + (arguments.length <= 2 ? void 0 : arguments[2]) + "px)", this.elt.parentElement.style.perspective = 3 === arguments.length ? "1000px" : (arguments.length <= 3 ? void 0 : arguments[3]) + "px"), this.elt.style.transform += e3, this;
          }, h.default.Element.prototype._rotate = function() {
            var e3 = "";
            return this.elt.style.transform && (e3 = (e3 = this.elt.style.transform.replace(/rotate3d\(.*\)/g, "")).replace(/rotate[X-Z]?\(.*\)/g, "")), 1 === arguments.length ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg)" : 2 === arguments.length ? this.elt.style.transform = "rotate(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg, " + (arguments.length <= 1 ? void 0 : arguments[1]) + "deg)" : 3 === arguments.length && (this.elt.style.transform = "rotateX(" + (arguments.length <= 0 ? void 0 : arguments[0]) + "deg)", this.elt.style.transform += "rotateY(" + (arguments.length <= 1 ? void 0 : arguments[1]) + "deg)", this.elt.style.transform += "rotateZ(" + (arguments.length <= 2 ? void 0 : arguments[2]) + "deg)"), this.elt.style.transform += e3, this;
          }, h.default.Element.prototype.style = function(e3, t4) {
            if (void 0 === (t4 = t4 instanceof h.default.Color ? "rgba(" + t4.levels[0] + "," + t4.levels[1] + "," + t4.levels[2] + "," + t4.levels[3] / 255 + ")" : t4)) {
              if (-1 === e3.indexOf(":"))
                return window.getComputedStyle(this.elt).getPropertyValue(e3);
              for (var r4 = e3.split(";"), o3 = 0; o3 < r4.length; o3++) {
                var n3 = r4[o3].split(":");
                n3[0] && n3[1] && (this.elt.style[n3[0].trim()] = n3[1].trim());
              }
            } else
              this.elt.style[e3] = t4, "width" !== e3 && "height" !== e3 && "left" !== e3 && "top" !== e3 || (t4 = window.getComputedStyle(this.elt).getPropertyValue(e3).replace(/[^\d.]/g, ""), this[e3] = Math.round(parseFloat(t4, 10)));
            return this;
          }, h.default.Element.prototype.attribute = function(e3, t4) {
            if (null == this.elt.firstChild || "checkbox" !== this.elt.firstChild.type && "radio" !== this.elt.firstChild.type)
              return void 0 === t4 ? this.elt.getAttribute(e3) : (this.elt.setAttribute(e3, t4), this);
            if (void 0 === t4)
              return this.elt.firstChild.getAttribute(e3);
            for (var r4 = 0; r4 < this.elt.childNodes.length; r4++)
              this.elt.childNodes[r4].setAttribute(e3, t4);
          }, h.default.Element.prototype.removeAttribute = function(e3) {
            if (null != this.elt.firstChild && ("checkbox" === this.elt.firstChild.type || "radio" === this.elt.firstChild.type))
              for (var t4 = 0; t4 < this.elt.childNodes.length; t4++)
                this.elt.childNodes[t4].removeAttribute(e3);
            return this.elt.removeAttribute(e3), this;
          }, h.default.Element.prototype.value = function() {
            return 0 < arguments.length ? (this.elt.value = arguments.length <= 0 ? void 0 : arguments[0], this) : "range" === this.elt.type ? parseFloat(this.elt.value) : this.elt.value;
          }, h.default.Element.prototype.show = function() {
            return this.elt.style.display = "block", this;
          }, h.default.Element.prototype.hide = function() {
            return this.elt.style.display = "none", this;
          }, h.default.Element.prototype.size = function(e3, t4) {
            if (0 === arguments.length)
              return { width: this.elt.offsetWidth, height: this.elt.offsetHeight };
            var r4 = e3, o3 = t4, n3 = h.default.prototype.AUTO;
            if (r4 !== n3 || o3 !== n3) {
              if (r4 === n3 ? r4 = t4 * this.width / this.height : o3 === n3 && (o3 = e3 * this.height / this.width), this.elt instanceof HTMLCanvasElement) {
                var s4, i3 = {}, a2 = this.elt.getContext("2d");
                for (s4 in a2)
                  i3[s4] = a2[s4];
                for (s4 in this.elt.setAttribute("width", r4 * this._pInst._pixelDensity), this.elt.setAttribute("height", o3 * this._pInst._pixelDensity), this.elt.style.width = r4 + "px", this.elt.style.height = o3 + "px", this._pInst.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), i3)
                  this.elt.getContext("2d")[s4] = i3[s4];
              } else
                this.elt.style.width = r4 + "px", this.elt.style.height = o3 + "px", this.elt.width = r4, this.elt.height = o3;
              this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this._pInst && this._pInst._curElement && this._pInst._curElement.elt === this.elt && (this._pInst._setProperty("width", this.elt.offsetWidth), this._pInst._setProperty("height", this.elt.offsetHeight));
            }
            return this;
          }, h.default.Element.prototype.remove = function() {
            this instanceof h.default.MediaElement && (this.stop(), null !== (t4 = this.elt.srcObject) && t4.getTracks().forEach(function(e4) {
              e4.stop();
            }));
            var e3, t4 = this._pInst._elements.indexOf(this);
            for (e3 in -1 !== t4 && this._pInst._elements.splice(t4, 1), this._events)
              this.elt.removeEventListener(e3, this._events[e3]);
            this.elt && this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);
          }, h.default.Element.prototype.drop = function(a2, l2) {
            var e3;
            return window.File && window.FileReader && window.FileList && window.Blob ? (this._dragDisabled || (this._dragDisabled = true, this.elt.addEventListener("dragover", e3 = function(e4) {
              e4.preventDefault();
            }), this.elt.addEventListener("dragleave", e3)), h.default.Element._attachListener("drop", function(e4) {
              e4.preventDefault(), "function" == typeof l2 && l2.call(this, e4);
              var e4 = e4.dataTransfer.files, t4 = true, r4 = false, o3 = void 0;
              try {
                for (var n3, s4 = e4[Symbol.iterator](); !(t4 = (n3 = s4.next()).done); t4 = true) {
                  var i3 = n3.value;
                  h.default.File._load(i3, a2);
                }
              } catch (e5) {
                r4 = true, o3 = e5;
              } finally {
                try {
                  t4 || null == s4.return || s4.return();
                } finally {
                  if (r4)
                    throw o3;
                }
              }
            }, this)) : console.log("The File APIs are not fully supported in this browser."), this;
          };
          function y(e3, t4, r4, o3) {
            d(this, y), this.callback = e3, this.time = t4, this.id = r4, this.val = o3;
          }
          t3 = function(t4) {
            var r4 = i3;
            if ("function" != typeof t4 && null !== t4)
              throw new TypeError("Super expression must either be null or a function");
            r4.prototype = Object.create(t4 && t4.prototype, { constructor: { value: r4, writable: true, configurable: true } }), t4 && l(r4, t4);
            var s4 = u(i3);
            function i3(o3, e3) {
              d(this, i3);
              var n3 = c(e3 = s4.call(this, o3, e3));
              return e3.elt.crossOrigin = "anonymous", e3._prevTime = 0, e3._cueIDCounter = 0, e3._cues = [], e3.pixels = [], e3._pixelsState = c(e3), e3._pixelDensity = 1, e3._modified = false, e3._frameOnCanvas = -1, Object.defineProperty(n3, "src", { get: function() {
                var e4 = n3.elt.children[0].src, t5 = n3.elt.src === window.location.href ? "" : n3.elt.src;
                return e4 === window.location.href ? t5 : e4;
              }, set: function(e4) {
                for (var t5 = 0; t5 < n3.elt.children.length; t5++)
                  n3.elt.removeChild(n3.elt.children[t5]);
                var r5 = document.createElement("source");
                r5.src = e4, o3.appendChild(r5), n3.elt.src = e4, n3.modified = true;
              } }), n3._onended = function() {
              }, n3.elt.onended = function() {
                n3._onended(n3);
              }, e3;
            }
            return a(i3, [{ key: "play", value: function() {
              var e3;
              return this.elt.currentTime === this.elt.duration && (this.elt.currentTime = 0), 1 < this.elt.readyState || this.elt.load(), (e3 = this.elt.play()) && e3.catch && e3.catch(function(e4) {
                "NotAllowedError" === e4.name ? console.error(e4) : console.error("Media play method encountered an unexpected error", e4);
              }), this;
            } }, { key: "stop", value: function() {
              return this.elt.pause(), this.elt.currentTime = 0, this;
            } }, { key: "pause", value: function() {
              return this.elt.pause(), this;
            } }, { key: "loop", value: function() {
              return this.elt.setAttribute("loop", true), this.play(), this;
            } }, { key: "noLoop", value: function() {
              return this.elt.removeAttribute("loop"), this;
            } }, { key: "_setupAutoplayFailDetection", value: function() {
              var t5 = setTimeout(function() {
                console.error(e);
              }, 500);
              this.elt.addEventListener("play", function() {
                return clearTimeout(t5);
              }, { passive: true, once: true });
            } }, { key: "autoplay", value: function(e3) {
              var t5 = this, r5 = this.elt.getAttribute("autoplay");
              return this.elt.setAttribute("autoplay", e3), e3 && !r5 && (e3 = function() {
                return t5._setupAutoplayFailDetection();
              }, 4 === this.elt.readyState ? e3() : this.elt.addEventListener("canplay", e3, { passive: true, once: true })), this;
            } }, { key: "volume", value: function(e3) {
              if (void 0 === e3)
                return this.elt.volume;
              this.elt.volume = e3;
            } }, { key: "speed", value: function(e3) {
              if (void 0 === e3)
                return this.presetPlaybackRate || this.elt.playbackRate;
              this.loadedmetadata ? this.elt.playbackRate = e3 : this.presetPlaybackRate = e3;
            } }, { key: "time", value: function(e3) {
              return void 0 === e3 ? this.elt.currentTime : (this.elt.currentTime = e3, this);
            } }, { key: "duration", value: function() {
              return this.elt.duration;
            } }, { key: "_ensureCanvas", value: function() {
              this.canvas || (this.canvas = document.createElement("canvas"), this.drawingContext = this.canvas.getContext("2d"), this.setModified(true));
              var e3 = this._frameOnCanvas !== this._pInst.frameCount;
              this.loadedmetadata && e3 && (this.canvas.width !== this.elt.width && (this.canvas.width = this.elt.width, this.canvas.height = this.elt.height, this.width = this.canvas.width, this.height = this.canvas.height), this.drawingContext.drawImage(this.elt, 0, 0, this.canvas.width, this.canvas.height), this.setModified(true), this._frameOnCanvas = this._pInst.frameCount);
            } }, { key: "loadPixels", value: function() {
              this._ensureCanvas();
              for (var e3 = arguments.length, t5 = new Array(e3), r5 = 0; r5 < e3; r5++)
                t5[r5] = arguments[r5];
              return h.default.Renderer2D.prototype.loadPixels.apply(this, t5);
            } }, { key: "updatePixels", value: function(e3, t5, r5, o3) {
              return this.loadedmetadata && (this._ensureCanvas(), h.default.Renderer2D.prototype.updatePixels.call(this, e3, t5, r5, o3)), this.setModified(true), this;
            } }, { key: "get", value: function() {
              this._ensureCanvas();
              for (var e3 = arguments.length, t5 = new Array(e3), r5 = 0; r5 < e3; r5++)
                t5[r5] = arguments[r5];
              return h.default.Renderer2D.prototype.get.apply(this, t5);
            } }, { key: "_getPixel", value: function() {
              this.loadPixels();
              for (var e3 = arguments.length, t5 = new Array(e3), r5 = 0; r5 < e3; r5++)
                t5[r5] = arguments[r5];
              return h.default.Renderer2D.prototype._getPixel.apply(this, t5);
            } }, { key: "set", value: function(e3, t5, r5) {
              this.loadedmetadata && (this._ensureCanvas(), h.default.Renderer2D.prototype.set.call(this, e3, t5, r5), this.setModified(true));
            } }, { key: "copy", value: function() {
              this._ensureCanvas();
              for (var e3 = arguments.length, t5 = new Array(e3), r5 = 0; r5 < e3; r5++)
                t5[r5] = arguments[r5];
              h.default.prototype.copy.apply(this, t5);
            } }, { key: "mask", value: function() {
              this.loadPixels(), this.setModified(true);
              for (var e3 = arguments.length, t5 = new Array(e3), r5 = 0; r5 < e3; r5++)
                t5[r5] = arguments[r5];
              h.default.Image.prototype.mask.apply(this, t5);
            } }, { key: "isModified", value: function() {
              return this._modified;
            } }, { key: "setModified", value: function(e3) {
              this._modified = e3;
            } }, { key: "onended", value: function(e3) {
              return this._onended = e3, this;
            } }, { key: "connect", value: function(e3) {
              var t5, r5;
              if ("function" == typeof h.default.prototype.getAudioContext)
                t5 = h.default.prototype.getAudioContext(), r5 = h.default.soundOut.input;
              else
                try {
                  r5 = (t5 = e3.context).destination;
                } catch (e4) {
                  throw "connect() is meant to be used with Web Audio API or p5.sound.js";
                }
              this.audioSourceNode || (this.audioSourceNode = t5.createMediaElementSource(this.elt), this.audioSourceNode.connect(r5)), e3 ? e3.input ? this.audioSourceNode.connect(e3.input) : this.audioSourceNode.connect(e3) : this.audioSourceNode.connect(r5);
            } }, { key: "disconnect", value: function() {
              if (!this.audioSourceNode)
                throw "nothing to disconnect";
              this.audioSourceNode.disconnect();
            } }, { key: "showControls", value: function() {
              this.elt.style["text-align"] = "inherit", this.elt.controls = true;
            } }, { key: "hideControls", value: function() {
              this.elt.controls = false;
            } }, { key: "addCue", value: function(e3, t5, r5) {
              var o3 = this._cueIDCounter++, t5 = new y(t5, e3, o3, r5);
              return this._cues.push(t5), this.elt.ontimeupdate || (this.elt.ontimeupdate = this._onTimeUpdate.bind(this)), o3;
            } }, { key: "removeCue", value: function(e3) {
              for (var t5 = 0; t5 < this._cues.length; t5++)
                this._cues[t5].id === e3 && (console.log(e3), this._cues.splice(t5, 1));
              0 === this._cues.length && (this.elt.ontimeupdate = null);
            } }, { key: "clearCues", value: function() {
              this._cues = [], this.elt.ontimeupdate = null;
            } }, { key: "_onTimeUpdate", value: function() {
              for (var e3 = this.time(), t5 = 0; t5 < this._cues.length; t5++) {
                var r5 = this._cues[t5].time, o3 = this._cues[t5].val;
                this._prevTime < r5 && r5 <= e3 && this._cues[t5].callback(o3);
              }
              this._prevTime = e3;
            } }]), i3;
          }(h.default.Element), h.default.MediaElement = t3, t3 = function() {
            function r4(e3, t4) {
              d(this, r4), this.file = e3, this._pInst = t4;
              t4 = e3.type.split("/");
              this.type = t4[0], this.subtype = t4[1], this.name = e3.name, this.size = e3.size, this.data = void 0;
            }
            return a(r4, null, [{ key: "_createLoader", value: function(o3, n3) {
              var e3 = new FileReader();
              return e3.onload = function(e4) {
                var t4, r5 = new h.default.File(o3);
                "application/json" === r5.file.type ? r5.data = JSON.parse(e4.target.result) : "text/xml" === r5.file.type ? (t4 = new DOMParser().parseFromString(e4.target.result, "text/xml"), r5.data = new h.default.XML(t4.documentElement)) : r5.data = e4.target.result, n3(r5);
              }, e3;
            } }, { key: "_load", value: function(e3, t4) {
              var r5;
              /^text\//.test(e3.type) || "application/json" === e3.type ? h.default.File._createLoader(e3, t4).readAsText(e3) : /^(video|audio)\//.test(e3.type) ? ((r5 = new h.default.File(e3)).data = URL.createObjectURL(e3), t4(r5)) : h.default.File._createLoader(e3, t4).readAsDataURL(e3);
            } }]), r4;
          }(), h.default.File = t3, t3 = h.default;
          o2.default = t3;
        }, { "../core/main": 273, "core-js/modules/es.array.every": 153, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.splice": 166, "core-js/modules/es.function.name": 167, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.promise": 181, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.replace": 194, "core-js/modules/es.string.split": 196, "core-js/modules/es.string.trim": 199, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.for-each": 235, "core-js/modules/web.dom-collections.iterator": 236, "core-js/modules/web.url": 238 }], 290: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (y = e3("../core/main")) && y.__esModule ? y : { default: y }, s3 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          n2.default.prototype.deviceOrientation = 1 < window.innerWidth / window.innerHeight ? "landscape" : "portrait", n2.default.prototype.accelerationX = 0, n2.default.prototype.accelerationY = 0, n2.default.prototype.accelerationZ = 0, n2.default.prototype.pAccelerationX = 0, n2.default.prototype.pAccelerationY = 0, n2.default.prototype.pAccelerationZ = 0, n2.default.prototype._updatePAccelerations = function() {
            this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), this._setProperty("pAccelerationZ", this.accelerationZ);
          }, n2.default.prototype.rotationX = 0, n2.default.prototype.rotationY = 0, n2.default.prototype.rotationZ = 0, n2.default.prototype.pRotationX = 0, n2.default.prototype.pRotationY = 0;
          var l = n2.default.prototype.pRotationZ = 0, u = 0, c = 0, d = "clockwise", f = "clockwise", h = "clockwise", p = (n2.default.prototype.pRotateDirectionX = void 0, n2.default.prototype.pRotateDirectionY = void 0, n2.default.prototype.pRotateDirectionZ = void 0, n2.default.prototype._updatePRotations = function() {
            this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), this._setProperty("pRotationZ", this.rotationZ);
          }, n2.default.prototype.turnAxis = void 0, 0.5), m = 30, y = (n2.default.prototype.setMoveThreshold = function(e4) {
            n2.default._validateParameters("setMoveThreshold", arguments), p = e4;
          }, n2.default.prototype.setShakeThreshold = function(e4) {
            n2.default._validateParameters("setShakeThreshold", arguments), m = e4;
          }, n2.default.prototype._ondeviceorientation = function(e4) {
            this._updatePRotations(), this._angleMode === s3.radians && (e4.beta = e4.beta * (_PI / 180), e4.gamma = e4.gamma * (_PI / 180), e4.alpha = e4.alpha * (_PI / 180)), this._setProperty("rotationX", e4.beta), this._setProperty("rotationY", e4.gamma), this._setProperty("rotationZ", e4.alpha), this._handleMotion();
          }, n2.default.prototype._ondevicemotion = function(e4) {
            this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e4.acceleration.x), this._setProperty("accelerationY", 2 * e4.acceleration.y), this._setProperty("accelerationZ", 2 * e4.acceleration.z), this._handleMotion();
          }, n2.default.prototype._handleMotion = function() {
            90 === window.orientation || -90 === window.orientation ? this._setProperty("deviceOrientation", "landscape") : 0 === window.orientation ? this._setProperty("deviceOrientation", "portrait") : void 0 === window.orientation && this._setProperty("deviceOrientation", "undefined");
            var e4, t4, r4, o3, n3, s4 = this._isGlobal ? window : this;
            "function" == typeof s4.deviceMoved && (Math.abs(this.accelerationX - this.pAccelerationX) > p || Math.abs(this.accelerationY - this.pAccelerationY) > p || Math.abs(this.accelerationZ - this.pAccelerationZ) > p) && s4.deviceMoved(), "function" == typeof s4.deviceTurned && (t4 = this.rotationX + 180, e4 = this.pRotationX + 180, r4 = l + 180, 0 < t4 - e4 && t4 - e4 < 270 || t4 - e4 < -270 ? d = "clockwise" : (t4 - e4 < 0 || 270 < t4 - e4) && (d = "counter-clockwise"), d !== this.pRotateDirectionX && (r4 = t4), 90 < Math.abs(t4 - r4) && Math.abs(t4 - r4) < 270 && (r4 = t4, this._setProperty("turnAxis", "X"), s4.deviceTurned()), this.pRotateDirectionX = d, l = r4 - 180, e4 = this.rotationY + 180, t4 = this.pRotationY + 180, r4 = u + 180, 0 < e4 - t4 && e4 - t4 < 270 || e4 - t4 < -270 ? f = "clockwise" : (e4 - t4 < 0 || 270 < e4 - this.pRotationY) && (f = "counter-clockwise"), f !== this.pRotateDirectionY && (r4 = e4), 90 < Math.abs(e4 - r4) && Math.abs(e4 - r4) < 270 && (r4 = e4, this._setProperty("turnAxis", "Y"), s4.deviceTurned()), this.pRotateDirectionY = f, u = r4 - 180, 0 < this.rotationZ - this.pRotationZ && this.rotationZ - this.pRotationZ < 270 || this.rotationZ - this.pRotationZ < -270 ? h = "clockwise" : (this.rotationZ - this.pRotationZ < 0 || 270 < this.rotationZ - this.pRotationZ) && (h = "counter-clockwise"), h !== this.pRotateDirectionZ && (c = this.rotationZ), 90 < Math.abs(this.rotationZ - c) && Math.abs(this.rotationZ - c) < 270 && (c = this.rotationZ, this._setProperty("turnAxis", "Z"), s4.deviceTurned()), this.pRotateDirectionZ = h, this._setProperty("turnAxis", void 0)), "function" == typeof s4.deviceShaken && (null !== this.pAccelerationX && (o3 = Math.abs(this.accelerationX - this.pAccelerationX), n3 = Math.abs(this.accelerationY - this.pAccelerationY)), m < o3 + n3 && s4.deviceShaken());
          }, n2.default);
          r3.default = y;
        }, { "../core/constants": 262, "../core/main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 291: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var o2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          o2.default.prototype.isKeyPressed = false, o2.default.prototype.keyIsPressed = false, o2.default.prototype.key = "", o2.default.prototype.keyCode = 0, o2.default.prototype._onkeydown = function(e4) {
            var t4;
            this._downKeys[e4.which] || (this._setProperty("isKeyPressed", true), this._setProperty("keyIsPressed", true), this._setProperty("keyCode", e4.which), this._downKeys[e4.which] = true, this._setProperty("key", e4.key || String.fromCharCode(e4.which) || e4.which), "function" != typeof (t4 = this._isGlobal ? window : this).keyPressed || e4.charCode || false === t4.keyPressed(e4) && e4.preventDefault());
          }, o2.default.prototype._onkeyup = function(e4) {
            this._downKeys[e4.which] = false, this._areDownKeys() || (this._setProperty("isKeyPressed", false), this._setProperty("keyIsPressed", false)), this._setProperty("_lastKeyCodeTyped", null), this._setProperty("key", e4.key || String.fromCharCode(e4.which) || e4.which), this._setProperty("keyCode", e4.which);
            var t4 = this._isGlobal ? window : this;
            "function" == typeof t4.keyReleased && false === t4.keyReleased(e4) && e4.preventDefault();
          }, o2.default.prototype._onkeypress = function(e4) {
            var t4;
            e4.which !== this._lastKeyCodeTyped && (this._setProperty("_lastKeyCodeTyped", e4.which), this._setProperty("key", e4.key || String.fromCharCode(e4.which) || e4.which), "function" == typeof (t4 = this._isGlobal ? window : this).keyTyped && false === t4.keyTyped(e4) && e4.preventDefault());
          }, o2.default.prototype._onblur = function(e4) {
            this._downKeys = {};
          }, o2.default.prototype.keyIsDown = function(e4) {
            return o2.default._validateParameters("keyIsDown", arguments), this._downKeys[e4] || false;
          }, o2.default.prototype._areDownKeys = function() {
            for (var e4 in this._downKeys)
              if (this._downKeys.hasOwnProperty(e4) && true === this._downKeys[e4])
                return true;
            return false;
          };
          e3 = o2.default;
          r3.default = e3;
        }, { "../core/main": 273 }], 292: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.string.includes"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, s3 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          n2.default.prototype.movedX = 0, n2.default.prototype.movedY = 0, n2.default.prototype._hasMouseInteracted = false, n2.default.prototype.mouseX = 0, n2.default.prototype.mouseY = 0, n2.default.prototype.pmouseX = 0, n2.default.prototype.pmouseY = 0, n2.default.prototype.winMouseX = 0, n2.default.prototype.winMouseY = 0, n2.default.prototype.pwinMouseX = 0, n2.default.prototype.pwinMouseY = 0, n2.default.prototype.mouseButton = 0, n2.default.prototype.mouseIsPressed = false, n2.default.prototype._updateNextMouseCoords = function(e4) {
            var t4, r4, o3, n3, s4;
            null !== this._curElement && (!e4.touches || 0 < e4.touches.length) && (t4 = this._curElement.elt, r4 = this.width, o3 = this.height, (n3 = e4) && !n3.clientX && (n3.touches ? n3 = n3.touches[0] : n3.changedTouches && (n3 = n3.changedTouches[0])), s4 = t4.getBoundingClientRect(), r4 = t4.scrollWidth / r4 || 1, t4 = t4.scrollHeight / o3 || 1, o3 = { x: (n3.clientX - s4.left) / r4, y: (n3.clientY - s4.top) / t4, winX: n3.clientX, winY: n3.clientY, id: n3.identifier }, this._setProperty("movedX", e4.movementX), this._setProperty("movedY", e4.movementY), this._setProperty("mouseX", o3.x), this._setProperty("mouseY", o3.y), this._setProperty("winMouseX", o3.winX), this._setProperty("winMouseY", o3.winY)), this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", true));
          }, n2.default.prototype._updateMouseCoords = function() {
            this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
          }, n2.default.prototype._setMouseButton = function(e4) {
            1 === e4.button ? this._setProperty("mouseButton", s3.CENTER) : 2 === e4.button ? this._setProperty("mouseButton", s3.RIGHT) : this._setProperty("mouseButton", s3.LEFT);
          }, n2.default.prototype._onmousemove = function(e4) {
            var t4 = this._isGlobal ? window : this;
            this._updateNextMouseCoords(e4), this.mouseIsPressed ? "function" == typeof t4.mouseDragged ? false === t4.mouseDragged(e4) && e4.preventDefault() : "function" == typeof t4.touchMoved && false === t4.touchMoved(e4) && e4.preventDefault() : "function" == typeof t4.mouseMoved && false === t4.mouseMoved(e4) && e4.preventDefault();
          }, n2.default.prototype._onmousedown = function(e4) {
            var t4 = this._isGlobal ? window : this;
            this._setProperty("mouseIsPressed", true), this._setMouseButton(e4), this._updateNextMouseCoords(e4), "function" == typeof t4.mousePressed ? false === t4.mousePressed(e4) && e4.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && "function" == typeof t4.touchStarted && false === t4.touchStarted(e4) && e4.preventDefault();
          }, n2.default.prototype._onmouseup = function(e4) {
            var t4 = this._isGlobal ? window : this;
            this._setProperty("mouseIsPressed", false), "function" == typeof t4.mouseReleased ? false === t4.mouseReleased(e4) && e4.preventDefault() : "function" == typeof t4.touchEnded && false === t4.touchEnded(e4) && e4.preventDefault();
          }, n2.default.prototype._ondragend = n2.default.prototype._onmouseup, n2.default.prototype._ondragover = n2.default.prototype._onmousemove, n2.default.prototype._onclick = function(e4) {
            var t4 = this._isGlobal ? window : this;
            "function" == typeof t4.mouseClicked && false === t4.mouseClicked(e4) && e4.preventDefault();
          }, n2.default.prototype._ondblclick = function(e4) {
            var t4 = this._isGlobal ? window : this;
            "function" == typeof t4.doubleClicked && false === t4.doubleClicked(e4) && e4.preventDefault();
          }, n2.default.prototype._mouseWheelDeltaY = 0, n2.default.prototype._pmouseWheelDeltaY = 0, n2.default.prototype._onwheel = function(e4) {
            var t4 = this._isGlobal ? window : this;
            this._setProperty("_mouseWheelDeltaY", e4.deltaY), "function" == typeof t4.mouseWheel && (e4.delta = e4.deltaY, false === t4.mouseWheel(e4) && e4.preventDefault());
          }, n2.default.prototype.requestPointerLock = function() {
            var e4 = this._curElement.elt;
            return e4.requestPointerLock = e4.requestPointerLock || e4.mozRequestPointerLock, e4.requestPointerLock ? (e4.requestPointerLock(), true) : (console.log("requestPointerLock is not implemented in this browser"), false);
          }, n2.default.prototype.exitPointerLock = function() {
            document.exitPointerLock();
          };
          e3 = n2.default;
          r3.default = e3;
        }, { "../core/constants": 262, "../core/main": 273, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 293: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.string.includes"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.prototype.touches = [], e3.default.prototype._updateTouchCoords = function(e4) {
            if (null !== this._curElement) {
              for (var t4 = [], r4 = 0; r4 < e4.touches.length; r4++)
                t4[r4] = function(e5, t5, r5, o2) {
                  var n2 = 4 < arguments.length && void 0 !== arguments[4] ? arguments[4] : 0, s3 = e5.getBoundingClientRect(), t5 = e5.scrollWidth / t5 || 1, e5 = e5.scrollHeight / r5 || 1, r5 = o2.touches[n2] || o2.changedTouches[n2];
                  return { x: (r5.clientX - s3.left) / t5, y: (r5.clientY - s3.top) / e5, winX: r5.clientX, winY: r5.clientY, id: r5.identifier };
                }(this._curElement.elt, this.width, this.height, e4, r4);
              this._setProperty("touches", t4);
            }
          }, e3.default.prototype._ontouchstart = function(e4) {
            var t4 = this._isGlobal ? window : this;
            this._setProperty("mouseIsPressed", true), this._updateTouchCoords(e4), this._updateNextMouseCoords(e4), this._updateMouseCoords(), "function" == typeof t4.touchStarted ? false === t4.touchStarted(e4) && e4.preventDefault() : navigator.userAgent.toLowerCase().includes("safari") && "function" == typeof t4.mousePressed && false === t4.mousePressed(e4) && e4.preventDefault();
          }, e3.default.prototype._ontouchmove = function(e4) {
            var t4 = this._isGlobal ? window : this;
            this._updateTouchCoords(e4), this._updateNextMouseCoords(e4), "function" == typeof t4.touchMoved ? false === t4.touchMoved(e4) && e4.preventDefault() : "function" == typeof t4.mouseDragged && false === t4.mouseDragged(e4) && e4.preventDefault();
          }, e3.default.prototype._ontouchend = function(e4) {
            this._setProperty("mouseIsPressed", false), this._updateTouchCoords(e4), this._updateNextMouseCoords(e4);
            var t4 = this._isGlobal ? window : this;
            "function" == typeof t4.touchEnded ? false === t4.touchEnded(e4) && e4.preventDefault() : "function" == typeof t4.mouseReleased && false === t4.mouseReleased(e4) && e4.preventDefault();
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.includes": 158, "core-js/modules/es.string.includes": 189 }], 294: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.typed-array.int32-array"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.typed-array.int32-array"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var U, N, B, G, V = { _toPixels: function(e4) {
            var t4, r4;
            return e4 instanceof ImageData ? e4.data : e4.getContext("2d") ? e4.getContext("2d").getImageData(0, 0, e4.width, e4.height).data : e4.getContext("webgl") ? (r4 = (t4 = e4.getContext("webgl")).drawingBufferWidth * t4.drawingBufferHeight * 4, r4 = new Uint8Array(r4), t4.readPixels(0, 0, e4.width, e4.height, t4.RGBA, t4.UNSIGNED_BYTE, r4), r4) : void 0;
          }, _getARGB: function(e4, t4) {
            t4 *= 4;
            return e4[3 + t4] << 24 & 4278190080 | e4[t4] << 16 & 16711680 | e4[1 + t4] << 8 & 65280 | 255 & e4[2 + t4];
          }, _setPixels: function(e4, t4) {
            for (var r4, o2 = 0, n2 = e4.length; o2 < n2; o2++)
              e4[0 + (r4 = 4 * o2)] = (16711680 & t4[o2]) >>> 16, e4[1 + r4] = (65280 & t4[o2]) >>> 8, e4[2 + r4] = 255 & t4[o2], e4[3 + r4] = (4278190080 & t4[o2]) >>> 24;
          }, _toImageData: function(e4) {
            return e4 instanceof ImageData ? e4 : e4.getContext("2d").getImageData(0, 0, e4.width, e4.height);
          }, _createImageData: function(e4, t4) {
            return V._tmpCanvas = document.createElement("canvas"), V._tmpCtx = V._tmpCanvas.getContext("2d"), this._tmpCtx.createImageData(e4, t4);
          }, apply: function(e4, t4, r4) {
            var o2 = e4.getContext("2d"), n2 = o2.getImageData(0, 0, e4.width, e4.height), t4 = t4(n2, r4);
            t4 instanceof ImageData ? o2.putImageData(t4, 0, 0, 0, 0, e4.width, e4.height) : o2.putImageData(n2, 0, 0, 0, 0, e4.width, e4.height);
          }, threshold: function(e4, t4) {
            for (var r4 = V._toPixels(e4), o2 = (void 0 === t4 && (t4 = 0.5), Math.floor(255 * t4)), n2 = 0; n2 < r4.length; n2 += 4) {
              var s3 = void 0, s3 = o2 <= 0.2126 * r4[n2] + 0.7152 * r4[n2 + 1] + 0.0722 * r4[n2 + 2] ? 255 : 0;
              r4[n2] = r4[n2 + 1] = r4[n2 + 2] = s3;
            }
          }, gray: function(e4) {
            for (var t4 = V._toPixels(e4), r4 = 0; r4 < t4.length; r4 += 4) {
              var o2 = t4[r4], n2 = t4[r4 + 1], s3 = t4[r4 + 2];
              t4[r4] = t4[r4 + 1] = t4[r4 + 2] = 0.2126 * o2 + 0.7152 * n2 + 0.0722 * s3;
            }
          }, opaque: function(e4) {
            for (var t4 = V._toPixels(e4), r4 = 0; r4 < t4.length; r4 += 4)
              t4[r4 + 3] = 255;
            return t4;
          }, invert: function(e4) {
            for (var t4 = V._toPixels(e4), r4 = 0; r4 < t4.length; r4 += 4)
              t4[r4] = 255 - t4[r4], t4[r4 + 1] = 255 - t4[r4 + 1], t4[r4 + 2] = 255 - t4[r4 + 2];
          }, posterize: function(e4, t4) {
            var r4 = V._toPixels(e4);
            if (t4 < 2 || 255 < t4)
              throw new Error("Level must be greater than 2 and less than 255 for posterize");
            for (var o2 = t4 - 1, n2 = 0; n2 < r4.length; n2 += 4) {
              var s3 = r4[n2], i2 = r4[n2 + 1], a = r4[n2 + 2];
              r4[n2] = 255 * (s3 * t4 >> 8) / o2, r4[n2 + 1] = 255 * (i2 * t4 >> 8) / o2, r4[n2 + 2] = 255 * (a * t4 >> 8) / o2;
            }
          }, dilate: function(e4) {
            for (var t4, r4, o2, n2, s3, i2, a, l, u, c = V._toPixels(e4), d = 0, f = c.length ? c.length / 4 : 0, h = new Int32Array(f); d < f; )
              for (r4 = (t4 = d) + e4.width; d < r4; )
                n2 = o2 = V._getARGB(c, d), (u = d - 1) < t4 && (u = d), r4 <= (l = d + 1) && (l = d), (s3 = d - e4.width) < 0 && (s3 = 0), f <= (i2 = d + e4.width) && (i2 = d), s3 = V._getARGB(c, s3), u = V._getARGB(c, u), i2 = V._getARGB(c, i2), (n2 = 77 * (n2 >> 16 & 255) + 151 * (n2 >> 8 & 255) + 28 * (255 & n2)) < (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o2 = u, n2 = a), n2 < (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) && (o2 = u, n2 = a), n2 < (l = 77 * (s3 >> 16 & 255) + 151 * (s3 >> 8 & 255) + 28 * (255 & s3)) && (o2 = s3, n2 = l), n2 < (u = 77 * (i2 >> 16 & 255) + 151 * (i2 >> 8 & 255) + 28 * (255 & i2)) && (o2 = i2, n2 = u), h[d++] = o2;
            V._setPixels(c, h);
          }, erode: function(e4) {
            for (var t4, r4, o2, n2, s3, i2, a, l, u, c = V._toPixels(e4), d = 0, f = c.length ? c.length / 4 : 0, h = new Int32Array(f); d < f; )
              for (r4 = (t4 = d) + e4.width; d < r4; )
                n2 = o2 = V._getARGB(c, d), (u = d - 1) < t4 && (u = d), r4 <= (l = d + 1) && (l = d), (s3 = d - e4.width) < 0 && (s3 = 0), f <= (i2 = d + e4.width) && (i2 = d), s3 = V._getARGB(c, s3), u = V._getARGB(c, u), i2 = V._getARGB(c, i2), (a = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < (n2 = 77 * (n2 >> 16 & 255) + 151 * (n2 >> 8 & 255) + 28 * (255 & n2)) && (o2 = u, n2 = a), (a = 77 * ((u = V._getARGB(c, l)) >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < n2 && (o2 = u, n2 = a), (l = 77 * (s3 >> 16 & 255) + 151 * (s3 >> 8 & 255) + 28 * (255 & s3)) < n2 && (o2 = s3, n2 = l), (u = 77 * (i2 >> 16 & 255) + 151 * (i2 >> 8 & 255) + 28 * (255 & i2)) < n2 && (o2 = i2, n2 = u), h[d++] = o2;
            V._setPixels(c, h);
          }, blur: function(e4, D) {
            for (var t4, r4, o2, n2, s3, i2, a, l, u, c, d = V._toPixels(e4), f = e4.width, h = e4.height, p = f * h, m = new Int32Array(p), y = 0; y < p; y++)
              m[y] = V._getARGB(d, y);
            var g, v, b, j, _, x, w, S, E = new Int32Array(p), M = new Int32Array(p), T = new Int32Array(p), F = new Int32Array(p), k = 0, O = 3.5 * D | 0;
            if (U !== (O = O < 1 ? 1 : O < 248 ? O : 248)) {
              N = 1 + (U = O) << 1, B = new Int32Array(N), G = new Array(N);
              for (var C = 0; C < N; C++)
                G[C] = new Int32Array(256);
              for (var A = 1, P = O - 1; A < O; A++) {
                B[O + A] = B[P] = x = P * P, w = G[O + A], S = G[P--];
                for (var L = 0; L < 256; L++)
                  w[L] = S[L] = x * L;
              }
              _ = B[O] = O * O, w = G[O];
              for (var R = 0; R < 256; R++)
                w[R] = _ * R;
            }
            for (v = 0; v < h; v++) {
              for (g = 0; g < f; g++) {
                if (n2 = o2 = r4 = s3 = t4 = 0, (i2 = g - U) < 0)
                  c = -i2, i2 = 0;
                else {
                  if (f <= i2)
                    break;
                  c = 0;
                }
                for (b = c; b < N && !(f <= i2); b++) {
                  var I = m[i2 + k];
                  j = G[b], s3 += j[(-16777216 & I) >>> 24], r4 += j[(16711680 & I) >> 16], o2 += j[(65280 & I) >> 8], n2 += j[255 & I], t4 += B[b], i2++;
                }
                E[a = k + g] = s3 / t4, M[a] = r4 / t4, T[a] = o2 / t4, F[a] = n2 / t4;
              }
              k += f;
            }
            for (u = (l = -U) * f, v = k = 0; v < h; v++) {
              for (g = 0; g < f; g++) {
                if (n2 = o2 = r4 = s3 = t4 = 0, l < 0)
                  c = a = -l, i2 = g;
                else {
                  if (h <= l)
                    break;
                  c = 0, a = l, i2 = g + u;
                }
                for (b = c; b < N && !(h <= a); b++)
                  j = G[b], s3 += j[E[i2]], r4 += j[M[i2]], o2 += j[T[i2]], n2 += j[F[i2]], t4 += B[b], a++, i2 += f;
                m[g + k] = s3 / t4 << 24 | r4 / t4 << 16 | o2 / t4 << 8 | n2 / t4;
              }
              k += f, u += f, l++;
            }
            V._setPixels(d, m);
          } };
          r3.default = V;
        }, { "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.int32-array": 215, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint8-array": 232 }], 295: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.set"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.set"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var O = o2(e3("../core/main")), C = o2(e3("omggif"));
          function o2(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function A(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          O.default.prototype.createImage = function(e4, t4) {
            return O.default._validateParameters("createImage", arguments), new O.default.Image(e4, t4);
          }, O.default.prototype.saveCanvas = function() {
            O.default._validateParameters("saveCanvas", arguments);
            var e4, t4, r4, o3, n2 = [].slice.call(arguments);
            switch (arguments[0] instanceof HTMLCanvasElement ? (e4 = arguments[0], n2.shift()) : arguments[0] instanceof O.default.Element ? (e4 = arguments[0].elt, n2.shift()) : e4 = this._curElement && this._curElement.elt, 1 <= n2.length && (t4 = n2[0]), r4 = (r4 = 2 <= n2.length ? n2[1] : r4) || O.default.prototype._checkFileExtension(t4, r4)[1] || "png") {
              default:
                o3 = "image/png";
                break;
              case "jpeg":
              case "jpg":
                o3 = "image/jpeg";
            }
            e4.toBlob(function(e5) {
              O.default.prototype.downloadFile(e5, t4, r4);
            }, o3);
          }, O.default.prototype.encodeAndDownloadGif = function(d, e4) {
            for (var f = d.gifProperties, t4 = f.loopLimit, r4 = (1 === t4 ? t4 = null : null === t4 && (t4 = 0), new Uint8Array(d.width * d.height * f.numFrames)), h = [], o3 = {}, n2 = 0; n2 < f.numFrames; n2++) {
              for (var s3 = /* @__PURE__ */ new Set(), i2 = f.frames[n2].image.data, a = i2.length, l = new Uint32Array(d.width * d.height), u = 0, c = 0; u < a; u += 4, c++) {
                var p = i2[u + 0] << 16 | i2[u + 1] << 8 | i2[u + 2] << 0;
                s3.add(p), l[c] = p;
              }
              var m = A(s3).sort().toString();
              void 0 === o3[m] ? o3[m] = { freq: 1, frames: [n2] } : (o3[m].freq += 1, o3[m].frames.push(n2)), h.push(l);
            }
            for (var y = [], g = Object.keys(o3).sort(function(e5, t5) {
              return o3[t5].freq - o3[e5].freq;
            }), v = g[0].split(",").map(function(e5) {
              return parseInt(e5);
            }), y = y.concat(o3[v].frames), b = new Set(v), j = 1; j < g.length; j++) {
              var _ = g[j].split(",").map(function(e5) {
                return parseInt(e5);
              }).filter(function(e5) {
                return !b.has(e5);
              });
              if (v.length + _.length <= 256) {
                for (var x = 0; x < _.length; x++)
                  v.push(_[x]), b.add(_[x]);
                y = y.concat(o3[g[j]].frames);
              }
            }
            y = new Set(y);
            for (var w = {}, S = 0; S < v.length; S++)
              w[v[S]] || (w[v[S]] = S);
            for (var E = 1; E < v.length; )
              E <<= 1;
            v.length = E;
            for (var t4 = { loop: t4, palette: new Uint32Array(v) }, M = new C.default.GifWriter(r4, d.width, d.height, t4), T = {}, k = 0; k < f.numFrames; k++)
              !function(r5) {
                var o4 = !y.has(r5), n3 = o4 ? [] : v, s4 = new Uint8Array(d.width * d.height), i3 = {}, a2 = /* @__PURE__ */ new Set(), e5 = (h[r5].forEach(function(e6, t6) {
                  o4 ? (void 0 === i3[e6] && (i3[e6] = n3.length, n3.push(e6)), s4[t6] = i3[e6]) : s4[t6] = w[e6], 0 < r5 && h[r5 - 1][t6] !== e6 && a2.add(e6);
                }), {}), t5 = n3.filter(function(e6) {
                  return !a2.has(e6);
                });
                if (0 < t5.length) {
                  var t5 = t5[0], l2 = (o4 ? i3 : w)[t5];
                  if (0 < r5) {
                    for (var u2 = 0; u2 < h[r5].length; u2++)
                      h[r5 - 1][u2] === h[r5][u2] && (s4[u2] = l2);
                    e5.transparent = l2, T.frameOpts.disposal = 1;
                  }
                }
                if (e5.delay = f.frames[r5].delay / 10, o4) {
                  for (var c2 = 1; c2 < n3.length; )
                    c2 <<= 1;
                  n3.length = c2, e5.palette = new Uint32Array(n3);
                }
                0 < r5 && M.addFrame(0, 0, d.width, d.height, T.pixelPaletteIndex, T.frameOpts), T = { pixelPaletteIndex: s4, frameOpts: e5 };
              }(k);
            T.frameOpts.disposal = 1, M.addFrame(0, 0, d.width, d.height, T.pixelPaletteIndex, T.frameOpts);
            t4 = new Blob([r4.slice(0, M.end())], { type: "image/gif" });
            O.default.prototype.downloadFile(t4, e4, "gif");
          }, O.default.prototype.saveFrames = function(e4, t4, r4, o3, i2) {
            O.default._validateParameters("saveFrames", arguments);
            r4 = O.default.prototype.constrain(r4 = r4 || 3, 0, 15);
            r4 *= 1e3;
            var o3 = O.default.prototype.constrain(o3 || 15, 0, 22), n2 = 0, s3 = O.default.prototype._makeFrame, a = this._curElement.elt, l = [], u = setInterval(function() {
              l.push(s3(e4 + n2, t4, a)), n2++;
            }, 1e3 / o3);
            setTimeout(function() {
              if (clearInterval(u), i2)
                i2(l);
              else {
                var e5 = true, t5 = false, r5 = void 0;
                try {
                  for (var o4, n3 = l[Symbol.iterator](); !(e5 = (o4 = n3.next()).done); e5 = true) {
                    var s4 = o4.value;
                    O.default.prototype.downloadFile(s4.imageData, s4.filename, s4.ext);
                  }
                } catch (e6) {
                  t5 = true, r5 = e6;
                } finally {
                  try {
                    e5 || null == n3.return || n3.return();
                  } finally {
                    if (t5)
                      throw r5;
                  }
                }
              }
              l = [];
            }, 0.01 + r4);
          }, O.default.prototype._makeFrame = function(e4, t4, r4) {
            var o3, r4 = this ? this._curElement.elt : r4;
            if (t4)
              switch (t4.toLowerCase()) {
                case "png":
                  o3 = "image/png";
                  break;
                case "jpeg":
                case "jpg":
                  o3 = "image/jpeg";
                  break;
                default:
                  o3 = "image/png";
              }
            else
              t4 = "png", o3 = "image/png";
            var r4 = (r4 = r4.toDataURL(o3)).replace(o3, "image/octet-stream"), n2 = {};
            return n2.imageData = r4, n2.filename = e4, n2.ext = t4, n2;
          };
          e3 = O.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.set": 187, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.replace": 194, "core-js/modules/es.string.split": 196, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint32-array": 231, "core-js/modules/es.typed-array.uint8-array": 232, "core-js/modules/web.dom-collections.for-each": 235, "core-js/modules/web.dom-collections.iterator": 236, omggif: 246 }], 296: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.copy-within"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint8-clamped-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.copy-within"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint8-clamped-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0, e3("regenerator-runtime/runtime");
          var C = n2(e3("../core/main")), m = n2(e3("../core/helpers")), j = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s3;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s3 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r4, s3) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants")), g = n2(e3("omggif")), A = e3("gifenc");
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          function n2(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function l(e4, t4, r4, o3, n3, s3, i3) {
            try {
              var a2 = e4[s3](i3), l2 = a2.value;
            } catch (e5) {
              return void r4(e5);
            }
            a2.done ? t4(l2) : Promise.resolve(l2).then(o3, n3);
          }
          function y(e4, t4, r4, o3, n3, s3, i3, a2, l2, u, c) {
            var d, f, h, p, m2, y2, g2, v2, b;
            return e4 === j.COVER && (d = t4, h = r4, g2 = s3, v2 = i3, y2 = a2, b = l2, f = u, p = c, m2 = Math.max(g2 / f, v2 / p), g2 /= m2, v2 /= m2, m2 = y2, y2 = b, d === j.CENTER ? m2 += (f - g2) / 2 : d === j.RIGHT && (m2 += f - g2), h === j.CENTER ? y2 += (p - v2) / 2 : h === j.BOTTOM && (y2 += p - v2), a2 = (b = { x: m2, y: y2, w: g2, h: v2 }).x, l2 = b.y, u = b.w, c = b.h), e4 === j.CONTAIN && (d = t4, f = r4, h = o3, p = n3, m2 = s3, y2 = i3, g2 = u, v2 = c, b = Math.max(g2 / m2, v2 / y2), g2 /= b, v2 /= b, b = h, h = p, d === j.CENTER ? b += (m2 - g2) / 2 : d === j.RIGHT && (b += m2 - g2), f === j.CENTER ? h += (y2 - v2) / 2 : f === j.BOTTOM && (h += y2 - v2), o3 = (e4 = { x: b, y: h, w: g2, h: v2 }).x, n3 = e4.y, s3 = e4.w, i3 = e4.h), { sx: a2, sy: l2, sw: u, sh: c, dx: o3, dy: n3, dw: s3, dh: i3 };
          }
          function v(e4, t4) {
            return 0 < e4 && e4 < t4 ? e4 : t4;
          }
          e3("../core/friendly_errors/validate_params"), e3("../core/friendly_errors/file_errors"), e3("../core/friendly_errors/fes_core"), C.default.prototype.loadImage = function(o3, h, p) {
            C.default._validateParameters("loadImage", arguments);
            var m2 = new C.default.Image(1, 1, this), y2 = this, e4 = new Request(o3, { method: "GET", mode: "cors" });
            return fetch(o3, e4).then(function(e5) {
              var t4, r4 = e5.headers.get("content-type");
              null === r4 && console.warn("The image you loaded does not have a Content-Type header. If you are using the online editor consider reuploading the asset."), r4 && r4.includes("image/gif") ? e5.arrayBuffer().then(function(e6) {
                if (e6) {
                  for (var e6 = new Uint8Array(e6), r5 = m2, t5 = h, o4 = p, n3 = function(e7) {
                    y2._decrementPreload();
                  }.bind(y2), s3 = new g.default.GifReader(e6), i3 = (r5.width = r5.canvas.width = s3.width, r5.height = r5.canvas.height = s3.height, []), a2 = s3.numFrames(), l2 = new Uint8ClampedArray(r5.width * r5.height * 4), u = 0; u < a2; u++) {
                    var c = s3.frameInfo(u), d = r5.drawingContext.getImageData(0, 0, r5.width, r5.height), f = (l2 = d.data.slice(), !function(e7, t6) {
                      try {
                        t6.decodeAndBlitFrameRGBA(e7, l2);
                      } catch (e8) {
                        C.default._friendlyFileLoadError(8, r5.src), "function" == typeof o4 ? o4(e8) : console.error(e8);
                      }
                    }(u, s3), new ImageData(l2, r5.width, r5.height)), f = (r5.drawingContext.putImageData(f, 0, 0), c.delay);
                    0 === f && (f = 10), i3.push({ image: r5.drawingContext.getImageData(0, 0, r5.width, r5.height), delay: 10 * f }), 2 === c.disposal ? r5.drawingContext.clearRect(c.x, c.y, c.width, c.height) : 3 === c.disposal && r5.drawingContext.putImageData(d, 0, 0, c.x, c.y, c.width, c.height);
                  }
                  null === (e6 = s3.loopCount()) ? e6 = 1 : 0 === e6 && (e6 = null), r5.drawingContext.putImageData(i3[0].image, 0, 0), 1 < i3.length && (r5.gifProperties = { displayIndex: 0, loopLimit: e6, loopCount: 0, frames: i3, numFrames: a2, playing: true, timeDisplayed: 0, lastChangeTime: 0 }), "function" == typeof t5 && t5(r5), n3();
                }
              }, function(e6) {
                "function" == typeof p ? (p(e6), y2._decrementPreload()) : console.error(e6);
              }) : ((t4 = new Image()).onload = function() {
                m2.width = m2.canvas.width = t4.width, m2.height = m2.canvas.height = t4.height, m2.drawingContext.drawImage(t4, 0, 0), m2.modified = true, "function" == typeof h && h(m2), y2._decrementPreload();
              }, t4.onerror = function(e6) {
                C.default._friendlyFileLoadError(0, t4.src), "function" == typeof p ? (p(e6), y2._decrementPreload()) : console.error(e6);
              }, 0 !== o3.indexOf("data:image/") && (t4.crossOrigin = "Anonymous"), t4.src = o3), m2.modified = true;
            }).catch(function(e5) {
              C.default._friendlyFileLoadError(0, o3), "function" == typeof p ? (p(e5), y2._decrementPreload()) : console.error(e5);
            }), m2;
          }, C.default.prototype.saveGif = function() {
            a2 = regeneratorRuntime.mark(function e4(t4, r5) {
              var o3, n3, s3, i3, a3, l2, u, c, d, f, h, p, m2, y2, g2, v2, b, j2, _, x, w, S, E, M, T, k, O = arguments;
              return regeneratorRuntime.wrap(function(e5) {
                for (; ; )
                  switch (e5.prev = e5.next) {
                    case 0:
                      if (o3 = 2 < O.length && void 0 !== O[2] ? O[2] : { delay: 0, units: "seconds", silent: false, notificationDuration: 0, notificationID: "progressBar" }, "string" != typeof t4)
                        throw TypeError("fileName parameter must be a string");
                      e5.next = 3;
                      break;
                    case 3:
                      if ("number" != typeof r5)
                        throw TypeError("Duration parameter must be a number");
                      e5.next = 5;
                      break;
                    case 5:
                      if (n3 = o3 && o3.delay || 0, s3 = o3 && o3.units || "seconds", i3 = o3 && o3.silent || false, a3 = o3 && o3.notificationDuration || 0, l2 = o3 && o3.notificationID || "progressBar", "number" != typeof n3)
                        throw TypeError("Delay parameter must be a number");
                      e5.next = 12;
                      break;
                    case 12:
                      if ("seconds" !== s3 && "frames" !== s3)
                        throw TypeError('Units parameter must be either "frames" or "seconds"');
                      e5.next = 14;
                      break;
                    case 14:
                      if ("boolean" != typeof i3)
                        throw TypeError("Silent parameter must be a boolean");
                      e5.next = 16;
                      break;
                    case 16:
                      if ("number" != typeof a3)
                        throw TypeError("Notification duration parameter must be a number");
                      e5.next = 18;
                      break;
                    case 18:
                      if ("string" != typeof l2)
                        throw TypeError("Notification ID parameter must be a string");
                      e5.next = 20;
                      break;
                    case 20:
                      return this._recording = true, f = this._targetFrameRate, u = (u = 1 / (f = f !== 1 / 0 && void 0 !== f && 0 !== f ? f : 60) * 1e3) < 20 ? 20 : u, d = (c = "seconds" === s3 ? r5 * f : r5) + (f = "seconds" === s3 ? n3 * f : n3), f = f, this.frameCount = f, h = this._pixelDensity, this.pixelDensity(1), p = [], null !== document.getElementById(l2) && document.getElementById(l2).remove(), i3 || ((m2 = this.createP("")).id(l2), m2.style("font-size", "16px"), m2.style("font-family", "Montserrat"), m2.style("background-color", "#ffffffa0"), m2.style("padding", "8px"), m2.style("border-radius", "10px"), m2.position(0, 0)), this._renderer instanceof C.default.RendererGL && (g2 = this.drawingContext, y2 = new Uint8Array(g2.drawingBufferWidth * g2.drawingBufferHeight * 4)), this.noLoop(), e5.next = 39, Promise.resolve();
                    case 39:
                      if (f < d)
                        return this.redraw(), M = void 0, M = this._renderer instanceof C.default.RendererGL ? (y2 = new Uint8Array(g2.drawingBufferWidth * g2.drawingBufferHeight * 4), g2.readPixels(0, 0, g2.drawingBufferWidth, g2.drawingBufferHeight, g2.RGBA, g2.UNSIGNED_BYTE, y2), function(e6) {
                          for (var t5 = parseInt(height / 2), r6 = 4 * width, o4 = new Uint8Array(4 * width), n4 = 0; n4 < t5; ++n4) {
                            var s4 = n4 * r6, i4 = (height - n4 - 1) * r6;
                            o4.set(e6.subarray(s4, s4 + r6)), e6.copyWithin(s4, i4, i4 + r6), e6.set(o4, i4);
                          }
                          return e6;
                        }(y2)) : this.drawingContext.getImageData(0, 0, this.width, this.height).data, p.push(M), f++, i3 || m2.html("Saved frame <b>" + p.length.toString() + "</b> out of " + c.toString()), e5.next = 48, new Promise(function(e6) {
                          return setTimeout(e6, 0);
                        });
                      e5.next = 50;
                      break;
                    case 48:
                      e5.next = 39;
                      break;
                    case 50:
                      i3 || m2.html("Frames processed, generating color palette..."), this.loop(), this.pixelDensity(h), v2 = (0, A.GIFEncoder)(), b = function(e6) {
                        for (var t5 = new Uint8Array(e6.length * e6[0].length), r6 = 0; r6 < e6.length; r6++)
                          t5.set(e6[r6], r6 * e6[0].length);
                        var o4 = (0, A.quantize)(t5, 256, { format: "rgba4444", oneBitAlpha: true });
                        256 === o4.length ? o4[o4.length - 1] = [255 * Math.random(), 255 * Math.random(), 255 * Math.random(), 0] : o4.push([255 * Math.random(), 255 * Math.random(), 255 * Math.random(), 0]);
                        return o4;
                      }(p), j2 = {}, _ = function(e6) {
                        for (var t5 = e6.length / 4, r6 = new Uint8Array(t5), o4 = 0; o4 < t5; o4++) {
                          var n4 = e6[4 * o4] << 24 | e6[4 * o4 + 1] << 16 | e6[4 * o4 + 2] << 8 | e6[4 * o4 + 3];
                          void 0 === j2[n4] && (j2[n4] = (0, A.nearestColorIndex)(b, e6.slice(4 * o4, 4 * (o4 + 1)))), r6[o4] = j2[n4];
                        }
                        return r6;
                      }, x = b.length - 1, w = [], S = 0;
                    case 60:
                      if (!(S < p.length)) {
                        e5.next = 71;
                        break;
                      }
                      if (E = _(p[S]), M = E.slice(), 0 === S)
                        v2.writeFrame(E, this.width, this.height, { palette: b, delay: u, dispose: 1 });
                      else {
                        for (T = 0; T < E.length; T++)
                          E[T] === w[T] && (E[T] = x);
                        v2.writeFrame(E, this.width, this.height, { delay: u, transparent: true, transparentIndex: x, dispose: 1 });
                      }
                      return w = M, i3 || m2.html("Rendered frame <b>" + S.toString() + "</b> out of " + c.toString()), e5.next = 68, new Promise(function(e6) {
                        return setTimeout(e6, 0);
                      });
                    case 68:
                      S++, e5.next = 60;
                      break;
                    case 71:
                      v2.finish(), k = v2.bytesView(), k = new Blob([k], { type: "image/gif" }), p = [], this._recording = false, this.loop(), i3 || (m2.html("Done. Downloading your gif!\u{1F338}"), 0 < a3 && setTimeout(function() {
                        return m2.remove();
                      }, 1e3 * a3)), C.default.prototype.downloadFile(k, t4, "gif");
                    case 80:
                    case "end":
                      return e5.stop();
                  }
              }, e4, this);
            });
            var a2, r4 = function() {
              var e4 = this, i3 = arguments;
              return new Promise(function(t4, r5) {
                var o3 = a2.apply(e4, i3);
                function n3(e5) {
                  l(o3, t4, r5, n3, s3, "next", e5);
                }
                function s3(e5) {
                  l(o3, t4, r5, n3, s3, "throw", e5);
                }
                n3(void 0);
              });
            };
            return function(e4, t4) {
              return r4.apply(this, arguments);
            };
          }(), C.default.prototype.image = function(e4, t4, r4, o3, n3, s3, i3, a2, l2, u, c, d) {
            C.default._validateParameters("image", arguments);
            var f = e4.width, h = e4.height, p = (d = d || j.CENTER, c = c || j.CENTER, e4.elt && e4.elt.videoWidth && !e4.canvas && (f = e4.elt.videoWidth, h = e4.elt.videoHeight), o3 || f), n3 = n3 || h, s3 = s3 || 0, i3 = i3 || 0, a2 = v(a2 || f, f), f = v(l2 || h, h), l2 = 1;
            e4.elt && !e4.canvas && e4.elt.style.width && (l2 = e4.elt.videoWidth && !o3 ? e4.elt.videoWidth : e4.elt.width, l2 /= parseInt(e4.elt.style.width, 10)), s3 *= l2, i3 *= l2, f *= l2, a2 *= l2;
            h = y(u, c, d, (h = m.default.modeAdjust(t4, r4, p, n3, this._renderer._imageMode)).x, h.y, h.w, h.h, s3, i3, a2, f);
            this._renderer.image(e4, h.sx, h.sy, h.sw, h.sh, h.dx, h.dy, h.dw, h.dh);
          }, C.default.prototype.tint = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            C.default._validateParameters("tint", t4);
            var o3 = this.color.apply(this, t4);
            this._renderer._tint = o3.levels;
          }, C.default.prototype.noTint = function() {
            this._renderer._tint = null;
          }, C.default.prototype._getTintedImageCanvas = C.default.Renderer2D.prototype._getTintedImageCanvas, C.default.prototype.imageMode = function(e4) {
            C.default._validateParameters("imageMode", arguments), e4 !== j.CORNER && e4 !== j.CORNERS && e4 !== j.CENTER || (this._renderer._imageMode = e4);
          };
          e3 = C.default;
          r3.default = e3;
        }, { "../core/constants": 262, "../core/friendly_errors/fes_core": 264, "../core/friendly_errors/file_errors": 265, "../core/friendly_errors/validate_params": 268, "../core/helpers": 269, "../core/main": 273, "core-js/modules/es.array.copy-within": 152, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.promise": 181, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint8-array": 232, "core-js/modules/es.typed-array.uint8-clamped-array": 233, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236, gifenc: 243, omggif: 246, "regenerator-runtime/runtime": 250 }], 297: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var s3 = o2(e3("../core/main")), n2 = o2(e3("./filters"));
          function o2(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function i2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          s3.default.Image = function() {
            function r4(e5, t5) {
              if (!(this instanceof r4))
                throw new TypeError("Cannot call a class as a function");
              this.width = e5, this.height = t5, this.canvas = document.createElement("canvas"), this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), (this._pixelsState = this)._pixelDensity = 1, this.gifProperties = null, this._modified = false, this.pixels = [];
            }
            var e4, t4, o3;
            return e4 = r4, (t4 = [{ key: "_animateGif", value: function(e5) {
              var t5, r5 = this.gifProperties, e5 = e5._lastRealFrameTime;
              0 === r5.lastChangeTime && (r5.lastChangeTime = e5), r5.playing && (r5.timeDisplayed = e5 - r5.lastChangeTime, t5 = r5.frames[r5.displayIndex].delay, r5.timeDisplayed >= t5 && (t5 = Math.floor(r5.timeDisplayed / t5), r5.timeDisplayed = 0, r5.lastChangeTime = e5, r5.displayIndex += t5, r5.loopCount = Math.floor(r5.displayIndex / r5.numFrames), null !== r5.loopLimit && r5.loopCount >= r5.loopLimit ? r5.playing = false : (e5 = r5.displayIndex % r5.numFrames, this.drawingContext.putImageData(r5.frames[e5].image, 0, 0), r5.displayIndex = e5, this.setModified(true))));
            } }, { key: "_setProperty", value: function(e5, t5) {
              this[e5] = t5, this.setModified(true);
            } }, { key: "loadPixels", value: function() {
              s3.default.Renderer2D.prototype.loadPixels.call(this), this.setModified(true);
            } }, { key: "updatePixels", value: function(e5, t5, r5, o4) {
              s3.default.Renderer2D.prototype.updatePixels.call(this, e5, t5, r5, o4), this.setModified(true);
            } }, { key: "get", value: function(e5, t5, r5, o4) {
              return s3.default._validateParameters("p5.Image.get", arguments), s3.default.Renderer2D.prototype.get.apply(this, arguments);
            } }, { key: "_getPixel", value: function() {
              for (var e5 = arguments.length, t5 = new Array(e5), r5 = 0; r5 < e5; r5++)
                t5[r5] = arguments[r5];
              return s3.default.Renderer2D.prototype._getPixel.apply(this, t5);
            } }, { key: "set", value: function(e5, t5, r5) {
              s3.default.Renderer2D.prototype.set.call(this, e5, t5, r5), this.setModified(true);
            } }, { key: "resize", value: function(e5, t5) {
              0 === e5 && 0 === t5 ? (e5 = this.canvas.width, t5 = this.canvas.height) : 0 === e5 ? e5 = this.canvas.width * t5 / this.canvas.height : 0 === t5 && (t5 = this.canvas.height * e5 / this.canvas.width), e5 = Math.floor(e5), t5 = Math.floor(t5);
              var r5 = document.createElement("canvas");
              if (r5.width = e5, r5.height = t5, this.gifProperties)
                for (var o4 = this.gifProperties, n3 = 0; n3 < o4.numFrames; n3++) {
                  for (var s4 = this.drawingContext.createImageData(e5, t5), i3 = (d = d = c = u = l = void 0, o4.frames[n3].image), a = s4, l = 0, u = 0; u < a.height; u++)
                    for (var c = 0; c < a.width; c++) {
                      var d = Math.floor(c * i3.width / a.width), d = 4 * (Math.floor(u * i3.height / a.height) * i3.width + d);
                      a.data[l++] = i3.data[d++], a.data[l++] = i3.data[d++], a.data[l++] = i3.data[d++], a.data[l++] = i3.data[+d];
                    }
                  o4.frames[n3].image = s4;
                }
              r5.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, r5.width, r5.height), this.canvas.width = this.width = e5, this.canvas.height = this.height = t5, this.drawingContext.drawImage(r5, 0, 0, e5, t5, 0, 0, e5, t5), 0 < this.pixels.length && this.loadPixels(), this.setModified(true);
            } }, { key: "copy", value: function() {
              for (var e5 = arguments.length, t5 = new Array(e5), r5 = 0; r5 < e5; r5++)
                t5[r5] = arguments[r5];
              s3.default.prototype.copy.apply(this, t5);
            } }, { key: "mask", value: function(e5) {
              var t5 = this.drawingContext.globalCompositeOperation, r5 = 1, o4 = [e5 = void 0 === e5 ? this : e5, 0, 0, (r5 = e5 instanceof s3.default.Renderer ? e5._pInst._pixelDensity : r5) * e5.width, r5 * e5.height, 0, 0, this.width, this.height];
              if (this.drawingContext.globalCompositeOperation = "destination-in", this.gifProperties) {
                for (var n3 = 0; n3 < this.gifProperties.frames.length; n3++)
                  this.drawingContext.putImageData(this.gifProperties.frames[n3].image, 0, 0), this.copy.apply(this, o4), this.gifProperties.frames[n3].image = this.drawingContext.getImageData(0, 0, this.width, this.height);
                this.drawingContext.putImageData(this.gifProperties.frames[this.gifProperties.displayIndex].image, 0, 0);
              } else
                this.copy.apply(this, o4);
              this.drawingContext.globalCompositeOperation = t5, this.setModified(true);
            } }, { key: "filter", value: function(e5, t5) {
              n2.default.apply(this.canvas, n2.default[e5], t5), this.setModified(true);
            } }, { key: "blend", value: function() {
              for (var e5 = arguments.length, t5 = new Array(e5), r5 = 0; r5 < e5; r5++)
                t5[r5] = arguments[r5];
              s3.default._validateParameters("p5.Image.blend", arguments), s3.default.prototype.blend.apply(this, t5), this.setModified(true);
            } }, { key: "setModified", value: function(e5) {
              this._modified = e5;
            } }, { key: "isModified", value: function() {
              return this._modified;
            } }, { key: "save", value: function(e5, t5) {
              this.gifProperties ? s3.default.prototype.encodeAndDownloadGif(this, e5) : s3.default.prototype.saveCanvas(this.canvas, e5, t5);
            } }, { key: "reset", value: function() {
              var e5;
              this.gifProperties && ((e5 = this.gifProperties).playing = true, e5.timeSinceStart = 0, e5.timeDisplayed = 0, e5.lastChangeTime = 0, e5.loopCount = 0, e5.displayIndex = 0, this.drawingContext.putImageData(e5.frames[0].image, 0, 0));
            } }, { key: "getCurrentFrame", value: function() {
              var e5;
              if (this.gifProperties)
                return (e5 = this.gifProperties).displayIndex % e5.numFrames;
            } }, { key: "setFrame", value: function(e5) {
              var t5;
              this.gifProperties && (e5 < (t5 = this.gifProperties).numFrames && 0 <= e5 ? (t5.timeDisplayed = 0, t5.lastChangeTime = 0, t5.displayIndex = e5, this.drawingContext.putImageData(t5.frames[e5].image, 0, 0)) : console.log("Cannot set GIF to a frame number that is higher than total number of frames or below zero."));
            } }, { key: "numFrames", value: function() {
              if (this.gifProperties)
                return this.gifProperties.numFrames;
            } }, { key: "play", value: function() {
              this.gifProperties && (this.gifProperties.playing = true);
            } }, { key: "pause", value: function() {
              this.gifProperties && (this.gifProperties.playing = false);
            } }, { key: "delay", value: function(e5, t5) {
              if (this.gifProperties) {
                var r5 = this.gifProperties;
                if (t5 < r5.numFrames && 0 <= t5)
                  r5.frames[t5].delay = e5;
                else {
                  var o4 = true, t5 = false, n3 = void 0;
                  try {
                    for (var s4, i3 = r5.frames[Symbol.iterator](); !(o4 = (s4 = i3.next()).done); o4 = true)
                      s4.value.delay = e5;
                  } catch (e6) {
                    t5 = true, n3 = e6;
                  } finally {
                    try {
                      o4 || null == i3.return || i3.return();
                    } finally {
                      if (t5)
                        throw n3;
                    }
                  }
                }
              }
            } }]) && i2(e4.prototype, t4), o3 && i2(e4, o3), r4;
          }();
          e3 = s3.default.Image;
          r3.default = e3;
        }, { "../core/main": 273, "./filters": 294, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 298: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.filter"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var h = n2(e3("../core/main")), o2 = n2(e3("./filters"));
          function n2(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          e3("../color/p5.Color"), h.default.prototype.pixels = [], h.default.prototype.blend = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            h.default._validateParameters("blend", r4), this._renderer ? (e4 = this._renderer).blend.apply(e4, r4) : h.default.Renderer2D.prototype.blend.apply(this, r4);
          }, h.default.prototype.copy = function() {
            for (var e4, t4, r4, o3, n3, s3, i2, a, l, u = arguments.length, c = new Array(u), d = 0; d < u; d++)
              c[d] = arguments[d];
            if (h.default._validateParameters("copy", c), 9 === c.length)
              e4 = c[0], t4 = c[1], r4 = c[2], o3 = c[3], n3 = c[4], s3 = c[5], i2 = c[6], a = c[7], l = c[8];
            else {
              if (8 !== c.length)
                throw new Error("Signature not supported");
              e4 = this, t4 = c[0], r4 = c[1], o3 = c[2], n3 = c[3], s3 = c[4], i2 = c[5], a = c[6], l = c[7];
            }
            h.default.prototype._copyHelper(this, e4, t4, r4, o3, n3, s3, i2, a, l);
          }, h.default.prototype._copyHelper = function(e4, t4, r4, o3, n3, s3, i2, a, l, u) {
            t4.loadPixels();
            var c = t4.canvas.width / t4.width, d = 0, f = 0;
            t4._renderer && t4._renderer.isP3D && (d = t4.width / 2, f = t4.height / 2), e4._renderer && e4._renderer.isP3D ? h.default.RendererGL.prototype.image.call(e4._renderer, t4, r4 + d, o3 + f, n3, s3, i2, a, l, u) : e4.drawingContext.drawImage(t4.canvas, c * (r4 + d), c * (o3 + f), c * n3, c * s3, i2, a, l, u);
          }, h.default.prototype.filter = function(e4, t4) {
            h.default._validateParameters("filter", arguments), void 0 !== this.canvas ? o2.default.apply(this.canvas, o2.default[e4], t4) : o2.default.apply(this.elt, o2.default[e4], t4);
          }, h.default.prototype.get = function(e4, t4, r4, o3) {
            var n3;
            return h.default._validateParameters("get", arguments), (n3 = this._renderer).get.apply(n3, arguments);
          }, h.default.prototype.loadPixels = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            h.default._validateParameters("loadPixels", t4), this._renderer.loadPixels();
          }, h.default.prototype.set = function(e4, t4, r4) {
            this._renderer.set(e4, t4, r4);
          }, h.default.prototype.updatePixels = function(e4, t4, r4, o3) {
            h.default._validateParameters("updatePixels", arguments), 0 !== this.pixels.length && this._renderer.updatePixels(e4, t4, r4, o3);
          };
          e3 = h.default;
          r3.default = e3;
        }, { "../color/p5.Color": 260, "../core/main": 273, "./filters": 294, "core-js/modules/es.array.filter": 155 }], 299: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.last-index-of"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.object.from-entries"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/web.url"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.last-index-of"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.object.from-entries"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.promise"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/web.url"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var v = s3(e3("../core/main")), m = (e3("whatwg-fetch"), e3("es6-promise/auto"), s3(e3("fetch-jsonp"))), n2 = s3(e3("file-saver"));
          function s3(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function y(e4) {
            return (y = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function g(e4) {
            return e4.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
          }
          function i2(e4, t4) {
            t4 && true !== t4 && "true" !== t4 || (t4 = "");
            var r4 = "";
            return (e4 = e4 || "untitled") && e4.includes(".") && (r4 = e4.split(".").pop()), t4 && r4 !== t4 && (r4 = t4, e4 = "".concat(e4, ".").concat(r4)), [e4, r4];
          }
          e3("../core/friendly_errors/validate_params"), e3("../core/friendly_errors/file_errors"), e3("../core/friendly_errors/fes_core"), v.default.prototype.loadJSON = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            v.default._validateParameters("loadJSON", t4);
            for (var o3, n3, s4, i3 = t4[0], a = {}, l = "json", u = 1; u < t4.length; u++) {
              var c = t4[u];
              "string" == typeof c ? "jsonp" !== c && "json" !== c || (l = c) : "function" == typeof c ? o3 ? n3 = c : o3 = c : "object" === y(c) && (c.hasOwnProperty("jsonpCallback") || c.hasOwnProperty("jsonpCallbackFunction")) && (l = "jsonp", s4 = c);
            }
            var d = this;
            return this.httpDo(i3, "GET", s4, l, function(e5) {
              for (var t5 in e5)
                a[t5] = e5[t5];
              void 0 !== o3 && o3(e5), d._decrementPreload();
            }, function(e5) {
              if (v.default._friendlyFileLoadError(5, i3), !n3)
                throw e5;
              n3(e5);
            }), a;
          }, v.default.prototype.loadStrings = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            v.default._validateParameters("loadStrings", t4);
            for (var n3, o3, s4 = [], i3 = 1; i3 < t4.length; i3++) {
              var a = t4[i3];
              "function" == typeof a && (void 0 === n3 ? n3 = a : void 0 === o3 && (o3 = a));
            }
            var l = this;
            return v.default.prototype.httpDo.call(this, t4[0], "GET", "text", function(e5) {
              for (var t5 = e5.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/), r5 = 0, o4 = t5.length; r5 < o4; r5 += 32768)
                Array.prototype.push.apply(s4, t5.slice(r5, Math.min(r5 + 32768, o4)));
              void 0 !== n3 && n3(s4), l._decrementPreload();
            }, function(e5) {
              if (v.default._friendlyFileLoadError(3, e5), !o3)
                throw e5;
              o3(e5);
            }), s4;
          }, v.default.prototype.loadTable = function(t4) {
            var h, r4, p, e4 = [], m2 = false, o3 = t4.substring(t4.lastIndexOf(".") + 1, t4.length);
            "csv" === o3 ? p = "," : "ssv" === o3 ? p = ";" : "tsv" === o3 && (p = "	");
            for (var n3 = 1; n3 < arguments.length; n3++)
              "function" == typeof arguments[n3] ? void 0 === h ? h = arguments[n3] : void 0 === r4 && (r4 = arguments[n3]) : "string" == typeof arguments[n3] && (e4.push(arguments[n3]), "header" === arguments[n3] && (m2 = true), "csv" === arguments[n3] ? p = "," : "ssv" === arguments[n3] ? p = ";" : "tsv" === arguments[n3] && (p = "	"));
            var y2 = new v.default.Table(), g2 = this;
            return this.httpDo(t4, "GET", "table", function(e5) {
              for (var t5, r5, o4 = {}, n4 = 0, s4 = [], i3 = 0, a = null, l = function() {
                o4.currentState = n4, o4.token = "";
              }, u = function() {
                a.push(o4.token), l();
              }, c = function() {
                o4.currentState = 4, s4.push(a), a = null;
              }; ; ) {
                if (null == (t5 = e5[i3++])) {
                  if (o4.escaped)
                    throw new Error("Unclosed quote in file.");
                  if (a) {
                    u(), c();
                    break;
                  }
                }
                if (null === a && (o4.escaped = false, a = [], l()), o4.currentState === n4) {
                  if ('"' === t5) {
                    o4.escaped = true, o4.currentState = 1;
                    continue;
                  }
                  o4.currentState = 1;
                }
                if (1 === o4.currentState && o4.escaped)
                  if ('"' === t5)
                    '"' === e5[i3] ? (o4.token += '"', i3++) : (o4.escaped = false, o4.currentState = 2);
                  else {
                    if ("\r" === t5)
                      continue;
                    o4.token += t5;
                  }
                else
                  "\r" === t5 ? ("\n" === e5[i3] && i3++, u(), c()) : "\n" === t5 ? (u(), c()) : t5 === p ? u() : 1 === o4.currentState && (o4.token += t5);
              }
              if (m2)
                y2.columns = s4.shift();
              else
                for (var d = 0; d < s4[0].length; d++)
                  y2.columns[d] = "null";
              for (var f = 0; f < s4.length; f++)
                (1 !== s4[f].length || "undefined" !== s4[f][0] && "" !== s4[f][0]) && ((r5 = new v.default.TableRow()).arr = s4[f], r5.obj = function(r6, e6) {
                  if (void 0 === (e6 = e6 || []))
                    for (var t6 = 0; t6 < r6.length; t6++)
                      e6[t6.toString()] = t6;
                  return Object.fromEntries(e6.map(function(e7, t7) {
                    return [e7, r6[t7]];
                  }));
                }(s4[f], y2.columns), y2.addRow(r5));
              "function" == typeof h && h(y2), g2._decrementPreload();
            }, function(e5) {
              v.default._friendlyFileLoadError(2, t4), r4 ? r4(e5) : console.error(e5);
            }), y2;
          }, v.default.prototype.loadXML = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            for (var o3, n3, s4 = new v.default.XML(), i3 = 1; i3 < t4.length; i3++) {
              var a = t4[i3];
              "function" == typeof a && (void 0 === o3 ? o3 = a : void 0 === n3 && (n3 = a));
            }
            var l = this;
            return this.httpDo(t4[0], "GET", "xml", function(e5) {
              for (var t5 in e5)
                s4[t5] = e5[t5];
              void 0 !== o3 && o3(s4), l._decrementPreload();
            }, function(e5) {
              if (v.default._friendlyFileLoadError(1, e5), !n3)
                throw e5;
              n3(e5);
            }), s4;
          }, v.default.prototype.loadBytes = function(t4, r4, o3) {
            var n3 = {}, s4 = this;
            return this.httpDo(t4, "GET", "arrayBuffer", function(e4) {
              n3.bytes = new Uint8Array(e4), "function" == typeof r4 && r4(n3), s4._decrementPreload();
            }, function(e4) {
              if (v.default._friendlyFileLoadError(6, t4), !o3)
                throw e4;
              o3(e4);
            }), n3;
          }, v.default.prototype.httpGet = function() {
            v.default._validateParameters("httpGet", arguments);
            var e4 = Array.prototype.slice.call(arguments);
            return e4.splice(1, 0, "GET"), v.default.prototype.httpDo.apply(this, e4);
          }, v.default.prototype.httpPost = function() {
            v.default._validateParameters("httpPost", arguments);
            var e4 = Array.prototype.slice.call(arguments);
            return e4.splice(1, 0, "POST"), v.default.prototype.httpDo.apply(this, e4);
          }, v.default.prototype.httpDo = function() {
            for (var r4, e4, t4, o3 = {}, n3 = 0, s4 = "text/plain", i3 = arguments.length - 1; 0 < i3 && "function" == typeof (i3 < 0 || arguments.length <= i3 ? void 0 : arguments[i3]); i3--)
              n3++;
            var a = arguments.length - n3, l = arguments.length <= 0 ? void 0 : arguments[0];
            if (2 == a && "string" == typeof l && "object" === y(arguments.length <= 1 ? void 0 : arguments[1]))
              p = new Request(l, arguments.length <= 1 ? void 0 : arguments[1]), e4 = arguments.length <= 2 ? void 0 : arguments[2], t4 = arguments.length <= 3 ? void 0 : arguments[3];
            else {
              for (var u, c = "GET", d = 1; d < arguments.length; d++) {
                var f = d < 0 || arguments.length <= d ? void 0 : arguments[d];
                if ("string" == typeof f)
                  "GET" === f || "POST" === f || "PUT" === f || "DELETE" === f ? c = f : "json" === f || "jsonp" === f || "binary" === f || "arrayBuffer" === f || "xml" === f || "text" === f || "table" === f ? r4 = f : u = f;
                else if ("number" == typeof f)
                  u = f.toString();
                else if ("object" === y(f))
                  if (f.hasOwnProperty("jsonpCallback") || f.hasOwnProperty("jsonpCallbackFunction"))
                    for (var h in f)
                      o3[h] = f[h];
                  else
                    s4 = f instanceof v.default.XML ? (u = f.serialize(), "application/xml") : (u = JSON.stringify(f), "application/json");
                else
                  "function" == typeof f && (e4 ? t4 = f : e4 = f);
              }
              var a = "GET" === c ? new Headers() : new Headers({ "Content-Type": s4 }), p = new Request(l, { method: c, mode: "cors", body: u, headers: a });
            }
            return (a = (a = "jsonp" === (r4 = r4 || (l.includes("json") ? "json" : l.includes("xml") ? "xml" : "text")) ? (0, m.default)(l, o3) : fetch(p)).then(function(e5) {
              if (!e5.ok)
                throw (t5 = new Error(e5.body)).status = e5.status, t5.ok = false, t5;
              var t5 = 0;
              switch ((t5 = "jsonp" !== r4 ? e5.headers.get("content-length") : t5) && 64e6 < t5 && v.default._friendlyFileLoadError(7, l), r4) {
                case "json":
                case "jsonp":
                  return e5.json();
                case "binary":
                  return e5.blob();
                case "arrayBuffer":
                  return e5.arrayBuffer();
                case "xml":
                  return e5.text().then(function(e6) {
                    e6 = new DOMParser().parseFromString(e6, "text/xml");
                    return new v.default.XML(e6.documentElement);
                  });
                default:
                  return e5.text();
              }
            })).then(e4 || function() {
            }), a.catch(t4 || console.error), a;
          }, window.URL = window.URL || window.webkitURL, v.default.prototype._pWriters = [], v.default.prototype.createWriter = function(e4, t4) {
            var r4, o3;
            for (o3 in v.default.prototype._pWriters)
              if (v.default.prototype._pWriters[o3].name === e4)
                return r4 = new v.default.PrintWriter(e4 + this.millis(), t4), v.default.prototype._pWriters.push(r4), r4;
            return r4 = new v.default.PrintWriter(e4, t4), v.default.prototype._pWriters.push(r4), r4;
          }, v.default.PrintWriter = function(r4, o3) {
            var n3 = this;
            this.name = r4, this.content = "", this.write = function(e4) {
              this.content += e4;
            }, this.print = function(e4) {
              this.content += "".concat(e4, "\n");
            }, this.clear = function() {
              this.content = "";
            }, this.close = function() {
              var e4, t4 = [];
              for (e4 in t4.push(this.content), v.default.prototype.writeFile(t4, r4, o3), v.default.prototype._pWriters)
                v.default.prototype._pWriters[e4].name === this.name && v.default.prototype._pWriters.splice(e4, 1);
              n3.clear(), n3 = {};
            };
          }, v.default.prototype.save = function(e4, t4, r4) {
            var o3 = arguments, n3 = (this._curElement || this).elt;
            if (0 === o3.length)
              v.default.prototype.saveCanvas(n3);
            else if (o3[0] instanceof v.default.Renderer || o3[0] instanceof v.default.Graphics)
              v.default.prototype.saveCanvas(o3[0].elt, o3[1], o3[2]);
            else if (1 === o3.length && "string" == typeof o3[0])
              v.default.prototype.saveCanvas(n3, o3[0]);
            else
              switch (i2(o3[1], o3[2])[1]) {
                case "json":
                  return void v.default.prototype.saveJSON(o3[0], o3[1], o3[2]);
                case "txt":
                  return void v.default.prototype.saveStrings(o3[0], o3[1], o3[2]);
                default:
                  o3[0] instanceof Array ? v.default.prototype.saveStrings(o3[0], o3[1], o3[2]) : o3[0] instanceof v.default.Table ? v.default.prototype.saveTable(o3[0], o3[1], o3[2]) : o3[0] instanceof v.default.Image ? v.default.prototype.saveCanvas(o3[0].canvas, o3[1]) : o3[0] instanceof v.default.SoundFile && v.default.prototype.saveSound(o3[0], o3[1], o3[2], o3[3]);
              }
          }, v.default.prototype.saveJSON = function(e4, t4, r4) {
            v.default._validateParameters("saveJSON", arguments), r4 = r4 ? JSON.stringify(e4) : JSON.stringify(e4, void 0, 2), this.saveStrings(r4.split("\n"), t4, "json");
          }, v.default.prototype.saveJSONObject = v.default.prototype.saveJSON, v.default.prototype.saveJSONArray = v.default.prototype.saveJSON, v.default.prototype.saveStrings = function(e4, t4, r4, o3) {
            v.default._validateParameters("saveStrings", arguments);
            for (var n3 = this.createWriter(t4, r4 || "txt"), s4 = 0; s4 < e4.length; s4++)
              o3 ? n3.write(e4[s4] + "\r\n") : n3.write(e4[s4] + "\n");
            n3.close(), n3.clear();
          }, v.default.prototype.saveTable = function(e4, t4, r4) {
            v.default._validateParameters("saveTable", arguments), o3 = void 0 === r4 ? t4.substring(t4.lastIndexOf(".") + 1, t4.length) : r4;
            var o3, n3 = this.createWriter(t4, o3), s4 = e4.columns, i3 = "tsv" === o3 ? "	" : ",";
            if ("html" !== o3) {
              if ("0" !== s4[0]) {
                for (var a = 0; a < s4.length; a++)
                  a < s4.length - 1 ? n3.write(s4[a] + i3) : n3.write(s4[a]);
                n3.write("\n");
              }
              for (var l = 0; l < e4.rows.length; l++) {
                for (var u = void 0, u = 0; u < e4.rows[l].arr.length; u++)
                  u < e4.rows[l].arr.length - 1 ? "csv" === o3 && String(e4.rows[l].arr[u]).includes(",") ? n3.write('"' + e4.rows[l].arr[u] + '"' + i3) : n3.write(e4.rows[l].arr[u] + i3) : "csv" === o3 && String(e4.rows[l].arr[u]).includes(",") ? n3.write('"' + e4.rows[l].arr[u] + '"') : n3.write(e4.rows[l].arr[u]);
                n3.write("\n");
              }
            } else {
              n3.print("<html>"), n3.print("<head>");
              if (n3.print('  <meta http-equiv="content-type" content="text/html;charset=utf-8" />'), n3.print("</head>"), n3.print("<body>"), n3.print("  <table>"), "0" !== s4[0]) {
                n3.print("    <tr>");
                for (var c = 0; c < s4.length; c++) {
                  var d = g(s4[c]);
                  n3.print("      <td>".concat(d)), n3.print("      </td>");
                }
                n3.print("    </tr>");
              }
              for (var f = 0; f < e4.rows.length; f++) {
                n3.print("    <tr>");
                for (var h = 0; h < e4.columns.length; h++) {
                  var p = g(e4.rows[f].getString(h));
                  n3.print("      <td>".concat(p)), n3.print("      </td>");
                }
                n3.print("    </tr>");
              }
              n3.print("  </table>"), n3.print("</body>"), n3.print("</html>");
            }
            n3.close(), n3.clear();
          }, v.default.prototype.writeFile = function(e4, t4, r4) {
            var o3 = "application/octet-stream", e4 = (v.default.prototype._isSafari() && (o3 = "text/plain"), new Blob(e4, { type: o3 }));
            v.default.prototype.downloadFile(e4, t4, r4);
          }, v.default.prototype.downloadFile = function(e4, t4, r4) {
            var o3, t4 = i2(t4, r4), r4 = t4[0];
            e4 instanceof Blob ? n2.default.saveAs(e4, r4) : ((o3 = document.createElement("a")).href = e4, o3.download = r4, o3.onclick = function(e5) {
              document.body.removeChild(e5.target), e5.stopPropagation();
            }, o3.style.display = "none", document.body.appendChild(o3), v.default.prototype._isSafari() && (e4 = (e4 = 'Hello, Safari user! To download this file...\n1. Go to File --> Save As.\n2. Choose "Page Source" as the Format.\n') + '3. Name it with this extension: ."'.concat(t4[1], '"'), alert(e4)), o3.click());
          }, v.default.prototype._checkFileExtension = i2, v.default.prototype._isSafari = function() {
            return 0 < Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor");
          };
          e3 = v.default;
          r3.default = e3;
        }, { "../core/friendly_errors/fes_core": 264, "../core/friendly_errors/file_errors": 265, "../core/friendly_errors/validate_params": 268, "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.last-index-of": 162, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.splice": 166, "core-js/modules/es.function.name": 167, "core-js/modules/es.object.from-entries": 175, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.promise": 181, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.replace": 194, "core-js/modules/es.string.split": 196, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint8-array": 232, "core-js/modules/web.dom-collections.iterator": 236, "core-js/modules/web.url": 238, "es6-promise/auto": 239, "fetch-jsonp": 241, "file-saver": 242, "whatwg-fetch": 251 }], 300: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.replace"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function s3(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          n2.default.Table = function() {
            function t4(e5) {
              if (!(this instanceof t4))
                throw new TypeError("Cannot call a class as a function");
              this.columns = [], this.rows = [];
            }
            var e4, r4, o2;
            return e4 = t4, (r4 = [{ key: "addRow", value: function(e5) {
              e5 = e5 || new n2.default.TableRow();
              if (void 0 === e5.arr || void 0 === e5.obj)
                throw new Error("invalid TableRow: ".concat(e5));
              return (e5.table = this).rows.push(e5), e5;
            } }, { key: "removeRow", value: function(e5) {
              this.rows[e5].table = null;
              e5 = this.rows.splice(e5 + 1, this.rows.length);
              this.rows.pop(), this.rows = this.rows.concat(e5);
            } }, { key: "getRow", value: function(e5) {
              return this.rows[e5];
            } }, { key: "getRows", value: function() {
              return this.rows;
            } }, { key: "findRow", value: function(e5, t5) {
              if ("string" == typeof t5) {
                for (var r5 = 0; r5 < this.rows.length; r5++)
                  if (this.rows[r5].obj[t5] === e5)
                    return this.rows[r5];
              } else
                for (var o3 = 0; o3 < this.rows.length; o3++)
                  if (this.rows[o3].arr[t5] === e5)
                    return this.rows[o3];
              return null;
            } }, { key: "findRows", value: function(e5, t5) {
              var r5 = [];
              if ("string" == typeof t5)
                for (var o3 = 0; o3 < this.rows.length; o3++)
                  this.rows[o3].obj[t5] === e5 && r5.push(this.rows[o3]);
              else
                for (var n3 = 0; n3 < this.rows.length; n3++)
                  this.rows[n3].arr[t5] === e5 && r5.push(this.rows[n3]);
              return r5;
            } }, { key: "matchRow", value: function(e5, t5) {
              if ("number" == typeof t5) {
                for (var r5 = 0; r5 < this.rows.length; r5++)
                  if (this.rows[r5].arr[t5].match(e5))
                    return this.rows[r5];
              } else
                for (var o3 = 0; o3 < this.rows.length; o3++)
                  if (this.rows[o3].obj[t5].match(e5))
                    return this.rows[o3];
              return null;
            } }, { key: "matchRows", value: function(e5, t5) {
              var r5 = [];
              if ("number" == typeof t5)
                for (var o3 = 0; o3 < this.rows.length; o3++)
                  this.rows[o3].arr[t5].match(e5) && r5.push(this.rows[o3]);
              else
                for (var n3 = 0; n3 < this.rows.length; n3++)
                  this.rows[n3].obj[t5].match(e5) && r5.push(this.rows[n3]);
              return r5;
            } }, { key: "getColumn", value: function(e5) {
              var t5 = [];
              if ("string" == typeof e5)
                for (var r5 = 0; r5 < this.rows.length; r5++)
                  t5.push(this.rows[r5].obj[e5]);
              else
                for (var o3 = 0; o3 < this.rows.length; o3++)
                  t5.push(this.rows[o3].arr[e5]);
              return t5;
            } }, { key: "clearRows", value: function() {
              delete this.rows, this.rows = [];
            } }, { key: "addColumn", value: function(e5) {
              this.columns.push(e5 || null);
            } }, { key: "getColumnCount", value: function() {
              return this.columns.length;
            } }, { key: "getRowCount", value: function() {
              return this.rows.length;
            } }, { key: "removeTokens", value: function(e5, t5) {
              for (var r5 = [], o3 = 0; o3 < e5.length; o3++)
                r5.push(e5.charAt(o3).replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&"));
              var n3 = new RegExp(r5.join("|"), "g");
              if (void 0 === t5)
                for (var s4 = 0; s4 < this.columns.length; s4++)
                  for (var i2 = 0; i2 < this.rows.length; i2++) {
                    var a = (a = this.rows[i2].arr[s4]).replace(n3, "");
                    this.rows[i2].arr[s4] = a, this.rows[i2].obj[this.columns[s4]] = a;
                  }
              else if ("string" == typeof t5)
                for (var l = 0; l < this.rows.length; l++) {
                  var u = (u = this.rows[l].obj[t5]).replace(n3, ""), c = (this.rows[l].obj[t5] = u, this.columns.indexOf(t5));
                  this.rows[l].arr[c] = u;
                }
              else
                for (var d = 0; d < this.rows.length; d++) {
                  var f = (f = this.rows[d].arr[t5]).replace(n3, "");
                  this.rows[d].arr[t5] = f, this.rows[d].obj[this.columns[t5]] = f;
                }
            } }, { key: "trim", value: function(e5) {
              var t5 = new RegExp(" ", "g");
              if (void 0 === e5)
                for (var r5 = 0; r5 < this.columns.length; r5++)
                  for (var o3 = 0; o3 < this.rows.length; o3++) {
                    var n3 = (n3 = this.rows[o3].arr[r5]).replace(t5, "");
                    this.rows[o3].arr[r5] = n3, this.rows[o3].obj[this.columns[r5]] = n3;
                  }
              else if ("string" == typeof e5)
                for (var s4 = 0; s4 < this.rows.length; s4++) {
                  var i2 = (i2 = this.rows[s4].obj[e5]).replace(t5, ""), a = (this.rows[s4].obj[e5] = i2, this.columns.indexOf(e5));
                  this.rows[s4].arr[a] = i2;
                }
              else
                for (var l = 0; l < this.rows.length; l++) {
                  var u = (u = this.rows[l].arr[e5]).replace(t5, "");
                  this.rows[l].arr[e5] = u, this.rows[l].obj[this.columns[e5]] = u;
                }
            } }, { key: "removeColumn", value: function(e5) {
              "string" == typeof e5 ? r5 = this.columns.indexOf(t5 = e5) : t5 = this.columns[r5 = e5];
              var t5, r5, e5 = this.columns.splice(r5 + 1, this.columns.length);
              this.columns.pop(), this.columns = this.columns.concat(e5);
              for (var o3 = 0; o3 < this.rows.length; o3++) {
                var n3 = this.rows[o3].arr, s4 = n3.splice(r5 + 1, n3.length);
                n3.pop(), this.rows[o3].arr = n3.concat(s4), delete this.rows[o3].obj[t5];
              }
            } }, { key: "set", value: function(e5, t5, r5) {
              this.rows[e5].set(t5, r5);
            } }, { key: "setNum", value: function(e5, t5, r5) {
              this.rows[e5].setNum(t5, r5);
            } }, { key: "setString", value: function(e5, t5, r5) {
              this.rows[e5].setString(t5, r5);
            } }, { key: "get", value: function(e5, t5) {
              return this.rows[e5].get(t5);
            } }, { key: "getNum", value: function(e5, t5) {
              return this.rows[e5].getNum(t5);
            } }, { key: "getString", value: function(e5, t5) {
              return this.rows[e5].getString(t5);
            } }, { key: "getObject", value: function(e5) {
              for (var t5, r5 = {}, o3 = 0; o3 < this.rows.length; o3++)
                if (t5 = this.rows[o3].obj, "string" == typeof e5) {
                  if (!(0 <= this.columns.indexOf(e5)))
                    throw new Error('This table has no column named "'.concat(e5, '"'));
                  r5[t5[e5]] = t5;
                } else
                  r5[o3] = this.rows[o3].obj;
              return r5;
            } }, { key: "getArray", value: function() {
              for (var e5 = [], t5 = 0; t5 < this.rows.length; t5++)
                e5.push(this.rows[t5].arr);
              return e5;
            } }]) && s3(e4.prototype, r4), o2 && s3(e4, o2), t4;
          }();
          e3 = n2.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.splice": 166, "core-js/modules/es.regexp.constructor": 184, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.match": 191, "core-js/modules/es.string.replace": 194 }], 301: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.from-entries"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.split"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.from-entries"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.split"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          e3.default.TableRow = function() {
            function o2(e5, t5) {
              if (!(this instanceof o2))
                throw new TypeError("Cannot call a class as a function");
              var r5 = [];
              e5 && (r5 = e5.split(t5 = t5 || ",")), this.arr = r5, this.obj = Object.fromEntries(r5.entries()), this.table = null;
            }
            var e4, t4, r4;
            return e4 = o2, (t4 = [{ key: "set", value: function(e5, t5) {
              if ("string" == typeof e5) {
                var r5 = this.table.columns.indexOf(e5);
                if (!(0 <= r5))
                  throw new Error('This table has no column named "'.concat(e5, '"'));
                this.obj[e5] = t5, this.arr[r5] = t5;
              } else {
                if (!(e5 < this.table.columns.length))
                  throw new Error("Column #".concat(e5, " is out of the range of this table"));
                this.arr[e5] = t5;
                r5 = this.table.columns[e5];
                this.obj[r5] = t5;
              }
            } }, { key: "setNum", value: function(e5, t5) {
              t5 = parseFloat(t5);
              this.set(e5, t5);
            } }, { key: "setString", value: function(e5, t5) {
              t5 = t5.toString();
              this.set(e5, t5);
            } }, { key: "get", value: function(e5) {
              return ("string" == typeof e5 ? this.obj : this.arr)[e5];
            } }, { key: "getNum", value: function(e5) {
              var t5 = "string" == typeof e5 ? parseFloat(this.obj[e5]) : parseFloat(this.arr[e5]);
              if ("NaN" === t5.toString())
                throw "Error: ".concat(this.obj[e5], " is NaN (Not a Number)");
              return t5;
            } }, { key: "getString", value: function(e5) {
              return ("string" == typeof e5 ? this.obj : this.arr)[e5].toString();
            } }]) && n2(e4.prototype, t4), r4 && n2(e4, r4), o2;
          }();
          e3 = e3.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.from-entries": 175, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.split": 196, "core-js/modules/web.dom-collections.iterator": 236 }], 302: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var a = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          function s3(e4) {
            for (var t4 = [], r4 = 0; r4 < e4.length; r4++)
              t4.push(new a.default.XML(e4[r4]));
            return t4;
          }
          a.default.XML = function() {
            function t4(e5) {
              if (!(this instanceof t4))
                throw new TypeError("Cannot call a class as a function");
              e5 ? this.DOM = e5 : (e5 = document.implementation.createDocument(null, "doc"), this.DOM = e5.createElement("root"));
            }
            var e4, r4, o2;
            return e4 = t4, (r4 = [{ key: "getParent", value: function() {
              return new a.default.XML(this.DOM.parentElement);
            } }, { key: "getName", value: function() {
              return this.DOM.tagName;
            } }, { key: "setName", value: function(e5) {
              var t5 = this.DOM.innerHTML, r5 = this.DOM.attributes, o3 = document.implementation.createDocument(null, "default").createElement(e5);
              o3.innerHTML = t5;
              for (var n3 = 0; n3 < r5.length; n3++)
                o3.setAttribute(r5[n3].nodeName, r5.nodeValue);
              this.DOM = o3;
            } }, { key: "hasChildren", value: function() {
              return 0 < this.DOM.children.length;
            } }, { key: "listChildren", value: function() {
              for (var e5 = [], t5 = 0; t5 < this.DOM.childNodes.length; t5++)
                e5.push(this.DOM.childNodes[t5].nodeName);
              return e5;
            } }, { key: "getChildren", value: function(e5) {
              return s3(e5 ? this.DOM.getElementsByTagName(e5) : this.DOM.children);
            } }, { key: "getChild", value: function(e5) {
              if ("string" != typeof e5)
                return new a.default.XML(this.DOM.children[e5]);
              var t5 = true, r5 = false, o3 = void 0;
              try {
                for (var n3, s4 = this.DOM.children[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true) {
                  var i2 = n3.value;
                  if (i2.tagName === e5)
                    return new a.default.XML(i2);
                }
              } catch (e6) {
                r5 = true, o3 = e6;
              } finally {
                try {
                  t5 || null == s4.return || s4.return();
                } finally {
                  if (r5)
                    throw o3;
                }
              }
            } }, { key: "addChild", value: function(e5) {
              e5 instanceof a.default.XML && this.DOM.appendChild(e5.DOM);
            } }, { key: "removeChild", value: function(e5) {
              var t5 = -1;
              if ("string" == typeof e5) {
                for (var r5 = 0; r5 < this.DOM.children.length; r5++)
                  if (this.DOM.children[r5].tagName === e5) {
                    t5 = r5;
                    break;
                  }
              } else
                t5 = e5;
              -1 !== t5 && this.DOM.removeChild(this.DOM.children[t5]);
            } }, { key: "getAttributeCount", value: function() {
              return this.DOM.attributes.length;
            } }, { key: "listAttributes", value: function() {
              var e5 = [], t5 = true, r5 = false, o3 = void 0;
              try {
                for (var n3, s4 = this.DOM.attributes[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true) {
                  var i2 = n3.value;
                  e5.push(i2.nodeName);
                }
              } catch (e6) {
                r5 = true, o3 = e6;
              } finally {
                try {
                  t5 || null == s4.return || s4.return();
                } finally {
                  if (r5)
                    throw o3;
                }
              }
              return e5;
            } }, { key: "hasAttribute", value: function(e5) {
              var t5 = {}, r5 = true, o3 = false, n3 = void 0;
              try {
                for (var s4, i2 = this.DOM.attributes[Symbol.iterator](); !(r5 = (s4 = i2.next()).done); r5 = true) {
                  var a2 = s4.value;
                  t5[a2.nodeName] = a2.nodeValue;
                }
              } catch (e6) {
                o3 = true, n3 = e6;
              } finally {
                try {
                  r5 || null == i2.return || i2.return();
                } finally {
                  if (o3)
                    throw n3;
                }
              }
              return !!t5[e5];
            } }, { key: "getNum", value: function(e5, t5) {
              var r5 = {}, o3 = true, n3 = false, s4 = void 0;
              try {
                for (var i2, a2 = this.DOM.attributes[Symbol.iterator](); !(o3 = (i2 = a2.next()).done); o3 = true) {
                  var l = i2.value;
                  r5[l.nodeName] = l.nodeValue;
                }
              } catch (e6) {
                n3 = true, s4 = e6;
              } finally {
                try {
                  o3 || null == a2.return || a2.return();
                } finally {
                  if (n3)
                    throw s4;
                }
              }
              return Number(r5[e5]) || t5 || 0;
            } }, { key: "getString", value: function(e5, t5) {
              var r5 = {}, o3 = true, n3 = false, s4 = void 0;
              try {
                for (var i2, a2 = this.DOM.attributes[Symbol.iterator](); !(o3 = (i2 = a2.next()).done); o3 = true) {
                  var l = i2.value;
                  r5[l.nodeName] = l.nodeValue;
                }
              } catch (e6) {
                n3 = true, s4 = e6;
              } finally {
                try {
                  o3 || null == a2.return || a2.return();
                } finally {
                  if (n3)
                    throw s4;
                }
              }
              return r5[e5] ? String(r5[e5]) : t5 || null;
            } }, { key: "setAttribute", value: function(e5, t5) {
              this.DOM.setAttribute(e5, t5);
            } }, { key: "getContent", value: function(e5) {
              var t5 = this.DOM.textContent;
              return (t5 = t5.replace(/\s\s+/g, ",")) || e5 || null;
            } }, { key: "setContent", value: function(e5) {
              this.DOM.children.length || (this.DOM.textContent = e5);
            } }, { key: "serialize", value: function() {
              return new XMLSerializer().serializeToString(this.DOM);
            } }]) && n2(e4.prototype, r4), o2 && n2(e4, o2), t4;
          }();
          e3 = a.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.number.constructor": 171, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.replace": 194, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 303: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var i2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function o2() {
            if ("function" == typeof Math.hypot)
              return Math.hypot.apply(null, arguments);
            for (var e4 = arguments.length, t4 = [], r4 = 0, o3 = 0; o3 < e4; o3++) {
              var n2 = arguments[o3];
              if ((n2 = +n2) === 1 / 0 || n2 === -1 / 0)
                return 1 / 0;
              r4 < (n2 = Math.abs(n2)) && (r4 = n2), t4[o3] = n2;
            }
            0 === r4 && (r4 = 1);
            for (var s3 = 0, i3 = 0, a = 0; a < e4; a++)
              var l = t4[a] / r4, l = l * l - i3, u = s3 + l, i3 = u - s3 - l, s3 = u;
            return Math.sqrt(s3) * r4;
          }
          i2.default.prototype.abs = Math.abs, i2.default.prototype.ceil = Math.ceil, i2.default.prototype.constrain = function(e4, t4, r4) {
            return i2.default._validateParameters("constrain", arguments), Math.max(Math.min(e4, r4), t4);
          }, i2.default.prototype.dist = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            return i2.default._validateParameters("dist", t4), 4 === t4.length ? o2(t4[2] - t4[0], t4[3] - t4[1]) : 6 === t4.length ? o2(t4[3] - t4[0], t4[4] - t4[1], t4[5] - t4[2]) : void 0;
          }, i2.default.prototype.exp = Math.exp, i2.default.prototype.floor = Math.floor, i2.default.prototype.lerp = function(e4, t4, r4) {
            return i2.default._validateParameters("lerp", arguments), r4 * (t4 - e4) + e4;
          }, i2.default.prototype.log = Math.log, i2.default.prototype.mag = function(e4, t4) {
            return i2.default._validateParameters("mag", arguments), o2(e4, t4);
          }, i2.default.prototype.map = function(e4, t4, r4, o3, n2, s3) {
            i2.default._validateParameters("map", arguments);
            e4 = (e4 - t4) / (r4 - t4) * (n2 - o3) + o3;
            return s3 ? o3 < n2 ? this.constrain(e4, o3, n2) : this.constrain(e4, n2, o3) : e4;
          }, i2.default.prototype.max = function() {
            for (var e4 = function(e5) {
              var t5 = -1 / 0, r5 = true, o4 = false, n2 = void 0;
              try {
                for (var s3, i3 = e5[Symbol.iterator](); !(r5 = (s3 = i3.next()).done); r5 = true)
                  var a = s3.value, t5 = t5 < a ? a : t5;
              } catch (e6) {
                o4 = true, n2 = e6;
              } finally {
                try {
                  r5 || null == i3.return || i3.return();
                } finally {
                  if (o4)
                    throw n2;
                }
              }
              return t5;
            }, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return r4[0] instanceof Array ? e4(r4[0]) : e4(r4);
          }, i2.default.prototype.min = function() {
            for (var e4 = function(e5) {
              var t5 = 1 / 0, r5 = true, o4 = false, n2 = void 0;
              try {
                for (var s3, i3 = e5[Symbol.iterator](); !(r5 = (s3 = i3.next()).done); r5 = true)
                  var a = s3.value, t5 = a < t5 ? a : t5;
              } catch (e6) {
                o4 = true, n2 = e6;
              } finally {
                try {
                  r5 || null == i3.return || i3.return();
                } finally {
                  if (o4)
                    throw n2;
                }
              }
              return t5;
            }, t4 = arguments.length, r4 = new Array(t4), o3 = 0; o3 < t4; o3++)
              r4[o3] = arguments[o3];
            return r4[0] instanceof Array ? e4(r4[0]) : e4(r4);
          }, i2.default.prototype.norm = function(e4, t4, r4) {
            return i2.default._validateParameters("norm", arguments), this.map(e4, t4, r4, 0, 1);
          }, i2.default.prototype.pow = Math.pow, i2.default.prototype.round = function(e4, t4) {
            return t4 ? (t4 = Math.pow(10, t4), Math.round(e4 * t4) / t4) : Math.round(e4);
          }, i2.default.prototype.sq = function(e4) {
            return e4 * e4;
          }, i2.default.prototype.sqrt = Math.sqrt, i2.default.prototype.fract = function(e4) {
            i2.default._validateParameters("fract", arguments);
            var t4, r4 = 0, e4 = Number(e4);
            return isNaN(e4) || Math.abs(e4) === 1 / 0 ? e4 : (e4 < 0 && (e4 = -e4, r4 = 1), String(e4).includes(".") && !String(e4).includes("e") ? (t4 = String(e4), t4 = Number("0" + t4.slice(t4.indexOf("."))), Math.abs(r4 - t4)) : e4 < 1 ? Math.abs(r4 - e4) : 0);
          };
          e3 = i2.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.math.hypot": 169, "core-js/modules/es.number.constructor": 171, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 304: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var o2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4, t4, r4) {
            return (n2 = function() {
              if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                if ("function" == typeof Proxy)
                  return 1;
                try {
                  return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                  })), 1;
                } catch (e5) {
                }
              }
            }() ? Reflect.construct : function(e5, t5, r5) {
              var o3 = [null];
              o3.push.apply(o3, t5);
              t5 = new (Function.bind.apply(e5, o3))();
              return r5 && s3(t5, r5.prototype), t5;
            }).apply(null, arguments);
          }
          function s3(e4, t4) {
            return (s3 = Object.setPrototypeOf || function(e5, t5) {
              return e5.__proto__ = t5, e5;
            })(e4, t4);
          }
          o2.default.prototype.createVector = function(e4, t4, r4) {
            return this instanceof o2.default ? n2(o2.default.Vector, [this._fromRadians.bind(this), this._toRadians.bind(this)].concat(Array.prototype.slice.call(arguments))) : new o2.default.Vector(e4, t4, r4);
          };
          e3 = o2.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.regexp.to-string": 186 }], 305: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function b(e4) {
            return 0.5 * (1 - Math.cos(e4 * Math.PI));
          }
          var j, _ = 4095, x = 4, w = 0.5, e3 = (e3.default.prototype.noise = function(e4) {
            var t4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r4 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0;
            if (null == j) {
              j = new Array(4096);
              for (var o2 = 0; o2 < 4096; o2++)
                j[o2] = Math.random();
            }
            e4 < 0 && (e4 = -e4), t4 < 0 && (t4 = -t4), r4 < 0 && (r4 = -r4);
            for (var n2, s3, i2 = Math.floor(e4), a = Math.floor(t4), l = Math.floor(r4), u = e4 - i2, c = t4 - a, d = r4 - l, f = 0, h = 0.5, p = 0; p < x; p++) {
              var m = i2 + (a << 4) + (l << 8), y = b(u), g = b(c), v = j[m & _];
              v += y * (j[m + 1 & _] - v), n2 = j[m + 16 & _], v += g * ((n2 += y * (j[m + 16 + 1 & _] - n2)) - v), n2 = j[(m += 256) & _], n2 += y * (j[m + 1 & _] - n2), s3 = j[m + 16 & _], n2 += g * ((s3 += y * (j[m + 16 + 1 & _] - s3)) - n2), f += (v += b(d) * (n2 - v)) * h, h *= w, i2 <<= 1, a <<= 1, l <<= 1, 1 <= (u *= 2) && (i2++, u--), 1 <= (c *= 2) && (a++, c--), 1 <= (d *= 2) && (l++, d--);
            }
            return f;
          }, e3.default.prototype.noiseDetail = function(e4, t4) {
            0 < e4 && (x = e4), 0 < t4 && (w = t4);
          }, e3.default.prototype.noiseSeed = function(e4) {
            o2 = 4294967296;
            var t4, r4, o2, n2 = { setSeed: function(e5) {
              r4 = t4 = (null == e5 ? Math.random() * o2 : e5) >>> 0;
            }, getSeed: function() {
              return t4;
            }, rand: function() {
              return (r4 = (1664525 * r4 + 1013904223) % o2) / o2;
            } };
            n2.setSeed(e4), j = new Array(4096);
            for (var s3 = 0; s3 < 4096; s3++)
              j[s3] = n2.rand();
          }, e3.default);
          r3.default = e3;
        }, { "../core/main": 273 }], 306: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.every"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.some"), e3("core-js/modules/es.math.sign"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.number.is-finite"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.sub"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.every"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.some"), e3("core-js/modules/es.math.sign"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.number.is-finite"), e3("core-js/modules/es.string.sub"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var a = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, s3 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = l();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function l() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), l = function() {
              return e4;
            }, e4);
          }
          function u(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function c(e4, t4) {
            return 0 !== e4 && (this.x = this.x % e4), 0 !== t4 && (this.y = this.y % t4), this;
          }
          function d(e4, t4, r4) {
            return 0 !== e4 && (this.x = this.x % e4), 0 !== t4 && (this.y = this.y % t4), 0 !== r4 && (this.z = this.z % r4), this;
          }
          a.default.Vector = function() {
            function n3() {
              var e5 = this, t5 = n3;
              if (!(e5 instanceof t5))
                throw new TypeError("Cannot call a class as a function");
              var r5, o3, e5 = "function" == typeof (arguments.length <= 0 ? void 0 : arguments[0]) ? (this.isPInst = true, this._fromRadians = arguments.length <= 0 ? void 0 : arguments[0], this._toRadians = arguments.length <= 1 ? void 0 : arguments[1], r5 = (arguments.length <= 2 ? void 0 : arguments[2]) || 0, o3 = (arguments.length <= 3 ? void 0 : arguments[3]) || 0, (arguments.length <= 4 ? void 0 : arguments[4]) || 0) : (r5 = (arguments.length <= 0 ? void 0 : arguments[0]) || 0, o3 = (arguments.length <= 1 ? void 0 : arguments[1]) || 0, (arguments.length <= 2 ? void 0 : arguments[2]) || 0);
              this.x = r5, this.y = o3, this.z = e5;
            }
            var e4, t4, r4;
            return e4 = n3, r4 = [{ key: "fromAngle", value: function(e5, t5) {
              return new a.default.Vector((t5 = void 0 === t5 ? 1 : t5) * Math.cos(e5), t5 * Math.sin(e5), 0);
            } }, { key: "fromAngles", value: function(e5, t5, r5) {
              void 0 === r5 && (r5 = 1);
              var o3 = Math.cos(t5), t5 = Math.sin(t5), n4 = Math.cos(e5), e5 = Math.sin(e5);
              return new a.default.Vector(r5 * e5 * t5, -r5 * n4, r5 * e5 * o3);
            } }, { key: "random2D", value: function() {
              return this.fromAngle(Math.random() * s3.TWO_PI);
            } }, { key: "random3D", value: function() {
              var e5 = Math.random() * s3.TWO_PI, t5 = 2 * Math.random() - 1, r5 = Math.sqrt(1 - t5 * t5), o3 = r5 * Math.cos(e5), r5 = r5 * Math.sin(e5);
              return new a.default.Vector(o3, r5, t5);
            } }, { key: "copy", value: function(e5) {
              return e5.copy(e5);
            } }, { key: "add", value: function(e5, t5, r5) {
              return r5 ? r5.set(e5) : (r5 = e5.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.add")), r5.add(t5), r5;
            } }, { key: "rem", value: function(e5, t5) {
              if (e5 instanceof a.default.Vector && t5 instanceof a.default.Vector)
                return (e5 = e5.copy()).rem(t5), e5;
            } }, { key: "sub", value: function(e5, t5, r5) {
              return r5 ? r5.set(e5) : (r5 = e5.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.sub")), r5.sub(t5), r5;
            } }, { key: "mult", value: function(e5, t5, r5) {
              return r5 ? r5.set(e5) : (r5 = e5.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.mult")), r5.mult(t5), r5;
            } }, { key: "rotate", value: function(e5, t5, r5) {
              return 2 === arguments.length ? r5 = e5.copy() : (r5 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.rotate"), r5.set(e5)), r5.rotate(t5), r5;
            } }, { key: "div", value: function(e5, t5, r5) {
              return r5 ? r5.set(e5) : (r5 = e5.copy(), 3 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.div")), r5.div(t5), r5;
            } }, { key: "dot", value: function(e5, t5) {
              return e5.dot(t5);
            } }, { key: "cross", value: function(e5, t5) {
              return e5.cross(t5);
            } }, { key: "dist", value: function(e5, t5) {
              return e5.dist(t5);
            } }, { key: "lerp", value: function(e5, t5, r5, o3) {
              return o3 ? o3.set(e5) : (o3 = e5.copy(), 4 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.lerp")), o3.lerp(t5, r5), o3;
            } }, { key: "slerp", value: function(e5, t5, r5, o3) {
              return o3 ? o3.set(e5) : (o3 = e5.copy(), 4 === arguments.length && a.default._friendlyError("The target parameter is undefined, it should be of type p5.Vector", "p5.Vector.slerp")), o3.slerp(t5, r5), o3;
            } }, { key: "mag", value: function(e5) {
              return e5.mag();
            } }, { key: "magSq", value: function(e5) {
              return e5.magSq();
            } }, { key: "normalize", value: function(e5, t5) {
              return arguments.length < 2 ? t5 = e5.copy() : (t5 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.normalize"), t5.set(e5)), t5.normalize();
            } }, { key: "limit", value: function(e5, t5, r5) {
              return arguments.length < 3 ? r5 = e5.copy() : (r5 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.limit"), r5.set(e5)), r5.limit(t5);
            } }, { key: "setMag", value: function(e5, t5, r5) {
              return arguments.length < 3 ? r5 = e5.copy() : (r5 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.setMag"), r5.set(e5)), r5.setMag(t5);
            } }, { key: "heading", value: function(e5) {
              return e5.heading();
            } }, { key: "angleBetween", value: function(e5, t5) {
              return e5.angleBetween(t5);
            } }, { key: "reflect", value: function(e5, t5, r5) {
              return arguments.length < 3 ? r5 = e5.copy() : (r5 instanceof a.default.Vector || a.default._friendlyError("The target parameter should be of type p5.Vector", "p5.Vector.reflect"), r5.set(e5)), r5.reflect(t5);
            } }, { key: "array", value: function(e5) {
              return e5.array();
            } }, { key: "equals", value: function(e5, t5) {
              var r5;
              return e5 instanceof a.default.Vector ? r5 = e5 : e5 instanceof Array ? r5 = new a.default.Vector().set(e5) : a.default._friendlyError("The v1 parameter should be of type Array or p5.Vector", "p5.Vector.equals"), r5.equals(t5);
            } }], (t4 = [{ key: "toString", value: function() {
              return "p5.Vector Object : [".concat(this.x, ", ").concat(this.y, ", ").concat(this.z, "]");
            } }, { key: "set", value: function(e5, t5, r5) {
              return e5 instanceof a.default.Vector ? (this.x = e5.x || 0, this.y = e5.y || 0, this.z = e5.z || 0) : Array.isArray(e5) ? (this.x = e5[0] || 0, this.y = e5[1] || 0, this.z = e5[2] || 0) : (this.x = e5 || 0, this.y = t5 || 0, this.z = r5 || 0), this;
            } }, { key: "copy", value: function() {
              return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, this.x, this.y, this.z) : new a.default.Vector(this.x, this.y, this.z);
            } }, { key: "add", value: function(e5, t5, r5) {
              return e5 instanceof a.default.Vector ? (this.x += e5.x || 0, this.y += e5.y || 0, this.z += e5.z || 0) : Array.isArray(e5) ? (this.x += e5[0] || 0, this.y += e5[1] || 0, this.z += e5[2] || 0) : (this.x += e5 || 0, this.y += t5 || 0, this.z += r5 || 0), this;
            } }, { key: "rem", value: function(e5, t5, r5) {
              var o3;
              if (e5 instanceof a.default.Vector) {
                if ([e5.x, e5.y, e5.z].every(Number.isFinite))
                  return n4 = parseFloat(e5.x), s4 = parseFloat(e5.y), o3 = parseFloat(e5.z), d.call(this, n4, s4, o3);
              } else if (Array.isArray(e5)) {
                if (e5.every(function(e6) {
                  return Number.isFinite(e6);
                }))
                  return 2 === e5.length ? c.call(this, e5[0], e5[1]) : 3 === e5.length ? d.call(this, e5[0], e5[1], e5[2]) : void 0;
              } else if (1 === arguments.length) {
                if (Number.isFinite(e5) && 0 !== e5)
                  return this.x = this.x % e5, this.y = this.y % e5, this.z = this.z % e5, this;
              } else if (2 === arguments.length) {
                var n4 = Array.prototype.slice.call(arguments);
                if (n4.every(function(e6) {
                  return Number.isFinite(e6);
                }) && 2 === n4.length)
                  return c.call(this, n4[0], n4[1]);
              } else if (3 === arguments.length) {
                var s4 = Array.prototype.slice.call(arguments);
                if (s4.every(function(e6) {
                  return Number.isFinite(e6);
                }) && 3 === s4.length)
                  return d.call(this, s4[0], s4[1], s4[2]);
              }
            } }, { key: "sub", value: function(e5, t5, r5) {
              return e5 instanceof a.default.Vector ? (this.x -= e5.x || 0, this.y -= e5.y || 0, this.z -= e5.z || 0) : Array.isArray(e5) ? (this.x -= e5[0] || 0, this.y -= e5[1] || 0, this.z -= e5[2] || 0) : (this.x -= e5 || 0, this.y -= t5 || 0, this.z -= r5 || 0), this;
            } }, { key: "mult", value: function(e5, t5, r5) {
              var o3;
              return e5 instanceof a.default.Vector ? Number.isFinite(e5.x) && Number.isFinite(e5.y) && Number.isFinite(e5.z) && "number" == typeof e5.x && "number" == typeof e5.y && "number" == typeof e5.z ? (this.x *= e5.x, this.y *= e5.y, this.z *= e5.z) : console.warn("p5.Vector.prototype.mult:", "x contains components that are either undefined or not finite numbers") : Array.isArray(e5) ? e5.every(function(e6) {
                return Number.isFinite(e6);
              }) && e5.every(function(e6) {
                return "number" == typeof e6;
              }) ? 1 === e5.length ? (this.x *= e5[0], this.y *= e5[0], this.z *= e5[0]) : 2 === e5.length ? (this.x *= e5[0], this.y *= e5[1]) : 3 === e5.length && (this.x *= e5[0], this.y *= e5[1], this.z *= e5[2]) : console.warn("p5.Vector.prototype.mult:", "x contains elements that are either undefined or not finite numbers") : (o3 = Array.prototype.slice.call(arguments)).every(function(e6) {
                return Number.isFinite(e6);
              }) && o3.every(function(e6) {
                return "number" == typeof e6;
              }) ? (1 === arguments.length && (this.x *= e5, this.y *= e5, this.z *= e5), 2 === arguments.length && (this.x *= e5, this.y *= t5), 3 === arguments.length && (this.x *= e5, this.y *= t5, this.z *= r5)) : console.warn("p5.Vector.prototype.mult:", "x, y, or z arguments are either undefined or not a finite number"), this;
            } }, { key: "div", value: function(e5, t5, r5) {
              if (e5 instanceof a.default.Vector)
                if (Number.isFinite(e5.x) && Number.isFinite(e5.y) && Number.isFinite(e5.z) && "number" == typeof e5.x && "number" == typeof e5.y && "number" == typeof e5.z) {
                  var o3 = 0 === e5.z && 0 === this.z;
                  if (0 === e5.x || 0 === e5.y || !o3 && 0 === e5.z)
                    return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                  this.x /= e5.x, this.y /= e5.y, o3 || (this.z /= e5.z);
                } else
                  console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
              else if (Array.isArray(e5))
                if (e5.every(function(e6) {
                  return Number.isFinite(e6);
                }) && e5.every(function(e6) {
                  return "number" == typeof e6;
                })) {
                  if (e5.some(function(e6) {
                    return 0 === e6;
                  }))
                    return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                  1 === e5.length ? (this.x /= e5[0], this.y /= e5[0], this.z /= e5[0]) : 2 === e5.length ? (this.x /= e5[0], this.y /= e5[1]) : 3 === e5.length && (this.x /= e5[0], this.y /= e5[1], this.z /= e5[2]);
                } else
                  console.warn("p5.Vector.prototype.div:", "x contains components that are either undefined or not finite numbers");
              else {
                o3 = Array.prototype.slice.call(arguments);
                if (o3.every(function(e6) {
                  return Number.isFinite(e6);
                }) && o3.every(function(e6) {
                  return "number" == typeof e6;
                })) {
                  if (o3.some(function(e6) {
                    return 0 === e6;
                  }))
                    return console.warn("p5.Vector.prototype.div:", "divide by 0"), this;
                  1 === arguments.length && (this.x /= e5, this.y /= e5, this.z /= e5), 2 === arguments.length && (this.x /= e5, this.y /= t5), 3 === arguments.length && (this.x /= e5, this.y /= t5, this.z /= r5);
                } else
                  console.warn("p5.Vector.prototype.div:", "x, y, or z arguments are either undefined or not a finite number");
              }
              return this;
            } }, { key: "mag", value: function() {
              return Math.sqrt(this.magSq());
            } }, { key: "magSq", value: function() {
              var e5 = this.x, t5 = this.y, r5 = this.z;
              return e5 * e5 + t5 * t5 + r5 * r5;
            } }, { key: "dot", value: function(e5, t5, r5) {
              return e5 instanceof a.default.Vector ? this.dot(e5.x, e5.y, e5.z) : this.x * (e5 || 0) + this.y * (t5 || 0) + this.z * (r5 || 0);
            } }, { key: "cross", value: function(e5) {
              var t5 = this.y * e5.z - this.z * e5.y, r5 = this.z * e5.x - this.x * e5.z, e5 = this.x * e5.y - this.y * e5.x;
              return this.isPInst ? new a.default.Vector(this._fromRadians, this._toRadians, t5, r5, e5) : new a.default.Vector(t5, r5, e5);
            } }, { key: "dist", value: function(e5) {
              return e5.copy().sub(this).mag();
            } }, { key: "normalize", value: function() {
              var e5 = this.mag();
              return 0 !== e5 && this.mult(1 / e5), this;
            } }, { key: "limit", value: function(e5) {
              var t5 = this.magSq();
              return e5 * e5 < t5 && this.div(Math.sqrt(t5)).mult(e5), this;
            } }, { key: "setMag", value: function(e5) {
              return this.normalize().mult(e5);
            } }, { key: "heading", value: function() {
              var e5 = Math.atan2(this.y, this.x);
              return this.isPInst ? this._fromRadians(e5) : e5;
            } }, { key: "setHeading", value: function(e5) {
              this.isPInst && (e5 = this._toRadians(e5));
              var t5 = this.mag();
              return this.x = t5 * Math.cos(e5), this.y = t5 * Math.sin(e5), this;
            } }, { key: "rotate", value: function(e5) {
              var e5 = this.heading() + e5, t5 = (this.isPInst && (e5 = this._toRadians(e5)), this.mag());
              return this.x = Math.cos(e5) * t5, this.y = Math.sin(e5) * t5, this;
            } }, { key: "angleBetween", value: function(e5) {
              var t5;
              return 0 == this.magSq() * e5.magSq() ? NaN : (t5 = this.cross(e5), e5 = Math.atan2(t5.mag(), this.dot(e5)) * Math.sign(t5.z || 1), this.isPInst ? this._fromRadians(e5) : e5);
            } }, { key: "lerp", value: function(e5, t5, r5, o3) {
              return e5 instanceof a.default.Vector ? this.lerp(e5.x, e5.y, e5.z, t5) : (this.x += (e5 - this.x) * o3 || 0, this.y += (t5 - this.y) * o3 || 0, this.z += (r5 - this.z) * o3 || 0, this);
            } }, { key: "slerp", value: function(e5, t5) {
              if (0 !== t5) {
                if (1 === t5)
                  return this.set(e5);
                var r5 = this.mag(), o3 = e5.mag();
                if (0 == r5 * o3)
                  this.mult(1 - t5).add(e5.x * t5, e5.y * t5, e5.z * t5);
                else {
                  var n4 = this.cross(e5), s4 = n4.mag(), i3 = Math.atan2(s4, this.dot(e5));
                  if (0 < s4)
                    n4.x /= s4, n4.y /= s4, n4.z /= s4;
                  else {
                    if (i3 < 0.5 * Math.PI)
                      return this.mult(1 - t5).add(e5.x * t5, e5.y * t5, e5.z * t5), this;
                    0 === this.z && 0 === e5.z ? n4.set(0, 0, 1) : 0 !== this.x ? n4.set(this.y, -this.x, 0).normalize() : n4.set(1, 0, 0);
                  }
                  s4 = n4.cross(this), e5 = 1 - t5 + t5 * o3 / r5, n4 = e5 * Math.cos(t5 * i3), o3 = e5 * Math.sin(t5 * i3);
                  this.x = this.x * n4 + s4.x * o3, this.y = this.y * n4 + s4.y * o3, this.z = this.z * n4 + s4.z * o3;
                }
              }
              return this;
            } }, { key: "reflect", value: function(e5) {
              return e5.normalize(), this.sub(e5.mult(2 * this.dot(e5)));
            } }, { key: "array", value: function() {
              return [this.x || 0, this.y || 0, this.z || 0];
            } }, { key: "equals", value: function(e5, t5, r5) {
              var o3, n4, e5 = e5 instanceof a.default.Vector ? (o3 = e5.x || 0, n4 = e5.y || 0, e5.z || 0) : Array.isArray(e5) ? (o3 = e5[0] || 0, n4 = e5[1] || 0, e5[2] || 0) : (o3 = e5 || 0, n4 = t5 || 0, r5 || 0);
              return this.x === o3 && this.y === n4 && this.z === e5;
            } }]) && u(e4.prototype, t4), r4 && u(e4, r4), n3;
          }();
          var n2 = a.default.Vector;
          r3.default = n2;
        }, { "../core/constants": 262, "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.every": 153, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.some": 165, "core-js/modules/es.math.sign": 170, "core-js/modules/es.number.constructor": 171, "core-js/modules/es.number.is-finite": 172, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.sub": 198, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 307: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          var s3 = "_lcg_random_state", o2 = 4294967296, i2 = 0, e3 = (n2.default.prototype._lcg = function(e4) {
            return this[e4] = (1664525 * this[e4] + 1013904223) % o2, this[e4] / o2;
          }, n2.default.prototype._lcgSetSeed = function(e4, t4) {
            this[e4] = (null == t4 ? Math.random() * o2 : t4) >>> 0;
          }, n2.default.prototype.randomSeed = function(e4) {
            this._lcgSetSeed(s3, e4), this._gaussian_previous = false;
          }, n2.default.prototype.random = function(e4, t4) {
            var r4, o3;
            return n2.default._validateParameters("random", arguments), r4 = null != this[s3] ? this._lcg(s3) : Math.random(), void 0 === e4 ? r4 : void 0 === t4 ? e4 instanceof Array ? e4[Math.floor(r4 * e4.length)] : r4 * e4 : (t4 < e4 && (o3 = e4, e4 = t4, t4 = o3), r4 * (t4 - e4) + e4);
          }, n2.default.prototype.randomGaussian = function(e4) {
            var t4, r4, o3, n3, s4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 1;
            if (this._gaussian_previous)
              t4 = i2, this._gaussian_previous = false;
            else {
              for (; 1 <= (n3 = (r4 = this.random(2) - 1) * r4 + (o3 = this.random(2) - 1) * o3); )
                ;
              t4 = r4 * (n3 = Math.sqrt(-2 * Math.log(n3) / n3)), i2 = o3 * n3, this._gaussian_previous = true;
            }
            return t4 * s4 + (e4 || 0);
          }, n2.default);
          r3.default = e3;
        }, { "../core/main": 273 }], 308: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (l = e3("../core/main")) && l.__esModule ? l : { default: l }, s3 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          n2.default.prototype._angleMode = s3.RADIANS, n2.default.prototype.acos = function(e4) {
            return this._fromRadians(Math.acos(e4));
          }, n2.default.prototype.asin = function(e4) {
            return this._fromRadians(Math.asin(e4));
          }, n2.default.prototype.atan = function(e4) {
            return this._fromRadians(Math.atan(e4));
          }, n2.default.prototype.atan2 = function(e4, t4) {
            return this._fromRadians(Math.atan2(e4, t4));
          }, n2.default.prototype.cos = function(e4) {
            return Math.cos(this._toRadians(e4));
          }, n2.default.prototype.sin = function(e4) {
            return Math.sin(this._toRadians(e4));
          }, n2.default.prototype.tan = function(e4) {
            return Math.tan(this._toRadians(e4));
          }, n2.default.prototype.degrees = function(e4) {
            return e4 * s3.RAD_TO_DEG;
          }, n2.default.prototype.radians = function(e4) {
            return e4 * s3.DEG_TO_RAD;
          }, n2.default.prototype.angleMode = function(e4) {
            if (n2.default._validateParameters("angleMode", arguments), void 0 === e4)
              return this._angleMode;
            e4 !== s3.DEGREES && e4 !== s3.RADIANS || (this._angleMode = e4);
          }, n2.default.prototype._toRadians = function(e4) {
            return this._angleMode === s3.DEGREES ? e4 * s3.DEG_TO_RAD : e4;
          }, n2.default.prototype._toDegrees = function(e4) {
            return this._angleMode === s3.RADIANS ? e4 * s3.RAD_TO_DEG : e4;
          }, n2.default.prototype._fromRadians = function(e4) {
            return this._angleMode === s3.DEGREES ? e4 * s3.RAD_TO_DEG : e4;
          };
          var l = n2.default;
          r3.default = l;
        }, { "../core/constants": 262, "../core/main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 309: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          n2.default.prototype.textAlign = function(e4, t4) {
            var r4;
            return n2.default._validateParameters("textAlign", arguments), (r4 = this._renderer).textAlign.apply(r4, arguments);
          }, n2.default.prototype.textLeading = function(e4) {
            var t4;
            return n2.default._validateParameters("textLeading", arguments), (t4 = this._renderer).textLeading.apply(t4, arguments);
          }, n2.default.prototype.textSize = function(e4) {
            var t4;
            return n2.default._validateParameters("textSize", arguments), (t4 = this._renderer).textSize.apply(t4, arguments);
          }, n2.default.prototype.textStyle = function(e4) {
            var t4;
            return n2.default._validateParameters("textStyle", arguments), (t4 = this._renderer).textStyle.apply(t4, arguments);
          }, n2.default.prototype.textWidth = function() {
            for (var e4, t4 = arguments.length, r4 = new Array(t4), o2 = 0; o2 < t4; o2++)
              r4[o2] = arguments[o2];
            return r4[0] += "", n2.default._validateParameters("textWidth", r4), 0 === r4[0].length ? 0 : (e4 = this._renderer).textWidth.apply(e4, r4);
          }, n2.default.prototype.textAscent = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            return n2.default._validateParameters("textAscent", t4), this._renderer.textAscent();
          }, n2.default.prototype.textDescent = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            return n2.default._validateParameters("textDescent", t4), this._renderer.textDescent();
          }, n2.default.prototype._updateTextMetrics = function() {
            return this._renderer._updateTextMetrics();
          }, n2.default.prototype.textWrap = function(e4) {
            if ("WORD" !== e4 && "CHAR" !== e4)
              throw "Error: textWrap accepts only WORD or CHAR";
            return this._renderer.textWrap(e4);
          };
          e3 = n2.default;
          r3.default = e3;
        }, { "../core/main": 273 }], 310: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.last-index-of"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.last-index-of"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.split"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var l = (c = e3("../core/main")) && c.__esModule ? c : { default: c }, n2 = s3(e3("../core/constants")), u = s3(e3("opentype.js"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          function s3(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3, n3 = {}, s4 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4)
              Object.prototype.hasOwnProperty.call(e4, r4) && ((o3 = s4 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (o3.get || o3.set) ? Object.defineProperty(n3, r4, o3) : n3[r4] = e4[r4]);
            return n3.default = e4, t4 && t4.set(e4, n3), n3;
          }
          e3("../core/friendly_errors/validate_params"), e3("../core/friendly_errors/file_errors"), e3("../core/friendly_errors/fes_core"), l.default.prototype.loadFont = function(o3, n3, s4) {
            l.default._validateParameters("loadFont", arguments);
            var i3 = new l.default.Font(this), a2 = this;
            return u.load(o3, function(e4, t4) {
              if (e4)
                return l.default._friendlyFileLoadError(4, o3), void 0 !== s4 ? s4(e4) : void console.error(e4, o3);
              i3.font = t4, void 0 !== n3 && n3(i3), a2._decrementPreload();
              var e4 = o3.split("\\").pop().split("/").pop(), t4 = e4.lastIndexOf("."), r4 = t4 < 1 ? null : e4.slice(t4 + 1);
              ["ttf", "otf", "woff", "woff2"].includes(r4) && (r4 = e4.slice(0, -1 !== t4 ? t4 : 0), (e4 = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: ".concat(r4, ";\nsrc: url(").concat(o3, ");\n}\n"))), document.head.appendChild(e4));
            }), i3;
          }, l.default.prototype.text = function(e4, t4, r4, o3, n3) {
            var s4;
            return l.default._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? (s4 = this._renderer).text.apply(s4, arguments) : this;
          }, l.default.prototype.textFont = function(e4, t4) {
            if (l.default._validateParameters("textFont", arguments), arguments.length) {
              if (e4)
                return this._renderer._setProperty("_textFont", e4), t4 && (this._renderer._setProperty("_textSize", t4), this._renderer._leadingSet || this._renderer._setProperty("_textLeading", t4 * n2._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
              throw new Error("null font passed to textFont");
            }
            return this._renderer._textFont;
          };
          var c = l.default;
          r3.default = c;
        }, { "../core/constants": 262, "../core/friendly_errors/fes_core": 264, "../core/friendly_errors/file_errors": 265, "../core/friendly_errors/validate_params": 268, "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.last-index-of": 162, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.split": 196, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236, "opentype.js": 247 }], 311: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var n2 = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, v = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== p(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = i2();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function i2() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), i2 = function() {
              return e4;
            }, e4);
          }
          function p(e4) {
            return (p = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function s3(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function m(e4, t4) {
            var r4 = e4.length;
            return e4[t4 < 0 ? t4 % r4 + r4 : t4 % r4];
          }
          function y(e4, t4, r4, o3) {
            var n3, s4, i3;
            return o3 ? (void 0 === y.tmpPoint1 && (y.tmpPoint1 = [], y.tmpPoint2 = []), s4 = y.tmpPoint1, i3 = y.tmpPoint2, s4.x = t4.x - e4.x, s4.y = t4.y - e4.y, i3.x = r4.x - t4.x, i3.y = r4.y - t4.y, n3 = s4.x * i3.x + s4.y * i3.y, s4 = Math.sqrt(s4.x * s4.x + s4.y * s4.y), i3 = Math.sqrt(i3.x * i3.x + i3.y * i3.y), Math.acos(n3 / (s4 * i3)) < o3) : 0 == (t4[0] - e4[0]) * (r4[1] - e4[1]) - (r4[0] - e4[0]) * (t4[1] - e4[1]);
          }
          function d(e4, t4, r4, o3, n3, s4, i3, a, l) {
            var u = 1 - l, c = Math.pow(u, 3), d2 = Math.pow(u, 2), f2 = l * l, h2 = f2 * l, p2 = c * e4 + 3 * d2 * l * r4 + 3 * u * l * l * n3 + h2 * i3, c = c * t4 + 3 * d2 * l * o3 + 3 * u * l * l * s4 + h2 * a, d2 = e4 + 2 * l * (r4 - e4) + f2 * (n3 - 2 * r4 + e4), h2 = t4 + 2 * l * (o3 - t4) + f2 * (s4 - 2 * o3 + t4), m2 = r4 + 2 * l * (n3 - r4) + f2 * (i3 - 2 * n3 + r4), f2 = o3 + 2 * l * (s4 - o3) + f2 * (a - 2 * s4 + o3), e4 = u * e4 + l * r4, r4 = u * t4 + l * o3, t4 = u * n3 + l * i3, o3 = u * s4 + l * a, n3 = 90 - 180 * Math.atan2(d2 - m2, h2 - f2) / Math.PI;
            return (m2 < d2 || h2 < f2) && (n3 += 180), { x: p2, y: c, m: { x: d2, y: h2 }, n: { x: m2, y: f2 }, start: { x: e4, y: r4 }, end: { x: t4, y: o3 }, alpha: n3 };
          }
          function f(e4, t4, r4, o3, n3, s4, i3, a, l) {
            return null == l ? h(e4, t4, r4, o3, n3, s4, i3, a) : d(e4, t4, r4, o3, n3, s4, i3, a, function(e5, t5, r5, o4, n4, s5, i4, a2, l2) {
              if (!(l2 < 0 || h(e5, t5, r5, o4, n4, s5, i4, a2) < l2)) {
                var u, c = 0.5, d2 = 1 - c;
                for (u = h(e5, t5, r5, o4, n4, s5, i4, a2, d2); 0.01 < Math.abs(u - l2); )
                  u = h(e5, t5, r5, o4, n4, s5, i4, a2, d2 += (u < l2 ? 1 : -1) * (c /= 2));
                return d2;
              }
            }(e4, t4, r4, o3, n3, s4, i3, a, l));
          }
          function g(e4, t4, r4) {
            for (var o3, n3, s4, i3, a, l = 0, u = 0, c = (e4 = function(e5, t5) {
              function r5(e6, t6, r6) {
                var o5, n5;
                if (!e6)
                  return ["C", t6.x, t6.y, t6.x, t6.y, t6.x, t6.y];
                switch (e6[0] in { T: 1, Q: 1 } || (t6.qx = t6.qy = null), e6[0]) {
                  case "M":
                    t6.X = e6[1], t6.Y = e6[2];
                    break;
                  case "A":
                    e6 = ["C"].concat(M.apply(0, [t6.x, t6.y].concat(e6.slice(1))));
                    break;
                  case "S":
                    n5 = "C" === r6 || "S" === r6 ? (o5 = 2 * t6.x - t6.bx, 2 * t6.y - t6.by) : (o5 = t6.x, t6.y), e6 = ["C", o5, n5].concat(e6.slice(1));
                    break;
                  case "T":
                    "Q" === r6 || "T" === r6 ? (t6.qx = 2 * t6.x - t6.qx, t6.qy = 2 * t6.y - t6.qy) : (t6.qx = t6.x, t6.qy = t6.y), e6 = ["C"].concat(x(t6.x, t6.y, t6.qx, t6.qy, e6[1], e6[2]));
                    break;
                  case "Q":
                    t6.qx = e6[1], t6.qy = e6[2], e6 = ["C"].concat(x(t6.x, t6.y, e6[1], e6[2], e6[3], e6[4]));
                    break;
                  case "L":
                    e6 = ["C"].concat(_(t6.x, t6.y, e6[1], e6[2]));
                    break;
                  case "H":
                    e6 = ["C"].concat(_(t6.x, t6.y, e6[1], t6.y));
                    break;
                  case "V":
                    e6 = ["C"].concat(_(t6.x, t6.y, t6.x, e6[1]));
                    break;
                  case "Z":
                    e6 = ["C"].concat(_(t6.x, t6.y, t6.X, t6.Y));
                }
                return e6;
              }
              function o4(e6, t6) {
                if (7 < e6[t6].length) {
                  e6[t6].shift();
                  for (var r6 = e6[t6]; r6.length; )
                    c2[t6] = "A", a2 && (d2[t6] = "A"), e6.splice(t6++, 0, ["C"].concat(r6.splice(0, 6)));
                  e6.splice(t6, 1), s5 = Math.max(i4.length, a2 && a2.length || 0);
                }
              }
              function n4(e6, t6, r6, o5, n5) {
                e6 && t6 && "M" === e6[n5][0] && "M" !== t6[n5][0] && (t6.splice(n5, 0, ["M", o5.x, o5.y]), r6.bx = 0, r6.by = 0, r6.x = e6[n5][1], r6.y = e6[n5][2], s5 = Math.max(i4.length, a2 && a2.length || 0));
              }
              var s5, i4 = b(e5), a2 = t5 && b(t5), l2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null }, u2 = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null }, c2 = [], d2 = [], f2 = "", h2 = "";
              s5 = Math.max(i4.length, a2 && a2.length || 0);
              for (var p2 = 0; p2 < s5; p2++) {
                "C" !== (f2 = i4[p2] ? i4[p2][0] : f2) && (c2[p2] = f2, p2 && (h2 = c2[p2 - 1])), i4[p2] = r5(i4[p2], l2, h2), "A" !== c2[p2] && "C" === f2 && (c2[p2] = "C"), o4(i4, p2), a2 && ("C" !== (f2 = a2[p2] ? a2[p2][0] : f2) && (d2[p2] = f2, p2 && (h2 = d2[p2 - 1])), a2[p2] = r5(a2[p2], u2, h2), "A" !== d2[p2] && "C" === f2 && (d2[p2] = "C"), o4(a2, p2)), n4(i4, a2, l2, u2, p2), n4(a2, i4, u2, l2, p2);
                var m2 = i4[p2], y2 = a2 && a2[p2], g2 = m2.length, v2 = a2 && y2.length;
                l2.x = m2[g2 - 2], l2.y = m2[g2 - 1], l2.bx = parseFloat(m2[g2 - 4]) || l2.x, l2.by = parseFloat(m2[g2 - 3]) || l2.y, u2.bx = a2 && (parseFloat(y2[v2 - 4]) || u2.x), u2.by = a2 && (parseFloat(y2[v2 - 3]) || u2.y), u2.x = a2 && y2[v2 - 2], u2.y = a2 && y2[v2 - 1];
              }
              return a2 ? [i4, a2] : i4;
            }(e4)).length; u < c; u++) {
              if ("M" === (s4 = e4[u])[0])
                o3 = +s4[1], n3 = +s4[2];
              else {
                if (t4 < l + (i3 = f(o3, n3, s4[1], s4[2], s4[3], s4[4], s4[5], s4[6])) && !r4)
                  return { x: (a = f(o3, n3, s4[1], s4[2], s4[3], s4[4], s4[5], s4[6], t4 - l)).x, y: a.y, alpha: a.alpha };
                l += i3, o3 = +s4[5], n3 = +s4[6];
              }
              s4.shift();
            }
            return a = (a = r4 ? l : d(o3, n3, s4[0], s4[1], s4[2], s4[3], s4[4], s4[5], 1)).alpha ? { x: a.x, y: a.y, alpha: a.alpha } : a;
          }
          function b(e4) {
            var t4 = [], r4 = 0, o3 = 0, n3 = 0, s4 = 0, i3 = 0;
            if (e4) {
              "M" === e4[0][0] && (n3 = r4 = +e4[0][1], s4 = o3 = +e4[0][2], i3++, t4[0] = ["M", r4, o3]);
              for (var a, l, u = 3 === e4.length && "M" === e4[0][0] && "R" === e4[1][0].toUpperCase() && "Z" === e4[2][0].toUpperCase(), c = i3, d2 = e4.length; c < d2; c++) {
                if (t4.push(a = []), (l = e4[c])[0] !== String.prototype.toUpperCase.call(l[0]))
                  switch (a[0] = String.prototype.toUpperCase.call(l[0]), a[0]) {
                    case "A":
                      a[1] = l[1], a[2] = l[2], a[3] = l[3], a[4] = l[4], a[5] = l[5], a[6] = +(l[6] + r4), a[7] = +(l[7] + o3);
                      break;
                    case "V":
                      a[1] = +l[1] + o3;
                      break;
                    case "H":
                      a[1] = +l[1] + r4;
                      break;
                    case "R":
                      for (var f2, h2 = 2, p2 = (f2 = [r4, o3].concat(l.slice(1))).length; h2 < p2; h2++)
                        f2[h2] = +f2[h2] + r4, f2[++h2] = +f2[h2] + o3;
                      t4.pop(), t4 = t4.concat(j(f2, u));
                      break;
                    case "M":
                      n3 = +l[1] + r4, s4 = +l[2] + o3;
                      break;
                    default:
                      for (var m2 = 1, y2 = l.length; m2 < y2; m2++)
                        a[m2] = +l[m2] + (m2 % 2 ? r4 : o3);
                  }
                else if ("R" === l[0])
                  f2 = [r4, o3].concat(l.slice(1)), t4.pop(), t4 = t4.concat(j(f2, u)), a = ["R"].concat(l.slice(-2));
                else
                  for (var g2 = 0, v2 = l.length; g2 < v2; g2++)
                    a[g2] = l[g2];
                switch (a[0]) {
                  case "Z":
                    r4 = n3, o3 = s4;
                    break;
                  case "H":
                    r4 = a[1];
                    break;
                  case "V":
                    o3 = a[1];
                    break;
                  case "M":
                    n3 = a[a.length - 2], s4 = a[a.length - 1];
                    break;
                  default:
                    r4 = a[a.length - 2], o3 = a[a.length - 1];
                }
              }
            }
            return t4;
          }
          function M(e4, t4, r4, o3, n3, s4, i3, a, l, u) {
            function c(e5, t5, r5) {
              return { x: e5 * Math.cos(r5) - t5 * Math.sin(r5), y: e5 * Math.sin(r5) + t5 * Math.cos(r5) };
            }
            var d2, f2 = Math.PI, h2 = 120 * f2 / 180, p2 = f2 / 180 * (+n3 || 0), m2 = [], y2 = (u ? (x2 = u[0], d2 = u[1], j2 = u[2], _2 = u[3]) : (e4 = (v2 = c(e4, t4, -p2)).x, t4 = v2.y, 1 < (y2 = (g2 = (e4 - (a = (v2 = c(a, l, -p2)).x)) / 2) * g2 / (r4 * r4) + (v2 = (t4 - (l = v2.y)) / 2) * v2 / (o3 * o3)) && (r4 *= y2 = Math.sqrt(y2), o3 *= y2), y2 = r4 * r4, b2 = o3 * o3, j2 = (s4 = (s4 === i3 ? -1 : 1) * Math.sqrt(Math.abs((y2 * b2 - y2 * v2 * v2 - b2 * g2 * g2) / (y2 * v2 * v2 + b2 * g2 * g2)))) * r4 * v2 / o3 + (e4 + a) / 2, _2 = s4 * -o3 * g2 / r4 + (t4 + l) / 2, x2 = Math.asin(((t4 - _2) / o3).toFixed(9)), d2 = Math.asin(((l - _2) / o3).toFixed(9)), (x2 = e4 < j2 ? f2 - x2 : x2) < 0 && (x2 = 2 * f2 + x2), (d2 = a < j2 ? f2 - d2 : d2) < 0 && (d2 = 2 * f2 + d2), i3 && d2 < x2 && (x2 -= 2 * f2), !i3 && x2 < d2 && (d2 -= 2 * f2)), d2 - x2), g2 = (Math.abs(y2) > h2 && (b2 = d2, v2 = a, s4 = l, d2 = x2 + h2 * (i3 && x2 < d2 ? 1 : -1), m2 = M(a = j2 + r4 * Math.cos(d2), l = _2 + o3 * Math.sin(d2), r4, o3, n3, 0, i3, v2, s4, [d2, b2, j2, _2])), y2 = d2 - x2, Math.cos(x2)), f2 = Math.sin(x2), h2 = Math.cos(d2), n3 = Math.sin(d2), i3 = Math.tan(y2 / 4), v2 = 4 / 3 * r4 * i3, s4 = 4 / 3 * o3 * i3, b2 = [e4, t4], j2 = [e4 + v2 * f2, t4 - s4 * g2], _2 = [a + v2 * n3, l - s4 * h2], x2 = [a, l];
            if (j2[0] = 2 * b2[0] - j2[0], j2[1] = 2 * b2[1] - j2[1], u)
              return [j2, _2, x2].concat(m2);
            for (var w2 = [], S = 0, E = (m2 = [j2, _2, x2].concat(m2).join().split(",")).length; S < E; S++)
              w2[S] = S % 2 ? c(m2[S - 1], m2[S], p2).y : c(m2[S], m2[S + 1], p2).x;
            return w2;
          }
          function j(e4, t4) {
            for (var r4 = [], o3 = 0, n3 = e4.length; o3 < n3 - 2 * !t4; o3 += 2) {
              var s4 = [{ x: +e4[o3 - 2], y: +e4[o3 - 1] }, { x: +e4[o3], y: +e4[o3 + 1] }, { x: +e4[o3 + 2], y: +e4[o3 + 3] }, { x: +e4[o3 + 4], y: +e4[o3 + 5] }];
              t4 ? o3 ? n3 - 4 === o3 ? s4[3] = { x: +e4[0], y: +e4[1] } : n3 - 2 === o3 && (s4[2] = { x: +e4[0], y: +e4[1] }, s4[3] = { x: +e4[2], y: +e4[3] }) : s4[0] = { x: +e4[n3 - 2], y: +e4[n3 - 1] } : n3 - 4 === o3 ? s4[3] = s4[2] : o3 || (s4[0] = { x: +e4[o3], y: +e4[o3 + 1] }), r4.push(["C", (-s4[0].x + 6 * s4[1].x + s4[2].x) / 6, (-s4[0].y + 6 * s4[1].y + s4[2].y) / 6, (s4[1].x + 6 * s4[2].x - s4[3].x) / 6, (s4[1].y + 6 * s4[2].y - s4[3].y) / 6, s4[2].x, s4[2].y]);
            }
            return r4;
          }
          function _(e4, t4, r4, o3) {
            return [e4, t4, r4, o3, r4, o3];
          }
          function x(e4, t4, r4, o3, n3, s4) {
            return [1 / 3 * e4 + 2 / 3 * r4, 1 / 3 * t4 + 2 / 3 * o3, 1 / 3 * n3 + 2 / 3 * r4, 1 / 3 * s4 + 2 / 3 * o3, n3, s4];
          }
          function h(e4, t4, r4, o3, n3, s4, i3, a, l) {
            for (var u = (l = 1 < (l = null == l ? 1 : l) ? 1 : l < 0 ? 0 : l) / 2, c = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816], d2 = 0, f2 = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472], h2 = 0; h2 < 12; h2++) {
              var p2 = u * c[h2] + u, m2 = w(p2, e4, r4, n3, i3), p2 = w(p2, t4, o3, s4, a);
              d2 += f2[h2] * Math.sqrt(m2 * m2 + p2 * p2);
            }
            return u * d2;
          }
          function w(e4, t4, r4, o3, n3) {
            return e4 * (e4 * (-3 * t4 + 9 * r4 - 9 * o3 + 3 * n3) + 6 * t4 - 12 * r4 + 6 * o3) - 3 * t4 + 3 * r4;
          }
          n2.default.Font = function() {
            function t4(e5) {
              if (!(this instanceof t4))
                throw new TypeError("Cannot call a class as a function");
              this.parent = e5, this.cache = {}, this.font = void 0;
            }
            var e4, r4, o3;
            return e4 = t4, (r4 = [{ key: "textBounds", value: function(e5) {
              var t5 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r5 = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 0, o4 = 3 < arguments.length ? arguments[3] : void 0, n3 = 4 < arguments.length ? arguments[4] : void 0, s4 = n3 && n3.renderer && n3.renderer._pInst || this.parent, i3 = s4._renderer.drawingContext, o4 = (i3.textAlign || v.LEFT, i3.textBaseline || v.BASELINE, o4 || s4._renderer._textSize);
              if (!g2) {
                for (var a = [], l = [], u = [], c = (u[0] = [], []), d2 = this._scale(o4), f2 = s4._renderer.textLeading(), h2 = 0, p2 = (this.font.forEachGlyph(e5, t5, r5, o4, n3, function(e6, t6, r6, o5) {
                  var n4 = e6.getMetrics();
                  0 === e6.index || 10 === e6.index ? u[h2 += 1] = [] : (u[h2].push(t6 + n4.xMin * d2), u[h2].push(t6 + n4.xMax * d2), c.push(r6 + h2 * f2 + -n4.yMin * d2), c.push(r6 + h2 * f2 + -n4.yMax * d2));
                }), 0 < u[h2].length && (a[h2] = Math.min.apply(null, u[h2]), l[h2] = Math.max.apply(null, u[h2])), 0), m2 = 0; m2 <= h2; m2++) {
                  a[m2] = Math.min.apply(null, u[m2]), l[m2] = Math.max.apply(null, u[m2]);
                  var y2 = l[m2] - a[m2];
                  p2 < y2 && (p2 = y2);
                }
                var i3 = Math.min.apply(null, a), g2 = { x: i3, y: r5 = Math.min.apply(null, c), h: Math.max.apply(null, c) - r5, w: p2, advance: i3 - t5 }, o4 = this._handleAlignment(s4._renderer, e5, g2.x, g2.y, g2.w + g2.advance);
                g2.x = o4.x, g2.y = o4.y;
              }
              return g2;
            } }, { key: "textToPoints", value: function(e5, t5, r5, o4, n3) {
              var s4 = 0, i3 = [], a = this._getGlyphs(e5);
              o4 = o4 || this.parent._renderer._textSize;
              for (var l, u = 0; u < a.length; u++) {
                if (!(a[l = u].name && "space" === a[l].name || e5.length === a.length && " " === e5[l]))
                  for (var c = function(e6) {
                    for (var t6, r6 = [], o5 = 0; o5 < e6.length; o5++)
                      "M" === e6[o5].type && (t6 && r6.push(t6), t6 = []), t6.push(function(e7) {
                        var t7 = [e7.type];
                        "M" === e7.type || "L" === e7.type ? t7.push(e7.x, e7.y) : "C" === e7.type ? t7.push(e7.x1, e7.y1, e7.x2, e7.y2, e7.x, e7.y) : "Q" === e7.type && t7.push(e7.x1, e7.y1, e7.x, e7.y);
                        return t7;
                      }(e6[o5]));
                    return r6.push(t6), r6;
                  }(a[u].getPath(t5, r5, o4).commands), d2 = 0; d2 < c.length; d2++)
                    for (var f2 = function(e6, t6) {
                      for (var t6 = function(e7, t7) {
                        if ("object" !== p(e7))
                          e7 = t7;
                        else
                          for (var r7 in t7)
                            void 0 === e7[r7] && (e7[r7] = t7[r7]);
                        return e7;
                      }(t6, { sampleFactor: 0.1, simplifyThreshold: 0 }), r6 = g(e6, 0, 1), o5 = r6 / (r6 * t6.sampleFactor), n4 = [], s5 = 0; s5 < r6; s5 += o5)
                        n4.push(g(e6, s5));
                      t6.simplifyThreshold && !function(e7) {
                        for (var t7 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0, r7 = 0, o6 = e7.length - 1; 3 < e7.length && 0 <= o6; --o6)
                          y(m(e7, o6 - 1), m(e7, o6), m(e7, o6 + 1), t7) && (e7.splice(o6 % e7.length, 1), r7++);
                      }(n4, t6.simplifyThreshold);
                      return n4;
                    }(c[d2], n3), h2 = 0; h2 < f2.length; h2++)
                      f2[h2].x += s4, i3.push(f2[h2]);
                s4 += a[u].advanceWidth * this._scale(o4);
              }
              return i3;
            } }, { key: "_getGlyphs", value: function(e5) {
              return this.font.stringToGlyphs(e5);
            } }, { key: "_getPath", value: function(e5, t5, r5, o4) {
              var n3 = (o4 && o4.renderer && o4.renderer._pInst || this.parent)._renderer, t5 = this._handleAlignment(n3, e5, t5, r5);
              return this.font.getPath(e5, t5.x, t5.y, n3._textSize, o4);
            } }, { key: "_getPathData", value: function(e5, t5, r5, o4) {
              var n3 = 3;
              return "string" == typeof e5 && 2 < arguments.length ? e5 = this._getPath(e5, t5, r5, o4) : "object" === p(t5) && (o4 = t5), o4 && "number" == typeof o4.decimals && (n3 = o4.decimals), e5.toPathData(n3);
            } }, { key: "_getSVG", value: function(e5, t5, r5, o4) {
              var n3 = 3;
              return "string" == typeof e5 && 2 < arguments.length ? e5 = this._getPath(e5, t5, r5, o4) : "object" === p(t5) && (o4 = t5), o4 && ("number" == typeof o4.decimals && (n3 = o4.decimals), "number" == typeof o4.strokeWidth && (e5.strokeWidth = o4.strokeWidth), void 0 !== o4.fill && (e5.fill = o4.fill), void 0 !== o4.stroke && (e5.stroke = o4.stroke)), e5.toSVG(n3);
            } }, { key: "_renderPath", value: function(e5, t5, r5, o4) {
              var n3 = o4 && o4.renderer || this.parent._renderer, s4 = n3.drawingContext, e5 = ("object" === p(e5) && e5.commands ? e5 : this._getPath(e5, t5, r5, o4)).commands, i3 = (s4.beginPath(), true), t5 = false, r5 = void 0;
              try {
                for (var a, l = e5[Symbol.iterator](); !(i3 = (a = l.next()).done); i3 = true) {
                  var u = a.value;
                  "M" === u.type ? s4.moveTo(u.x, u.y) : "L" === u.type ? s4.lineTo(u.x, u.y) : "C" === u.type ? s4.bezierCurveTo(u.x1, u.y1, u.x2, u.y2, u.x, u.y) : "Q" === u.type ? s4.quadraticCurveTo(u.x1, u.y1, u.x, u.y) : "Z" === u.type && s4.closePath();
                }
              } catch (e6) {
                t5 = true, r5 = e6;
              } finally {
                try {
                  i3 || null == l.return || l.return();
                } finally {
                  if (t5)
                    throw r5;
                }
              }
              return n3._doStroke && n3._strokeSet && s4.stroke(), n3._doFill && (n3._fillSet || n3._setFill(v._DEFAULT_TEXT_FILL), s4.fill()), this;
            } }, { key: "_textWidth", value: function(e5, t5) {
              return this.font.getAdvanceWidth(e5, t5);
            } }, { key: "_textAscent", value: function(e5) {
              return this.font.ascender * this._scale(e5);
            } }, { key: "_textDescent", value: function(e5) {
              return -this.font.descender * this._scale(e5);
            } }, { key: "_scale", value: function(e5) {
              return 1 / this.font.unitsPerEm * (e5 || this.parent._renderer._textSize);
            } }, { key: "_handleAlignment", value: function(e5, t5, r5, o4, n3) {
              var s4 = e5._textSize;
              switch (void 0 === n3 && (n3 = this._textWidth(t5, s4)), e5._textAlign) {
                case v.CENTER:
                  r5 -= n3 / 2;
                  break;
                case v.RIGHT:
                  r5 -= n3;
              }
              switch (e5._textBaseline) {
                case v.TOP:
                  o4 += this._textAscent(s4);
                  break;
                case v.CENTER:
                  o4 += this._textAscent(s4) / 2;
                  break;
                case v.BOTTOM:
                  o4 -= this._textDescent(s4);
              }
              return { x: r5, y: o4 };
            } }]) && s3(e4.prototype, r4), o3 && s3(e4, o3), t4;
          }();
          e3 = n2.default;
          r3.default = e3;
        }, { "../core/constants": 262, "../core/main": 273, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.splice": 166, "core-js/modules/es.function.name": 167, "core-js/modules/es.number.to-fixed": 173, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.split": 196, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 312: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.array-buffer.constructor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.array-buffer.constructor"), e3("core-js/modules/es.object.to-string"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.prototype.append = function(e4, t4) {
            return e4.push(t4), e4;
          }, e3.default.prototype.arrayCopy = function(e4, t4, r4, o2, n2) {
            var s3, i2;
            e4 = void 0 !== n2 ? (i2 = Math.min(n2, e4.length), s3 = o2, e4.slice(t4, i2 + t4)) : (i2 = void 0 !== r4 ? (i2 = r4, Math.min(i2, e4.length)) : e4.length, r4 = t4, e4.slice(s3 = 0, i2)), Array.prototype.splice.apply(r4, [s3, i2].concat(e4));
          }, e3.default.prototype.concat = function(e4, t4) {
            return e4.concat(t4);
          }, e3.default.prototype.reverse = function(e4) {
            return e4.reverse();
          }, e3.default.prototype.shorten = function(e4) {
            return e4.pop(), e4;
          }, e3.default.prototype.shuffle = function(e4, t4) {
            for (var r4, o2, n2 = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e4), s3 = (e4 = t4 || n2 ? e4 : e4.slice()).length; 1 < s3; )
              r4 = this.random(0, 1) * s3 | 0, o2 = e4[--s3], e4[s3] = e4[r4], e4[r4] = o2;
            return e4;
          }, e3.default.prototype.sort = function(e4, t4) {
            var r4 = t4 ? e4.slice(0, Math.min(t4, e4.length)) : e4, t4 = t4 ? e4.slice(Math.min(t4, e4.length)) : [];
            return (r4 = "string" == typeof r4[0] ? r4.sort() : r4.sort(function(e5, t5) {
              return e5 - t5;
            })).concat(t4);
          }, e3.default.prototype.splice = function(e4, t4, r4) {
            return Array.prototype.splice.apply(e4, [r4, 0].concat(t4)), e4;
          }, e3.default.prototype.subset = function(e4, t4, r4) {
            return void 0 !== r4 ? e4.slice(t4, t4 + r4) : e4.slice(t4, e4.length);
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array-buffer.constructor": 150, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.splice": 166, "core-js/modules/es.object.to-string": 180 }], 313: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.map"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.repeat"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.number.constructor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.repeat"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var o2 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          o2.default.prototype.float = function(e4) {
            return e4 instanceof Array ? e4.map(parseFloat) : parseFloat(e4);
          }, o2.default.prototype.int = function(e4) {
            var t4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 10;
            return e4 === 1 / 0 || "Infinity" === e4 ? 1 / 0 : e4 === -1 / 0 || "-Infinity" === e4 ? -1 / 0 : "string" == typeof e4 ? parseInt(e4, t4) : "number" == typeof e4 ? 0 | e4 : "boolean" == typeof e4 ? e4 ? 1 : 0 : e4 instanceof Array ? e4.map(function(e5) {
              return o2.default.prototype.int(e5, t4);
            }) : void 0;
          }, o2.default.prototype.str = function(e4) {
            return e4 instanceof Array ? e4.map(o2.default.prototype.str) : String(e4);
          }, o2.default.prototype.boolean = function(e4) {
            return "number" == typeof e4 ? 0 !== e4 : "string" == typeof e4 ? "true" === e4.toLowerCase() : "boolean" == typeof e4 ? e4 : e4 instanceof Array ? e4.map(o2.default.prototype.boolean) : void 0;
          }, o2.default.prototype.byte = function(e4) {
            e4 = o2.default.prototype.int(e4, 10);
            return "number" == typeof e4 ? (e4 + 128) % 256 - 128 : e4 instanceof Array ? e4.map(o2.default.prototype.byte) : void 0;
          }, o2.default.prototype.char = function(e4) {
            return "number" != typeof e4 || isNaN(e4) ? e4 instanceof Array ? e4.map(o2.default.prototype.char) : "string" == typeof e4 ? o2.default.prototype.char(parseInt(e4, 10)) : void 0 : String.fromCharCode(e4);
          }, o2.default.prototype.unchar = function(e4) {
            return "string" == typeof e4 && 1 === e4.length ? e4.charCodeAt(0) : e4 instanceof Array ? e4.map(o2.default.prototype.unchar) : void 0;
          }, o2.default.prototype.hex = function(e4, t4) {
            if (t4 = null == t4 ? 8 : t4, e4 instanceof Array)
              return e4.map(function(e5) {
                return o2.default.prototype.hex(e5, t4);
              });
            if (e4 === 1 / 0 || e4 === -1 / 0)
              return (e4 === 1 / 0 ? "F" : "0").repeat(t4);
            if ("number" == typeof e4) {
              e4 < 0 && (e4 = 4294967295 + e4 + 1);
              for (var r4 = Number(e4).toString(16).toUpperCase(); r4.length < t4; )
                r4 = "0".concat(r4);
              return r4 = r4.length >= t4 ? r4.substring(r4.length - t4, r4.length) : r4;
            }
          }, o2.default.prototype.unhex = function(e4) {
            return e4 instanceof Array ? e4.map(o2.default.prototype.unhex) : parseInt("0x".concat(e4), 16);
          };
          e3 = o2.default;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.map": 163, "core-js/modules/es.number.constructor": 171, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.repeat": 193 }], 314: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.pad-start"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.filter"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.constructor"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.pad-start"), e3("core-js/modules/es.string.replace"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var s3 = (u = e3("../core/main")) && u.__esModule ? u : { default: u };
          function i2(e4, t4) {
            return function(e5) {
              if (Array.isArray(e5))
                return e5;
            }(e4) || function(e5, t5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5)) {
                var r4 = [], o3 = true, n3 = false, s4 = void 0;
                try {
                  for (var i3, a2 = e5[Symbol.iterator](); !(o3 = (i3 = a2.next()).done) && (r4.push(i3.value), !t5 || r4.length !== t5); o3 = true)
                    ;
                } catch (e6) {
                  n3 = true, s4 = e6;
                } finally {
                  try {
                    o3 || null == a2.return || a2.return();
                  } finally {
                    if (n3)
                      throw s4;
                  }
                }
                return r4;
              }
            }(e4, t4) || function() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }();
          }
          function o2(e4, t4, r4) {
            var o3 = i2(e4.toString().split("."), 2), n3 = o3[0], o3 = o3[1];
            return void 0 === r4 ? (n3 = n3.padStart(t4, "0"), o3 ? n3 + "." + o3 : n3) : (n3 = (e4 = i2(e4.toFixed(r4).toString().split("."), 2))[0], o3 = e4[1], (n3 = n3.padStart(t4, "0")) + "." + o3);
          }
          function n2(e4, t4) {
            var r4 = (e4 = e4.toString()).indexOf("."), o3 = -1 !== r4 ? e4.substring(r4) : "", e4 = (e4 = -1 !== r4 ? e4.substring(0, r4) : e4).toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            if (0 === t4)
              o3 = "";
            else if (void 0 !== t4)
              if (t4 > o3.length)
                for (var n3 = t4 - (o3 += -1 === r4 ? "." : "").length + 1, s4 = 0; s4 < n3; s4++)
                  o3 += "0";
              else
                o3 = o3.substring(0, t4 + 1);
            return e4 + o3;
          }
          function a(e4) {
            return 0 < parseFloat(e4) ? "+".concat(e4.toString()) : e4.toString();
          }
          function l(e4) {
            return 0 <= parseFloat(e4) ? " ".concat(e4.toString()) : e4.toString();
          }
          e3("../core/friendly_errors/validate_params"), e3("../core/friendly_errors/file_errors"), e3("../core/friendly_errors/fes_core"), s3.default.prototype.join = function(e4, t4) {
            return s3.default._validateParameters("join", arguments), e4.join(t4);
          }, s3.default.prototype.match = function(e4, t4) {
            return s3.default._validateParameters("match", arguments), e4.match(t4);
          }, s3.default.prototype.matchAll = function(e4, t4) {
            s3.default._validateParameters("matchAll", arguments);
            for (var r4 = new RegExp(t4, "g"), o3 = r4.exec(e4), n3 = []; null !== o3; )
              n3.push(o3), o3 = r4.exec(e4);
            return n3;
          }, s3.default.prototype.nf = function(e4, t4, r4) {
            return s3.default._validateParameters("nf", arguments), e4 instanceof Array ? e4.map(function(e5) {
              return o2(e5, t4, r4);
            }) : "[object Arguments]" === Object.prototype.toString.call(e4) ? 3 === e4.length ? this.nf(e4[0], e4[1], e4[2]) : 2 === e4.length ? this.nf(e4[0], e4[1]) : this.nf(e4[0]) : o2(e4, t4, r4);
          }, s3.default.prototype.nfc = function(e4, t4) {
            return s3.default._validateParameters("nfc", arguments), e4 instanceof Array ? e4.map(function(e5) {
              return n2(e5, t4);
            }) : n2(e4, t4);
          }, s3.default.prototype.nfp = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            s3.default._validateParameters("nfp", t4);
            var o3 = s3.default.prototype.nf.apply(this, t4);
            return o3 instanceof Array ? o3.map(a) : a(o3);
          }, s3.default.prototype.nfs = function() {
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            s3.default._validateParameters("nfs", t4);
            var o3 = s3.default.prototype.nf.apply(this, t4);
            return o3 instanceof Array ? o3.map(l) : l(o3);
          }, s3.default.prototype.split = function(e4, t4) {
            return s3.default._validateParameters("split", arguments), e4.split(t4);
          }, s3.default.prototype.splitTokens = function(e4, t4) {
            var r4, o3;
            return s3.default._validateParameters("splitTokens", arguments), o3 = void 0 !== t4 ? (o3 = /\]/g.exec(t4 = t4), (r4 = /\[/g.exec(t4)) && o3 ? (t4 = t4.slice(0, o3.index) + t4.slice(o3.index + 1), r4 = /\[/g.exec(t4), t4 = t4.slice(0, r4.index) + t4.slice(r4.index + 1), new RegExp("[\\[".concat(t4, "\\]]"), "g")) : o3 ? (t4 = t4.slice(0, o3.index) + t4.slice(o3.index + 1), new RegExp("[".concat(t4, "\\]]"), "g")) : r4 ? (t4 = t4.slice(0, r4.index) + t4.slice(r4.index + 1), new RegExp("[".concat(t4, "\\[]"), "g")) : new RegExp("[".concat(t4, "]"), "g")) : /\s/g, e4.split(o3).filter(function(e5) {
              return e5;
            });
          }, s3.default.prototype.trim = function(e4) {
            return s3.default._validateParameters("trim", arguments), e4 instanceof Array ? e4.map(this.trim) : e4.trim();
          };
          var u = s3.default;
          r3.default = u;
        }, { "../core/friendly_errors/fes_core": 264, "../core/friendly_errors/file_errors": 265, "../core/friendly_errors/validate_params": 268, "../core/main": 273, "core-js/modules/es.array.filter": 155, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.number.to-fixed": 173, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.constructor": 184, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.match": 191, "core-js/modules/es.string.pad-start": 192, "core-js/modules/es.string.replace": 194, "core-js/modules/es.string.split": 196, "core-js/modules/es.string.trim": 199, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 315: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          e3.default.prototype.day = function() {
            return (/* @__PURE__ */ new Date()).getDate();
          }, e3.default.prototype.hour = function() {
            return (/* @__PURE__ */ new Date()).getHours();
          }, e3.default.prototype.minute = function() {
            return (/* @__PURE__ */ new Date()).getMinutes();
          }, e3.default.prototype.millis = function() {
            return -1 === this._millisStart ? 0 : window.performance.now() - this._millisStart;
          }, e3.default.prototype.month = function() {
            return (/* @__PURE__ */ new Date()).getMonth() + 1;
          }, e3.default.prototype.second = function() {
            return (/* @__PURE__ */ new Date()).getSeconds();
          }, e3.default.prototype.year = function() {
            return (/* @__PURE__ */ new Date()).getFullYear();
          };
          e3 = e3.default;
          r3.default = e3;
        }, { "../core/main": 273 }], 316: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.math.sign"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.math.sign"), e3("core-js/modules/es.number.to-fixed"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var S = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, _ = (e3("./p5.Geometry"), function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s3;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s3 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r4, s3) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants")));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          S.default.prototype.plane = function(e4, t4, r4, o3) {
            this._assert3d("plane"), S.default._validateParameters("plane", arguments), void 0 === e4 && (e4 = 50), void 0 === t4 && (t4 = e4), void 0 === o3 && (o3 = 1);
            var n3, s3 = "plane|".concat(r4 = void 0 === r4 ? 1 : r4, "|").concat(o3);
            return this._renderer.geometryInHash(s3) || ((n3 = new S.default.Geometry(r4, o3, function() {
              for (var e5, t5, r5 = 0; r5 <= this.detailY; r5++)
                for (var o4 = r5 / this.detailY, n4 = 0; n4 <= this.detailX; n4++)
                  e5 = n4 / this.detailX, t5 = new S.default.Vector(e5 - 0.5, o4 - 0.5, 0), this.vertices.push(t5), this.uvs.push(e5, o4);
            })).computeFaces().computeNormals(), r4 <= 1 && o3 <= 1 ? n3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), this._renderer.createBuffers(s3, n3)), this._renderer.drawBuffersScaled(s3, e4, t4, 1), this;
          }, S.default.prototype.box = function(e4, t4, r4, o3, n3) {
            this._assert3d("box"), S.default._validateParameters("box", arguments), void 0 === e4 && (e4 = 50), void 0 === t4 && (t4 = e4), void 0 === r4 && (r4 = t4);
            var s3, i3 = this._renderer.attributes && this._renderer.attributes.perPixelLighting, i3 = (void 0 === n3 && (n3 = i3 ? 1 : 4), "box|".concat(o3 = void 0 === o3 ? i3 ? 1 : 4 : o3, "|").concat(n3));
            return this._renderer.geometryInHash(i3) || ((s3 = new S.default.Geometry(o3, n3, function() {
              var n4 = this;
              this.edges = [[0, 1], [1, 3], [3, 2], [6, 7], [8, 9], [9, 11], [14, 15], [16, 17], [17, 19], [18, 19], [20, 21], [22, 23]], [[0, 4, 2, 6], [1, 3, 5, 7], [0, 1, 4, 5], [2, 6, 3, 7], [0, 2, 1, 3], [4, 5, 6, 7]].forEach(function(e5, t5) {
                for (var t5 = 4 * t5, r5 = 0; r5 < 4; r5++) {
                  var o4 = e5[r5], o4 = new S.default.Vector((2 * (1 & o4) - 1) / 2, ((2 & o4) - 1) / 2, ((4 & o4) / 2 - 1) / 2);
                  n4.vertices.push(o4), n4.uvs.push(1 & r5, (2 & r5) / 2);
                }
                n4.faces.push([t5, 1 + t5, 2 + t5]), n4.faces.push([2 + t5, 1 + t5, 3 + t5]);
              });
            })).computeNormals(), o3 <= 4 && n3 <= 4 ? s3._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), this._renderer.createBuffers(i3, s3)), this._renderer.drawBuffersScaled(i3, e4, t4, r4), this;
          }, S.default.prototype.sphere = function(e4, t4, r4) {
            return this._assert3d("sphere"), S.default._validateParameters("sphere", arguments), this.ellipsoid(e4 = void 0 === e4 ? 50 : e4, e4, e4, t4 = void 0 === t4 ? 24 : t4, r4 = void 0 === r4 ? 16 : r4), this;
          };
          function l(e4, t4, r4, o3, n3, s3, i3) {
            e4 = e4 <= 0 ? 1 : e4, t4 = t4 < 0 ? 0 : t4, r4 = r4 <= 0 ? e4 : r4, o3 = o3 < 3 ? 3 : o3;
            for (var a2, l2, u = (s3 = void 0 === s3 || s3) ? -2 : 0, c = (n3 = n3 < 1 ? 1 : n3) + ((i3 = void 0 === i3 ? 0 !== t4 : i3) ? 2 : 0), d = Math.atan2(e4 - t4, r4), f = Math.sin(d), h = Math.cos(d), p = u; p <= c; ++p) {
              var m = p / n3, y = r4 * m, g = void 0, g = p < 0 ? (m = y = 0, e4) : n3 < p ? (y = r4, m = 1, t4) : e4 + (t4 - e4) * m;
              for (-2 !== p && p !== n3 + 2 || (g = 0), y -= r4 / 2, a2 = 0; a2 < o3; ++a2) {
                var v = a2 / (o3 - 1), b = 2 * Math.PI * v, j = Math.sin(b), b = Math.cos(b), _2 = (this.vertices.push(new S.default.Vector(j * g, y, b * g)), void 0), _2 = p < 0 ? new S.default.Vector(0, -1, 0) : n3 < p && t4 ? new S.default.Vector(0, 1, 0) : new S.default.Vector(j * h, f, b * h);
                this.vertexNormals.push(_2), this.uvs.push(v, m);
              }
            }
            var x = 0;
            if (s3) {
              for (l2 = 0; l2 < o3; ++l2)
                this.faces.push([x + l2, x + o3 + (l2 + 1) % o3, x + o3 + l2]);
              x += 2 * o3;
            }
            for (p = 0; p < n3; ++p) {
              for (a2 = 0; a2 < o3; ++a2) {
                var w = (a2 + 1) % o3;
                this.faces.push([x + a2, x + w, x + o3 + w]), this.faces.push([x + a2, x + o3 + w, x + o3 + a2]);
              }
              x += o3;
            }
            if (i3)
              for (x += o3, a2 = 0; a2 < o3; ++a2)
                this.faces.push([x + a2, x + (a2 + 1) % o3, x + o3]);
          }
          S.default.prototype.cylinder = function(e4, t4, r4, o3, n3, s3) {
            this._assert3d("cylinder"), S.default._validateParameters("cylinder", arguments), void 0 === e4 && (e4 = 50), void 0 === t4 && (t4 = e4), void 0 === o3 && (o3 = 1), void 0 === s3 && (s3 = true), void 0 === n3 && (n3 = true);
            var i3, a2 = "cylinder|".concat(r4 = void 0 === r4 ? 24 : r4, "|").concat(o3, "|").concat(n3, "|").concat(s3);
            return this._renderer.geometryInHash(a2) || (i3 = new S.default.Geometry(r4, o3), l.call(i3, 1, 1, 1, r4, o3, n3, s3), r4 <= 24 && o3 <= 16 ? i3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(a2, i3)), this._renderer.drawBuffersScaled(a2, e4, t4, e4), this;
          }, S.default.prototype.cone = function(e4, t4, r4, o3, n3) {
            this._assert3d("cone"), S.default._validateParameters("cone", arguments), void 0 === e4 && (e4 = 50), void 0 === t4 && (t4 = e4), void 0 === o3 && (o3 = 1), void 0 === n3 && (n3 = true);
            var s3, i3 = "cone|".concat(r4 = void 0 === r4 ? 24 : r4, "|").concat(o3, "|").concat(n3);
            return this._renderer.geometryInHash(i3) || (s3 = new S.default.Geometry(r4, o3), l.call(s3, 1, 0, 1, r4, o3, n3, false), r4 <= 24 && o3 <= 16 ? s3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(i3, s3)), this._renderer.drawBuffersScaled(i3, e4, t4, e4), this;
          }, S.default.prototype.ellipsoid = function(e4, t4, r4, o3, n3) {
            this._assert3d("ellipsoid"), S.default._validateParameters("ellipsoid", arguments), void 0 === e4 && (e4 = 50), void 0 === t4 && (t4 = e4), void 0 === r4 && (r4 = e4), void 0 === n3 && (n3 = 16);
            var s3, i3 = "ellipsoid|".concat(o3 = void 0 === o3 ? 24 : o3, "|").concat(n3);
            return this._renderer.geometryInHash(i3) || ((s3 = new S.default.Geometry(o3, n3, function() {
              for (var e5 = 0; e5 <= this.detailY; e5++)
                for (var t5 = e5 / this.detailY, r5 = Math.PI * t5 - Math.PI / 2, o4 = Math.cos(r5), n4 = Math.sin(r5), s4 = 0; s4 <= this.detailX; s4++) {
                  var i4 = s4 / this.detailX, a2 = 2 * Math.PI * i4, l2 = Math.cos(a2), a2 = Math.sin(a2), a2 = new S.default.Vector(o4 * a2, n4, o4 * l2);
                  this.vertices.push(a2), this.vertexNormals.push(a2), this.uvs.push(i4, t5);
                }
            })).computeFaces(), o3 <= 24 && n3 <= 24 ? s3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), this._renderer.createBuffers(i3, s3)), this._renderer.drawBuffersScaled(i3, e4, t4, r4), this;
          }, S.default.prototype.torus = function(e4, t4, r4, o3) {
            if (this._assert3d("torus"), S.default._validateParameters("torus", arguments), void 0 === e4)
              e4 = 50;
            else if (!e4)
              return;
            if (void 0 === t4)
              t4 = 10;
            else if (!t4)
              return;
            void 0 === r4 && (r4 = 24), void 0 === o3 && (o3 = 16);
            var n3, d = (t4 / e4).toPrecision(4), t4 = "torus|".concat(d, "|").concat(r4, "|").concat(o3);
            return this._renderer.geometryInHash(t4) || ((n3 = new S.default.Geometry(r4, o3, function() {
              for (var e5 = 0; e5 <= this.detailY; e5++)
                for (var t5 = e5 / this.detailY, r5 = 2 * Math.PI * t5, o4 = Math.cos(r5), n4 = Math.sin(r5), s3 = 1 + d * o4, i3 = 0; i3 <= this.detailX; i3++) {
                  var a2 = i3 / this.detailX, l2 = 2 * Math.PI * a2, u = Math.cos(l2), l2 = Math.sin(l2), c = new S.default.Vector(s3 * u, s3 * l2, d * n4), u = new S.default.Vector(o4 * u, o4 * l2, n4);
                  this.vertices.push(c), this.vertexNormals.push(u), this.uvs.push(a2, t5);
                }
            })).computeFaces(), r4 <= 24 && o3 <= 16 ? n3._makeTriangleEdges()._edgesToVertices() : this._renderer._doStroke && console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(t4, n3)), this._renderer.drawBuffersScaled(t4, e4, e4, e4), this;
          }, S.default.RendererGL.prototype.point = function(e4, t4, r4) {
            var o3 = [];
            return o3.push(new S.default.Vector(e4, t4, r4 = void 0 === r4 ? 0 : r4)), this._drawPoints(o3, this.immediateMode.buffers.point), this;
          }, S.default.RendererGL.prototype.triangle = function(e4) {
            var t4 = e4[0], r4 = e4[1], o3 = e4[2], n3 = e4[3], s3 = e4[4], e4 = e4[5], i3 = (this.geometryInHash("tri") || ((i3 = new S.default.Geometry(1, 1, function() {
              var e5 = [];
              e5.push(new S.default.Vector(0, 0, 0)), e5.push(new S.default.Vector(1, 0, 0)), e5.push(new S.default.Vector(0, 1, 0)), this.edges = [[0, 1], [1, 2], [2, 0]], this.vertices = e5, this.faces = [[0, 1, 2]], this.uvs = [0, 0, 1, 0, 1, 1];
            }))._edgesToVertices(), i3.computeNormals(), this.createBuffers("tri", i3)), this.uMVMatrix.copy());
            try {
              var a2 = Math.sign(t4 * n3 - o3 * r4 + o3 * e4 - s3 * n3 + s3 * r4 - t4 * e4), l2 = new S.default.Matrix([o3 - t4, n3 - r4, 0, 0, s3 - t4, e4 - r4, 0, 0, 0, 0, a2, 0, t4, r4, 0, 1]).mult(this.uMVMatrix);
              this.uMVMatrix = l2, this.drawBuffers("tri");
            } finally {
              this.uMVMatrix = i3;
            }
            return this;
          }, S.default.RendererGL.prototype.ellipse = function(e4) {
            this.arc(e4[0], e4[1], e4[2], e4[3], 0, _.TWO_PI, _.OPEN, e4[4]);
          }, S.default.RendererGL.prototype.arc = function(e4) {
            var t4, r4 = arguments[1], o3 = arguments[2], n3 = arguments[3], s3 = arguments[4], i3 = arguments[5], a2 = arguments[6], l2 = arguments[7] || 25, u = (Math.abs(i3 - s3) >= _.TWO_PI ? "".concat(c = "ellipse", "|") : "".concat(c = "arc", "|").concat(s3, "|").concat(i3, "|").concat(a2, "|")).concat(l2, "|"), c = (this.geometryInHash(u) || ((t4 = new S.default.Geometry(l2, 1, function() {
              if (s3.toFixed(10) !== i3.toFixed(10)) {
                a2 !== _.PIE && void 0 !== a2 || (this.vertices.push(new S.default.Vector(0.5, 0.5, 0)), this.uvs.push([0.5, 0.5]));
                for (var e5 = 0; e5 <= l2; e5++) {
                  var t5 = (i3 - s3) * (e5 / l2) + s3, r5 = 0.5 + Math.cos(t5) / 2, t5 = 0.5 + Math.sin(t5) / 2;
                  this.vertices.push(new S.default.Vector(r5, t5, 0)), this.uvs.push([r5, t5]), e5 < l2 - 1 && (this.faces.push([0, e5 + 1, e5 + 2]), this.edges.push([e5 + 1, e5 + 2]));
                }
                switch (a2) {
                  case _.PIE:
                    this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([0, 1]), this.edges.push([this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([0, this.vertices.length - 1]);
                    break;
                  case _.CHORD:
                    this.edges.push([0, 1]), this.edges.push([0, this.vertices.length - 1]);
                    break;
                  case _.OPEN:
                    this.edges.push([0, 1]);
                    break;
                  default:
                    this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.edges.push([this.vertices.length - 2, this.vertices.length - 1]);
                }
              }
            })).computeNormals(), l2 <= 50 ? t4._edgesToVertices(t4) : this._doStroke && console.log("Cannot apply a stroke to an ".concat(c, " with more than 50 detail")), this.createBuffers(u, t4)), this.uMVMatrix.copy());
            try {
              this.uMVMatrix.translate([e4, r4, 0]), this.uMVMatrix.scale(o3, n3, 1), this.drawBuffers(u);
            } finally {
              this.uMVMatrix = c;
            }
            return this;
          }, S.default.RendererGL.prototype.rect = function(e4) {
            var t4 = e4[0], r4 = e4[1], o3 = e4[2], n3 = e4[3];
            if (void 0 === e4[4]) {
              var s3 = this._pInst._glAttributes.perPixelLighting, i3 = e4[4] || (s3 ? 1 : 24), a2 = e4[5] || (s3 ? 1 : 16), s3 = "rect|".concat(i3, "|").concat(a2), l2 = (this.geometryInHash(s3) || ((l2 = new S.default.Geometry(i3, a2, function() {
                for (var e5 = 0; e5 <= this.detailY; e5++)
                  for (var t5 = e5 / this.detailY, r5 = 0; r5 <= this.detailX; r5++) {
                    var o4 = r5 / this.detailX, n4 = new S.default.Vector(o4, t5, 0);
                    this.vertices.push(n4), this.uvs.push(o4, t5);
                  }
                0 < i3 && 0 < a2 && (this.edges = [[0, i3], [i3, (i3 + 1) * (a2 + 1) - 1], [(i3 + 1) * (a2 + 1) - 1, (i3 + 1) * a2], [(i3 + 1) * a2, 0]]);
              })).computeFaces().computeNormals()._edgesToVertices(), this.createBuffers(s3, l2)), this.uMVMatrix.copy());
              try {
                this.uMVMatrix.translate([t4, r4, 0]), this.uMVMatrix.scale(o3, n3, 1), this.drawBuffers(s3);
              } finally {
                this.uMVMatrix = l2;
              }
            } else {
              var s3 = e4[4], l2 = void 0 === e4[5] ? s3 : e4[5], u = void 0 === e4[6] ? l2 : e4[6], e4 = void 0 === e4[7] ? u : e4[7], c = o3, d = n3, f = ((c += t4) < t4 && (f = t4, t4 = c, c = f), (d += r4) < r4 && (f = r4, r4 = d, d = f), Math.min((c - t4) / 2, (d - r4) / 2)), h = (f < s3 && (s3 = f), f < l2 && (l2 = f), f < u && (u = f), f < e4 && (e4 = f), t4), p = r4, f = c, t4 = d, m = (this.beginShape(), 0 !== l2 ? (this.vertex(f - l2, p), this.quadraticVertex(f, p, f, p + l2)) : this.vertex(f, p), 0 !== u ? (this.vertex(f, t4 - u), this.quadraticVertex(f, t4, f - u, t4)) : this.vertex(f, t4), 0 !== e4 ? (this.vertex(h + e4, t4), this.quadraticVertex(h, t4, h, t4 - e4)) : this.vertex(h, t4), 0 !== s3 ? (this.vertex(h, p + s3), this.quadraticVertex(h, p, h + s3, p)) : this.vertex(h, p), !(this.immediateMode.geometry.uvs.length = 0)), r4 = false, c = void 0;
              try {
                for (var y, g = this.immediateMode.geometry.vertices[Symbol.iterator](); !(m = (y = g.next()).done); m = true) {
                  var v = y.value, b = (v.x - h) / o3, j = (v.y - p) / n3;
                  this.immediateMode.geometry.uvs.push(b, j);
                }
              } catch (e5) {
                r4 = true, c = e5;
              } finally {
                try {
                  m || null == g.return || g.return();
                } finally {
                  if (r4)
                    throw c;
                }
              }
              this.endShape(_.CLOSE);
            }
            return this;
          }, S.default.RendererGL.prototype.quad = function(i3, a2, l2, u, c, d, f, h, p, m, y, g, e4, t4) {
            void 0 === e4 && (e4 = 2), void 0 === t4 && (t4 = 2);
            var r4 = "quad|".concat(i3, "|").concat(a2, "|").concat(l2, "|").concat(u, "|").concat(c, "|").concat(d, "|").concat(f, "|").concat(h, "|").concat(p, "|").concat(m, "|").concat(y, "|").concat(g, "|").concat(e4, "|").concat(t4);
            if (!this.geometryInHash(r4)) {
              var o3 = new S.default.Geometry(e4, t4, function() {
                for (var e5 = 1 / (this.detailX - 1), t5 = 1 / (this.detailY - 1), r5 = 0; r5 < this.detailY; r5++)
                  for (var o4 = 0; o4 < this.detailX; o4++) {
                    var n4 = o4 * e5, s4 = r5 * t5;
                    this.vertices.push(new S.default.Vector((1 - n4) * ((1 - s4) * i3 + s4 * m) + n4 * ((1 - s4) * u + s4 * f), (1 - n4) * ((1 - s4) * a2 + s4 * y) + n4 * ((1 - s4) * c + s4 * h), (1 - n4) * ((1 - s4) * l2 + s4 * g) + n4 * ((1 - s4) * d + s4 * p))), this.uvs.push([n4, s4]);
                  }
              });
              o3.faces = [];
              for (var n3 = 0; n3 < t4 - 1; n3++)
                for (var s3 = 0; s3 < e4 - 1; s3++) {
                  var v = s3 + n3 * e4, b = s3 + 1 + (n3 + 1) * e4, j = s3 + (n3 + 1) * e4;
                  o3.faces.push([v, s3 + 1 + n3 * e4, b]), o3.faces.push([v, b, j]);
                }
              o3.computeNormals()._makeTriangleEdges()._edgesToVertices(), this.createBuffers(r4, o3);
            }
            return this.drawBuffers(r4), this;
          }, S.default.RendererGL.prototype.bezier = function(e4, t4, r4, o3, n3, s3, i3, a2, l2, u, c, d) {
            8 === arguments.length && (c = a2, u = i3, a2 = s3, i3 = n3, n3 = o3, o3 = r4, r4 = s3 = l2 = d = 0);
            var f = this._pInst._bezierDetail || 20;
            this.beginShape();
            for (var h = 0; h <= f; h++) {
              var p = Math.pow(1 - h / f, 3), m = h / f * 3 * Math.pow(1 - h / f, 2), y = 3 * Math.pow(h / f, 2) * (1 - h / f), g = Math.pow(h / f, 3);
              this.vertex(e4 * p + o3 * m + i3 * y + u * g, t4 * p + n3 * m + a2 * y + c * g, r4 * p + s3 * m + l2 * y + d * g);
            }
            return this.endShape(), this;
          }, S.default.RendererGL.prototype.curve = function(e4, t4, r4, o3, n3, s3, i3, a2, l2, u, c, d) {
            8 === arguments.length && (u = i3, c = a2, i3 = n3, a2 = o3, n3 = o3 = r4, r4 = s3 = l2 = d = 0);
            var f = this._pInst._curveDetail;
            this.beginShape();
            for (var h = 0; h <= f; h++) {
              var p = 0.5 * Math.pow(h / f, 3), m = 0.5 * Math.pow(h / f, 2), y = h / f * 0.5;
              this.vertex(p * (3 * o3 - e4 - 3 * i3 + u) + m * (2 * e4 - 5 * o3 + 4 * i3 - u) + y * (-e4 + i3) + 2 * o3 * 0.5, p * (3 * n3 - t4 - 3 * a2 + c) + m * (2 * t4 - 5 * n3 + 4 * a2 - c) + y * (-t4 + a2) + 2 * n3 * 0.5, p * (3 * s3 - r4 - 3 * l2 + d) + m * (2 * r4 - 5 * s3 + 4 * l2 - d) + y * (-r4 + l2) + 2 * s3 * 0.5);
            }
            return this.endShape(), this;
          }, S.default.RendererGL.prototype.line = function() {
            return 6 === arguments.length ? (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 2 ? void 0 : arguments[2]), this.vertex(arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 5 ? void 0 : arguments[5]), this.endShape()) : 4 === arguments.length && (this.beginShape(_.LINES), this.vertex(arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 1 ? void 0 : arguments[1], 0), this.vertex(arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 3 ? void 0 : arguments[3], 0), this.endShape()), this;
          }, S.default.RendererGL.prototype.bezierVertex = function() {
            if (0 === this.immediateMode._bezierVertex.length)
              throw Error("vertex() must be used once before calling bezierVertex()");
            var e4, t4, r4, o3, n3, s3, i3 = [], a2 = [], l2 = arguments.length;
            if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
              this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
              for (var u = 1 / this._lutBezierDetail, c = 0, d = 1, f = 0; c < 1; ) {
                if (s3 = parseFloat(c.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(s3), d.toFixed(6) === u.toFixed(6)) {
                  s3 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(s3);
                  break;
                }
                c += u, d -= u, ++f;
              }
            }
            for (var h = this._lookUpTableBezier.length, p = [], m = 0; m < 4; m++)
              p.push([]);
            p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[3] = this.curFillColor.slice();
            var y = [];
            for (m = 0; m < 4; m++)
              y.push([]);
            if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[3] = this.curStrokeColor.slice(), 6 === l2) {
              this.isBezier = true;
              var i3 = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 4 ? void 0 : arguments[4]], a2 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 5 ? void 0 : arguments[5]], g = Math.hypot(i3[0] - i3[1], a2[0] - a2[1]), v = Math.hypot(i3[1] - i3[2], a2[1] - a2[2]), b = Math.hypot(i3[2] - i3[3], a2[2] - a2[3]), v = g + v + b;
              for (g /= v, b /= v, n3 = 0; n3 < 4; n3++)
                p[1].push(p[0][n3] * (1 - g) + p[3][n3] * g), p[2].push(p[0][n3] * b + p[3][n3] * (1 - b)), y[1].push(y[0][n3] * (1 - g) + y[3][n3] * g), y[2].push(y[0][n3] * b + y[3][n3] * (1 - b));
              for (o3 = 0; o3 < h; o3++) {
                for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e4 = t4 = 0; m < 4; m++) {
                  for (n3 = 0; n3 < 4; n3++)
                    this.curFillColor[n3] += this._lookUpTableBezier[o3][m] * p[m][n3], this.curStrokeColor[n3] += this._lookUpTableBezier[o3][m] * y[m][n3];
                  e4 += i3[m] * this._lookUpTableBezier[o3][m], t4 += a2[m] * this._lookUpTableBezier[o3][m];
                }
                this.vertex(e4, t4);
              }
              this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._bezierVertex[1] = arguments.length <= 5 ? void 0 : arguments[5];
            } else if (9 === l2) {
              this.isBezier = true, i3 = [this.immediateMode._bezierVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 3 ? void 0 : arguments[3], arguments.length <= 6 ? void 0 : arguments[6]], a2 = [this.immediateMode._bezierVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 4 ? void 0 : arguments[4], arguments.length <= 7 ? void 0 : arguments[7]];
              var j = [this.immediateMode._bezierVertex[2], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 5 ? void 0 : arguments[5], arguments.length <= 8 ? void 0 : arguments[8]], _2 = Math.hypot(i3[0] - i3[1], a2[0] - a2[1], j[0] - j[1]), v = Math.hypot(i3[1] - i3[2], a2[1] - a2[2], j[1] - j[2]), x = Math.hypot(i3[2] - i3[3], a2[2] - a2[3], j[2] - j[3]), l2 = _2 + v + x;
              for (_2 /= l2, x /= l2, n3 = 0; n3 < 4; n3++)
                p[1].push(p[0][n3] * (1 - _2) + p[3][n3] * _2), p[2].push(p[0][n3] * x + p[3][n3] * (1 - x)), y[1].push(y[0][n3] * (1 - _2) + y[3][n3] * _2), y[2].push(y[0][n3] * x + y[3][n3] * (1 - x));
              for (o3 = 0; o3 < h; o3++) {
                for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e4 = t4 = r4 = 0; m < 4; m++) {
                  for (n3 = 0; n3 < 4; n3++)
                    this.curFillColor[n3] += this._lookUpTableBezier[o3][m] * p[m][n3], this.curStrokeColor[n3] += this._lookUpTableBezier[o3][m] * y[m][n3];
                  e4 += i3[m] * this._lookUpTableBezier[o3][m], t4 += a2[m] * this._lookUpTableBezier[o3][m], r4 += j[m] * this._lookUpTableBezier[o3][m];
                }
                this.vertex(e4, t4, r4);
              }
              this.curFillColor = p[3], this.curStrokeColor = y[3], this.immediateMode._bezierVertex[0] = arguments.length <= 6 ? void 0 : arguments[6], this.immediateMode._bezierVertex[1] = arguments.length <= 7 ? void 0 : arguments[7], this.immediateMode._bezierVertex[2] = arguments.length <= 8 ? void 0 : arguments[8];
            }
          }, S.default.RendererGL.prototype.quadraticVertex = function() {
            if (0 === this.immediateMode._quadraticVertex.length)
              throw Error("vertex() must be used once before calling quadraticVertex()");
            var e4, t4, r4, o3, n3, s3, i3 = [], a2 = [], l2 = arguments.length;
            if (0 === this._lookUpTableQuadratic.length || this._lutQuadraticDetail !== this._pInst._curveDetail) {
              this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;
              for (var u = 1 / this._lutQuadraticDetail, c = 0, d = 1, f = 0; c < 1; ) {
                if (s3 = parseFloat(c.toFixed(6)), this._lookUpTableQuadratic[f] = this._quadraticCoefficients(s3), d.toFixed(6) === u.toFixed(6)) {
                  s3 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableQuadratic[f] = this._quadraticCoefficients(s3);
                  break;
                }
                c += u, d -= u, ++f;
              }
            }
            for (var h = this._lookUpTableQuadratic.length, p = [], m = 0; m < 3; m++)
              p.push([]);
            p[0] = this.immediateMode.geometry.vertexColors.slice(-4), p[2] = this.curFillColor.slice();
            var y = [];
            for (m = 0; m < 3; m++)
              y.push([]);
            if (y[0] = this.immediateMode.geometry.vertexStrokeColors.slice(-4), y[2] = this.curStrokeColor.slice(), 4 === l2) {
              this.isQuadratic = true;
              var i3 = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 2 ? void 0 : arguments[2]], a2 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 3 ? void 0 : arguments[3]], g = Math.hypot(i3[0] - i3[1], a2[0] - a2[1]);
              for (g /= g + Math.hypot(i3[1] - i3[2], a2[1] - a2[2]), n3 = 0; n3 < 4; n3++)
                p[1].push(p[0][n3] * (1 - g) + p[2][n3] * g), y[1].push(y[0][n3] * (1 - g) + y[2][n3] * g);
              for (o3 = 0; o3 < h; o3++) {
                for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e4 = t4 = 0; m < 3; m++) {
                  for (n3 = 0; n3 < 4; n3++)
                    this.curFillColor[n3] += this._lookUpTableQuadratic[o3][m] * p[m][n3], this.curStrokeColor[n3] += this._lookUpTableQuadratic[o3][m] * y[m][n3];
                  e4 += i3[m] * this._lookUpTableQuadratic[o3][m], t4 += a2[m] * this._lookUpTableQuadratic[o3][m];
                }
                this.vertex(e4, t4);
              }
              this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 2 ? void 0 : arguments[2], this.immediateMode._quadraticVertex[1] = arguments.length <= 3 ? void 0 : arguments[3];
            } else if (6 === l2) {
              this.isQuadratic = true, i3 = [this.immediateMode._quadraticVertex[0], arguments.length <= 0 ? void 0 : arguments[0], arguments.length <= 3 ? void 0 : arguments[3]], a2 = [this.immediateMode._quadraticVertex[1], arguments.length <= 1 ? void 0 : arguments[1], arguments.length <= 4 ? void 0 : arguments[4]];
              var v = [this.immediateMode._quadraticVertex[2], arguments.length <= 2 ? void 0 : arguments[2], arguments.length <= 5 ? void 0 : arguments[5]], b = Math.hypot(i3[0] - i3[1], a2[0] - a2[1], v[0] - v[1]);
              for (b /= b + Math.hypot(i3[1] - i3[2], a2[1] - a2[2], v[1] - v[2]), n3 = 0; n3 < 4; n3++)
                p[1].push(p[0][n3] * (1 - b) + p[2][n3] * b), y[1].push(y[0][n3] * (1 - b) + y[2][n3] * b);
              for (o3 = 0; o3 < h; o3++) {
                for (this.curFillColor = [0, 0, 0, 0], this.curStrokeColor = [0, 0, 0, 0], m = e4 = t4 = r4 = 0; m < 3; m++) {
                  for (n3 = 0; n3 < 4; n3++)
                    this.curFillColor[n3] += this._lookUpTableQuadratic[o3][m] * p[m][n3], this.curStrokeColor[n3] += this._lookUpTableQuadratic[o3][m] * y[m][n3];
                  e4 += i3[m] * this._lookUpTableQuadratic[o3][m], t4 += a2[m] * this._lookUpTableQuadratic[o3][m], r4 += v[m] * this._lookUpTableQuadratic[o3][m];
                }
                this.vertex(e4, t4, r4);
              }
              this.curFillColor = p[2], this.curStrokeColor = y[2], this.immediateMode._quadraticVertex[0] = arguments.length <= 3 ? void 0 : arguments[3], this.immediateMode._quadraticVertex[1] = arguments.length <= 4 ? void 0 : arguments[4], this.immediateMode._quadraticVertex[2] = arguments.length <= 5 ? void 0 : arguments[5];
            }
          }, S.default.RendererGL.prototype.curveVertex = function() {
            var e4, t4, r4, o3, n3, s3, i3 = [], a2 = [], l2 = arguments.length;
            if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
              this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;
              for (var u = 1 / this._lutBezierDetail, c = 0, d = 1, f = 0; c < 1; ) {
                if (s3 = parseFloat(c.toFixed(6)), this._lookUpTableBezier[f] = this._bezierCoefficients(s3), d.toFixed(6) === u.toFixed(6)) {
                  s3 = parseFloat(d.toFixed(6)) + parseFloat(c.toFixed(6)), ++f, this._lookUpTableBezier[f] = this._bezierCoefficients(s3);
                  break;
                }
                c += u, d -= u, ++f;
              }
            }
            var h = this._lookUpTableBezier.length;
            if (2 === l2) {
              if (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), 8 === this.immediateMode._curveVertex.length) {
                for (this.isCurve = true, i3 = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[6]]), a2 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[7]]), n3 = 0; n3 < h; n3++)
                  t4 = i3[0] * this._lookUpTableBezier[n3][0] + i3[1] * this._lookUpTableBezier[n3][1] + i3[2] * this._lookUpTableBezier[n3][2] + i3[3] * this._lookUpTableBezier[n3][3], r4 = a2[0] * this._lookUpTableBezier[n3][0] + a2[1] * this._lookUpTableBezier[n3][1] + a2[2] * this._lookUpTableBezier[n3][2] + a2[3] * this._lookUpTableBezier[n3][3], this.vertex(t4, r4);
                for (n3 = 0; n3 < l2; n3++)
                  this.immediateMode._curveVertex.shift();
              }
            } else if (3 === l2 && (this.immediateMode._curveVertex.push(arguments.length <= 0 ? void 0 : arguments[0]), this.immediateMode._curveVertex.push(arguments.length <= 1 ? void 0 : arguments[1]), this.immediateMode._curveVertex.push(arguments.length <= 2 ? void 0 : arguments[2]), 12 === this.immediateMode._curveVertex.length)) {
              for (this.isCurve = true, i3 = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[6], this.immediateMode._curveVertex[9]]), a2 = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[7], this.immediateMode._curveVertex[10]]), e4 = this._bezierToCatmull([this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[8], this.immediateMode._curveVertex[11]]), n3 = 0; n3 < h; n3++)
                t4 = i3[0] * this._lookUpTableBezier[n3][0] + i3[1] * this._lookUpTableBezier[n3][1] + i3[2] * this._lookUpTableBezier[n3][2] + i3[3] * this._lookUpTableBezier[n3][3], r4 = a2[0] * this._lookUpTableBezier[n3][0] + a2[1] * this._lookUpTableBezier[n3][1] + a2[2] * this._lookUpTableBezier[n3][2] + a2[3] * this._lookUpTableBezier[n3][3], o3 = e4[0] * this._lookUpTableBezier[n3][0] + e4[1] * this._lookUpTableBezier[n3][1] + e4[2] * this._lookUpTableBezier[n3][2] + e4[3] * this._lookUpTableBezier[n3][3], this.vertex(t4, r4, o3);
              for (n3 = 0; n3 < l2; n3++)
                this.immediateMode._curveVertex.shift();
            }
          }, S.default.RendererGL.prototype.image = function(e4, t4, r4, o3, n3, s3, i3, a2, l2) {
            this._isErasing && this.blendMode(this._cachedBlendMode), this._pInst.push(), this._pInst.noLights(), this._pInst.noStroke(), this._pInst.texture(e4), this._pInst.textureMode(_.NORMAL);
            var u = 0, c = (t4 <= e4.width && (u = t4 / e4.width), 1), t4 = (t4 + o3 <= e4.width && (c = (t4 + o3) / e4.width), 0), o3 = (r4 <= e4.height && (t4 = r4 / e4.height), 1);
            r4 + n3 <= e4.height && (o3 = (r4 + n3) / e4.height), this.beginShape(), this.vertex(s3, i3, 0, u, t4), this.vertex(s3 + a2, i3, 0, c, t4), this.vertex(s3 + a2, i3 + l2, 0, c, o3), this.vertex(s3, i3 + l2, 0, u, o3), this.endShape(_.CLOSE), this._pInst.pop(), this._isErasing && this.blendMode(_.REMOVE);
          };
          var n2 = S.default;
          r3.default = n2;
        }, { "../core/constants": 262, "../core/main": 273, "./p5.Geometry": 323, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.math.hypot": 169, "core-js/modules/es.math.sign": 170, "core-js/modules/es.number.to-fixed": 173, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 317: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.math.sign"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.math.sign"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var g = (s3 = e3("../core/main")) && s3.__esModule ? s3 : { default: s3 }, n2 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== v(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = i2();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function i2() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), i2 = function() {
              return e4;
            }, e4);
          }
          function v(e4) {
            return (v = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          g.default.prototype.orbitControl = function(e4, t4, r4, o3) {
            var n3 = this, s4 = (this._assert3d("orbitControl"), g.default._validateParameters("orbitControl", arguments), this._renderer._curCamera);
            void 0 === e4 && (e4 = 1), void 0 === t4 && (t4 = e4), void 0 === r4 && (r4 = 1), "object" !== v(o3) && (o3 = {}), true !== this.contextMenuDisabled && (this.canvas.oncontextmenu = function() {
              return false;
            }, this._setProperty("contextMenuDisabled", true)), true !== this.wheelDefaultDisabled && (this.canvas.onwheel = function() {
              return false;
            }, this._setProperty("wheelDefaultDisabled", true));
            var i3 = o3.disableTouchActions;
            true === this.touchActionsDisabled || void 0 !== i3 && !i3 || (this.canvas.style["touch-action"] = "none", this._setProperty("touchActionsDisabled", true));
            var a, l, u, i3 = o3.freeRotation, o3 = void 0 !== i3 && i3, c = [], i3 = (this.touches.forEach(function(t5) {
              n3._renderer.prevTouches.forEach(function(e5) {
                t5.id === e5.id && (e5 = { x: t5.x, y: t5.y, px: e5.x, py: e5.y }, c.push(e5));
              });
            }), this._renderer.prevTouches = this.touches, 0), d = 0, f = 0, h = 0, p = 0, m = this.height < this.width ? this.height : this.width, y = false;
            return 0 < c.length ? (y = 0 < c[0].x && c[0].x < this.width && 0 < c[0].y && c[0].y < this.height, 1 === c.length ? (d = -e4 * ((a = c[0]).x - a.px) / m, f = t4 * (a.y - a.py) / m) : (a = c[0], l = c[1], i3 = -(Math.hypot(a.x - l.x, a.y - l.y) - Math.hypot(a.px - l.px, a.py - l.py)) * r4 * 4e-4, h = 0.5 * (a.x + l.x) - 0.5 * (a.px + l.px), p = 0.5 * (a.y + l.y) - 0.5 * (a.py + l.py)), 0 < this.touches.length ? y && (this._renderer.executeRotateAndMove = true, this._renderer.executeZoom = true) : (this._renderer.executeRotateAndMove = false, this._renderer.executeZoom = false)) : (y = 0 < this.mouseX && this.mouseX < this.width && 0 < this.mouseY && this.mouseY < this.height, 0 !== this._mouseWheelDeltaY ? (i3 = Math.sign(this._mouseWheelDeltaY) * r4, i3 *= 0.01, this._mouseWheelDeltaY = 0, y && (this._renderer.executeZoom = true)) : this._renderer.zoomFlag = false, this.mouseIsPressed ? (this.mouseButton === this.LEFT ? (d = -e4 * this.movedX / m, f = t4 * this.movedY / m) : this.mouseButton === this.RIGHT && (h = this.movedX, p = this.movedY), y && (this._renderer.executeRotateAndMove = true)) : this._renderer.executeRotateAndMove = false), 0 !== i3 && this._renderer.executeZoom && (this._renderer.zoomVelocity += i3), 1e-3 < Math.abs(this._renderer.zoomVelocity) ? (o3 ? s4._orbitFree(0, 0, this._renderer.zoomVelocity) : s4._orbit(0, 0, this._renderer.zoomVelocity), 0 !== s4.projMatrix.mat4[15] && (s4.projMatrix.mat4[0] *= Math.pow(10, -this._renderer.zoomVelocity), s4.projMatrix.mat4[5] *= Math.pow(10, -this._renderer.zoomVelocity), this._renderer.uPMatrix.mat4[0] = s4.projMatrix.mat4[0], this._renderer.uPMatrix.mat4[5] = s4.projMatrix.mat4[5]), this._renderer.zoomVelocity *= 0.85) : this._renderer.zoomVelocity = 0, 0 === d && 0 === f || !this._renderer.executeRotateAndMove || this._renderer.rotateVelocity.add(0.6 * d, 0.6 * f), 1e-6 < this._renderer.rotateVelocity.magSq() ? (o3 ? s4._orbitFree(-this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0) : s4._orbit(this._renderer.rotateVelocity.x, this._renderer.rotateVelocity.y, 0), this._renderer.rotateVelocity.mult(0.85)) : this._renderer.rotateVelocity.set(0, 0), 0 === h && 0 === p || !this._renderer.executeRotateAndMove || (a = 2 * h / this.width, l = 2 * -p / this.height, this._renderer.moveVelocity.add(0.15 * a, 0.15 * l)), 1e-6 < this._renderer.moveVelocity.magSq() ? (r4 = s4._getLocalAxes(), e4 = s4.eyeX - s4.centerX, t4 = s4.eyeY - s4.centerY, m = s4.eyeZ - s4.centerZ, y = Math.sqrt(e4 * e4 + t4 * t4 + m * m), i3 = new g.default.Vector(s4.centerX, s4.centerY, s4.centerZ), i3 = s4.cameraMatrix.multiplyPoint(i3), (i3 = this._renderer.uPMatrix.multiplyAndNormalizePoint(i3)).x -= this._renderer.moveVelocity.x, i3.y -= this._renderer.moveVelocity.y, f = 0 === (d = this._renderer.uPMatrix.mat4)[15] ? (u = (d[8] + i3.x) / d[0] * y, (d[9] + i3.y) / d[5] * y) : (u = (i3.x - d[12]) / d[0], (i3.y - d[13]) / d[5]), s4.setPosition(s4.eyeX + u * r4.x[0] + f * r4.y[0], s4.eyeY + u * r4.x[1] + f * r4.y[1], s4.eyeZ + u * r4.x[2] + f * r4.y[2]), this._renderer.moveVelocity.mult(0.85)) : this._renderer.moveVelocity.set(0, 0), this;
          }, g.default.prototype.debugMode = function() {
            this._assert3d("debugMode");
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            g.default._validateParameters("debugMode", t4);
            for (var o3 = this._registeredMethods.post.length - 1; 0 <= o3; o3--)
              this._registeredMethods.post[o3].toString() !== this._grid().toString() && this._registeredMethods.post[o3].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(o3, 1);
            t4[0] === n2.GRID ? this.registerMethod("post", this._grid.call(this, t4[1], t4[2], t4[3], t4[4], t4[5])) : t4[0] === n2.AXES ? this.registerMethod("post", this._axesIcon.call(this, t4[1], t4[2], t4[3], t4[4])) : (this.registerMethod("post", this._grid.call(this, t4[0], t4[1], t4[2], t4[3], t4[4])), this.registerMethod("post", this._axesIcon.call(this, t4[5], t4[6], t4[7], t4[8])));
          }, g.default.prototype.noDebugMode = function() {
            this._assert3d("noDebugMode");
            for (var e4 = this._registeredMethods.post.length - 1; 0 <= e4; e4--)
              this._registeredMethods.post[e4].toString() !== this._grid().toString() && this._registeredMethods.post[e4].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e4, 1);
          }, g.default.prototype._grid = function(e4, r4, o3, n3, s4) {
            void 0 === e4 && (e4 = this.width / 2), void 0 === r4 && (r4 = Math.round(e4 / 30) < 4 ? 4 : Math.round(e4 / 30)), void 0 === o3 && (o3 = 0), void 0 === n3 && (n3 = 0), void 0 === s4 && (s4 = 0);
            var i3 = e4 / r4, a = e4 / 2;
            return function() {
              this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]);
              for (var e5 = 0; e5 <= r4; e5++)
                this.beginShape(this.LINES), this.vertex(-a + o3, n3, e5 * i3 - a + s4), this.vertex(a + o3, n3, e5 * i3 - a + s4), this.endShape();
              for (var t4 = 0; t4 <= r4; t4++)
                this.beginShape(this.LINES), this.vertex(t4 * i3 - a + o3, n3, -a + s4), this.vertex(t4 * i3 - a + o3, n3, a + s4), this.endShape();
              this.pop();
            };
          }, g.default.prototype._axesIcon = function(e4, t4, r4, o3) {
            return void 0 === e4 && (e4 = 40 < this.width / 20 ? this.width / 20 : 40), void 0 === t4 && (t4 = -this.width / 4), void 0 === r4 && (r4 = t4), void 0 === o3 && (o3 = t4), function() {
              this.push(), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]), this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t4, r4, o3), this.vertex(t4 + e4, r4, o3), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), this.vertex(t4, r4, o3), this.vertex(t4, r4 + e4, o3), this.endShape(), this.stroke(0, 0, 255), this.beginShape(this.LINES), this.vertex(t4, r4, o3), this.vertex(t4, r4, o3 + e4), this.endShape(), this.pop();
            };
          };
          var s3 = g.default;
          r3.default = s3;
        }, { "../core/constants": 262, "../core/main": 273, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.splice": 166, "core-js/modules/es.math.hypot": 169, "core-js/modules/es.math.sign": 170, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.for-each": 235, "core-js/modules/web.dom-collections.iterator": 236 }], 318: [function(e3, t3, r3) {
          "use strict";
          Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var m = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          m.default.prototype.ambientLight = function(e4, t4, r4, o2) {
            this._assert3d("ambientLight"), m.default._validateParameters("ambientLight", arguments);
            var n2 = this.color.apply(this, arguments);
            return this._renderer.ambientLightColors.push(n2._array[0], n2._array[1], n2._array[2]), this._renderer._enableLighting = true, this;
          }, m.default.prototype.specularColor = function(e4, t4, r4) {
            this._assert3d("specularColor"), m.default._validateParameters("specularColor", arguments);
            var o2 = this.color.apply(this, arguments);
            return this._renderer.specularColors = [o2._array[0], o2._array[1], o2._array[2]], this;
          }, m.default.prototype.directionalLight = function(e4, t4, r4, o2, n2, s3) {
            this._assert3d("directionalLight"), m.default._validateParameters("directionalLight", arguments), e4 = e4 instanceof m.default.Color ? e4 : this.color(e4, t4, r4);
            var i2, a, t4 = arguments[arguments.length - 1], r4 = "number" == typeof t4 ? (i2 = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i2 = t4.x, a = t4.y, t4.z), t4 = Math.sqrt(i2 * i2 + a * a + r4 * r4);
            return this._renderer.directionalLightDirections.push(i2 / t4, a / t4, r4 / t4), this._renderer.directionalLightDiffuseColors.push(e4._array[0], e4._array[1], e4._array[2]), Array.prototype.push.apply(this._renderer.directionalLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
          }, m.default.prototype.pointLight = function(e4, t4, r4, o2, n2, s3) {
            this._assert3d("pointLight"), m.default._validateParameters("pointLight", arguments), e4 = e4 instanceof m.default.Color ? e4 : this.color(e4, t4, r4);
            var i2, a, t4 = arguments[arguments.length - 1], r4 = "number" == typeof t4 ? (i2 = arguments[arguments.length - 3], a = arguments[arguments.length - 2], arguments[arguments.length - 1]) : (i2 = t4.x, a = t4.y, t4.z);
            return this._renderer.pointLightPositions.push(i2, a, r4), this._renderer.pointLightDiffuseColors.push(e4._array[0], e4._array[1], e4._array[2]), Array.prototype.push.apply(this._renderer.pointLightSpecularColors, this._renderer.specularColors), this._renderer._enableLighting = true, this;
          }, m.default.prototype.lights = function() {
            this._assert3d("lights");
            var e4 = this.color("rgb(128,128,128)");
            return this.ambientLight(e4), this.directionalLight(e4, 0, 0, -1), this;
          }, m.default.prototype.lightFalloff = function(e4, t4, r4) {
            return this._assert3d("lightFalloff"), m.default._validateParameters("lightFalloff", arguments), e4 < 0 && (e4 = 0, console.warn("Value of constant argument in lightFalloff() should be never be negative. Set to 0.")), t4 < 0 && (t4 = 0, console.warn("Value of linear argument in lightFalloff() should be never be negative. Set to 0.")), r4 < 0 && (r4 = 0, console.warn("Value of quadratic argument in lightFalloff() should be never be negative. Set to 0.")), 0 === e4 && 0 === t4 && 0 === r4 && (e4 = 1, console.warn("Either one of the three arguments in lightFalloff() should be greater than zero. Set constant argument to 1.")), this._renderer.constantAttenuation = e4, this._renderer.linearAttenuation = t4, this._renderer.quadraticAttenuation = r4, this;
          }, m.default.prototype.spotLight = function(e4, t4, r4, o2, n2, s3, i2, a, l, u, c) {
            this._assert3d("spotLight"), m.default._validateParameters("spotLight", arguments);
            var d, f, h, p = arguments.length;
            switch (p) {
              case 11:
              case 10:
                d = this.color(e4, t4, r4), f = new m.default.Vector(o2, n2, s3), h = new m.default.Vector(i2, a, l);
                break;
              case 9:
                e4 instanceof m.default.Color ? (d = e4, f = new m.default.Vector(t4, r4, o2), h = new m.default.Vector(n2, s3, i2), u = a, c = l) : o2 instanceof m.default.Vector ? (d = this.color(e4, t4, r4), f = o2, h = new m.default.Vector(n2, s3, i2), u = a, c = l) : i2 instanceof m.default.Vector ? (d = this.color(e4, t4, r4), f = new m.default.Vector(o2, n2, s3), h = i2, u = a, c = l) : (d = this.color(e4, t4, r4), f = new m.default.Vector(o2, n2, s3), h = new m.default.Vector(i2, a, l));
                break;
              case 8:
                u = (h = e4 instanceof m.default.Color ? (d = e4, f = new m.default.Vector(t4, r4, o2), new m.default.Vector(n2, s3, i2)) : o2 instanceof m.default.Vector ? (d = this.color(e4, t4, r4), f = o2, new m.default.Vector(n2, s3, i2)) : (d = this.color(e4, t4, r4), f = new m.default.Vector(o2, n2, s3), i2), a);
                break;
              case 7:
                e4 instanceof m.default.Color && t4 instanceof m.default.Vector ? (d = e4, f = t4, h = new m.default.Vector(r4, o2, n2), u = s3, c = i2) : e4 instanceof m.default.Color && n2 instanceof m.default.Vector ? (d = e4, f = new m.default.Vector(t4, r4, o2), h = n2, u = s3, c = i2) : o2 instanceof m.default.Vector && n2 instanceof m.default.Vector ? (d = this.color(e4, t4, r4), f = o2, h = n2, u = s3, c = i2) : h = e4 instanceof m.default.Color ? (d = e4, f = new m.default.Vector(t4, r4, o2), new m.default.Vector(n2, s3, i2)) : o2 instanceof m.default.Vector ? (d = this.color(e4, t4, r4), f = o2, new m.default.Vector(n2, s3, i2)) : (d = this.color(e4, t4, r4), f = new m.default.Vector(o2, n2, s3), i2);
                break;
              case 6:
                o2 instanceof m.default.Vector && n2 instanceof m.default.Vector ? (d = this.color(e4, t4, r4), f = o2, h = n2, u = s3) : e4 instanceof m.default.Color && n2 instanceof m.default.Vector ? (d = e4, f = new m.default.Vector(t4, r4, o2), h = n2, u = s3) : e4 instanceof m.default.Color && t4 instanceof m.default.Vector && (d = e4, f = t4, h = new m.default.Vector(r4, o2, n2), u = s3);
                break;
              case 5:
                e4 instanceof m.default.Color && t4 instanceof m.default.Vector && r4 instanceof m.default.Vector ? (d = e4, f = t4, h = r4, u = o2, c = n2) : o2 instanceof m.default.Vector && n2 instanceof m.default.Vector ? (d = this.color(e4, t4, r4), f = o2, h = n2) : e4 instanceof m.default.Color && n2 instanceof m.default.Vector ? (d = e4, f = new m.default.Vector(t4, r4, o2), h = n2) : e4 instanceof m.default.Color && t4 instanceof m.default.Vector && (d = e4, f = t4, h = new m.default.Vector(r4, o2, n2));
                break;
              case 4:
                d = e4, f = t4, h = r4, u = o2;
                break;
              case 3:
                d = e4, f = t4, h = r4;
                break;
              default:
                return console.warn("Sorry, input for spotlight() is not in prescribed format. Too ".concat(p < 3 ? "few" : "many", " arguments were provided")), this;
            }
            return this._renderer.spotLightDiffuseColors.push(d._array[0], d._array[1], d._array[2]), Array.prototype.push.apply(this._renderer.spotLightSpecularColors, this._renderer.specularColors), this._renderer.spotLightPositions.push(f.x, f.y, f.z), h.normalize(), this._renderer.spotLightDirections.push(h.x, h.y, h.z), void 0 === u && (u = Math.PI / 3), void 0 !== c && c < 1 ? (c = 1, console.warn("Value of concentration needs to be greater than 1. Setting it to 1")) : void 0 === c && (c = 100), u = this._renderer._pInst._toRadians(u), this._renderer.spotLightAngle.push(Math.cos(u)), this._renderer.spotLightConc.push(c), this._renderer._enableLighting = true, this;
          }, m.default.prototype.noLights = function() {
            this._assert3d("noLights");
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            return m.default._validateParameters("noLights", t4), this._renderer._enableLighting = false, this._renderer.ambientLightColors.length = 0, this._renderer.specularColors = [1, 1, 1], this._renderer.directionalLightDirections.length = 0, this._renderer.directionalLightDiffuseColors.length = 0, this._renderer.directionalLightSpecularColors.length = 0, this._renderer.pointLightPositions.length = 0, this._renderer.pointLightDiffuseColors.length = 0, this._renderer.pointLightSpecularColors.length = 0, this._renderer.spotLightPositions.length = 0, this._renderer.spotLightDirections.length = 0, this._renderer.spotLightDiffuseColors.length = 0, this._renderer.spotLightSpecularColors.length = 0, this._renderer.spotLightAngle.length = 0, this._renderer.spotLightConc.length = 0, this._renderer.constantAttenuation = 1, this._renderer.linearAttenuation = 0, this._renderer.quadraticAttenuation = 0, this._renderer._useShininess = 1, this;
          };
          e3 = m.default;
          r3.default = e3;
        }, { "../core/main": 273 }], 319: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.splice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.match"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.trim"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var x = (o2 = e3("../core/main")) && o2.__esModule ? o2 : { default: o2 };
          e3("./p5.Geometry"), x.default.prototype.loadModel = function(e4) {
            x.default._validateParameters("loadModel", arguments);
            var y, g, t4, r4 = e4.slice(-4), v = ("boolean" == typeof arguments[1] ? (y = arguments[1], g = arguments[2], t4 = arguments[3], void 0 !== arguments[4] && (r4 = arguments[4])) : (y = false, g = arguments[1], t4 = arguments[2], void 0 !== arguments[3] && (r4 = arguments[3])), new x.default.Geometry()), b = (v.gid = "".concat(e4, "|").concat(y), this);
            return r4.match(/\.stl$/i) ? this.httpDo(e4, "GET", "arrayBuffer", function(e5) {
              !function(e6, t5) {
                if (function(e7) {
                  for (var t6 = new DataView(e7), r5 = [115, 111, 108, 105, 100], o3 = 0; o3 < 5; o3++)
                    if (function(e8, t7, r6) {
                      for (var o4 = 0, n2 = e8.length; o4 < n2; o4++)
                        if (e8[o4] !== t7.getUint8(r6 + o4, false))
                          return;
                      return 1;
                    }(r5, t6, o3))
                      return;
                  return 1;
                }(t5))
                  !function(e7, t6) {
                    for (var r5, o3, n2, s3, i2, a, l, u = new DataView(t6), c = u.getUint32(80, true), d = false, f = 0; f < 70; f++)
                      1129270351 === u.getUint32(f, false) && 82 === u.getUint8(f + 4) && 61 === u.getUint8(f + 5) && (d = true, s3 = [], i2 = u.getUint8(f + 6) / 255, a = u.getUint8(f + 7) / 255, l = u.getUint8(f + 8) / 255);
                    for (var h = 0; h < c; h++) {
                      for (var p, m = 84 + 50 * h, y2 = u.getFloat32(m, true), g2 = u.getFloat32(4 + m, true), v2 = u.getFloat32(8 + m, true), b2 = (d && (p = u.getUint16(48 + m, true), n2 = 0 == (32768 & p) ? (r5 = (31 & p) / 31, o3 = (p >> 5 & 31) / 31, (p >> 10 & 31) / 31) : (r5 = i2, o3 = a, l)), new x.default.Vector(y2, g2, v2)), j = 1; j <= 3; j++) {
                        var _ = m + 12 * j, _ = new x.default.Vector(u.getFloat32(_, true), u.getFloat32(4 + _, true), u.getFloat32(8 + _, true));
                        e7.vertices.push(_), e7.vertexNormals.push(b2), d && s3.push(r5, o3, n2);
                      }
                      e7.faces.push([3 * h, 3 * h + 1, 3 * h + 2]), e7.uvs.push([0, 0], [0, 0], [0, 0]);
                    }
                  }(e6, t5);
                else {
                  t5 = new DataView(t5);
                  if (!("TextDecoder" in window))
                    return console.warn("Sorry, ASCII STL loading only works in browsers that support TextDecoder (https://caniuse.com/#feat=textencoder)");
                  t5 = new TextDecoder("utf-8").decode(t5).split("\n");
                  !function(e7, t6) {
                    for (var r5, o3, n2 = "", s3 = [], i2 = 0; i2 < t6.length; ++i2) {
                      for (var a = t6[i2].trim(), l = a.split(" "), u = 0; u < l.length; ++u)
                        "" === l[u] && l.splice(u, 1);
                      if (0 !== l.length)
                        switch (n2) {
                          case "":
                            if ("solid" !== l[0])
                              return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "solid"'));
                            n2 = "solid";
                            break;
                          case "solid":
                            if ("facet" !== l[0] || "normal" !== l[1])
                              return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "facet normal"'));
                            r5 = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e7.vertexNormals.push(r5, r5, r5), n2 = "facet normal";
                            break;
                          case "facet normal":
                            if ("outer" !== l[0] || "loop" !== l[1])
                              return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "outer loop"'));
                            n2 = "vertex";
                            break;
                          case "vertex":
                            if ("vertex" === l[0])
                              o3 = new x.default.Vector(parseFloat(l[1]), parseFloat(l[2]), parseFloat(l[3])), e7.vertices.push(o3), e7.uvs.push([0, 0]), s3.push(e7.vertices.indexOf(o3));
                            else {
                              if ("endloop" !== l[0])
                                return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "vertex" or "endloop"'));
                              e7.faces.push(s3), s3 = [], n2 = "endloop";
                            }
                            break;
                          case "endloop":
                            if ("endfacet" !== l[0])
                              return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endfacet"'));
                            n2 = "endfacet";
                            break;
                          case "endfacet":
                            if ("endsolid" !== l[0]) {
                              if ("facet" !== l[0] || "normal" !== l[1])
                                return console.error(a), console.error('Invalid state "'.concat(l[0], '", should be "endsolid" or "facet normal"'));
                              r5 = new x.default.Vector(parseFloat(l[2]), parseFloat(l[3]), parseFloat(l[4])), e7.vertexNormals.push(r5, r5, r5), n2 = "facet normal";
                            }
                            break;
                          default:
                            console.error('Invalid state "'.concat(n2, '"'));
                        }
                    }
                  }(e6, t5);
                }
              }(v, e5), y && v.normalize(), b._decrementPreload(), "function" == typeof g && g(v);
            }, t4) : r4.match(/\.obj$/i) ? this.loadStrings(e4, function(e5) {
              for (var t5 = v, r5 = e5, o3 = { v: [], vt: [], vn: [] }, n2 = {}, s3 = 0; s3 < r5.length; ++s3) {
                var i2 = r5[s3].trim().split(/\b\s+/);
                if (0 < i2.length) {
                  if ("v" === i2[0] || "vn" === i2[0]) {
                    var a = new x.default.Vector(parseFloat(i2[1]), parseFloat(i2[2]), parseFloat(i2[3]));
                    o3[i2[0]].push(a);
                  } else if ("vt" === i2[0]) {
                    a = [parseFloat(i2[1]), 1 - parseFloat(i2[2])];
                    o3[i2[0]].push(a);
                  } else if ("f" === i2[0])
                    for (var l = 3; l < i2.length; ++l) {
                      for (var u = [], c = [1, l - 1, l], d = 0; d < c.length; ++d) {
                        var f = i2[c[d]], h = 0;
                        if (void 0 !== n2[f])
                          h = n2[f];
                        else {
                          for (var p = f.split("/"), m = 0; m < p.length; m++)
                            p[m] = parseInt(p[m]) - 1;
                          h = n2[f] = t5.vertices.length, t5.vertices.push(o3.v[p[0]].copy()), o3.vt[p[1]] ? t5.uvs.push(o3.vt[p[1]].slice()) : t5.uvs.push([0, 0]), o3.vn[p[2]] && t5.vertexNormals.push(o3.vn[p[2]].copy());
                        }
                        u.push(h);
                      }
                      u[0] !== u[1] && u[0] !== u[2] && u[1] !== u[2] && t5.faces.push(u);
                    }
                }
              }
              0 === t5.vertexNormals.length && t5.computeNormals(), y && v.normalize(), b._decrementPreload(), "function" == typeof g && g(v);
            }, t4) : (x.default._friendlyFileLoadError(3, e4), t4 ? t4() : x.default._friendlyError("Sorry, the file type is invalid. Only OBJ and STL files are supported.")), v;
          }, x.default.prototype.model = function(e4) {
            this._assert3d("model"), x.default._validateParameters("model", arguments), 0 < e4.vertices.length && (this._renderer.geometryInHash(e4.gid) || (0 === e4.edges.length && e4._makeTriangleEdges(), e4._edgesToVertices(), this._renderer.createBuffers(e4.gid, e4)), this._renderer.drawBuffers(e4.gid));
          };
          var o2 = x.default;
          r3.default = o2;
        }, { "../core/main": 273, "./p5.Geometry": 323, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.splice": 166, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.match": 191, "core-js/modules/es.string.split": 196, "core-js/modules/es.string.trim": 199 }], 320: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.join"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var u = (s3 = e3("../core/main")) && s3.__esModule ? s3 : { default: s3 }, n2 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          e3("./p5.Texture"), u.default.prototype.loadShader = function(e4, t4, r4, o3) {
            u.default._validateParameters("loadShader", arguments), o3 = o3 || console.error;
            function n3() {
              i3._decrementPreload(), r4 && r4(s4);
            }
            var s4 = new u.default.Shader(), i3 = this, a2 = false, l = false;
            return this.loadStrings(e4, function(e5) {
              s4._vertSrc = e5.join("\n"), l = true, a2 && n3();
            }, o3), this.loadStrings(t4, function(e5) {
              s4._fragSrc = e5.join("\n"), a2 = true, l && n3();
            }, o3), s4;
          }, u.default.prototype.createShader = function(e4, t4) {
            return this._assert3d("createShader"), u.default._validateParameters("createShader", arguments), new u.default.Shader(this._renderer, e4, t4);
          }, u.default.prototype.shader = function(e4) {
            return this._assert3d("shader"), u.default._validateParameters("shader", arguments), void 0 === e4._renderer && (e4._renderer = this._renderer), e4.init(), e4.isStrokeShader() ? this._renderer.userStrokeShader = e4 : (this._renderer.userFillShader = e4, this._renderer._useNormalMaterial = false), this;
          }, u.default.prototype.resetShader = function() {
            return this._renderer.userFillShader = this._renderer.userStrokeShader = null, this;
          }, u.default.prototype.texture = function(e4) {
            return this._assert3d("texture"), u.default._validateParameters("texture", arguments), e4.gifProperties && e4._animateGif(this), this._renderer.drawMode = n2.TEXTURE, this._renderer._useNormalMaterial = false, this._renderer._tex = e4, this._renderer._setProperty("_doFill", true), this;
          }, u.default.prototype.textureMode = function(e4) {
            e4 !== n2.IMAGE && e4 !== n2.NORMAL ? console.warn("You tried to set ".concat(e4, " textureMode only supports IMAGE & NORMAL ")) : this._renderer.textureMode = e4;
          }, u.default.prototype.textureWrap = function(e4) {
            var t4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : e4, r4 = (this._renderer.textureWrapX = e4, this._renderer.textureWrapY = t4, true), o3 = false, n3 = void 0;
            try {
              for (var s4, i3 = this._renderer.textures.values()[Symbol.iterator](); !(r4 = (s4 = i3.next()).done); r4 = true)
                s4.value.setWrapMode(e4, t4);
            } catch (e5) {
              o3 = true, n3 = e5;
            } finally {
              try {
                r4 || null == i3.return || i3.return();
              } finally {
                if (o3)
                  throw n3;
              }
            }
          }, u.default.prototype.normalMaterial = function() {
            this._assert3d("normalMaterial");
            for (var e4 = arguments.length, t4 = new Array(e4), r4 = 0; r4 < e4; r4++)
              t4[r4] = arguments[r4];
            return u.default._validateParameters("normalMaterial", t4), this._renderer.drawMode = n2.FILL, this._renderer._useSpecularMaterial = false, this._renderer._useEmissiveMaterial = false, this._renderer._useNormalMaterial = true, this._renderer.curFillColor = [1, 1, 1, 1], this._renderer._setProperty("_doFill", true), this.noStroke(), this;
          }, u.default.prototype.ambientMaterial = function(e4, t4, r4) {
            this._assert3d("ambientMaterial"), u.default._validateParameters("ambientMaterial", arguments);
            var o3 = u.default.prototype.color.apply(this, arguments);
            return this._renderer._hasSetAmbient = true, this._renderer.curAmbientColor = o3._array, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this._renderer._setProperty("_doFill", true), this;
          }, u.default.prototype.emissiveMaterial = function(e4, t4, r4, o3) {
            this._assert3d("emissiveMaterial"), u.default._validateParameters("emissiveMaterial", arguments);
            var n3 = u.default.prototype.color.apply(this, arguments);
            return this._renderer.curEmissiveColor = n3._array, this._renderer._useEmissiveMaterial = true, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this;
          }, u.default.prototype.specularMaterial = function(e4, t4, r4, o3) {
            this._assert3d("specularMaterial"), u.default._validateParameters("specularMaterial", arguments);
            var n3 = u.default.prototype.color.apply(this, arguments);
            return this._renderer.curSpecularColor = n3._array, this._renderer._useSpecularMaterial = true, this._renderer._useNormalMaterial = false, this._renderer._enableLighting = true, this;
          }, u.default.prototype.shininess = function(e4) {
            return this._assert3d("shininess"), u.default._validateParameters("shininess", arguments), this._renderer._useShininess = e4 = e4 < 1 ? 1 : e4, this;
          }, u.default.RendererGL.prototype._applyColorBlend = function(e4) {
            var t4 = this.GL, r4 = this.drawMode === n2.TEXTURE, r4 = this.userFillShader || this.userStrokeShader || this.userPointShader || r4 || this.curBlendMode !== n2.BLEND || e4[e4.length - 1] < 1 || this._isErasing;
            return r4 !== this._isBlending && (r4 || this.curBlendMode !== n2.BLEND && this.curBlendMode !== n2.ADD ? t4.enable(t4.BLEND) : t4.disable(t4.BLEND), t4.depthMask(true), this._isBlending = r4), this._applyBlendMode(), e4;
          }, u.default.RendererGL.prototype._applyBlendMode = function() {
            if (this._cachedBlendMode !== this.curBlendMode) {
              var e4 = this.GL;
              switch (this.curBlendMode) {
                case n2.BLEND:
                  e4.blendEquation(e4.FUNC_ADD), e4.blendFunc(e4.ONE, e4.ONE_MINUS_SRC_ALPHA);
                  break;
                case n2.ADD:
                  e4.blendEquation(e4.FUNC_ADD), e4.blendFunc(e4.ONE, e4.ONE);
                  break;
                case n2.REMOVE:
                  e4.blendEquation(e4.FUNC_ADD), e4.blendFunc(e4.ZERO, e4.ONE_MINUS_SRC_ALPHA);
                  break;
                case n2.MULTIPLY:
                  e4.blendEquation(e4.FUNC_ADD), e4.blendFunc(e4.DST_COLOR, e4.ONE_MINUS_SRC_ALPHA);
                  break;
                case n2.SCREEN:
                  e4.blendEquation(e4.FUNC_ADD), e4.blendFunc(e4.ONE, e4.ONE_MINUS_SRC_COLOR);
                  break;
                case n2.EXCLUSION:
                  e4.blendEquationSeparate(e4.FUNC_ADD, e4.FUNC_ADD), e4.blendFuncSeparate(e4.ONE_MINUS_DST_COLOR, e4.ONE_MINUS_SRC_COLOR, e4.ONE, e4.ONE);
                  break;
                case n2.REPLACE:
                  e4.blendEquation(e4.FUNC_ADD), e4.blendFunc(e4.ONE, e4.ZERO);
                  break;
                case n2.SUBTRACT:
                  e4.blendEquationSeparate(e4.FUNC_REVERSE_SUBTRACT, e4.FUNC_ADD), e4.blendFuncSeparate(e4.ONE, e4.ONE, e4.ONE, e4.ONE_MINUS_SRC_ALPHA);
                  break;
                case n2.DARKEST:
                  this.blendExt ? (e4.blendEquationSeparate(this.blendExt.MIN || this.blendExt.MIN_EXT, e4.FUNC_ADD), e4.blendFuncSeparate(e4.ONE, e4.ONE, e4.ONE, e4.ONE)) : console.warn("blendMode(DARKEST) does not work in your browser in WEBGL mode.");
                  break;
                case n2.LIGHTEST:
                  this.blendExt ? (e4.blendEquationSeparate(this.blendExt.MAX || this.blendExt.MAX_EXT, e4.FUNC_ADD), e4.blendFuncSeparate(e4.ONE, e4.ONE, e4.ONE, e4.ONE)) : console.warn("blendMode(LIGHTEST) does not work in your browser in WEBGL mode.");
                  break;
                default:
                  console.error("Oops! Somehow RendererGL set curBlendMode to an unsupported mode.");
              }
              this._isErasing || (this._cachedBlendMode = this.curBlendMode);
            }
          };
          var s3 = u.default;
          r3.default = s3;
        }, { "../core/constants": 262, "../core/main": 273, "./p5.Texture": 330, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.join": 161, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 321: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.string.sub"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.math.hypot"), e3("core-js/modules/es.string.sub"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var _ = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          _.default.prototype.camera = function() {
            var e4;
            this._assert3d("camera");
            for (var t4 = arguments.length, r4 = new Array(t4), o2 = 0; o2 < t4; o2++)
              r4[o2] = arguments[o2];
            return _.default._validateParameters("camera", r4), (e4 = this._renderer._curCamera).camera.apply(e4, r4), this;
          }, _.default.prototype.perspective = function() {
            var e4;
            this._assert3d("perspective");
            for (var t4 = arguments.length, r4 = new Array(t4), o2 = 0; o2 < t4; o2++)
              r4[o2] = arguments[o2];
            return _.default._validateParameters("perspective", r4), (e4 = this._renderer._curCamera).perspective.apply(e4, r4), this;
          }, _.default.prototype.ortho = function() {
            var e4;
            this._assert3d("ortho");
            for (var t4 = arguments.length, r4 = new Array(t4), o2 = 0; o2 < t4; o2++)
              r4[o2] = arguments[o2];
            return _.default._validateParameters("ortho", r4), (e4 = this._renderer._curCamera).ortho.apply(e4, r4), this;
          }, _.default.prototype.frustum = function() {
            var e4;
            this._assert3d("frustum");
            for (var t4 = arguments.length, r4 = new Array(t4), o2 = 0; o2 < t4; o2++)
              r4[o2] = arguments[o2];
            return _.default._validateParameters("frustum", r4), (e4 = this._renderer._curCamera).frustum.apply(e4, r4), this;
          }, _.default.prototype.createCamera = function() {
            this._assert3d("createCamera");
            var e4 = new _.default.Camera(this._renderer);
            return e4._computeCameraDefaultSettings(), e4._setDefaultCamera(), this._renderer._curCamera = e4;
          }, _.default.Camera = function() {
            function t4(e5) {
              if (!(this instanceof t4))
                throw new TypeError("Cannot call a class as a function");
              this._renderer = e5, this.cameraType = "default", this.cameraMatrix = new _.default.Matrix(), this.projMatrix = new _.default.Matrix(), this.yScale = 1;
            }
            var e4, r4, o2;
            return e4 = t4, (r4 = [{ key: "perspective", value: function(e5, t5, r5, o3) {
              this.cameraType = 0 < arguments.length ? "custom" : "default", void 0 === e5 ? (e5 = this.defaultCameraFOV, this.cameraFOV = e5) : this.cameraFOV = this._renderer._pInst._toRadians(e5), void 0 === t5 && (t5 = this.defaultAspectRatio), void 0 === r5 && (r5 = this.defaultCameraNear), void 0 === o3 && (o3 = this.defaultCameraFar), r5 <= 1e-4 && (r5 = 0.01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), o3 < r5 && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), this.aspectRatio = t5, this.cameraNear = r5, this.cameraFar = o3, this.projMatrix = _.default.Matrix.identity();
              var e5 = 1 / Math.tan(this.cameraFOV / 2), n3 = 1 / (this.cameraNear - this.cameraFar);
              this.projMatrix.set(e5 / t5, 0, 0, 0, 0, -e5 * this.yScale, 0, 0, 0, 0, (o3 + r5) * n3, -1, 0, 0, 2 * o3 * r5 * n3, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]);
            } }, { key: "ortho", value: function(e5, t5, r5, o3, n3, s3) {
              void 0 === e5 && (e5 = -this._renderer.width / 2), void 0 === t5 && (t5 = +this._renderer.width / 2), void 0 === r5 && (r5 = -this._renderer.height / 2), void 0 === o3 && (o3 = +this._renderer.height / 2), void 0 === n3 && (n3 = 0), void 0 === s3 && (s3 = Math.max(this._renderer.width, this._renderer.height)), this.cameraNear = n3;
              var i2 = t5 - e5, a = o3 - r5, l = (this.cameraFar = s3) - n3, u = 2 / i2, c = 2 / a * this.yScale, d = -2 / l, t5 = -(t5 + e5) / i2, e5 = -(o3 + r5) / a, i2 = -(s3 + n3) / l;
              this.projMatrix = _.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, 0, 0, d, 0, t5, e5, i2, 1), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
            } }, { key: "frustum", value: function(e5, t5, r5, o3, n3, s3) {
              void 0 === e5 && (e5 = 0.05 * -this._renderer.width), void 0 === t5 && (t5 = 0.05 * +this._renderer.width), void 0 === r5 && (r5 = 0.05 * +this._renderer.height), void 0 === o3 && (o3 = 0.05 * -this._renderer.height), void 0 === n3 && (n3 = this.defaultCameraNear), void 0 === s3 && (s3 = this.defaultCameraFar), this.cameraNear = n3;
              var i2 = t5 - e5, a = o3 - r5, l = (this.cameraFar = s3) - n3, u = 2 * n3 / i2, c = 2 * n3 / a * this.yScale, d = -2 * s3 * n3 / l, t5 = (t5 + e5) / i2, e5 = (o3 + r5) / a, i2 = -(s3 + n3) / l;
              this.projMatrix = _.default.Matrix.identity(), this.projMatrix.set(u, 0, 0, 0, 0, -c, 0, 0, t5, e5, i2, -1, 0, 0, d, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
            } }, { key: "_rotateView", value: function(e5, t5, r5, o3) {
              var n3 = this.centerX, s3 = this.centerY, i2 = this.centerZ, a = (n3 -= this.eyeX, s3 -= this.eyeY, i2 -= this.eyeZ, _.default.Matrix.identity(this._renderer._pInst)), e5 = (a.rotate(this._renderer._pInst._toRadians(e5), t5, r5, o3), [n3 * a.mat4[0] + s3 * a.mat4[4] + i2 * a.mat4[8], n3 * a.mat4[1] + s3 * a.mat4[5] + i2 * a.mat4[9], n3 * a.mat4[2] + s3 * a.mat4[6] + i2 * a.mat4[10]]);
              e5[0] += this.eyeX, e5[1] += this.eyeY, e5[2] += this.eyeZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, e5[0], e5[1], e5[2], this.upX, this.upY, this.upZ);
            } }, { key: "pan", value: function(e5) {
              var t5 = this._getLocalAxes();
              this._rotateView(e5, t5.y[0], t5.y[1], t5.y[2]);
            } }, { key: "tilt", value: function(e5) {
              var t5 = this._getLocalAxes();
              this._rotateView(e5, t5.x[0], t5.x[1], t5.x[2]);
            } }, { key: "lookAt", value: function(e5, t5, r5) {
              this.camera(this.eyeX, this.eyeY, this.eyeZ, e5, t5, r5, this.upX, this.upY, this.upZ);
            } }, { key: "camera", value: function(e5, t5, r5, o3, n3, s3, i2, a, l) {
              void 0 === e5 && (e5 = this.defaultEyeX, t5 = this.defaultEyeY, r5 = this.defaultEyeZ, o3 = e5, n3 = t5, a = 1, l = i2 = s3 = 0), this.eyeX = e5, this.eyeY = t5, this.eyeZ = r5, void 0 !== o3 && (this.centerX = o3, this.centerY = n3, this.centerZ = s3), void 0 !== i2 && (this.upX = i2, this.upY = a, this.upZ = l);
              o3 = this._getLocalAxes(), this.cameraMatrix.set(o3.x[0], o3.y[0], o3.z[0], 0, o3.x[1], o3.y[1], o3.z[1], 0, o3.x[2], o3.y[2], o3.z[2], 0, 0, 0, 0, 1), n3 = -e5;
              return this.cameraMatrix.translate([n3, -t5, -r5]), this._isActive() && this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0], this.cameraMatrix.mat4[1], this.cameraMatrix.mat4[2], this.cameraMatrix.mat4[3], this.cameraMatrix.mat4[4], this.cameraMatrix.mat4[5], this.cameraMatrix.mat4[6], this.cameraMatrix.mat4[7], this.cameraMatrix.mat4[8], this.cameraMatrix.mat4[9], this.cameraMatrix.mat4[10], this.cameraMatrix.mat4[11], this.cameraMatrix.mat4[12], this.cameraMatrix.mat4[13], this.cameraMatrix.mat4[14], this.cameraMatrix.mat4[15]), this;
            } }, { key: "move", value: function(e5, t5, r5) {
              var o3 = this._getLocalAxes(), e5 = [o3.x[0] * e5, o3.x[1] * e5, o3.x[2] * e5], t5 = [o3.y[0] * t5, o3.y[1] * t5, o3.y[2] * t5], o3 = [o3.z[0] * r5, o3.z[1] * r5, o3.z[2] * r5];
              this.camera(this.eyeX + e5[0] + t5[0] + o3[0], this.eyeY + e5[1] + t5[1] + o3[1], this.eyeZ + e5[2] + t5[2] + o3[2], this.centerX + e5[0] + t5[0] + o3[0], this.centerY + e5[1] + t5[1] + o3[1], this.centerZ + e5[2] + t5[2] + o3[2], this.upX, this.upY, this.upZ);
            } }, { key: "setPosition", value: function(e5, t5, r5) {
              var o3 = e5 - this.eyeX, n3 = t5 - this.eyeY, s3 = r5 - this.eyeZ;
              this.camera(e5, t5, r5, this.centerX + o3, this.centerY + n3, this.centerZ + s3, this.upX, this.upY, this.upZ);
            } }, { key: "set", value: function(e5) {
              for (var t5 = 0, r5 = ["eyeX", "eyeY", "eyeZ", "centerX", "centerY", "centerZ", "upX", "upY", "upZ", "cameraFOV", "aspectRatio", "cameraNear", "cameraFar", "cameraType"]; t5 < r5.length; t5++) {
                var o3 = r5[t5];
                this[o3] = e5[o3];
              }
              this.cameraMatrix = e5.cameraMatrix.copy(), this.projMatrix = e5.projMatrix.copy(), this._isActive() && (this._renderer.uMVMatrix.mat4 = this.cameraMatrix.mat4.slice(), this._renderer.uPMatrix.mat4 = this.projMatrix.mat4.slice());
            } }, { key: "slerp", value: function(e5, t5, r5) {
              var o3, n3, s3, i2, a, l, u, c, d, f, h, p, m, y, g, v, b, j;
              0 === r5 ? this.set(e5) : 1 === r5 ? this.set(t5) : (0 !== this.projMatrix.mat4[15] && (this.projMatrix.mat4[0] = e5.projMatrix.mat4[0] * Math.pow(t5.projMatrix.mat4[0] / e5.projMatrix.mat4[0], r5), this.projMatrix.mat4[5] = e5.projMatrix.mat4[5] * Math.pow(t5.projMatrix.mat4[5] / e5.projMatrix.mat4[5], r5), this._isActive() && (this._renderer.uPMatrix.mat4 = this.projMatrix.mat4.slice())), i2 = new _.default.Vector(e5.eyeX, e5.eyeY, e5.eyeZ), a = new _.default.Vector(t5.eyeX, t5.eyeY, t5.eyeZ), v = new _.default.Vector(e5.centerX, e5.centerY, e5.centerZ), j = new _.default.Vector(t5.centerX, t5.centerY, t5.centerZ), s3 = _.default.Vector.dist(i2, v), o3 = _.default.Vector.dist(a, j), o3 = s3 * Math.pow(o3 / s3, r5), s3 = _.default.Vector.sub(i2, a), n3 = 1, 1e-6 < (b = (y = i2.copy().sub(a).sub(v).add(j)).magSq()) && (n3 = _.default.Vector.dot(s3, y) / b, n3 = Math.max(0, Math.min(n3, 1))), s3 = _.default.Vector.lerp(_.default.Vector.lerp(i2, v, n3), _.default.Vector.lerp(a, j, n3), r5), y = e5.cameraMatrix.createSubMatrix3x3(), b = t5.cameraMatrix.createSubMatrix3x3(), i2 = y.column(2), v = b.column(2), a = y.column(1), j = b.column(1), e5 = new _.default.Vector(), t5 = new _.default.Vector(), l = new _.default.Vector(), u = new _.default.Vector(), 1 - (c = 0.5 * ((y = (b = b.mult3x3(y.copy().transpose3x3())).diagonal())[0] + y[1] + y[2] - 1)) < 1e-7 ? (e5.set(_.default.Vector.lerp(i2, v, r5)).normalize(), l.set(e5).mult(n3 * o3).add(s3), u.set(e5).mult((n3 - 1) * o3).add(s3), t5.set(_.default.Vector.lerp(a, j, r5)).normalize()) : (v = 1 / (1 - c), j = Math.max(y[0], y[1], y[2]), p = b.mat3[1] + b.mat3[3], m = b.mat3[2] + b.mat3[6], g = b.mat3[5] + b.mat3[7], j = j === y[0] ? (f = 0.5 * p * (v /= d = Math.sqrt((y[0] - c) * v)), h = 0.5 * m * v, 0.5 * (b.mat3[7] - b.mat3[5]) / d) : j === y[1] ? (h = 0.5 * g * (v /= f = Math.sqrt((y[1] - c) * v)), d = 0.5 * p * v, 0.5 * (b.mat3[2] - b.mat3[6]) / f) : (d = 0.5 * m * (v /= h = Math.sqrt((y[2] - c) * v)), f = 0.5 * g * v, 0.5 * (b.mat3[3] - b.mat3[1]) / h), p = r5 * Math.atan2(j, c), m = Math.cos(p), y = Math.sin(p), (j = new _.default.Matrix("mat3", [m + (g = 1 - m) * d * d, g * (v = d * f) - y * h, g * (b = h * d) + y * f, g * v + y * h, m + g * f * f, g * (r5 = f * h) - y * d, g * b - y * f, g * r5 + y * d, m + g * h * h])).multiplyVec3(i2, e5), l.set(e5).mult(n3 * o3).add(s3), u.set(e5).mult((n3 - 1) * o3).add(s3), j.multiplyVec3(a, t5)), this.camera(l.x, l.y, l.z, u.x, u.y, u.z, t5.x, t5.y, t5.z));
            } }, { key: "_computeCameraDefaultSettings", value: function() {
              this.defaultCameraFOV = 60 / 180 * Math.PI, this.defaultAspectRatio = this._renderer.width / this._renderer.height, this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = this._renderer.height / 2 / Math.tan(this.defaultCameraFOV / 2), this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = 0.1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
            } }, { key: "_setDefaultCamera", value: function() {
              this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
            } }, { key: "_resize", value: function() {
              "default" === this.cameraType ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this._renderer.width / this._renderer.height);
            } }, { key: "copy", value: function() {
              var e5 = new _.default.Camera(this._renderer);
              return e5.cameraFOV = this.cameraFOV, e5.aspectRatio = this.aspectRatio, e5.eyeX = this.eyeX, e5.eyeY = this.eyeY, e5.eyeZ = this.eyeZ, e5.centerX = this.centerX, e5.centerY = this.centerY, e5.centerZ = this.centerZ, e5.upX = this.upX, e5.upY = this.upY, e5.upZ = this.upZ, e5.cameraNear = this.cameraNear, e5.cameraFar = this.cameraFar, e5.cameraType = this.cameraType, e5.cameraMatrix = this.cameraMatrix.copy(), e5.projMatrix = this.projMatrix.copy(), e5;
            } }, { key: "_getLocalAxes", value: function() {
              var e5 = this.eyeX - this.centerX, t5 = this.eyeY - this.centerY, r5 = this.eyeZ - this.centerZ, o3 = Math.sqrt(e5 * e5 + t5 * t5 + r5 * r5), o3 = (0 !== o3 && (e5 /= o3, t5 /= o3, r5 /= o3), this.upX), n3 = (a = this.upY) * r5 - (l = this.upZ) * t5, s3 = -o3 * r5 + l * e5, i2 = o3 * t5 - a * e5, o3 = t5 * i2 - r5 * s3, a = -e5 * i2 + r5 * n3, l = e5 * s3 - t5 * n3, u = Math.sqrt(n3 * n3 + s3 * s3 + i2 * i2), u = (0 !== u && (n3 /= u, s3 /= u, i2 /= u), Math.sqrt(o3 * o3 + a * a + l * l));
              return 0 !== u && (o3 /= u, a /= u, l /= u), { x: [n3, s3, i2], y: [o3, a, l], z: [e5, t5, r5] };
            } }, { key: "_orbit", value: function(e5, t5, r5) {
              var o3 = this.eyeX - this.centerX, n3 = this.eyeY - this.centerY, s3 = this.eyeZ - this.centerZ, i2 = Math.hypot(o3, n3, s3), o3 = new _.default.Vector(o3, n3, s3).normalize(), n3 = new _.default.Vector(this.upX, this.upY, this.upZ).normalize(), s3 = new _.default.Vector.cross(n3, o3).normalize(), a = new _.default.Vector.cross(s3, n3), r5 = ((i2 = (i2 *= Math.pow(10, r5)) < this.cameraNear ? this.cameraNear : i2) > this.cameraFar && (i2 = this.cameraFar), Math.acos(Math.max(-1, Math.min(1, _.default.Vector.dot(o3, n3)))) + t5), t5 = e5;
              (r5 <= 0 || r5 >= Math.PI) && (this.upX *= -1, this.upY *= -1, this.upZ *= -1), n3.mult(Math.cos(r5)), a.mult(Math.cos(t5) * Math.sin(r5)), s3.mult(Math.sin(t5) * Math.sin(r5)), o3.set(n3).add(a).add(s3), this.eyeX = i2 * o3.x + this.centerX, this.eyeY = i2 * o3.y + this.centerY, this.eyeZ = i2 * o3.z + this.centerZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, this.centerX, this.centerY, this.centerZ, this.upX, this.upY, this.upZ);
            } }, { key: "_orbitFree", value: function(e5, t5, r5) {
              var o3 = this.eyeX - this.centerX, n3 = this.eyeY - this.centerY, s3 = this.eyeZ - this.centerZ, i2 = Math.hypot(o3, n3, s3), o3 = new _.default.Vector(o3, n3, s3).normalize(), n3 = new _.default.Vector(this.upX, this.upY, this.upZ), s3 = new _.default.Vector.cross(n3, o3).normalize(), a = new _.default.Vector.cross(o3, s3), l = Math.atan2(t5, e5), l = (a.mult(Math.sin(l)), s3.mult(Math.cos(l)).add(a), Math.sqrt(e5 * e5 + t5 * t5)), a = new _.default.Vector.cross(o3, s3), e5 = ((i2 = (i2 *= Math.pow(10, r5)) < this.cameraNear ? this.cameraNear : i2) > this.cameraFar && (i2 = this.cameraFar), Math.cos(l)), t5 = Math.sin(l), r5 = n3.dot(o3), l = n3.dot(s3), u = r5 * e5 + l * t5, r5 = -r5 * t5 + l * e5, l = n3.dot(a);
              n3.x = u * o3.x + r5 * s3.x + l * a.x, n3.y = u * o3.y + r5 * s3.y + l * a.y, n3.z = u * o3.z + r5 * s3.z + l * a.z, s3.mult(-t5), o3.mult(e5).add(s3).mult(i2), this.camera(o3.x + this.centerX, o3.y + this.centerY, o3.z + this.centerZ, this.centerX, this.centerY, this.centerZ, n3.x, n3.y, n3.z);
            } }, { key: "_isActive", value: function() {
              return this === this._renderer._curCamera;
            } }]) && n2(e4.prototype, r4), o2 && n2(e4, o2), t4;
          }(), _.default.prototype.setCamera = function(e4) {
            this._renderer._curCamera = e4, this._renderer.uPMatrix.set(e4.projMatrix.mat4[0], e4.projMatrix.mat4[1], e4.projMatrix.mat4[2], e4.projMatrix.mat4[3], e4.projMatrix.mat4[4], e4.projMatrix.mat4[5], e4.projMatrix.mat4[6], e4.projMatrix.mat4[7], e4.projMatrix.mat4[8], e4.projMatrix.mat4[9], e4.projMatrix.mat4[10], e4.projMatrix.mat4[11], e4.projMatrix.mat4[12], e4.projMatrix.mat4[13], e4.projMatrix.mat4[14], e4.projMatrix.mat4[15]);
          };
          e3 = _.default.Camera;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.slice": 164, "core-js/modules/es.math.hypot": 169, "core-js/modules/es.string.sub": 198 }], 322: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.reflect.get"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint8-clamped-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.reflect.get"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint8-clamped-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var h = (x = e3("../core/main")) && x.__esModule ? x : { default: x }, i2 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== c(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants")), n2 = e3("./p5.Texture"), p = e3("./p5.RendererGL");
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          function l(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          function u(e4, t4) {
            return function(e5) {
              if (Array.isArray(e5))
                return e5;
            }(e4) || function(e5, t5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5)) {
                var r4 = [], o3 = true, n3 = false, s4 = void 0;
                try {
                  for (var i3, a2 = e5[Symbol.iterator](); !(o3 = (i3 = a2.next()).done) && (r4.push(i3.value), !t5 || r4.length !== t5); o3 = true)
                    ;
                } catch (e6) {
                  n3 = true, s4 = e6;
                } finally {
                  try {
                    o3 || null == a2.return || a2.return();
                  } finally {
                    if (n3)
                      throw s4;
                  }
                }
                return r4;
              }
            }(e4, t4) || function() {
              throw new TypeError("Invalid attempt to destructure non-iterable instance");
            }();
          }
          function s3(e4, t4, r4) {
            return t4 in e4 ? Object.defineProperty(e4, t4, { value: r4, enumerable: true, configurable: true, writable: true }) : e4[t4] = r4, e4;
          }
          function c(e4) {
            return (c = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function d(e4, t4) {
            if (!(e4 instanceof t4))
              throw new TypeError("Cannot call a class as a function");
          }
          function f(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function m(e4, t4, r4) {
            t4 && f(e4.prototype, t4), r4 && f(e4, r4);
          }
          function y(e4, t4, r4) {
            return (y = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e5, t5, r5) {
              var e5 = function(e6, t6) {
                for (; !Object.prototype.hasOwnProperty.call(e6, t6) && null !== (e6 = b(e6)); )
                  ;
                return e6;
              }(e5, t5);
              if (e5)
                return (e5 = Object.getOwnPropertyDescriptor(e5, t5)).get ? e5.get.call(r5) : e5.value;
            })(e4, t4, r4 || e4);
          }
          function g(e4, t4) {
            return (g = Object.setPrototypeOf || function(e5, t5) {
              return e5.__proto__ = t5, e5;
            })(e4, t4);
          }
          function v(r4) {
            return function() {
              var e4, t4 = b(r4), t4 = (e4 = function() {
                if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                  if ("function" == typeof Proxy)
                    return 1;
                  try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                    })), 1;
                  } catch (e5) {
                  }
                }
              }() ? (e4 = b(this).constructor, Reflect.construct(t4, arguments, e4)) : t4.apply(this, arguments), this);
              if (!e4 || "object" !== c(e4) && "function" != typeof e4) {
                if (void 0 !== t4)
                  return t4;
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
              }
              return e4;
            };
          }
          function b(e4) {
            return (b = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
              return e5.__proto__ || Object.getPrototypeOf(e5);
            })(e4);
          }
          var j = function(e4) {
            var t4 = o3;
            if ("function" != typeof e4 && null !== e4)
              throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && g(t4, e4);
            var r4 = v(o3);
            function o3(e5) {
              var t5;
              return d(this, o3), (t5 = r4.call(this, e5.target._renderer)).fbo = e5, t5.yScale = -1, t5;
            }
            return m(o3, [{ key: "_computeCameraDefaultSettings", value: function() {
              y(b(o3.prototype), "_computeCameraDefaultSettings", this).call(this), this.defaultAspectRatio = this.fbo.width / this.fbo.height, this.defaultEyeZ = this.fbo.height / 2 / Math.tan(this.defaultCameraFOV / 2), this.defaultCameraNear = 0.1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
            } }, { key: "_resize", value: function() {
              "default" === this.cameraType ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this.fbo.width / this.fbo.height);
            } }]), o3;
          }(h.default.Camera), _ = (h.default.FramebufferCamera = j, function() {
            function r4(e4, t4) {
              d(this, r4), this.framebuffer = e4, this.property = t4;
            }
            return m(r4, [{ key: "rawTexture", value: function() {
              return this.framebuffer[this.property];
            } }, { key: "width", get: function() {
              return this.framebuffer.width * this.framebuffer.density;
            } }, { key: "height", get: function() {
              return this.framebuffer.height * this.framebuffer.density;
            } }]), r4;
          }()), x = (h.default.FramebufferTexture = _, function() {
            function r4(e4) {
              var t4 = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {}, t4 = (d(this, r4), this.target = e4, this.target._renderer.framebuffers.add(this), this.pixels = [], this.format = t4.format || i2.UNSIGNED_BYTE, this.channels = t4.channels || (e4._renderer._pInst._glAttributes.alpha ? i2.RGBA : i2.RGB), this.useDepth = void 0 === t4.depth || t4.depth, this.depthFormat = t4.depthFormat || i2.FLOAT, this.textureFiltering = t4.textureFiltering || i2.LINEAR, void 0 === t4.antialias ? this.antialiasSamples = e4._renderer._pInst._glAttributes.antialias ? 2 : 0 : "number" == typeof t4.antialias ? this.antialiasSamples = t4.antialias : this.antialiasSamples = t4.antialias ? 2 : 0, this.antialias = 0 < this.antialiasSamples, this.antialias && e4.webglVersion !== i2.WEBGL2 && (console.warn("Antialiasing is unsupported in a WebGL 1 context"), this.antialias = false), t4.width && t4.height ? (this.width = t4.width, this.height = t4.height, this.autoSized = false) : (void 0 === t4.width != (void 0 === t4.height) && console.warn("Please supply both width and height for a framebuffer to give it a size. Only one was given, so the framebuffer will match the size of its canvas."), this.width = e4.width, this.height = e4.height, this.autoSized = true), this.density = t4.density || e4.pixelDensity(), e4._renderer.GL);
              if (this.gl = t4, this._checkIfFormatsAvailable(), this.framebuffer = t4.createFramebuffer(), !this.framebuffer)
                throw new Error("Unable to create a framebuffer");
              if (this.antialias && (this.aaFramebuffer = t4.createFramebuffer(), !this.aaFramebuffer))
                throw new Error("Unable to create a framebuffer for antialiasing");
              this._recreateTextures();
              e4 = this.target._renderer._curCamera;
              this.defaultCamera = this.createCamera(), this.target._renderer._curCamera = e4;
            }
            return m(r4, [{ key: "resize", value: function(e4, t4) {
              this.autoSized = false, this.width = e4, this.height = t4, this._handleResize();
            } }, { key: "pixelDensity", value: function(e4) {
              if (!e4)
                return this.density;
              this.autoSized = false, this.density = e4, this._handleResize();
            } }, { key: "autoSized", value: function(e4) {
              if (void 0 === e4)
                return this.autoSized;
              this.autoSized = e4, this._handleResize();
            } }, { key: "_checkIfFormatsAvailable", value: function() {
              var e4 = this.gl, e4 = (this.useDepth && this.target.webglVersion === i2.WEBGL && !e4.getExtension("WEBGL_depth_texture") && (console.warn("Unable to create depth textures in this environment. Falling back to a framebuffer without depth."), this.useDepth = false), this.useDepth && this.target.webglVersion === i2.WEBGL && this.depthFormat === i2.FLOAT && (console.warn("FLOAT depth format is unavailable in WebGL 1. Defaulting to UNSIGNED_INT."), this.depthFormat = i2.UNSIGNED_INT), [i2.UNSIGNED_BYTE, i2.FLOAT, i2.HALF_FLOAT].includes(this.format) || (console.warn("Unknown Framebuffer format. Please use UNSIGNED_BYTE, FLOAT, or HALF_FLOAT. Defaulting to UNSIGNED_BYTE."), this.format = i2.UNSIGNED_BYTE), this.useDepth && ![i2.UNSIGNED_INT, i2.FLOAT].includes(this.depthFormat) && (console.warn("Unknown Framebuffer depth format. Please use UNSIGNED_INT or FLOAT. Defaulting to FLOAT."), this.depthFormat = i2.FLOAT), (0, n2.checkWebGLCapabilities)(this.target._renderer));
              e4.float || this.format !== i2.FLOAT || (console.warn("This environment does not support FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = i2.UNSIGNED_BYTE), this.useDepth && !e4.float && this.depthFormat === i2.FLOAT && (console.warn("This environment does not support FLOAT depth textures. Falling back to UNSIGNED_INT."), this.depthFormat = i2.UNSIGNED_INT), e4.halfFloat || this.format !== i2.HALF_FLOAT || (console.warn("This environment does not support HALF_FLOAT textures. Falling back to UNSIGNED_BYTE."), this.format = i2.UNSIGNED_BYTE), this.channels === i2.RGB && [i2.FLOAT, i2.HALF_FLOAT].includes(this.format) && (console.warn("FLOAT and HALF_FLOAT formats do not work cross-platform with only RGB channels. Falling back to RGBA."), this.channels = i2.RGBA);
            } }, { key: "_recreateTextures", value: function() {
              var e4 = this.gl, t4 = (this._updateSize(), e4.getParameter(e4.TEXTURE_BINDING_2D)), r5 = e4.getParameter(e4.FRAMEBUFFER_BINDING), o3 = e4.createTexture();
              if (!o3)
                throw new Error("Unable to create color texture");
              e4.bindTexture(e4.TEXTURE_2D, o3);
              var n3 = this._glColorFormat();
              if (e4.texImage2D(e4.TEXTURE_2D, 0, n3.internalFormat, this.width * this.density, this.height * this.density, 0, n3.format, n3.type, null), this.colorTexture = o3, e4.bindFramebuffer(e4.FRAMEBUFFER, this.framebuffer), e4.framebufferTexture2D(e4.FRAMEBUFFER, e4.COLOR_ATTACHMENT0, e4.TEXTURE_2D, o3, 0), this.useDepth) {
                var o3 = e4.createTexture();
                if (!o3)
                  throw new Error("Unable to create depth texture");
                var s4 = this._glDepthFormat();
                e4.bindTexture(e4.TEXTURE_2D, o3), e4.texImage2D(e4.TEXTURE_2D, 0, s4.internalFormat, this.width * this.density, this.height * this.density, 0, s4.format, s4.type, null), e4.framebufferTexture2D(e4.FRAMEBUFFER, e4.DEPTH_ATTACHMENT, e4.TEXTURE_2D, o3, 0), this.depthTexture = o3;
              }
              this.antialias && (this.colorRenderbuffer = e4.createRenderbuffer(), e4.bindRenderbuffer(e4.RENDERBUFFER, this.colorRenderbuffer), e4.renderbufferStorageMultisample(e4.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e4.getParameter(e4.MAX_SAMPLES))), n3.internalFormat, this.width * this.density, this.height * this.density), this.useDepth && (s4 = this._glDepthFormat(), this.depthRenderbuffer = e4.createRenderbuffer(), e4.bindRenderbuffer(e4.RENDERBUFFER, this.depthRenderbuffer), e4.renderbufferStorageMultisample(e4.RENDERBUFFER, Math.max(0, Math.min(this.antialiasSamples, e4.getParameter(e4.MAX_SAMPLES))), s4.internalFormat, this.width * this.density, this.height * this.density)), e4.bindFramebuffer(e4.FRAMEBUFFER, this.aaFramebuffer), e4.framebufferRenderbuffer(e4.FRAMEBUFFER, e4.COLOR_ATTACHMENT0, e4.RENDERBUFFER, this.colorRenderbuffer), this.useDepth && e4.framebufferRenderbuffer(e4.FRAMEBUFFER, e4.DEPTH_ATTACHMENT, e4.RENDERBUFFER, this.depthRenderbuffer)), this.useDepth && (this.depth = new _(this, "depthTexture"), o3 = e4.NEAREST, this.depthP5Texture = new h.default.Texture(this.target._renderer, this.depth, { minFilter: o3, magFilter: o3 }), this.target._renderer.textures.set(this.depth, this.depthP5Texture)), this.color = new _(this, "colorTexture");
              n3 = this.textureFiltering === i2.LINEAR ? e4.LINEAR : e4.NEAREST;
              this.colorP5Texture = new h.default.Texture(this.target._renderer, this.color, { glMinFilter: n3, glMagFilter: n3 }), this.target._renderer.textures.set(this.color, this.colorP5Texture), e4.bindTexture(e4.TEXTURE_2D, t4), e4.bindFramebuffer(e4.FRAMEBUFFER, r5);
            } }, { key: "_glColorFormat", value: function() {
              var e4, t4, r5 = this.gl, o3 = this.format === i2.FLOAT ? r5.FLOAT : this.format === i2.HALF_FLOAT ? this.target.webglVersion === i2.WEBGL2 ? r5.HALF_FLOAT : r5.getExtension("OES_texture_half_float").HALF_FLOAT_OES : r5.UNSIGNED_BYTE, n3 = this.channels === i2.RGBA ? r5.RGBA : r5.RGB;
              return { internalFormat: this.target.webglVersion === i2.WEBGL2 ? (s3(t4 = {}, r5.FLOAT, s3({}, r5.RGBA, r5.RGBA32F)), s3(t4, r5.HALF_FLOAT, s3({}, r5.RGBA, r5.RGBA16F)), s3(t4, r5.UNSIGNED_BYTE, (s3(e4 = {}, r5.RGBA, r5.RGBA8), s3(e4, r5.RGB, r5.RGB8), e4)), t4[o3][n3]) : this.format === i2.HALF_FLOAT ? r5.RGBA : n3, format: n3, type: o3 };
            } }, { key: "_glDepthFormat", value: function() {
              var e4 = this.gl, t4 = this.depthFormat === i2.FLOAT ? e4.FLOAT : e4.UNSIGNED_INT, r5 = e4.DEPTH_COMPONENT, e4 = this.target.webglVersion === i2.WEBGL2 ? this.depthFormat === i2.FLOAT ? e4.DEPTH_COMPONENT32F : e4.DEPTH_COMPONENT24 : e4.DEPTH_COMPONENT;
              return { internalFormat: e4, format: r5, type: t4 };
            } }, { key: "_updateSize", value: function() {
              this.autoSized && (this.width = this.target.width, this.height = this.target.height, this.density = this.target.pixelDensity());
            } }, { key: "_canvasSizeChanged", value: function() {
              this.autoSized && this._handleResize();
            } }, { key: "_handleResize", value: function() {
              var e4 = this.color, t4 = this.depth, r5 = this.colorRenderbuffer, o3 = this.depthRenderbuffer, e4 = (this._deleteTexture(e4), t4 && this._deleteTexture(t4), this.gl);
              r5 && e4.deleteRenderbuffer(r5), o3 && e4.deleteRenderbuffer(o3), this._recreateTextures(), this.defaultCamera._resize();
            } }, { key: "createCamera", value: function() {
              var e4 = new j(this);
              return e4._computeCameraDefaultSettings(), e4._setDefaultCamera(), this.target._renderer._curCamera = e4;
            } }, { key: "_deleteTexture", value: function(e4) {
              this.gl.deleteTexture(e4.rawTexture()), this.target._renderer.textures.delete(e4);
            } }, { key: "remove", value: function() {
              var e4 = this.gl;
              this._deleteTexture(this.color), this.depth && this._deleteTexture(this.depth), e4.deleteFramebuffer(this.framebuffer), this.aaFramebuffer && e4.deleteFramebuffer(this.aaFramebuffer), this.depthRenderbuffer && e4.deleteRenderbuffer(this.depthRenderbuffer), this.colorRenderbuffer && e4.deleteRenderbuffer(this.colorRenderbuffer), this.target._renderer.framebuffers.delete(this);
            } }, { key: "begin", value: function() {
              var e4 = this.gl;
              this.prevFramebuffer = e4.getParameter(e4.FRAMEBUFFER_BINDING), this.antialias ? e4.bindFramebuffer(e4.FRAMEBUFFER, this.aaFramebuffer) : e4.bindFramebuffer(e4.FRAMEBUFFER, this.framebuffer), this.prevViewport = e4.getParameter(e4.VIEWPORT), e4.viewport(0, 0, this.width * this.density, this.height * this.density), this.target.push(), this.target.setCamera(this.defaultCamera), this.target._renderer.uMVMatrix.set(this.target._renderer._curCamera.cameraMatrix.mat4[0], this.target._renderer._curCamera.cameraMatrix.mat4[1], this.target._renderer._curCamera.cameraMatrix.mat4[2], this.target._renderer._curCamera.cameraMatrix.mat4[3], this.target._renderer._curCamera.cameraMatrix.mat4[4], this.target._renderer._curCamera.cameraMatrix.mat4[5], this.target._renderer._curCamera.cameraMatrix.mat4[6], this.target._renderer._curCamera.cameraMatrix.mat4[7], this.target._renderer._curCamera.cameraMatrix.mat4[8], this.target._renderer._curCamera.cameraMatrix.mat4[9], this.target._renderer._curCamera.cameraMatrix.mat4[10], this.target._renderer._curCamera.cameraMatrix.mat4[11], this.target._renderer._curCamera.cameraMatrix.mat4[12], this.target._renderer._curCamera.cameraMatrix.mat4[13], this.target._renderer._curCamera.cameraMatrix.mat4[14], this.target._renderer._curCamera.cameraMatrix.mat4[15]);
            } }, { key: "end", value: function() {
              var e4 = this.gl;
              if (this.antialias) {
                e4.bindFramebuffer(e4.READ_FRAMEBUFFER, this.aaFramebuffer), e4.bindFramebuffer(e4.DRAW_FRAMEBUFFER, this.framebuffer);
                var t4 = [[e4.COLOR_BUFFER_BIT, this.colorP5Texture.glMagFilter]];
                this.useDepth && t4.push([e4.DEPTH_BUFFER_BIT, this.depthP5Texture.glMagFilter]);
                for (var r5 = 0, o3 = t4; r5 < o3.length; r5++) {
                  var n3 = u(o3[r5], 2), s4 = n3[0], n3 = n3[1];
                  e4.blitFramebuffer(0, 0, this.width * this.density, this.height * this.density, 0, 0, this.width * this.density, this.height * this.density, s4, n3);
                }
              }
              e4.bindFramebuffer(e4.FRAMEBUFFER, this.prevFramebuffer), e4.viewport.apply(e4, l(this.prevViewport)), this.target.pop();
            } }, { key: "draw", value: function(e4) {
              this.begin(), e4(), this.end();
            } }, { key: "loadPixels", value: function() {
              var e4 = this.gl, t4 = e4.getParameter(e4.FRAMEBUFFER_BINDING), r5 = (e4.bindFramebuffer(e4.FRAMEBUFFER, this.framebuffer), this._glColorFormat());
              this.pixels = (0, p.readPixelsWebGL)(this.pixels, e4, this.framebuffer, 0, 0, this.width * this.density, this.height * this.density, r5.format, r5.type), e4.bindFramebuffer(e4.FRAMEBUFFER, t4);
            } }, { key: "get", value: function(e4, t4, r5, o3) {
              h.default._validateParameters("p5.Framebuffer.get", arguments);
              var n3 = this._glColorFormat();
              if (void 0 === e4 && void 0 === t4)
                t4 = e4 = 0, r5 = this.width, o3 = this.height;
              else if (void 0 === r5 && void 0 === o3)
                return (e4 < 0 || t4 < 0 || e4 >= this.width || t4 >= this.height) && (console.warn("The x and y values passed to p5.Framebuffer.get are outside of its range and will be clamped."), e4 = this.target.constrain(e4, 0, this.width - 1), t4 = this.target.constrain(t4, 0, this.height - 1)), (0, p.readPixelWebGL)(this.gl, this.framebuffer, e4 * this.density, t4 * this.density, n3.format, n3.type);
              e4 = this.target.constrain(e4, 0, this.width - 1), t4 = this.target.constrain(t4, 0, this.height - 1), r5 = this.target.constrain(r5, 1, this.width - e4), o3 = this.target.constrain(o3, 1, this.height - t4);
              for (var s4 = (0, p.readPixelsWebGL)(void 0, this.gl, this.framebuffer, e4 * this.density, t4 * this.density, r5 * this.density, o3 * this.density, n3.format, n3.type), i3 = new Uint8ClampedArray(r5 * o3 * this.density * this.density * 4), a2 = (i3.fill(255), n3.type === this.gl.RGB ? 3 : 4), l2 = 0; l2 < o3 * this.density; l2++)
                for (var u2 = 0; u2 < r5 * this.density; u2++)
                  for (var c2 = 0; c2 < 4; c2++) {
                    var d2, f2 = 4 * (l2 * r5 * this.density + u2) + c2;
                    c2 < a2 && (d2 = 4 == a2 ? f2 : (l2 * r5 * this.density + u2) * a2 + c2, i3[f2] = s4[d2]);
                  }
              e4 = new h.default.Image(r5 * this.density, o3 * this.density);
              return e4.imageData = e4.canvas.getContext("2d").createImageData(e4.width, e4.height), e4.imageData.data.set(i3), e4.pixels = e4.imageData.data, e4.updatePixels(), 1 !== this.density && e4.resize(r5, o3), e4;
            } }, { key: "updatePixels", value: function() {
              var e4 = this.gl, t4 = (this.colorP5Texture.bindTexture(), this._glColorFormat()), r5 = t4.format === e4.RGBA ? 4 : 3, r5 = this.width * this.height * this.density * this.density * r5, o3 = t4.type === e4.UNSIGNED_BYTE ? Uint8Array : Float32Array;
              if (!(this.pixels instanceof o3) || this.pixels.length !== r5)
                throw new Error("The pixels array has not been set correctly. Please call loadPixels() before updatePixels().");
              e4.texImage2D(e4.TEXTURE_2D, 0, t4.internalFormat, this.width * this.density, this.height * this.density, 0, t4.format, t4.type, this.pixels), this.colorP5Texture.unbindTexture(), this.prevFramebuffer = e4.getParameter(e4.FRAMEBUFFER_BINDING), this.antialias ? (this.begin(), this.target.push(), this.target.imageMode(this.target.CENTER), this.target.resetMatrix(), this.target.noStroke(), this.target.clear(), this.target.image(this, 0, 0), this.target.pop(), this.useDepth && (e4.clearDepth(1), e4.clear(e4.DEPTH_BUFFER_BIT)), this.end()) : (e4.bindFramebuffer(e4.FRAMEBUFFER, this.framebuffer), this.useDepth && (e4.clearDepth(1), e4.clear(e4.DEPTH_BUFFER_BIT)), e4.bindFramebuffer(e4.FRAMEBUFFER, this.prevFramebuffer));
            } }]), r4;
          }()), e3 = h.default.Framebuffer = x;
          r3.default = e3;
        }, { "../core/constants": 262, "../core/main": 273, "./p5.RendererGL": 328, "./p5.Texture": 330, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.reflect.get": 183, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.float32-array": 209, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint8-array": 232, "core-js/modules/es.typed-array.uint8-clamped-array": 233, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 323: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.string.sub"), e3("core-js/modules/web.dom-collections.for-each"), e3("core-js/modules/es.array.for-each"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.string.sub"), e3("core-js/modules/web.dom-collections.for-each"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var a = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          a.default.Geometry = function() {
            function o2(e5, t5, r5) {
              if (this instanceof o2)
                return this.vertices = [], this.lineVertices = [], this.lineTangentsIn = [], this.lineTangentsOut = [], this.lineSides = [], this.vertexNormals = [], this.faces = [], this.uvs = [], this.edges = [], this.vertexColors = [], this.vertexStrokeColors = [], this.lineVertexColors = [], this.detailX = void 0 !== e5 ? e5 : 1, this.detailY = void 0 !== t5 ? t5 : 1, this.dirtyFlags = {}, r5 instanceof Function && r5.call(this), this;
              throw new TypeError("Cannot call a class as a function");
            }
            var e4, t4, r4;
            return e4 = o2, (t4 = [{ key: "reset", value: function() {
              this.lineVertices.length = 0, this.lineTangentsIn.length = 0, this.lineTangentsOut.length = 0, this.lineSides.length = 0, this.vertices.length = 0, this.edges.length = 0, this.vertexColors.length = 0, this.vertexStrokeColors.length = 0, this.lineVertexColors.length = 0, this.vertexNormals.length = 0, this.uvs.length = 0, this.dirtyFlags = {};
            } }, { key: "computeFaces", value: function() {
              this.faces.length = 0;
              for (var e5, t5, r5, o3 = this.detailX + 1, n3 = 0; n3 < this.detailY; n3++)
                for (var s3 = 0; s3 < this.detailX; s3++)
                  t5 = (n3 + 1) * o3 + s3 + 1, this.faces.push([n3 * o3 + s3, e5 = n3 * o3 + s3 + 1, r5 = (n3 + 1) * o3 + s3]), this.faces.push([r5, e5, t5]);
              return this;
            } }, { key: "_getFaceNormal", value: function(e5) {
              var e5 = this.faces[e5], t5 = this.vertices[e5[0]], r5 = this.vertices[e5[1]], e5 = this.vertices[e5[2]], r5 = a.default.Vector.sub(r5, t5), e5 = a.default.Vector.sub(e5, t5), t5 = a.default.Vector.cross(r5, e5), o3 = a.default.Vector.mag(t5), r5 = o3 / (a.default.Vector.mag(r5) * a.default.Vector.mag(e5));
              return 0 === r5 || isNaN(r5) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), t5) : (1 < r5 && (r5 = 1), t5.mult(Math.asin(r5) / o3));
            } }, { key: "computeNormals", value: function() {
              for (var s3 = this, i2 = this.vertexNormals, e5 = this.vertices, t5 = this.faces, r5 = i2.length = 0; r5 < e5.length; ++r5)
                i2.push(new a.default.Vector());
              for (t5.forEach(function(e6, t6) {
                for (var r6 = s3._getFaceNormal(t6), o3 = 0; o3 < 3; ++o3) {
                  var n3 = e6[o3];
                  i2[n3].add(r6);
                }
              }), r5 = 0; r5 < e5.length; ++r5)
                i2[r5].normalize();
              return this;
            } }, { key: "averageNormals", value: function() {
              for (var e5 = 0; e5 <= this.detailY; e5++) {
                var t5 = this.detailX + 1, r5 = a.default.Vector.add(this.vertexNormals[e5 * t5], this.vertexNormals[e5 * t5 + this.detailX]), r5 = a.default.Vector.div(r5, 2);
                this.vertexNormals[e5 * t5] = r5, this.vertexNormals[e5 * t5 + this.detailX] = r5;
              }
              return this;
            } }, { key: "averagePoleNormals", value: function() {
              for (var e5 = new a.default.Vector(0, 0, 0), t5 = 0; t5 < this.detailX; t5++)
                e5.add(this.vertexNormals[t5]);
              for (var e5 = a.default.Vector.div(e5, this.detailX), r5 = 0; r5 < this.detailX; r5++)
                this.vertexNormals[r5] = e5;
              e5 = new a.default.Vector(0, 0, 0);
              for (var o3 = this.vertices.length - 1; o3 > this.vertices.length - 1 - this.detailX; o3--)
                e5.add(this.vertexNormals[o3]);
              e5 = a.default.Vector.div(e5, this.detailX);
              for (var n3 = this.vertices.length - 1; n3 > this.vertices.length - 1 - this.detailX; n3--)
                this.vertexNormals[n3] = e5;
              return this;
            } }, { key: "_makeTriangleEdges", value: function() {
              for (var e5 = this.edges.length = 0; e5 < this.faces.length; e5++)
                this.edges.push([this.faces[e5][0], this.faces[e5][1]]), this.edges.push([this.faces[e5][1], this.faces[e5][2]]), this.edges.push([this.faces[e5][2], this.faces[e5][0]]);
              return this;
            } }, { key: "_edgesToVertices", value: function() {
              this.lineVertices.length = 0, this.lineTangentsIn.length = 0, this.lineTangentsOut.length = 0, this.lineSides.length = 0;
              for (var e5, t5 = 1 < this.edges.length && this.edges[0][0] === this.edges[this.edges.length - 1][1], r5 = false, o3 = 0; o3 < this.edges.length; o3++) {
                var n3 = this.edges[o3 - 1], s3 = this.edges[o3], i2 = this.vertices[s3[0]], a2 = this.vertices[s3[1]], l = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * s3[0], 4 * (s3[0] + 1)) : [0, 0, 0, 0], u = 0 < this.vertexStrokeColors.length ? this.vertexStrokeColors.slice(4 * s3[1], 4 * (s3[1] + 1)) : [0, 0, 0, 0], c = a2.copy().sub(i2).normalize(), d = 0 < c.magSq();
                d && this._addSegment(i2, a2, l, u, c), 0 < o3 && n3[1] === s3[0] ? (e5 && d && c.dot(e5) < 1 - 1e-8 && this._addJoin(i2, e5, c, l), !d || r5 || t5 || (this._addCap(i2, c.copy().mult(-1), l), r5 = true)) : (r5 = false, d && (!t5 || 0 < o3) && (this._addCap(i2, c.copy().mult(-1), l), r5 = true), e5 && (!t5 || o3 < this.edges.length - 1) && (this._addCap(this.vertices[n3[1]], e5, l), e5 = void 0)), o3 === this.edges.length - 1 && (t5 ? this._addJoin(a2, c, this.vertices[this.edges[0][1]].copy().sub(a2).normalize(), u) : this._addCap(a2, c, u)), d && (e5 = c);
              }
              return this;
            } }, { key: "_addSegment", value: function(e5, t5, r5, o3, n3) {
              var e5 = e5.array(), t5 = t5.array(), s3 = n3.array();
              this.lineSides.push(1, -1, 1, 1, -1, -1);
              for (var i2 = 0, a2 = [this.lineTangentsIn, this.lineTangentsOut]; i2 < a2.length; i2++)
                a2[i2].push(s3, s3, s3, s3, s3, s3);
              return this.lineVertices.push(e5, e5, t5, t5, e5, t5), this.lineVertexColors.push(r5, r5, o3, o3, r5, o3), this;
            } }, { key: "_addCap", value: function(e5, t5, r5) {
              for (var o3 = e5.array(), n3 = t5.array(), s3 = [0, 0, 0], i2 = 0; i2 < 6; i2++)
                this.lineVertices.push(o3), this.lineTangentsIn.push(n3), this.lineTangentsOut.push(s3), this.lineVertexColors.push(r5);
              return this.lineSides.push(-1, -2, 2, 2, 1, -1), this;
            } }, { key: "_addJoin", value: function(e5, t5, r5, o3) {
              for (var n3 = e5.array(), s3 = t5.array(), i2 = r5.array(), a2 = 0; a2 < 12; a2++)
                this.lineVertices.push(n3), this.lineTangentsIn.push(s3), this.lineTangentsOut.push(i2), this.lineVertexColors.push(o3);
              for (var l = 0, u = [-1, 1]; l < u.length; l++) {
                var c = u[l];
                this.lineSides.push(c, 2 * c, 3 * c, c, 3 * c, 0);
              }
              return this;
            } }, { key: "normalize", value: function() {
              if (0 < this.vertices.length) {
                for (var e5 = this.vertices[0].copy(), t5 = this.vertices[0].copy(), r5 = 0; r5 < this.vertices.length; r5++)
                  e5.x = Math.max(e5.x, this.vertices[r5].x), t5.x = Math.min(t5.x, this.vertices[r5].x), e5.y = Math.max(e5.y, this.vertices[r5].y), t5.y = Math.min(t5.y, this.vertices[r5].y), e5.z = Math.max(e5.z, this.vertices[r5].z), t5.z = Math.min(t5.z, this.vertices[r5].z);
                for (var o3 = a.default.Vector.lerp(e5, t5, 0.5), n3 = a.default.Vector.sub(e5, t5), s3 = 200 / Math.max(Math.max(n3.x, n3.y), n3.z), i2 = 0; i2 < this.vertices.length; i2++)
                  this.vertices[i2].sub(o3), this.vertices[i2].mult(s3);
              }
              return this;
            } }]) && n2(e4.prototype, t4), r4 && n2(e4, r4), o2;
          }();
          e3 = a.default.Geometry;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.for-each": 156, "core-js/modules/es.array.slice": 164, "core-js/modules/es.string.sub": 198, "core-js/modules/web.dom-collections.for-each": 235 }], 324: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var O = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          var s3 = Array, C = function(e4) {
            return Array.isArray(e4);
          }, e3 = ("undefined" != typeof Float32Array && (s3 = Float32Array, C = function(e4) {
            return Array.isArray(e4) || e4 instanceof Float32Array;
          }), O.default.Matrix = function() {
            function r4() {
              var e5 = this, t5 = r4;
              if (e5 instanceof t5)
                return arguments.length && ((e5 = arguments.length - 1) < 0 || arguments.length <= e5 ? void 0 : arguments[e5]) instanceof O.default && (this.p5 = (t5 = arguments.length - 1) < 0 || arguments.length <= t5 ? void 0 : arguments[t5]), "mat3" === (arguments.length <= 0 ? void 0 : arguments[0]) ? this.mat3 = Array.isArray(arguments.length <= 1 ? void 0 : arguments[1]) ? arguments.length <= 1 ? void 0 : arguments[1] : new s3([1, 0, 0, 0, 1, 0, 0, 0, 1]) : this.mat4 = Array.isArray(arguments.length <= 0 ? void 0 : arguments[0]) ? arguments.length <= 0 ? void 0 : arguments[0] : new s3([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this;
              throw new TypeError("Cannot call a class as a function");
            }
            var e4, t4, o2;
            return e4 = r4, o2 = [{ key: "identity", value: function(e5) {
              return new O.default.Matrix(e5);
            } }], (t4 = [{ key: "set", value: function(e5) {
              return e5 instanceof O.default.Matrix ? this.mat4 = e5.mat4 : C(e5) ? this.mat4 = e5 : 16 === arguments.length && (this.mat4[0] = e5, this.mat4[1] = arguments[1], this.mat4[2] = arguments[2], this.mat4[3] = arguments[3], this.mat4[4] = arguments[4], this.mat4[5] = arguments[5], this.mat4[6] = arguments[6], this.mat4[7] = arguments[7], this.mat4[8] = arguments[8], this.mat4[9] = arguments[9], this.mat4[10] = arguments[10], this.mat4[11] = arguments[11], this.mat4[12] = arguments[12], this.mat4[13] = arguments[13], this.mat4[14] = arguments[14], this.mat4[15] = arguments[15]), this;
            } }, { key: "get", value: function() {
              return new O.default.Matrix(this.mat4, this.p5);
            } }, { key: "copy", value: function() {
              var e5;
              return void 0 !== this.mat3 ? ((e5 = new O.default.Matrix("mat3", this.p5)).mat3[0] = this.mat3[0], e5.mat3[1] = this.mat3[1], e5.mat3[2] = this.mat3[2], e5.mat3[3] = this.mat3[3], e5.mat3[4] = this.mat3[4], e5.mat3[5] = this.mat3[5], e5.mat3[6] = this.mat3[6], e5.mat3[7] = this.mat3[7], e5.mat3[8] = this.mat3[8]) : ((e5 = new O.default.Matrix(this.p5)).mat4[0] = this.mat4[0], e5.mat4[1] = this.mat4[1], e5.mat4[2] = this.mat4[2], e5.mat4[3] = this.mat4[3], e5.mat4[4] = this.mat4[4], e5.mat4[5] = this.mat4[5], e5.mat4[6] = this.mat4[6], e5.mat4[7] = this.mat4[7], e5.mat4[8] = this.mat4[8], e5.mat4[9] = this.mat4[9], e5.mat4[10] = this.mat4[10], e5.mat4[11] = this.mat4[11], e5.mat4[12] = this.mat4[12], e5.mat4[13] = this.mat4[13], e5.mat4[14] = this.mat4[14], e5.mat4[15] = this.mat4[15]), e5;
            } }, { key: "transpose", value: function(e5) {
              var t5, r5, o3, n3, s4, i2;
              return e5 instanceof O.default.Matrix ? (t5 = e5.mat4[1], r5 = e5.mat4[2], o3 = e5.mat4[3], n3 = e5.mat4[6], s4 = e5.mat4[7], i2 = e5.mat4[11], this.mat4[0] = e5.mat4[0], this.mat4[1] = e5.mat4[4], this.mat4[2] = e5.mat4[8], this.mat4[3] = e5.mat4[12], this.mat4[4] = t5, this.mat4[5] = e5.mat4[5], this.mat4[6] = e5.mat4[9], this.mat4[7] = e5.mat4[13], this.mat4[8] = r5, this.mat4[9] = n3, this.mat4[10] = e5.mat4[10], this.mat4[11] = e5.mat4[14], this.mat4[12] = o3, this.mat4[13] = s4, this.mat4[14] = i2, this.mat4[15] = e5.mat4[15]) : C(e5) && (t5 = e5[1], r5 = e5[2], o3 = e5[3], n3 = e5[6], s4 = e5[7], i2 = e5[11], this.mat4[0] = e5[0], this.mat4[1] = e5[4], this.mat4[2] = e5[8], this.mat4[3] = e5[12], this.mat4[4] = t5, this.mat4[5] = e5[5], this.mat4[6] = e5[9], this.mat4[7] = e5[13], this.mat4[8] = r5, this.mat4[9] = n3, this.mat4[10] = e5[10], this.mat4[11] = e5[14], this.mat4[12] = o3, this.mat4[13] = s4, this.mat4[14] = i2, this.mat4[15] = e5[15]), this;
            } }, { key: "invert", value: function(e5) {
              e5 instanceof O.default.Matrix ? (t5 = e5.mat4[0], r5 = e5.mat4[1], o3 = e5.mat4[2], n3 = e5.mat4[3], s4 = e5.mat4[4], i2 = e5.mat4[5], a = e5.mat4[6], l = e5.mat4[7], u = e5.mat4[8], c = e5.mat4[9], d = e5.mat4[10], f = e5.mat4[11], h = e5.mat4[12], p = e5.mat4[13], m = e5.mat4[14], y = e5.mat4[15]) : C(e5) && (t5 = e5[0], r5 = e5[1], o3 = e5[2], n3 = e5[3], s4 = e5[4], i2 = e5[5], a = e5[6], l = e5[7], u = e5[8], c = e5[9], d = e5[10], f = e5[11], h = e5[12], p = e5[13], m = e5[14], y = e5[15]);
              var t5, r5, o3, n3, s4, i2, a, l, u, c, d, f, h, p, m, y, e5 = t5 * i2 - r5 * s4, g = t5 * a - o3 * s4, v = t5 * l - n3 * s4, b = r5 * a - o3 * i2, j = r5 * l - n3 * i2, _ = o3 * l - n3 * a, x = u * p - c * h, w = u * m - d * h, S = u * y - f * h, E = c * m - d * p, M = c * y - f * p, T = d * y - f * m, k = e5 * T - g * M + v * E + b * S - j * w + _ * x;
              return k ? (this.mat4[0] = (i2 * T - a * M + l * E) * (k = 1 / k), this.mat4[1] = (o3 * M - r5 * T - n3 * E) * k, this.mat4[2] = (p * _ - m * j + y * b) * k, this.mat4[3] = (d * j - c * _ - f * b) * k, this.mat4[4] = (a * S - s4 * T - l * w) * k, this.mat4[5] = (t5 * T - o3 * S + n3 * w) * k, this.mat4[6] = (m * v - h * _ - y * g) * k, this.mat4[7] = (u * _ - d * v + f * g) * k, this.mat4[8] = (s4 * M - i2 * S + l * x) * k, this.mat4[9] = (r5 * S - t5 * M - n3 * x) * k, this.mat4[10] = (h * j - p * v + y * e5) * k, this.mat4[11] = (c * v - u * j - f * e5) * k, this.mat4[12] = (i2 * w - s4 * E - a * x) * k, this.mat4[13] = (t5 * E - r5 * w + o3 * x) * k, this.mat4[14] = (p * g - h * b - m * e5) * k, this.mat4[15] = (u * b - c * g + d * e5) * k, this) : null;
            } }, { key: "invert3x3", value: function() {
              var e5 = this.mat3[0], t5 = this.mat3[1], r5 = this.mat3[2], o3 = this.mat3[3], n3 = this.mat3[4], s4 = this.mat3[5], i2 = this.mat3[6], a = this.mat3[7], l = this.mat3[8], u = l * n3 - s4 * a, c = -l * o3 + s4 * i2, d = a * o3 - n3 * i2, f = e5 * u + t5 * c + r5 * d;
              return f ? (this.mat3[0] = u * (f = 1 / f), this.mat3[1] = (-l * t5 + r5 * a) * f, this.mat3[2] = (s4 * t5 - r5 * n3) * f, this.mat3[3] = c * f, this.mat3[4] = (l * e5 - r5 * i2) * f, this.mat3[5] = (-s4 * e5 + r5 * o3) * f, this.mat3[6] = d * f, this.mat3[7] = (-a * e5 + t5 * i2) * f, this.mat3[8] = (n3 * e5 - t5 * o3) * f, this) : null;
            } }, { key: "transpose3x3", value: function(e5) {
              var t5 = (e5 = void 0 === e5 ? this.mat3 : e5)[1], r5 = e5[2], o3 = e5[5];
              return this.mat3[0] = e5[0], this.mat3[1] = e5[3], this.mat3[2] = e5[6], this.mat3[3] = t5, this.mat3[4] = e5[4], this.mat3[5] = e5[7], this.mat3[6] = r5, this.mat3[7] = o3, this.mat3[8] = e5[8], this;
            } }, { key: "inverseTranspose", value: function(e5) {
              e5 = e5.mat4, void 0 === this.mat3 ? O.default._friendlyError("sorry, this function only works with mat3") : (this.mat3[0] = e5[0], this.mat3[1] = e5[1], this.mat3[2] = e5[2], this.mat3[3] = e5[4], this.mat3[4] = e5[5], this.mat3[5] = e5[6], this.mat3[6] = e5[8], this.mat3[7] = e5[9], this.mat3[8] = e5[10]), e5 = this.invert3x3();
              if (e5)
                e5.transpose3x3(this.mat3);
              else
                for (var t5 = 0; t5 < 9; t5++)
                  this.mat3[t5] = 0;
              return this;
            } }, { key: "determinant", value: function() {
              var e5 = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4], t5 = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4], r5 = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4], o3 = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5], n3 = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5], s4 = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6], i2 = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12], a = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12], l = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12], u = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13], c = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
              return e5 * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t5 * c + r5 * u + o3 * l - n3 * a + s4 * i2;
            } }, { key: "mult", value: function(e5) {
              var t5;
              if (e5 === this || e5 === this.mat4)
                t5 = this.copy().mat4;
              else if (e5 instanceof O.default.Matrix)
                t5 = e5.mat4;
              else if (C(e5))
                t5 = e5;
              else {
                if (16 !== arguments.length)
                  return;
                t5 = arguments;
              }
              var e5 = this.mat4[0], r5 = this.mat4[1], o3 = this.mat4[2], n3 = this.mat4[3];
              return this.mat4[0] = e5 * t5[0] + r5 * t5[4] + o3 * t5[8] + n3 * t5[12], this.mat4[1] = e5 * t5[1] + r5 * t5[5] + o3 * t5[9] + n3 * t5[13], this.mat4[2] = e5 * t5[2] + r5 * t5[6] + o3 * t5[10] + n3 * t5[14], this.mat4[3] = e5 * t5[3] + r5 * t5[7] + o3 * t5[11] + n3 * t5[15], e5 = this.mat4[4], r5 = this.mat4[5], o3 = this.mat4[6], n3 = this.mat4[7], this.mat4[4] = e5 * t5[0] + r5 * t5[4] + o3 * t5[8] + n3 * t5[12], this.mat4[5] = e5 * t5[1] + r5 * t5[5] + o3 * t5[9] + n3 * t5[13], this.mat4[6] = e5 * t5[2] + r5 * t5[6] + o3 * t5[10] + n3 * t5[14], this.mat4[7] = e5 * t5[3] + r5 * t5[7] + o3 * t5[11] + n3 * t5[15], e5 = this.mat4[8], r5 = this.mat4[9], o3 = this.mat4[10], n3 = this.mat4[11], this.mat4[8] = e5 * t5[0] + r5 * t5[4] + o3 * t5[8] + n3 * t5[12], this.mat4[9] = e5 * t5[1] + r5 * t5[5] + o3 * t5[9] + n3 * t5[13], this.mat4[10] = e5 * t5[2] + r5 * t5[6] + o3 * t5[10] + n3 * t5[14], this.mat4[11] = e5 * t5[3] + r5 * t5[7] + o3 * t5[11] + n3 * t5[15], e5 = this.mat4[12], r5 = this.mat4[13], o3 = this.mat4[14], n3 = this.mat4[15], this.mat4[12] = e5 * t5[0] + r5 * t5[4] + o3 * t5[8] + n3 * t5[12], this.mat4[13] = e5 * t5[1] + r5 * t5[5] + o3 * t5[9] + n3 * t5[13], this.mat4[14] = e5 * t5[2] + r5 * t5[6] + o3 * t5[10] + n3 * t5[14], this.mat4[15] = e5 * t5[3] + r5 * t5[7] + o3 * t5[11] + n3 * t5[15], this;
            } }, { key: "apply", value: function(e5) {
              var t5;
              if (e5 === this || e5 === this.mat4)
                t5 = this.copy().mat4;
              else if (e5 instanceof O.default.Matrix)
                t5 = e5.mat4;
              else if (C(e5))
                t5 = e5;
              else {
                if (16 !== arguments.length)
                  return;
                t5 = arguments;
              }
              var e5 = this.mat4, r5 = e5[0], o3 = e5[4], n3 = e5[8], s4 = e5[12], r5 = (e5[0] = t5[0] * r5 + t5[1] * o3 + t5[2] * n3 + t5[3] * s4, e5[4] = t5[4] * r5 + t5[5] * o3 + t5[6] * n3 + t5[7] * s4, e5[8] = t5[8] * r5 + t5[9] * o3 + t5[10] * n3 + t5[11] * s4, e5[12] = t5[12] * r5 + t5[13] * o3 + t5[14] * n3 + t5[15] * s4, e5[1]), o3 = e5[5], n3 = e5[9], s4 = e5[13], r5 = (e5[1] = t5[0] * r5 + t5[1] * o3 + t5[2] * n3 + t5[3] * s4, e5[5] = t5[4] * r5 + t5[5] * o3 + t5[6] * n3 + t5[7] * s4, e5[9] = t5[8] * r5 + t5[9] * o3 + t5[10] * n3 + t5[11] * s4, e5[13] = t5[12] * r5 + t5[13] * o3 + t5[14] * n3 + t5[15] * s4, e5[2]), o3 = e5[6], n3 = e5[10], s4 = e5[14], r5 = (e5[2] = t5[0] * r5 + t5[1] * o3 + t5[2] * n3 + t5[3] * s4, e5[6] = t5[4] * r5 + t5[5] * o3 + t5[6] * n3 + t5[7] * s4, e5[10] = t5[8] * r5 + t5[9] * o3 + t5[10] * n3 + t5[11] * s4, e5[14] = t5[12] * r5 + t5[13] * o3 + t5[14] * n3 + t5[15] * s4, e5[3]), o3 = e5[7], n3 = e5[11], s4 = e5[15];
              return e5[3] = t5[0] * r5 + t5[1] * o3 + t5[2] * n3 + t5[3] * s4, e5[7] = t5[4] * r5 + t5[5] * o3 + t5[6] * n3 + t5[7] * s4, e5[11] = t5[8] * r5 + t5[9] * o3 + t5[10] * n3 + t5[11] * s4, e5[15] = t5[12] * r5 + t5[13] * o3 + t5[14] * n3 + t5[15] * s4, this;
            } }, { key: "scale", value: function(e5, t5, r5) {
              return e5 instanceof O.default.Vector ? (t5 = e5.y, r5 = e5.z, e5 = e5.x) : e5 instanceof Array && (t5 = e5[1], r5 = e5[2], e5 = e5[0]), this.mat4[0] *= e5, this.mat4[1] *= e5, this.mat4[2] *= e5, this.mat4[3] *= e5, this.mat4[4] *= t5, this.mat4[5] *= t5, this.mat4[6] *= t5, this.mat4[7] *= t5, this.mat4[8] *= r5, this.mat4[9] *= r5, this.mat4[10] *= r5, this.mat4[11] *= r5, this;
            } }, { key: "rotate", value: function(e5, t5, r5, o3) {
              t5 instanceof O.default.Vector ? (r5 = t5.y, o3 = t5.z, t5 = t5.x) : t5 instanceof Array && (r5 = t5[1], o3 = t5[2], t5 = t5[0]);
              var n3 = Math.sqrt(t5 * t5 + r5 * r5 + o3 * o3), n3 = (t5 *= 1 / n3, r5 *= 1 / n3, o3 *= 1 / n3, this.mat4[0]), s4 = this.mat4[1], i2 = this.mat4[2], a = this.mat4[3], l = this.mat4[4], u = this.mat4[5], c = this.mat4[6], d = this.mat4[7], f = this.mat4[8], h = this.mat4[9], p = this.mat4[10], m = this.mat4[11], y = Math.sin(e5), e5 = Math.cos(e5), g = 1 - e5, v = t5 * t5 * g + e5, b = r5 * t5 * g + o3 * y, j = o3 * t5 * g - r5 * y, _ = t5 * r5 * g - o3 * y, x = r5 * r5 * g + e5, w = o3 * r5 * g + t5 * y, S = t5 * o3 * g + r5 * y, r5 = r5 * o3 * g - t5 * y, t5 = o3 * o3 * g + e5;
              return this.mat4[0] = n3 * v + l * b + f * j, this.mat4[1] = s4 * v + u * b + h * j, this.mat4[2] = i2 * v + c * b + p * j, this.mat4[3] = a * v + d * b + m * j, this.mat4[4] = n3 * _ + l * x + f * w, this.mat4[5] = s4 * _ + u * x + h * w, this.mat4[6] = i2 * _ + c * x + p * w, this.mat4[7] = a * _ + d * x + m * w, this.mat4[8] = n3 * S + l * r5 + f * t5, this.mat4[9] = s4 * S + u * r5 + h * t5, this.mat4[10] = i2 * S + c * r5 + p * t5, this.mat4[11] = a * S + d * r5 + m * t5, this;
            } }, { key: "translate", value: function(e5) {
              var t5 = e5[0], r5 = e5[1], e5 = e5[2] || 0;
              this.mat4[12] += this.mat4[0] * t5 + this.mat4[4] * r5 + this.mat4[8] * e5, this.mat4[13] += this.mat4[1] * t5 + this.mat4[5] * r5 + this.mat4[9] * e5, this.mat4[14] += this.mat4[2] * t5 + this.mat4[6] * r5 + this.mat4[10] * e5, this.mat4[15] += this.mat4[3] * t5 + this.mat4[7] * r5 + this.mat4[11] * e5;
            } }, { key: "rotateX", value: function(e5) {
              this.rotate(e5, 1, 0, 0);
            } }, { key: "rotateY", value: function(e5) {
              this.rotate(e5, 0, 1, 0);
            } }, { key: "rotateZ", value: function(e5) {
              this.rotate(e5, 0, 0, 1);
            } }, { key: "perspective", value: function(e5, t5, r5, o3) {
              var e5 = 1 / Math.tan(e5 / 2), n3 = 1 / (r5 - o3);
              return this.mat4[0] = e5 / t5, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = e5, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = (o3 + r5) * n3, this.mat4[11] = -1, this.mat4[12] = 0, this.mat4[13] = 0, this.mat4[14] = 2 * o3 * r5 * n3, this.mat4[15] = 0, this;
            } }, { key: "ortho", value: function(e5, t5, r5, o3, n3, s4) {
              var i2 = 1 / (e5 - t5), a = 1 / (r5 - o3), l = 1 / (n3 - s4);
              return this.mat4[0] = -2 * i2, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = -2 * a, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = 2 * l, this.mat4[11] = 0, this.mat4[12] = (e5 + t5) * i2, this.mat4[13] = (o3 + r5) * a, this.mat4[14] = (s4 + n3) * l, this.mat4[15] = 1, this;
            } }, { key: "multiplyVec4", value: function(e5, t5, r5, o3) {
              var n3 = new Array(4), s4 = this.mat4;
              return n3[0] = s4[0] * e5 + s4[4] * t5 + s4[8] * r5 + s4[12] * o3, n3[1] = s4[1] * e5 + s4[5] * t5 + s4[9] * r5 + s4[13] * o3, n3[2] = s4[2] * e5 + s4[6] * t5 + s4[10] * r5 + s4[14] * o3, n3[3] = s4[3] * e5 + s4[7] * t5 + s4[11] * r5 + s4[15] * o3, n3;
            } }, { key: "multiplyPoint", value: function(e5) {
              var t5 = e5.x, r5 = e5.y, e5 = e5.z, t5 = this.multiplyVec4(t5, r5, e5, 1);
              return new O.default.Vector(t5[0], t5[1], t5[2]);
            } }, { key: "multiplyAndNormalizePoint", value: function(e5) {
              var t5 = e5.x, r5 = e5.y, e5 = e5.z, t5 = this.multiplyVec4(t5, r5, e5, 1);
              return t5[0] /= t5[3], t5[1] /= t5[3], t5[2] /= t5[3], new O.default.Vector(t5[0], t5[1], t5[2]);
            } }, { key: "multiplyDirection", value: function(e5) {
              var t5 = e5.x, r5 = e5.y, e5 = e5.z, t5 = this.multiplyVec4(t5, r5, e5, 0);
              return new O.default.Vector(t5[0], t5[1], t5[2]);
            } }, { key: "mult3x3", value: function(e5) {
              var t5;
              if (e5 === this || e5 === this.mat3)
                t5 = this.copy().mat3;
              else if (e5 instanceof O.default.Matrix)
                t5 = e5.mat3;
              else if (C(e5))
                t5 = e5;
              else {
                if (9 !== arguments.length)
                  return;
                t5 = arguments;
              }
              var e5 = this.mat3[0], r5 = this.mat3[1], o3 = this.mat3[2];
              return this.mat3[0] = e5 * t5[0] + r5 * t5[3] + o3 * t5[6], this.mat3[1] = e5 * t5[1] + r5 * t5[4] + o3 * t5[7], this.mat3[2] = e5 * t5[2] + r5 * t5[5] + o3 * t5[8], e5 = this.mat3[3], r5 = this.mat3[4], o3 = this.mat3[5], this.mat3[3] = e5 * t5[0] + r5 * t5[3] + o3 * t5[6], this.mat3[4] = e5 * t5[1] + r5 * t5[4] + o3 * t5[7], this.mat3[5] = e5 * t5[2] + r5 * t5[5] + o3 * t5[8], e5 = this.mat3[6], r5 = this.mat3[7], o3 = this.mat3[8], this.mat3[6] = e5 * t5[0] + r5 * t5[3] + o3 * t5[6], this.mat3[7] = e5 * t5[1] + r5 * t5[4] + o3 * t5[7], this.mat3[8] = e5 * t5[2] + r5 * t5[5] + o3 * t5[8], this;
            } }, { key: "column", value: function(e5) {
              return new O.default.Vector(this.mat3[e5], this.mat3[e5 + 3], this.mat3[e5 + 6]);
            } }, { key: "row", value: function(e5) {
              return new O.default.Vector(this.mat3[3 * e5], this.mat3[3 * e5 + 1], this.mat3[3 * e5 + 2]);
            } }, { key: "diagonal", value: function() {
              return void 0 !== this.mat3 ? [this.mat3[0], this.mat3[4], this.mat3[8]] : [this.mat4[0], this.mat4[5], this.mat4[10], this.mat4[15]];
            } }, { key: "multiplyVec3", value: function(e5, t5) {
              return (t5 = void 0 === t5 ? e5.copy() : t5).x = this.row(0).dot(e5), t5.y = this.row(1).dot(e5), t5.z = this.row(2).dot(e5), t5;
            } }, { key: "createSubMatrix3x3", value: function() {
              var e5 = new O.default.Matrix("mat3");
              return e5.mat3[0] = this.mat4[0], e5.mat3[1] = this.mat4[1], e5.mat3[2] = this.mat4[2], e5.mat3[3] = this.mat4[4], e5.mat3[4] = this.mat4[5], e5.mat3[5] = this.mat4[6], e5.mat3[6] = this.mat4[8], e5.mat3[7] = this.mat4[9], e5.mat3[8] = this.mat4[10], e5;
            } }]) && n2(e4.prototype, t4), o2 && n2(e4, o2), r4;
          }(), O.default.Matrix);
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.float32-array": 209, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229 }], 325: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.map"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          e3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function o2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          e3.default.RenderBuffer = function() {
            function i2(e5, t5, r5, o3, n2, s3) {
              if (!(this instanceof i2))
                throw new TypeError("Cannot call a class as a function");
              this.size = e5, this.src = t5, this.dst = r5, this.attr = o3, this._renderer = n2, this.map = s3;
            }
            var e4, t4, r4;
            return e4 = i2, (t4 = [{ key: "_prepareBuffer", value: function(e5, t5) {
              var r5, o3, n2, s3 = t5.attributes, i3 = this._renderer.GL, a = e5.model || e5, s3 = s3[this.attr];
              s3 && (r5 = e5[this.dst], 0 < (o3 = a[this.src]).length ? ((n2 = !r5) && (e5[this.dst] = r5 = i3.createBuffer()), i3.bindBuffer(i3.ARRAY_BUFFER, r5), !n2 && false === a.dirtyFlags[this.src] || (n2 = (e5 = this.map) ? e5(o3) : o3, this._renderer._bindBuffer(r5, i3.ARRAY_BUFFER, n2), a.dirtyFlags[this.src] = false), t5.enableAttrib(s3, this.size)) : -1 !== (e5 = s3.location) && this._renderer.registerEnabled[e5] && (i3.disableVertexAttribArray(e5), this._renderer.registerEnabled[e5] = false));
            } }]) && o2(e4.prototype, t4), r4 && o2(e4, r4), i2;
          }();
          e3 = e3.default.RenderBuffer;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.map": 163 }], 326: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.map"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var l = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, u = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s3;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s3 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s3.get || s3.set) ? Object.defineProperty(o3, r4, s3) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          function c(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          e3("./p5.RenderBuffer"), l.default.RendererGL.prototype.beginShape = function(e4) {
            return this.immediateMode.shapeMode = void 0 !== e4 ? e4 : u.TESS, this.immediateMode.geometry.reset(), this;
          };
          var d = { vertices: 1, vertexNormals: 1, vertexColors: 4, vertexStrokeColors: 4, uvs: 2 }, n2 = (l.default.RendererGL.prototype.vertex = function(e4, t4) {
            if (this.immediateMode.shapeMode === u.QUADS && this.immediateMode.geometry.vertices.length % 6 == 3)
              for (var r4 in d) {
                var o3 = d[r4], r4 = this.immediateMode.geometry[r4];
                r4.push.apply(r4, c(r4.slice(r4.length - 3 * o3, r4.length - 2 * o3)).concat(c(r4.slice(r4.length - o3, r4.length))));
              }
            var n3, s3, i3 = n3 = s3 = 0, a2 = (3 === arguments.length ? i3 = arguments[2] : 4 === arguments.length ? (n3 = arguments[2], s3 = arguments[3]) : 5 === arguments.length && (i3 = arguments[2], n3 = arguments[3], s3 = arguments[4]), new l.default.Vector(e4, t4, i3)), a2 = (this.immediateMode.geometry.vertices.push(a2), this.immediateMode.geometry.vertexNormals.push(this._currentNormal), this.curFillColor || [0.5, 0.5, 0.5, 1]), a2 = (this.immediateMode.geometry.vertexColors.push(a2[0], a2[1], a2[2], a2[3]), this.curStrokeColor || [0.5, 0.5, 0.5, 1]);
            return this.immediateMode.geometry.vertexStrokeColors.push(a2[0], a2[1], a2[2], a2[3]), this.textureMode === u.IMAGE && (null !== this._tex ? 0 < this._tex.width && 0 < this._tex.height && (n3 /= this._tex.width, s3 /= this._tex.height) : !this.isProcessingVertices && null === this._tex && 4 <= arguments.length && console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), this.immediateMode.geometry.uvs.push(n3, s3), this.immediateMode._bezierVertex[0] = e4, this.immediateMode._bezierVertex[1] = t4, this.immediateMode._bezierVertex[2] = i3, this.immediateMode._quadraticVertex[0] = e4, this.immediateMode._quadraticVertex[1] = t4, this.immediateMode._quadraticVertex[2] = i3, this;
          }, l.default.RendererGL.prototype.normal = function(e4, t4, r4) {
            return e4 instanceof l.default.Vector ? this._currentNormal = e4 : this._currentNormal = new l.default.Vector(e4, t4, r4), this;
          }, l.default.RendererGL.prototype.endShape = function(e4, t4, r4, o3, n3, s3) {
            return this.immediateMode.shapeMode === u.POINTS ? this._drawPoints(this.immediateMode.geometry.vertices, this.immediateMode.buffers.point) : (this.isProcessingVertices = true, this._processVertices.apply(this, arguments), this.isProcessingVertices = false, this._doFill && 1 < this.immediateMode.geometry.vertices.length && this._drawImmediateFill(), this._doStroke && 1 < this.immediateMode.geometry.lineVertices.length && this._drawImmediateStroke(), this.isBezier = false, this.isQuadratic = false, this.isCurve = false, this.immediateMode._bezierVertex.length = 0, this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0), this;
          }, l.default.RendererGL.prototype._processVertices = function(e4) {
            var t4;
            0 !== this.immediateMode.geometry.vertices.length && (t4 = this._doStroke, e4 = e4 === u.CLOSE, t4 && (this.immediateMode.geometry.edges = this._calculateEdges(this.immediateMode.shapeMode, this.immediateMode.geometry.vertices, e4), this.immediateMode.geometry._edgesToVertices()), t4 = this.immediateMode.shapeMode === u.TESS, this._doFill && (this.isBezier || this.isQuadratic || this.isCurve || t4) && this.immediateMode.shapeMode !== u.LINES && this._tesselateShape());
          }, l.default.RendererGL.prototype._calculateEdges = function(e4, t4, r4) {
            var o3 = [], n3 = 0;
            switch (e4) {
              case u.TRIANGLE_STRIP:
                for (n3 = 0; n3 < t4.length - 2; n3++)
                  o3.push([n3, n3 + 1]), o3.push([n3, n3 + 2]);
                o3.push([n3, n3 + 1]);
                break;
              case u.TRIANGLE_FAN:
                for (n3 = 1; n3 < t4.length - 1; n3++)
                  o3.push([0, n3]), o3.push([n3, n3 + 1]);
                o3.push([0, t4.length - 1]);
                break;
              case u.TRIANGLES:
                for (n3 = 0; n3 < t4.length - 2; n3 += 3)
                  o3.push([n3, n3 + 1]), o3.push([n3 + 1, n3 + 2]), o3.push([n3 + 2, n3]);
                break;
              case u.LINES:
                for (n3 = 0; n3 < t4.length - 1; n3 += 2)
                  o3.push([n3, n3 + 1]);
                break;
              case u.QUADS:
                for (n3 = 0; n3 < t4.length - 5; n3 += 6)
                  o3.push([n3, n3 + 1]), o3.push([n3 + 1, n3 + 2]), o3.push([n3 + 3, n3 + 5]), o3.push([n3 + 4, n3 + 5]);
                break;
              case u.QUAD_STRIP:
                for (n3 = 0; n3 < t4.length - 2; n3 += 2)
                  o3.push([n3, n3 + 1]), o3.push([n3, n3 + 2]), o3.push([n3 + 1, n3 + 3]);
                o3.push([n3, n3 + 1]);
                break;
              default:
                for (n3 = 0; n3 < t4.length - 1; n3++)
                  o3.push([n3, n3 + 1]);
            }
            return r4 && o3.push([t4.length - 1, 0]), o3;
          }, l.default.RendererGL.prototype._tesselateShape = function() {
            for (var r4 = this, e4 = (this.immediateMode.shapeMode = u.TRIANGLES, [this._flatten(this.immediateMode.geometry.vertices.map(function(e5, t5) {
              return [e5.x, e5.y, e5.z, r4.immediateMode.geometry.uvs[2 * t5], r4.immediateMode.geometry.uvs[2 * t5 + 1], r4.immediateMode.geometry.vertexColors[4 * t5], r4.immediateMode.geometry.vertexColors[4 * t5 + 1], r4.immediateMode.geometry.vertexColors[4 * t5 + 2], r4.immediateMode.geometry.vertexColors[4 * t5 + 3], r4.immediateMode.geometry.vertexNormals[t5].x, r4.immediateMode.geometry.vertexNormals[t5].y, r4.immediateMode.geometry.vertexNormals[t5].z];
            }))]), t4 = this._triangulate(e4), o3 = (this.immediateMode.geometry.vertices = [], this.immediateMode.geometry.vertexNormals = [], this.immediateMode.geometry.uvs = [], []), n3 = 0, s3 = t4.length; n3 < s3; n3 += l.default.RendererGL.prototype.tessyVertexSize)
              o3.push.apply(o3, c(t4.slice(n3 + 5, n3 + 9))), this.normal.apply(this, c(t4.slice(n3 + 9, n3 + 12))), this.vertex.apply(this, c(t4.slice(n3, n3 + 5)));
            this.immediateMode.geometry.vertexColors = o3;
          }, l.default.RendererGL.prototype._drawImmediateFill = function() {
            var e4 = this.GL, t4 = (this._useVertexColor = 0 < this.immediateMode.geometry.vertexColors.length, this._getImmediateFillShader()), r4 = (this._setFillUniforms(t4), true), o3 = false, n3 = void 0;
            try {
              for (var s3, i3 = this.immediateMode.buffers.fill[Symbol.iterator](); !(r4 = (s3 = i3.next()).done); r4 = true)
                s3.value._prepareBuffer(this.immediateMode.geometry, t4);
            } catch (e5) {
              o3 = true, n3 = e5;
            } finally {
              try {
                r4 || null == i3.return || i3.return();
              } finally {
                if (o3)
                  throw n3;
              }
            }
            this.immediateMode.shapeMode !== u.LINE_STRIP && this.immediateMode.shapeMode !== u.LINES || (this.immediateMode.shapeMode = u.TRIANGLE_FAN), this.immediateMode.shapeMode === u.QUADS ? this.immediateMode.shapeMode = u.TRIANGLES : this.immediateMode.shapeMode === u.QUAD_STRIP && (this.immediateMode.shapeMode = u.TRIANGLE_STRIP), this._applyColorBlend(this.curFillColor), e4.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.geometry.vertices.length), t4.unbindShader();
          }, l.default.RendererGL.prototype._drawImmediateStroke = function() {
            var e4 = this.GL, t4 = e4.isEnabled(e4.CULL_FACE), r4 = (e4.disable(e4.CULL_FACE), this._getImmediateStrokeShader()), o3 = (this._useLineColor = 0 < this.immediateMode.geometry.vertexStrokeColors.length, this._setStrokeUniforms(r4), true), n3 = false, s3 = void 0;
            try {
              for (var i3, a2 = this.immediateMode.buffers.stroke[Symbol.iterator](); !(o3 = (i3 = a2.next()).done); o3 = true)
                i3.value._prepareBuffer(this.immediateMode.geometry, r4);
            } catch (e5) {
              n3 = true, s3 = e5;
            } finally {
              try {
                o3 || null == a2.return || a2.return();
              } finally {
                if (n3)
                  throw s3;
              }
            }
            this._applyColorBlend(this.curStrokeColor), e4.drawArrays(e4.TRIANGLES, 0, this.immediateMode.geometry.lineVertices.length), t4 && e4.enable(e4.CULL_FACE), r4.unbindShader();
          }, l.default.RendererGL);
          r3.default = n2;
        }, { "../core/constants": 262, "../core/main": 273, "./p5.RenderBuffer": 325, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.map": 163, "core-js/modules/es.array.slice": 164, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 327: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.some"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.uint16-array"), e3("core-js/modules/es.typed-array.uint32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.some"), e3("core-js/modules/es.object.keys"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.uint16-array"), e3("core-js/modules/es.typed-array.uint32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var a = (u = e3("../core/main")) && u.__esModule ? u : { default: u }, n2 = (e3("./p5.RendererGL"), e3("./p5.RenderBuffer"), function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = l();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants")));
          function l() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), l = function() {
              return e4;
            }, e4);
          }
          var s3 = 0, u = (a.default.RendererGL.prototype._initBufferDefaults = function(e4) {
            var t4;
            return this._freeBuffers(e4), 1e3 < ++s3 && (t4 = Object.keys(this.retainedMode.geometry)[0], delete this.retainedMode.geometry[t4], s3--), this.retainedMode.geometry[e4] = {};
          }, a.default.RendererGL.prototype._freeBuffers = function(e4) {
            var a2, l2 = this.retainedMode.geometry[e4];
            function t4(e5) {
              var t5 = true, r4 = false, o3 = void 0;
              try {
                for (var n3, s4 = e5[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true) {
                  var i3 = n3.value;
                  l2[i3.dst] && (a2.deleteBuffer(l2[i3.dst]), l2[i3.dst] = null);
                }
              } catch (e6) {
                r4 = true, o3 = e6;
              } finally {
                try {
                  t5 || null == s4.return || s4.return();
                } finally {
                  if (r4)
                    throw o3;
                }
              }
            }
            l2 && (delete this.retainedMode.geometry[e4], s3--, a2 = this.GL, l2.indexBuffer && a2.deleteBuffer(l2.indexBuffer), t4(this.retainedMode.buffers.stroke), t4(this.retainedMode.buffers.fill));
          }, a.default.RendererGL.prototype.createBuffers = function(e4, t4) {
            var r4, o3, n3, s4 = this.GL, e4 = this._initBufferDefaults(e4), i3 = (e4.model = t4, e4.indexBuffer);
            return t4.faces.length ? (i3 = i3 || (e4.indexBuffer = s4.createBuffer()), n3 = (o3 = (r4 = a.default.RendererGL.prototype._flatten(t4.faces)).some(function(e5) {
              return 65535 < e5;
            })) ? Uint32Array : Uint16Array, this._bindBuffer(i3, s4.ELEMENT_ARRAY_BUFFER, r4, n3), e4.indexBufferType = o3 ? s4.UNSIGNED_INT : s4.UNSIGNED_SHORT, e4.vertexCount = 3 * t4.faces.length) : (i3 && (s4.deleteBuffer(i3), e4.indexBuffer = null), e4.vertexCount = t4.vertices ? t4.vertices.length : 0), e4.lineVertexCount = t4.lineVertices ? t4.lineVertices.length : 0, e4;
          }, a.default.RendererGL.prototype.drawBuffers = function(e4) {
            var t4 = this.GL, r4 = this.retainedMode.geometry[e4];
            if (this._doFill) {
              this._useVertexColor = 0 < r4.model.vertexColors.length;
              var o3 = this._getRetainedFillShader(), n3 = (this._setFillUniforms(o3), true), s4 = false, i3 = void 0;
              try {
                for (var a2, l2 = this.retainedMode.buffers.fill[Symbol.iterator](); !(n3 = (a2 = l2.next()).done); n3 = true)
                  a2.value._prepareBuffer(r4, o3);
              } catch (e5) {
                s4 = true, i3 = e5;
              } finally {
                try {
                  n3 || null == l2.return || l2.return();
                } finally {
                  if (s4)
                    throw i3;
                }
              }
              r4.indexBuffer && this._bindBuffer(r4.indexBuffer, t4.ELEMENT_ARRAY_BUFFER), this._applyColorBlend(this.curFillColor), this._drawElements(t4.TRIANGLES, e4), o3.unbindShader();
            }
            if (this._doStroke && 0 < r4.lineVertexCount) {
              var s4 = t4.isEnabled(t4.CULL_FACE), u2 = (t4.disable(t4.CULL_FACE), this._getRetainedStrokeShader()), c = (this._useLineColor = 0 < r4.model.vertexStrokeColors.length, this._setStrokeUniforms(u2), true), i3 = false, d = void 0;
              try {
                for (var f, h = this.retainedMode.buffers.stroke[Symbol.iterator](); !(c = (f = h.next()).done); c = true)
                  f.value._prepareBuffer(r4, u2);
              } catch (e5) {
                i3 = true, d = e5;
              } finally {
                try {
                  c || null == h.return || h.return();
                } finally {
                  if (i3)
                    throw d;
                }
              }
              this._applyColorBlend(this.curStrokeColor), this._drawArrays(t4.TRIANGLES, e4), s4 && t4.enable(t4.CULL_FACE), u2.unbindShader();
            }
            return this;
          }, a.default.RendererGL.prototype.drawBuffersScaled = function(e4, t4, r4, o3) {
            var n3 = this.uMVMatrix.copy();
            try {
              this.uMVMatrix.scale(t4, r4, o3), this.drawBuffers(e4);
            } finally {
              this.uMVMatrix = n3;
            }
          }, a.default.RendererGL.prototype._drawArrays = function(e4, t4) {
            return this.GL.drawArrays(e4, 0, this.retainedMode.geometry[t4].lineVertexCount), this;
          }, a.default.RendererGL.prototype._drawElements = function(e4, t4) {
            var t4 = this.retainedMode.geometry[t4], r4 = this.GL;
            if (t4.indexBuffer) {
              if (this._pInst.webglVersion !== n2.WEBGL2 && t4.indexBufferType === r4.UNSIGNED_INT && !r4.getExtension("OES_element_index_uint"))
                throw new Error("Unable to render a 3d model with > 65535 triangles. Your web browser does not support the WebGL Extension OES_element_index_uint.");
              r4.drawElements(r4.TRIANGLES, t4.vertexCount, t4.indexBufferType, 0);
            } else
              r4.drawArrays(e4 || r4.TRIANGLES, 0, t4.vertexCount);
          }, a.default.RendererGL.prototype._drawPoints = function(e4, t4) {
            var r4 = this.GL, o3 = this._getImmediatePointShader();
            this._setPointUniforms(o3), this._bindBuffer(t4, r4.ARRAY_BUFFER, this._vToNArray(e4), Float32Array, r4.STATIC_DRAW), o3.enableAttrib(o3.attributes.aPosition, 3), this._applyColorBlend(this.curStrokeColor), r4.drawArrays(r4.Points, 0, e4.length), o3.unbindShader();
          }, a.default.RendererGL);
          r3.default = u;
        }, { "../core/constants": 262, "../core/main": 273, "./p5.RenderBuffer": 325, "./p5.RendererGL": 328, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.some": 165, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.keys": 179, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.float32-array": 209, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint16-array": 230, "core-js/modules/es.typed-array.uint32-array": 231, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 328: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.copy-within"), e3("core-js/modules/es.array.every"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.some"), e3("core-js/modules/es.map"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.set"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.float64-array"), e3("core-js/modules/es.typed-array.int16-array"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint16-array"), e3("core-js/modules/es.typed-array.uint32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.concat"), e3("core-js/modules/es.array.copy-within"), e3("core-js/modules/es.array.every"), e3("core-js/modules/es.array.fill"), e3("core-js/modules/es.array.from"), e3("core-js/modules/es.array.includes"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.array.some"), e3("core-js/modules/es.map"), e3("core-js/modules/es.object.assign"), e3("core-js/modules/es.object.get-prototype-of"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.reflect.construct"), e3("core-js/modules/es.regexp.to-string"), e3("core-js/modules/es.set"), e3("core-js/modules/es.string.includes"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.float32-array"), e3("core-js/modules/es.typed-array.float64-array"), e3("core-js/modules/es.typed-array.int16-array"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.uint16-array"), e3("core-js/modules/es.typed-array.uint32-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.readPixelsWebGL = w, r3.readPixelWebGL = S, r3.default = void 0;
          var g = n2(e3("../core/main")), i2 = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== u(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = l();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants")), a = n2(e3("libtess"));
          e3("./p5.Shader"), e3("./p5.Camera"), e3("../core/p5.Renderer"), e3("./p5.Matrix"), e3("path");
          function l() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), l = function() {
              return e4;
            }, e4);
          }
          function n2(e4) {
            return e4 && e4.__esModule ? e4 : { default: e4 };
          }
          function u(e4) {
            return (u = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          function c(e4) {
            return function(e5) {
              if (Array.isArray(e5)) {
                for (var t4 = 0, r4 = new Array(e5.length); t4 < e5.length; t4++)
                  r4[t4] = e5[t4];
                return r4;
              }
            }(e4) || function(e5) {
              if (Symbol.iterator in Object(e5) || "[object Arguments]" === Object.prototype.toString.call(e5))
                return Array.from(e5);
            }(e4) || function() {
              throw new TypeError("Invalid attempt to spread non-iterable instance");
            }();
          }
          function d(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function f(e4, t4) {
            return (f = Object.setPrototypeOf || function(e5, t5) {
              return e5.__proto__ = t5, e5;
            })(e4, t4);
          }
          function h(o3) {
            return function() {
              var e4, t4, r4 = s3(o3);
              return e4 = function() {
                if ("undefined" != typeof Reflect && Reflect.construct && !Reflect.construct.sham) {
                  if ("function" == typeof Proxy)
                    return 1;
                  try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                    })), 1;
                  } catch (e5) {
                  }
                }
              }() ? (e4 = s3(this).constructor, Reflect.construct(r4, arguments, e4)) : r4.apply(this, arguments), r4 = this, !(t4 = e4) || "object" !== u(t4) && "function" != typeof t4 ? p(r4) : t4;
            };
          }
          function p(e4) {
            if (void 0 === e4)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e4;
          }
          function s3(e4) {
            return (s3 = Object.setPrototypeOf ? Object.getPrototypeOf : function(e5) {
              return e5.__proto__ || Object.getPrototypeOf(e5);
            })(e4);
          }
          function m(e4, t4) {
            j += "#define STROKE_CAP_".concat(e4, " ").concat(t4, "\n"), v[i2[e4]] = t4;
          }
          function y(e4, t4) {
            j += "#define STROKE_JOIN_".concat(e4, " ").concat(t4, "\n"), b[i2[e4]] = t4;
          }
          var v = {}, b = {}, j = "", e3 = (m("ROUND", 0), m("PROJECT", 1), m("SQUARE", 2), y("ROUND", 0), y("MITER", 1), y("BEVEL", 2), "precision highp float;\nprecision highp int;\n\nuniform mat4 uViewMatrix;\n\nuniform bool uUseLighting;\n\nuniform int uAmbientLightCount;\nuniform vec3 uAmbientColor[5];\n\nuniform int uDirectionalLightCount;\nuniform vec3 uLightingDirection[5];\nuniform vec3 uDirectionalDiffuseColors[5];\nuniform vec3 uDirectionalSpecularColors[5];\n\nuniform int uPointLightCount;\nuniform vec3 uPointLightLocation[5];\nuniform vec3 uPointLightDiffuseColors[5];	\nuniform vec3 uPointLightSpecularColors[5];\n\nuniform int uSpotLightCount;\nuniform float uSpotLightAngle[5];\nuniform float uSpotLightConc[5];\nuniform vec3 uSpotLightDiffuseColors[5];\nuniform vec3 uSpotLightSpecularColors[5];\nuniform vec3 uSpotLightLocation[5];\nuniform vec3 uSpotLightDirection[5];\n\nuniform bool uSpecular;\nuniform float uShininess;\n\nuniform float uConstantAttenuation;\nuniform float uLinearAttenuation;\nuniform float uQuadraticAttenuation;\n\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n  float specular;\n  float diffuse;\n};\n\nfloat _phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = reflect(lightDirection, surfaceNormal);\n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat _lambertDiffuse(vec3 lightDirection, vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult _light(vec3 viewDirection, vec3 normal, vec3 lightVector) {\n\n  vec3 lightDir = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = _phongSpecular(lightDir, viewDirection, normal, uShininess);\n  lr.diffuse = _lambertDiffuse(lightDir, normal);\n  return lr;\n}\n\nvoid totalLight(\n  vec3 modelPosition,\n  vec3 normal,\n  out vec3 totalDiffuse,\n  out vec3 totalSpecular\n) {\n\n  totalSpecular = vec3(0.0);\n\n  if (!uUseLighting) {\n    totalDiffuse = vec3(1.0);\n    return;\n  }\n\n  totalDiffuse = vec3(0.0);\n\n  vec3 viewDirection = normalize(-modelPosition);\n\n  for (int j = 0; j < 5; j++) {\n    if (j < uDirectionalLightCount) {\n      vec3 lightVector = (uViewMatrix * vec4(uLightingDirection[j], 0.0)).xyz;\n      vec3 lightColor = uDirectionalDiffuseColors[j];\n      vec3 specularColor = uDirectionalSpecularColors[j];\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if (j < uPointLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      //calculate attenuation\n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n      vec3 lightColor = lightFalloff * uPointLightDiffuseColors[j];\n      vec3 specularColor = lightFalloff * uPointLightSpecularColors[j];\n\n      LightResult result = _light(viewDirection, normal, lightVector);\n      totalDiffuse += result.diffuse * lightColor;\n      totalSpecular += result.specular * lightColor * specularColor;\n    }\n\n    if(j < uSpotLightCount) {\n      vec3 lightPosition = (uViewMatrix * vec4(uSpotLightLocation[j], 1.0)).xyz;\n      vec3 lightVector = modelPosition - lightPosition;\n    \n      float lightDistance = length(lightVector);\n      float lightFalloff = 1.0 / (uConstantAttenuation + lightDistance * uLinearAttenuation + (lightDistance * lightDistance) * uQuadraticAttenuation);\n\n      vec3 lightDirection = (uViewMatrix * vec4(uSpotLightDirection[j], 0.0)).xyz;\n      float spotDot = dot(normalize(lightVector), normalize(lightDirection));\n      float spotFalloff;\n      if(spotDot < uSpotLightAngle[j]) {\n        spotFalloff = 0.0;\n      }\n      else {\n        spotFalloff = pow(spotDot, uSpotLightConc[j]);\n      }\n      lightFalloff *= spotFalloff;\n\n      vec3 lightColor = uSpotLightDiffuseColors[j];\n      vec3 specularColor = uSpotLightSpecularColors[j];\n     \n      LightResult result = _light(viewDirection, normal, lightVector);\n      \n      totalDiffuse += result.diffuse * lightColor * lightFalloff;\n      totalSpecular += result.specular * lightColor * specularColor * lightFalloff;\n    }\n  }\n\n  totalDiffuse *= diffuseFactor;\n  totalSpecular *= specularFactor;\n}\n"), _ = "#ifdef WEBGL2\n\n#define IN in\n#define OUT out\n\n#ifdef FRAGMENT_SHADER\nout vec4 outColor;\n#define OUT_COLOR outColor\n#endif\n#define TEXTURE texture\n\n#else\n\n#ifdef FRAGMENT_SHADER\n#define IN varying\n#else\n#define IN attribute\n#endif\n#define OUT varying\n#define TEXTURE texture2D\n\n#ifdef FRAGMENT_SHADER\n#define OUT_COLOR gl_FragColor\n#endif\n\n#endif\n", x = { immediateVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n", vertexColorVert: "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n}\n", vertexColorFrag: "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n", normalVert: "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform vec4 uMaterialColor;\nuniform bool uUseVertexColor;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\nvarying vec4 vColor;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n", normalFrag: "precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}", basicFrag: "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n", lightVert: e3 + "// include lighting.glgl\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * viewModelPosition;\n\n  vec3 vertexNormal = normalize(uNormalMatrix * aNormal);\n  vVertTexCoord = aTexCoord;\n\n  totalLight(viewModelPosition.xyz, vertexNormal, vDiffuseColor, vSpecularColor);\n\n  for (int i = 0; i < 8; i++) {\n    if (i < uAmbientLightCount) {\n      vDiffuseColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n", lightTextureFrag: "precision highp float;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uEmissive;\n\nvarying highp vec2 vVertTexCoord;\nvarying vec3 vDiffuseColor;\nvarying vec3 vSpecularColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n  if(uEmissive && !isTexture) {\n    gl_FragColor = vColor;\n  }\n  else {\n    vec4 baseColor = isTexture\n      // Textures come in with premultiplied alpha. To apply tint and still have\n      // premultiplied alpha output, we need to multiply the RGB channels by the\n      // tint RGB, and all channels by the tint alpha.\n      ? texture2D(uSampler, vVertTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n      // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n      // channels by alpha to convert it to premultiplied alpha.\n      : vec4(vColor.rgb * vColor.a, vColor.a);\n    gl_FragColor = vec4(baseColor.rgb * vDiffuseColor + vSpecularColor, baseColor.a);\n  }\n}\n", phongVert: "precision highp float;\nprecision highp int;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\nattribute vec4 aVertexColor;\n\nuniform vec3 uAmbientColor[5];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nuniform bool uUseVertexColor;\nuniform vec4 uMaterialColor;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = uNormalMatrix * aNormal;\n  vTexCoord = aTexCoord;\n\n  // TODO: this should be a uniform\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 5; i++) {\n    if (i < uAmbientLightCount) {\n      vAmbientColor += uAmbientColor[i];\n    }\n  }\n  \n  vColor = (uUseVertexColor ? aVertexColor : uMaterialColor);\n}\n", phongFrag: e3 + "// include lighting.glsl\nprecision highp float;\nprecision highp int;\n\nuniform bool uHasSetAmbient;\nuniform vec4 uSpecularMatColor;\nuniform vec4 uAmbientMatColor;\nuniform vec4 uEmissiveMatColor;\n\nuniform vec4 uTint;\nuniform sampler2D uSampler;\nuniform bool isTexture;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\nvarying vec4 vColor;\n\nvoid main(void) {\n\n  vec3 diffuse;\n  vec3 specular;\n  totalLight(vViewPosition, normalize(vNormal), diffuse, specular);\n\n  // Calculating final color as result of all lights (plus emissive term).\n\n  vec4 baseColor = isTexture\n    // Textures come in with premultiplied alpha. To apply tint and still have\n    // premultiplied alpha output, we need to multiply the RGB channels by the\n    // tint RGB, and all channels by the tint alpha.\n    ? texture2D(uSampler, vTexCoord) * vec4(uTint.rgb/255., 1.) * (uTint.a/255.)\n    // Colors come in with unmultiplied alpha, so we need to multiply the RGB\n    // channels by alpha to convert it to premultiplied alpha.\n    : vec4(vColor.rgb * vColor.a, vColor.a);\n  gl_FragColor = vec4(diffuse * baseColor.rgb + \n                    vAmbientColor * (\n                      uHasSetAmbient ? uAmbientMatColor.rgb : baseColor.rgb\n                    ) + \n                    specular * uSpecularMatColor.rgb + \n                    uEmissiveMatColor.rgb, baseColor.a);\n}\n", fontVert: _ + "IN vec3 aPosition;\nIN vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nOUT vec2 vTexCoord;\nOUT float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // Expand glyph bounding boxes by 1px on each side to give a bit of room\n  // for antialiasing\n  vec2 pixelScale = vec2(\n    1. / uModelViewMatrix[0][0],\n    1. / uModelViewMatrix[1][1]\n  );\n  vec2 offset = pixelScale * normalize(aTexCoord - vec2(0.5, 0.5)) * vec2(1., -1.);\n  vec2 textureOffset = offset * (1. / vec2(\n    uGlyphRect.z - uGlyphRect.x,\n    uGlyphRect.w - uGlyphRect.y\n  ));\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n\n  positionVec4.xy += offset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord + textureOffset;\n  w = gl_Position.w;\n}\n", fontFrag: _ + "#ifndef WEBGL2\n#extension GL_OES_standard_derivatives : enable\n#endif\n\n#if 0\n  // simulate integer math using floats\n	#define int float\n	#define ivec2 vec2\n	#define INT(x) float(x)\n\n	int ifloor(float v) { return floor(v); }\n	ivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n	precision highp int;\n	#define INT(x) x\n\n	int ifloor(float v) { return int(v); }\n	int ifloor(int v) { return v; }\n	ivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nIN vec2 vTexCoord;\n\n// some helper functions\nint ROUND(float v) { return ifloor(v + 0.5); }\nivec2 ROUND(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = ROUND(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return TEXTURE(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  OUT_COLOR = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n  OUT_COLOR *= saturate(max(antialias, cover));\n}\n", lineVert: j + "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nprecision mediump float;\nprecision mediump int;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform bool uUseLineColor;\nuniform vec4 uMaterialColor;\n\nuniform vec4 uViewport;\nuniform int uPerspective;\nuniform int uStrokeJoin;\n\nattribute vec4 aPosition;\nattribute vec3 aTangentIn;\nattribute vec3 aTangentOut;\nattribute float aSide;\nattribute vec4 aVertexColor;\n\nvarying vec4 vColor;\nvarying vec2 vTangent;\nvarying vec2 vCenter;\nvarying vec2 vPosition;\nvarying float vMaxDist;\nvarying float vCap;\nvarying float vJoin;\n\nvec2 lineIntersection(vec2 aPoint, vec2 aDir, vec2 bPoint, vec2 bDir) {\n  // Rotate and translate so a starts at the origin and goes out to the right\n  bPoint -= aPoint;\n  vec2 rotatedBFrom = vec2(\n    bPoint.x*aDir.x + bPoint.y*aDir.y,\n    bPoint.y*aDir.x - bPoint.x*aDir.y\n  );\n  vec2 bTo = bPoint + bDir;\n  vec2 rotatedBTo = vec2(\n    bTo.x*aDir.x + bTo.y*aDir.y,\n    bTo.y*aDir.x - bTo.x*aDir.y\n  );\n  float intersectionDistance =\n    rotatedBTo.x + (rotatedBFrom.x - rotatedBTo.x) * rotatedBTo.y /\n    (rotatedBTo.y - rotatedBFrom.y);\n  return aPoint + aDir * intersectionDistance;\n}\n\nvoid main() {\n  // Caps have one of either the in or out tangent set to 0\n  vCap = (aTangentIn == vec3(0.)) != (aTangentOut == (vec3(0.)))\n    ? 1. : 0.;\n\n  // Joins have two unique, defined tangents\n  vJoin = (\n    aTangentIn != vec3(0.) &&\n    aTangentOut != vec3(0.) &&\n    aTangentIn != aTangentOut\n  ) ? 1. : 0.;\n\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posqIn = uModelViewMatrix * (aPosition + vec4(aTangentIn, 0));\n  vec4 posqOut = uModelViewMatrix * (aPosition + vec4(aTangentOut, 0));\n\n  float facingCamera = pow(\n    // The word space tangent's z value is 0 if it's facing the camera\n    abs(normalize(posqIn-posp).z),\n\n    // Using pow() here to ramp `facingCamera` up from 0 to 1 really quickly\n    // so most lines get scaled and don't get clipped\n    0.25\n  );\n\n  // using a scale <1 moves the lines towards the camera\n  // in order to prevent popping effects due to half of\n  // the line disappearing behind the geometry faces.\n  float scale = mix(1., 0.995, facingCamera);\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posqIn.xyz = posqIn.xyz * scale;\n  posqOut.xyz = posqOut.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 qIn = uProjectionMatrix * posqIn;\n  vec4 qOut = uProjectionMatrix * posqOut;\n  vCenter = p.xy;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangentIn = normalize((qIn.xy*p.w - p.xy*qIn.w) * uViewport.zw);\n  vec2 tangentOut = normalize((qOut.xy*p.w - p.xy*qOut.w) * uViewport.zw);\n\n  vec2 curPerspScale;\n  if(uPerspective == 1) {\n    // Perspective ---\n    // convert from world to clip by multiplying with projection scaling factor\n    // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n    // invert Y, projections in Processing invert Y\n    curPerspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n  } else {\n    // No Perspective ---\n    // multiply by W (to cancel out division by W later in the pipeline) and\n    // convert from screen to clip (derived from clip to screen above)\n    curPerspScale = p.w / (0.5 * uViewport.zw);\n  }\n\n  vec2 offset;\n  if (vJoin == 1.) {\n    vTangent = normalize(tangentIn + tangentOut);\n    vec2 normalIn = vec2(-tangentIn.y, tangentIn.x);\n    vec2 normalOut = vec2(-tangentOut.y, tangentOut.x);\n    float side = sign(aSide);\n    float sideEnum = abs(aSide);\n\n    // We generate vertices for joins on either side of the centerline, but\n    // the \"elbow\" side is the only one needing a join. By not setting the\n    // offset for the other side, all its vertices will end up in the same\n    // spot and not render, effectively discarding it.\n    if (sign(dot(tangentOut, vec2(-tangentIn.y, tangentIn.x))) != side) {\n      // Side enums:\n      //   1: the side going into the join\n      //   2: the middle of the join\n      //   3: the side going out of the join\n      if (sideEnum == 2.) {\n        // Calculate the position + tangent on either side of the join, and\n        // find where the lines intersect to find the elbow of the join\n        vec2 c = (posp.xy/posp.w + vec2(1.,1.)) * 0.5 * uViewport.zw;\n        vec2 intersection = lineIntersection(\n          c + (side * normalIn * uStrokeWeight / 2.) * curPerspScale,\n          tangentIn,\n          c + (side * normalOut * uStrokeWeight / 2.) * curPerspScale,\n          tangentOut\n        );\n        offset = (intersection - c);\n\n        // When lines are thick and the angle of the join approaches 180, the\n        // elbow might be really far from the center. We'll apply a limit to\n        // the magnitude to avoid lines going across the whole screen when this\n        // happens.\n        float mag = length(offset);\n        float maxMag = 3. * uStrokeWeight;\n        if (mag > maxMag) {\n          offset *= maxMag / mag;\n        }\n      } else if (sideEnum == 1.) {\n        offset = side * normalIn * curPerspScale * uStrokeWeight / 2.;\n      } else if (sideEnum == 3.) {\n        offset = side * normalOut * curPerspScale * uStrokeWeight / 2.;\n      }\n    }\n    if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 avgNormal = vec2(-vTangent.y, vTangent.x);\n      vMaxDist = abs(dot(avgNormal, normalIn * uStrokeWeight / 2.));\n    } else {\n      vMaxDist = uStrokeWeight / 2.;\n    }\n  } else {\n    vec2 tangent = aTangentIn == vec3(0.) ? tangentOut : tangentIn;\n    vTangent = tangent;\n    vec2 normal = vec2(-tangent.y, tangent.x);\n\n    float normalOffset = sign(aSide);\n    // Caps will have side values of -2 or 2 on the edge of the cap that\n    // extends out from the line\n    float tangentOffset = abs(aSide) - 1.;\n    offset = (normal * normalOffset + tangent * tangentOffset) *\n      uStrokeWeight * 0.5 * curPerspScale;\n    vMaxDist = uStrokeWeight / 2.;\n  }\n  vPosition = vCenter + offset / curPerspScale;\n\n  gl_Position.xy = p.xy + offset.xy;\n  gl_Position.zw = p.zw;\n  \n  vColor = (uUseLineColor ? aVertexColor : uMaterialColor);\n}\n", lineFrag: j + "precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\nuniform int uStrokeCap;\nuniform int uStrokeJoin;\nuniform float uStrokeWeight;\n\nvarying vec4 vColor;\nvarying vec2 vTangent;\nvarying vec2 vCenter;\nvarying vec2 vPosition;\nvarying float vMaxDist;\nvarying float vCap;\nvarying float vJoin;\n\nfloat distSquared(vec2 a, vec2 b) {\n  vec2 aToB = b - a;\n  return dot(aToB, aToB);\n}\n\nvoid main() {\n  if (vCap > 0.) {\n    if (\n      uStrokeCap == STROKE_CAP_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (\n      uStrokeCap == STROKE_CAP_SQUARE &&\n      dot(vPosition - vCenter, vTangent) > 0.\n    ) {\n      discard;\n    }\n    // Use full area for PROJECT\n  } else if (vJoin > 0.) {\n    if (\n      uStrokeJoin == STROKE_JOIN_ROUND &&\n      distSquared(vPosition, vCenter) > uStrokeWeight * uStrokeWeight * 0.25\n    ) {\n      discard;\n    } else if (uStrokeJoin == STROKE_JOIN_BEVEL) {\n      vec2 normal = vec2(-vTangent.y, vTangent.x);\n      if (abs(dot(vPosition - vCenter, normal)) > vMaxDist) {\n        discard;\n      }\n    }\n    // Use full area for MITER\n  }\n  gl_FragColor = vec4(vColor.rgb, 1.) * vColor.a;\n}\n", pointVert: "attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n	vec4 positionVec4 =  vec4(aPosition, 1.0);\n	gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n	gl_PointSize = uPointSize;\n	vStrokeWeight = uPointSize;\n}", pointFrag: "precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n  float mask = 0.0;\n\n  // make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n  // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n  mask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n  // if strokeWeight is 1 or less lets just draw a square\n  // this prevents weird artifacting from carving circles when our points are really small\n  // if strokeWeight is larger than 1, we just use it as is\n\n  mask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n  // throw away the borders of the mask\n  // otherwise we get weird alpha blending issues\n\n  if(mask > 0.98){\n    discard;\n  }\n\n  gl_FragColor = vec4(uMaterialColor.rgb, 1.) * uMaterialColor.a;\n}\n" };
          function w(e4, t4, r4, o3, n3, s4, i3, a2, l2, u2) {
            var c2 = t4.getParameter(t4.FRAMEBUFFER_BINDING), r4 = (t4.bindFramebuffer(t4.FRAMEBUFFER, r4), a2 === t4.RGBA ? 4 : 3), d2 = s4 * i3 * r4, f2 = l2 === t4.UNSIGNED_BYTE ? Uint8Array : Float32Array;
            if (e4 instanceof f2 && e4.length === d2 || (e4 = new f2(d2)), t4.readPixels(o3, u2 ? u2 - n3 - i3 : n3, s4, i3, a2, l2, e4), t4.bindFramebuffer(t4.FRAMEBUFFER, c2), u2)
              for (var h2 = Math.floor(i3 / 2), p2 = new f2(s4 * r4), m2 = 0; m2 < h2; m2++) {
                var y2 = m2 * s4 * 4, g2 = (i3 - m2 - 1) * s4 * 4;
                p2.set(e4.subarray(y2, y2 + 4 * s4)), e4.copyWithin(y2, g2, g2 + 4 * s4), e4.set(p2, g2);
              }
            return e4;
          }
          function S(e4, t4, r4, o3, n3, s4, i3) {
            var a2 = e4.getParameter(e4.FRAMEBUFFER_BINDING), t4 = (e4.bindFramebuffer(e4.FRAMEBUFFER, t4), n3 === e4.RGBA ? 4 : 3), t4 = new (s4 === e4.UNSIGNED_BYTE ? Uint8Array : Float32Array)(t4);
            return e4.readPixels(r4, i3 ? i3 - o3 - 1 : o3, 1, 1, n3, s4, t4), e4.bindFramebuffer(e4.FRAMEBUFFER, a2), Array.from(t4);
          }
          g.default.prototype.setAttributes = function(e4, t4) {
            if (void 0 === this._glAttributes)
              console.log("You are trying to use setAttributes on a p5.Graphics object that does not use a WEBGL renderer.");
            else {
              var r4 = true;
              if (void 0 !== t4 ? (null === this._glAttributes && (this._glAttributes = {}), this._glAttributes[e4] !== t4 && (this._glAttributes[e4] = t4, r4 = false)) : e4 instanceof Object && this._glAttributes !== e4 && (this._glAttributes = e4, r4 = false), this._renderer.isP3D && !r4) {
                if (!this._setupDone) {
                  for (var o3 in this._renderer.retainedMode.geometry)
                    if (this._renderer.retainedMode.geometry.hasOwnProperty(o3))
                      return void g.default._friendlyError("Sorry, Could not set the attributes, you need to call setAttributes() before calling the other drawing methods in setup()");
                }
                this.push(), this._renderer._resetContext(), this.pop(), this._renderer._curCamera && (this._renderer._curCamera._renderer = this._renderer);
              }
            }
          }, g.default.RendererGL = function(e4) {
            var t4 = s4;
            if ("function" != typeof e4 && null !== e4)
              throw new TypeError("Super expression must either be null or a function");
            t4.prototype = Object.create(e4 && e4.prototype, { constructor: { value: t4, writable: true, configurable: true } }), e4 && f(t4, e4);
            var r4, n3 = h(s4);
            function s4(e5, t5, r5, o3) {
              if (this instanceof s4)
                return (e5 = n3.call(this, e5, t5, r5))._setAttributeDefaults(t5), e5._initContext(), e5.isP3D = true, e5.GL = e5.drawingContext, e5._pInst._setProperty("drawingContext", e5.drawingContext), e5._isErasing = false, e5._enableLighting = false, e5.ambientLightColors = [], e5.specularColors = [1, 1, 1], e5.directionalLightDirections = [], e5.directionalLightDiffuseColors = [], e5.directionalLightSpecularColors = [], e5.pointLightPositions = [], e5.pointLightDiffuseColors = [], e5.pointLightSpecularColors = [], e5.spotLightPositions = [], e5.spotLightDirections = [], e5.spotLightDiffuseColors = [], e5.spotLightSpecularColors = [], e5.spotLightAngle = [], e5.spotLightConc = [], e5.drawMode = i2.FILL, e5.curFillColor = e5._cachedFillStyle = [1, 1, 1, 1], e5.curAmbientColor = e5._cachedFillStyle = [1, 1, 1, 1], e5.curSpecularColor = e5._cachedFillStyle = [0, 0, 0, 0], e5.curEmissiveColor = e5._cachedFillStyle = [0, 0, 0, 0], e5.curStrokeColor = e5._cachedStrokeStyle = [0, 0, 0, 1], e5.curBlendMode = i2.BLEND, e5._cachedBlendMode = void 0, e5.webglVersion === i2.WEBGL2 ? e5.blendExt = e5.GL : e5.blendExt = e5.GL.getExtension("EXT_blend_minmax"), e5._isBlending = false, e5._hasSetAmbient = false, e5._useSpecularMaterial = false, e5._useEmissiveMaterial = false, e5._useNormalMaterial = false, e5._useShininess = 1, e5._useLineColor = false, e5._useVertexColor = false, e5.registerEnabled = [], e5._tint = [255, 255, 255, 255], e5.constantAttenuation = 1, e5.linearAttenuation = 0, e5.quadraticAttenuation = 0, e5.uMVMatrix = new g.default.Matrix(), e5.uPMatrix = new g.default.Matrix(), e5.uNMatrix = new g.default.Matrix("mat3"), e5._currentNormal = new g.default.Vector(0, 0, 1), e5._curCamera = new g.default.Camera(p(e5)), e5._curCamera._computeCameraDefaultSettings(), e5._curCamera._setDefaultCamera(), e5.prevTouches = [], e5.zoomVelocity = 0, e5.rotateVelocity = new g.default.Vector(0, 0), e5.moveVelocity = new g.default.Vector(0, 0), e5.executeZoom = false, e5.executeRotateAndMove = false, e5._defaultLightShader = void 0, e5._defaultImmediateModeShader = void 0, e5._defaultNormalShader = void 0, e5._defaultColorShader = void 0, e5._defaultPointShader = void 0, e5.userFillShader = void 0, e5.userStrokeShader = void 0, e5.userPointShader = void 0, e5.retainedMode = { geometry: {}, buffers: { stroke: [new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", p(e5), e5._flatten), new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", p(e5), e5._flatten), new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", p(e5), e5._flatten), new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", p(e5), e5._flatten), new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", p(e5))], fill: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", p(e5), e5._vToNArray), new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", p(e5), e5._vToNArray), new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", p(e5)), new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", p(e5)), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", p(e5), e5._flatten)], text: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", p(e5), e5._vToNArray), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", p(e5), e5._flatten)] } }, e5.immediateMode = { geometry: new g.default.Geometry(), shapeMode: i2.TRIANGLE_FAN, _bezierVertex: [], _quadraticVertex: [], _curveVertex: [], buffers: { fill: [new g.default.RenderBuffer(3, "vertices", "vertexBuffer", "aPosition", p(e5), e5._vToNArray), new g.default.RenderBuffer(3, "vertexNormals", "normalBuffer", "aNormal", p(e5), e5._vToNArray), new g.default.RenderBuffer(4, "vertexColors", "colorBuffer", "aVertexColor", p(e5)), new g.default.RenderBuffer(3, "vertexAmbients", "ambientBuffer", "aAmbientColor", p(e5)), new g.default.RenderBuffer(2, "uvs", "uvBuffer", "aTexCoord", p(e5), e5._flatten)], stroke: [new g.default.RenderBuffer(4, "lineVertexColors", "lineColorBuffer", "aVertexColor", p(e5), e5._flatten), new g.default.RenderBuffer(3, "lineVertices", "lineVerticesBuffer", "aPosition", p(e5), e5._flatten), new g.default.RenderBuffer(3, "lineTangentsIn", "lineTangentsInBuffer", "aTangentIn", p(e5), e5._flatten), new g.default.RenderBuffer(3, "lineTangentsOut", "lineTangentsOutBuffer", "aTangentOut", p(e5), e5._flatten), new g.default.RenderBuffer(1, "lineSides", "lineSidesBuffer", "aSide", p(e5))], point: e5.GL.createBuffer() } }, e5.pointSize = 5, e5.curStrokeWeight = 1, e5.curStrokeCap = i2.ROUND, e5.curStrokeJoin = i2.ROUND, e5.textures = /* @__PURE__ */ new Map(), e5.framebuffers = /* @__PURE__ */ new Set(), e5.textureMode = i2.IMAGE, e5.textureWrapX = i2.CLAMP, e5.textureWrapY = i2.CLAMP, e5._tex = null, e5._curveTightness = 6, e5._lookUpTableBezier = [], e5._lookUpTableQuadratic = [], e5._lutBezierDetail = 0, e5._lutQuadraticDetail = 0, e5.isProcessingVertices = false, e5._tessy = e5._initTessy(), e5.fontInfos = {}, e5._curShader = void 0, e5;
              throw new TypeError("Cannot call a class as a function");
            }
            return t4 = s4, (e4 = [{ key: "_setAttributeDefaults", value: function(e5) {
              var t5 = { alpha: true, depth: true, stencil: true, antialias: navigator.userAgent.toLowerCase().includes("safari"), premultipliedAlpha: true, preserveDrawingBuffer: true, perPixelLighting: true, version: 2 };
              null === e5._glAttributes ? e5._glAttributes = t5 : e5._glAttributes = Object.assign(t5, e5._glAttributes);
            } }, { key: "_initContext", value: function() {
              if (1 !== this._pInst._glAttributes.version && (this.drawingContext = this.canvas.getContext("webgl2", this._pInst._glAttributes)), this.webglVersion = this.drawingContext ? i2.WEBGL2 : i2.WEBGL, this._pInst._setProperty("webglVersion", this.webglVersion), this.drawingContext || (this.drawingContext = this.canvas.getContext("webgl", this._pInst._glAttributes) || this.canvas.getContext("experimental-webgl", this._pInst._glAttributes)), null === this.drawingContext)
                throw new Error("Error creating webgl context");
              var e5 = this.drawingContext;
              e5.enable(e5.DEPTH_TEST), e5.depthFunc(e5.LEQUAL), e5.viewport(0, 0, e5.drawingBufferWidth, e5.drawingBufferHeight), e5.pixelStorei(e5.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true), this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
            } }, { key: "_resetContext", value: function(e5, t5) {
              var r5, o3 = this.width, n4 = this.height, s5 = this.canvas.id, i3 = this._pInst instanceof g.default.Graphics, s5 = (i3 ? ((r5 = this._pInst).canvas.parentNode.removeChild(r5.canvas), r5.canvas = document.createElement("canvas"), (r5._pInst._userNode || document.body).appendChild(r5.canvas), g.default.Element.call(r5, r5.canvas, r5._pInst), r5.width = o3, r5.height = n4) : ((r5 = this.canvas) && r5.parentNode.removeChild(r5), (r5 = document.createElement("canvas")).id = s5, (this._pInst._userNode || document.body).appendChild(r5), this._pInst.canvas = r5, this.canvas = r5), new g.default.RendererGL(this._pInst.canvas, this._pInst, !i3));
              this._pInst._setProperty("_renderer", s5), s5.resize(o3, n4), s5._applyDefaults(), i3 || this._pInst._elements.push(s5), "function" == typeof t5 && setTimeout(function() {
                t5.apply(window._renderer, e5);
              }, 0);
            } }, { key: "_update", value: function() {
              this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this.ambientLightColors.length = 0, this.specularColors = [1, 1, 1], this.directionalLightDirections.length = 0, this.directionalLightDiffuseColors.length = 0, this.directionalLightSpecularColors.length = 0, this.pointLightPositions.length = 0, this.pointLightDiffuseColors.length = 0, this.pointLightSpecularColors.length = 0, this.spotLightPositions.length = 0, this.spotLightDirections.length = 0, this.spotLightDiffuseColors.length = 0, this.spotLightSpecularColors.length = 0, this.spotLightAngle.length = 0, this.spotLightConc.length = 0, this._enableLighting = false, this._tint = [255, 255, 255, 255], this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
            } }, { key: "background", value: function() {
              var e5 = (e5 = this._pInst).color.apply(e5, arguments), t5 = e5.levels[0] / 255, r5 = e5.levels[1] / 255, o3 = e5.levels[2] / 255, e5 = e5.levels[3] / 255;
              this.clear(t5, r5, o3, e5);
            } }, { key: "fill", value: function(e5, t5, r5, o3) {
              var n4 = g.default.prototype.color.apply(this._pInst, arguments);
              this.curFillColor = n4._array, this.drawMode = i2.FILL, this._useNormalMaterial = false, this._tex = null;
            } }, { key: "stroke", value: function(e5, t5, r5, o3) {
              var n4 = g.default.prototype.color.apply(this._pInst, arguments);
              this.curStrokeColor = n4._array;
            } }, { key: "strokeCap", value: function(e5) {
              this.curStrokeCap = e5;
            } }, { key: "strokeJoin", value: function(e5) {
              this.curStrokeJoin = e5;
            } }, { key: "filter", value: function(e5) {
              g.default._friendlyError("filter() does not work in WEBGL mode");
            } }, { key: "blendMode", value: function(e5) {
              e5 === i2.DARKEST || e5 === i2.LIGHTEST || e5 === i2.ADD || e5 === i2.BLEND || e5 === i2.SUBTRACT || e5 === i2.SCREEN || e5 === i2.EXCLUSION || e5 === i2.REPLACE || e5 === i2.MULTIPLY || e5 === i2.REMOVE ? this.curBlendMode = e5 : e5 !== i2.BURN && e5 !== i2.OVERLAY && e5 !== i2.HARD_LIGHT && e5 !== i2.SOFT_LIGHT && e5 !== i2.DODGE || console.warn("BURN, OVERLAY, HARD_LIGHT, SOFT_LIGHT, and DODGE only work for blendMode in 2D mode.");
            } }, { key: "erase", value: function(e5, t5) {
              this._isErasing || (this._applyBlendMode(i2.REMOVE), this._isErasing = true, this._cachedFillStyle = this.curFillColor.slice(), this.curFillColor = [1, 1, 1, e5 / 255], this._cachedStrokeStyle = this.curStrokeColor.slice(), this.curStrokeColor = [1, 1, 1, t5 / 255]);
            } }, { key: "noErase", value: function() {
              this._isErasing && (this._isErasing = false, this.curFillColor = this._cachedFillStyle.slice(), this.curStrokeColor = this._cachedStrokeStyle.slice(), this.blendMode(this._cachedBlendMode));
            } }, { key: "strokeWeight", value: function(e5) {
              this.curStrokeWeight !== e5 && (this.pointSize = e5, this.curStrokeWeight = e5);
            } }, { key: "_getPixel", value: function(e5, t5) {
              var r5 = this.GL;
              return S(r5, null, e5, t5, r5.RGBA, r5.UNSIGNED_BYTE, this._pInst.height * this._pInst.pixelDensity());
            } }, { key: "loadPixels", value: function() {
              var e5, t5, r5 = this._pixelsState;
              true !== this._pInst._glAttributes.preserveDrawingBuffer ? console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.") : (e5 = this._pInst._pixelDensity, t5 = this.GL, r5._setProperty("pixels", w(r5.pixels, t5, null, 0, 0, this.width * e5, this.height * e5, t5.RGBA, t5.UNSIGNED_BYTE, this.height * e5)));
            } }, { key: "updatePixels", value: function() {
              var e5 = this._getTempFramebuffer();
              e5.pixels = this._pixelsState.pixels, e5.updatePixels(), this._pInst.push(), this._pInst.resetMatrix(), this._pInst.clear(), this._pInst.imageMode(i2.CENTER), this._pInst.image(e5, 0, 0), this._pInst.pop(), this.GL.clearDepth(1), this.GL.clear(this.GL.DEPTH_BUFFER_BIT);
            } }, { key: "_getTempFramebuffer", value: function() {
              return this._tempFramebuffer || (this._tempFramebuffer = this._pInst.createFramebuffer({ format: i2.UNSIGNED_BYTE, useDepth: this._pInst._glAttributes.depth, depthFormat: i2.UNSIGNED_INT, antialias: this._pInst._glAttributes.antialias })), this._tempFramebuffer;
            } }, { key: "geometryInHash", value: function(e5) {
              return void 0 !== this.retainedMode.geometry[e5];
            } }, { key: "resize", value: function(t5, r5) {
              g.default.Renderer.prototype.resize.call(this, t5, r5), this.GL.viewport(0, 0, this.GL.drawingBufferWidth, this.GL.drawingBufferHeight), this._viewport = this.GL.getParameter(this.GL.VIEWPORT), this._curCamera._resize();
              var t5 = this._pixelsState, e5 = (void 0 !== t5.pixels && t5._setProperty("pixels", new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4)), true), r5 = false, t5 = void 0;
              try {
                for (var o3, n4 = this.framebuffers[Symbol.iterator](); !(e5 = (o3 = n4.next()).done); e5 = true)
                  o3.value._canvasSizeChanged();
              } catch (e6) {
                r5 = true, t5 = e6;
              } finally {
                try {
                  e5 || null == n4.return || n4.return();
                } finally {
                  if (r5)
                    throw t5;
                }
              }
            } }, { key: "clear", value: function() {
              var e5 = (arguments.length <= 0 ? void 0 : arguments[0]) || 0, t5 = (arguments.length <= 1 ? void 0 : arguments[1]) || 0, r5 = (arguments.length <= 2 ? void 0 : arguments[2]) || 0, o3 = (arguments.length <= 3 ? void 0 : arguments[3]) || 0;
              this.GL.clearColor(e5 * o3, t5 * o3, r5 * o3, o3), this.GL.clearDepth(1), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
            } }, { key: "applyMatrix", value: function(e5, t5, r5, o3, n4, s5) {
              16 === arguments.length ? g.default.Matrix.prototype.apply.apply(this.uMVMatrix, arguments) : this.uMVMatrix.apply([e5, t5, 0, 0, r5, o3, 0, 0, 0, 0, 1, 0, n4, s5, 0, 1]);
            } }, { key: "translate", value: function(e5, t5, r5) {
              return e5 instanceof g.default.Vector && (r5 = e5.z, t5 = e5.y, e5 = e5.x), this.uMVMatrix.translate([e5, t5, r5]), this;
            } }, { key: "scale", value: function(e5, t5, r5) {
              return this.uMVMatrix.scale(e5, t5, r5), this;
            } }, { key: "rotate", value: function(e5, t5) {
              return void 0 === t5 ? this.rotateZ(e5) : (g.default.Matrix.prototype.rotate.apply(this.uMVMatrix, arguments), this);
            } }, { key: "rotateX", value: function(e5) {
              return this.rotate(e5, 1, 0, 0), this;
            } }, { key: "rotateY", value: function(e5) {
              return this.rotate(e5, 0, 1, 0), this;
            } }, { key: "rotateZ", value: function(e5) {
              return this.rotate(e5, 0, 0, 1), this;
            } }, { key: "push", value: function() {
              var e5 = g.default.Renderer.prototype.push.apply(this), t5 = e5.properties;
              return t5.uMVMatrix = this.uMVMatrix.copy(), t5.uPMatrix = this.uPMatrix.copy(), t5._curCamera = this._curCamera, this._curCamera = this._curCamera.copy(), t5.ambientLightColors = this.ambientLightColors.slice(), t5.specularColors = this.specularColors.slice(), t5.directionalLightDirections = this.directionalLightDirections.slice(), t5.directionalLightDiffuseColors = this.directionalLightDiffuseColors.slice(), t5.directionalLightSpecularColors = this.directionalLightSpecularColors.slice(), t5.pointLightPositions = this.pointLightPositions.slice(), t5.pointLightDiffuseColors = this.pointLightDiffuseColors.slice(), t5.pointLightSpecularColors = this.pointLightSpecularColors.slice(), t5.spotLightPositions = this.spotLightPositions.slice(), t5.spotLightDirections = this.spotLightDirections.slice(), t5.spotLightDiffuseColors = this.spotLightDiffuseColors.slice(), t5.spotLightSpecularColors = this.spotLightSpecularColors.slice(), t5.spotLightAngle = this.spotLightAngle.slice(), t5.spotLightConc = this.spotLightConc.slice(), t5.userFillShader = this.userFillShader, t5.userStrokeShader = this.userStrokeShader, t5.userPointShader = this.userPointShader, t5.pointSize = this.pointSize, t5.curStrokeWeight = this.curStrokeWeight, t5.curStrokeColor = this.curStrokeColor, t5.curFillColor = this.curFillColor, t5.curAmbientColor = this.curAmbientColor, t5.curSpecularColor = this.curSpecularColor, t5.curEmissiveColor = this.curEmissiveColor, t5._hasSetAmbient = this._hasSetAmbient, t5._useSpecularMaterial = this._useSpecularMaterial, t5._useEmissiveMaterial = this._useEmissiveMaterial, t5._useShininess = this._useShininess, t5.constantAttenuation = this.constantAttenuation, t5.linearAttenuation = this.linearAttenuation, t5.quadraticAttenuation = this.quadraticAttenuation, t5._enableLighting = this._enableLighting, t5._useNormalMaterial = this._useNormalMaterial, t5._tex = this._tex, t5.drawMode = this.drawMode, t5._currentNormal = this._currentNormal, t5.curBlendMode = this.curBlendMode, e5;
            } }, { key: "resetMatrix", value: function() {
              return this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this;
            } }, { key: "_getImmediateStrokeShader", value: function() {
              var e5 = this.userStrokeShader;
              return e5 && e5.isStrokeShader() ? e5 : this._getLineShader();
            } }, { key: "_getRetainedStrokeShader", value: function() {
              return this._getImmediateStrokeShader();
            } }, { key: "_getImmediateFillShader", value: function() {
              var e5 = this.userFillShader;
              if (this._useNormalMaterial && (!e5 || !e5.isNormalShader()))
                return this._getNormalShader();
              if (this._enableLighting) {
                if (!e5 || !e5.isLightShader())
                  return this._getLightShader();
              } else if (this._tex) {
                if (!e5 || !e5.isTextureShader())
                  return this._getLightShader();
              } else if (!e5)
                return this._getImmediateModeShader();
              return e5;
            } }, { key: "_getRetainedFillShader", value: function() {
              if (this._useNormalMaterial)
                return this._getNormalShader();
              var e5 = this.userFillShader;
              if (this._enableLighting) {
                if (!e5 || !e5.isLightShader())
                  return this._getLightShader();
              } else if (this._tex) {
                if (!e5 || !e5.isTextureShader())
                  return this._getLightShader();
              } else if (!e5)
                return this._getColorShader();
              return e5;
            } }, { key: "_getImmediatePointShader", value: function() {
              var e5 = this.userPointShader;
              return e5 && e5.isPointShader() ? e5 : this._getPointShader();
            } }, { key: "_getRetainedLineShader", value: function() {
              return this._getImmediateLineShader();
            } }, { key: "_getLightShader", value: function() {
              return this._defaultLightShader || (this._pInst._glAttributes.perPixelLighting ? this._defaultLightShader = new g.default.Shader(this, x.phongVert, x.phongFrag) : this._defaultLightShader = new g.default.Shader(this, x.lightVert, x.lightTextureFrag)), this._defaultLightShader;
            } }, { key: "_getImmediateModeShader", value: function() {
              return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new g.default.Shader(this, x.immediateVert, x.vertexColorFrag)), this._defaultImmediateModeShader;
            } }, { key: "_getNormalShader", value: function() {
              return this._defaultNormalShader || (this._defaultNormalShader = new g.default.Shader(this, x.normalVert, x.normalFrag)), this._defaultNormalShader;
            } }, { key: "_getColorShader", value: function() {
              return this._defaultColorShader || (this._defaultColorShader = new g.default.Shader(this, x.normalVert, x.basicFrag)), this._defaultColorShader;
            } }, { key: "_getPointShader", value: function() {
              return this._defaultPointShader || (this._defaultPointShader = new g.default.Shader(this, x.pointVert, x.pointFrag)), this._defaultPointShader;
            } }, { key: "_getLineShader", value: function() {
              return this._defaultLineShader || (this._defaultLineShader = new g.default.Shader(this, x.lineVert, x.lineFrag)), this._defaultLineShader;
            } }, { key: "_getFontShader", value: function() {
              return this._defaultFontShader || (this.webglVersion === i2.WEBGL && this.GL.getExtension("OES_standard_derivatives"), this._defaultFontShader = new g.default.Shader(this, this._webGL2CompatibilityPrefix("vert", "mediump") + x.fontVert, this._webGL2CompatibilityPrefix("frag", "mediump") + x.fontFrag)), this._defaultFontShader;
            } }, { key: "_webGL2CompatibilityPrefix", value: function(e5, t5) {
              var r5 = "";
              return this.webglVersion === i2.WEBGL2 && (r5 += "#version 300 es\n#define WEBGL2\n"), "vert" === e5 ? r5 += "#define VERTEX_SHADER\n" : "frag" === e5 && (r5 += "#define FRAGMENT_SHADER\n"), t5 && (r5 += "precision ".concat(t5, " float;\n")), r5;
            } }, { key: "_getEmptyTexture", value: function() {
              var e5;
              return this._emptyTexture || ((e5 = new g.default.Image(1, 1)).set(0, 0, 255), this._emptyTexture = new g.default.Texture(this, e5)), this._emptyTexture;
            } }, { key: "getTexture", value: function(e5) {
              e5 instanceof g.default.Framebuffer && (e5 = e5.color);
              var t5 = this.textures.get(e5);
              return t5 || (t5 = new g.default.Texture(this, e5), this.textures.set(e5, t5), t5);
            } }, { key: "createFramebuffer", value: function(e5) {
              return new g.default.Framebuffer(this, e5);
            } }, { key: "_setStrokeUniforms", value: function(e5) {
              e5.bindShader(), e5.setUniform("uUseLineColor", this._useLineColor), e5.setUniform("uMaterialColor", this.curStrokeColor), e5.setUniform("uStrokeWeight", this.curStrokeWeight), e5.setUniform("uStrokeCap", v[this.curStrokeCap]), e5.setUniform("uStrokeJoin", b[this.curStrokeJoin]);
            } }, { key: "_setFillUniforms", value: function(e5) {
              e5.bindShader(), e5.setUniform("uUseVertexColor", this._useVertexColor), e5.setUniform("uMaterialColor", this.curFillColor), e5.setUniform("isTexture", !!this._tex), this._tex && e5.setUniform("uSampler", this._tex), e5.setUniform("uTint", this._tint), e5.setUniform("uHasSetAmbient", this._hasSetAmbient), e5.setUniform("uAmbientMatColor", this.curAmbientColor), e5.setUniform("uSpecularMatColor", this.curSpecularColor), e5.setUniform("uEmissiveMatColor", this.curEmissiveColor), e5.setUniform("uSpecular", this._useSpecularMaterial), e5.setUniform("uEmissive", this._useEmissiveMaterial), e5.setUniform("uShininess", this._useShininess), e5.setUniform("uUseLighting", this._enableLighting);
              var t5 = this.pointLightDiffuseColors.length / 3, t5 = (e5.setUniform("uPointLightCount", t5), e5.setUniform("uPointLightLocation", this.pointLightPositions), e5.setUniform("uPointLightDiffuseColors", this.pointLightDiffuseColors), e5.setUniform("uPointLightSpecularColors", this.pointLightSpecularColors), this.directionalLightDiffuseColors.length / 3), t5 = (e5.setUniform("uDirectionalLightCount", t5), e5.setUniform("uLightingDirection", this.directionalLightDirections), e5.setUniform("uDirectionalDiffuseColors", this.directionalLightDiffuseColors), e5.setUniform("uDirectionalSpecularColors", this.directionalLightSpecularColors), this.ambientLightColors.length / 3), t5 = (e5.setUniform("uAmbientLightCount", t5), e5.setUniform("uAmbientColor", this.ambientLightColors), this.spotLightDiffuseColors.length / 3);
              e5.setUniform("uSpotLightCount", t5), e5.setUniform("uSpotLightAngle", this.spotLightAngle), e5.setUniform("uSpotLightConc", this.spotLightConc), e5.setUniform("uSpotLightDiffuseColors", this.spotLightDiffuseColors), e5.setUniform("uSpotLightSpecularColors", this.spotLightSpecularColors), e5.setUniform("uSpotLightLocation", this.spotLightPositions), e5.setUniform("uSpotLightDirection", this.spotLightDirections), e5.setUniform("uConstantAttenuation", this.constantAttenuation), e5.setUniform("uLinearAttenuation", this.linearAttenuation), e5.setUniform("uQuadraticAttenuation", this.quadraticAttenuation), e5.bindTextures();
            } }, { key: "_setPointUniforms", value: function(e5) {
              e5.bindShader(), e5.setUniform("uMaterialColor", this.curStrokeColor), e5.setUniform("uPointSize", this.pointSize * this._pInst._pixelDensity);
            } }, { key: "_bindBuffer", value: function(e5, t5, r5, o3, n4) {
              t5 = t5 || this.GL.ARRAY_BUFFER, this.GL.bindBuffer(t5, e5), void 0 !== r5 && (e5 = new (o3 || Float32Array)(r5), this.GL.bufferData(t5, e5, n4 || this.GL.STATIC_DRAW));
            } }, { key: "_arraysEqual", value: function(e5, r5) {
              return e5.length === r5.length && e5.every(function(e6, t5) {
                return e6 === r5[t5];
              });
            } }, { key: "_isTypedArray", value: function(t5) {
              return [Float32Array, Float64Array, Int16Array, Uint16Array, Uint32Array].some(function(e5) {
                return t5 instanceof e5;
              });
            } }, { key: "_flatten", value: function(e5) {
              if (0 === e5.length)
                return [];
              var t5;
              if (2e4 < e5.length) {
                for (var r5 = [], o3 = e5.slice(), n4 = o3.pop(); Array.isArray(n4) ? o3.push.apply(o3, c(n4)) : r5.push(n4), o3.length && void 0 !== (n4 = o3.pop()); )
                  ;
                return r5.reverse(), r5;
              }
              return (t5 = []).concat.apply(t5, c(e5));
            } }, { key: "_vToNArray", value: function(e5) {
              var t5 = [], r5 = true, o3 = false, n4 = void 0;
              try {
                for (var s5, i3 = e5[Symbol.iterator](); !(r5 = (s5 = i3.next()).done); r5 = true) {
                  var a2 = s5.value;
                  t5.push(a2.x, a2.y, a2.z);
                }
              } catch (e6) {
                o3 = true, n4 = e6;
              } finally {
                try {
                  r5 || null == i3.return || i3.return();
                } finally {
                  if (o3)
                    throw n4;
                }
              }
              return t5;
            } }, { key: "_bezierCoefficients", value: function(e5) {
              var t5 = e5 * e5, r5 = 1 - e5, o3 = r5 * r5;
              return [o3 * r5, 3 * o3 * e5, 3 * r5 * t5, t5 * e5];
            } }, { key: "_quadraticCoefficients", value: function(e5) {
              var t5 = 1 - e5;
              return [t5 * t5, 2 * t5 * e5, e5 * e5];
            } }, { key: "_bezierToCatmull", value: function(e5) {
              return [e5[1], e5[1] + (e5[2] - e5[0]) / this._curveTightness, e5[2] - (e5[3] - e5[1]) / this._curveTightness, e5[2]];
            } }, { key: "_initTessy", value: function() {
              var e5 = new a.default.GluTesselator();
              return e5.gluTessCallback(a.default.gluEnum.GLU_TESS_VERTEX_DATA, function(e6, t5) {
                for (var r5 = 0; r5 < e6.length; r5++)
                  t5.push(e6[r5]);
              }), e5.gluTessCallback(a.default.gluEnum.GLU_TESS_BEGIN, function(e6) {
                e6 !== a.default.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: ".concat(e6));
              }), e5.gluTessCallback(a.default.gluEnum.GLU_TESS_ERROR, function(e6) {
                console.log("error callback"), console.log("error number: ".concat(e6));
              }), e5.gluTessCallback(a.default.gluEnum.GLU_TESS_COMBINE, function(e6, t5, r5) {
                for (var o3 = new Array(g.default.RendererGL.prototype.tessyVertexSize).fill(0), n4 = 0; n4 < r5.length; n4++)
                  for (var s5 = 0; s5 < o3.length; s5++)
                    0 !== r5[n4] && t5[n4] && (o3[s5] += t5[n4][s5] * r5[n4]);
                return o3;
              }), e5.gluTessCallback(a.default.gluEnum.GLU_TESS_EDGE_FLAG, function(e6) {
              }), e5;
            } }, { key: "_triangulate", value: function(e5) {
              var t5 = e5[0] ? e5[0][2] : void 0, r5 = true, o3 = true, n4 = false, s5 = void 0;
              try {
                for (var i3, a2 = e5[Symbol.iterator](); !(o3 = (i3 = a2.next()).done); o3 = true)
                  for (var l2 = i3.value, u2 = 0; u2 < l2.length; u2 += g.default.RendererGL.prototype.tessyVertexSize)
                    if (l2[u2 + 2] !== t5) {
                      r5 = false;
                      break;
                    }
              } catch (e6) {
                n4 = true, s5 = e6;
              } finally {
                try {
                  o3 || null == a2.return || a2.return();
                } finally {
                  if (n4)
                    throw s5;
                }
              }
              r5 ? this._tessy.gluTessNormal(0, 0, 1) : this._tessy.gluTessNormal(0, 0, 0);
              var n4 = [], c2 = (this._tessy.gluTessBeginPolygon(n4), true), s5 = false, d2 = void 0;
              try {
                for (var f2, h2 = e5[Symbol.iterator](); !(c2 = (f2 = h2.next()).done); c2 = true) {
                  var p2 = f2.value;
                  this._tessy.gluTessBeginContour();
                  for (var m2 = 0; m2 < p2.length; m2 += g.default.RendererGL.prototype.tessyVertexSize) {
                    var y2 = p2.slice(m2, m2 + g.default.RendererGL.prototype.tessyVertexSize);
                    this._tessy.gluTessVertex(y2, y2);
                  }
                  this._tessy.gluTessEndContour();
                }
              } catch (e6) {
                s5 = true, d2 = e6;
              } finally {
                try {
                  c2 || null == h2.return || h2.return();
                } finally {
                  if (s5)
                    throw d2;
                }
              }
              return this._tessy.gluTessEndPolygon(), n4;
            } }]) && d(t4.prototype, e4), r4 && d(t4, r4), s4;
          }(g.default.Renderer), g.default.prototype._assert3d = function(e4) {
            if (!this._renderer.isP3D)
              throw new Error("".concat(e4, "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information."));
          }, g.default.RendererGL.prototype.tessyVertexSize = 12;
          e3 = g.default.RendererGL;
          r3.default = e3;
        }, { "../core/constants": 262, "../core/main": 273, "../core/p5.Renderer": 276, "./p5.Camera": 321, "./p5.Matrix": 324, "./p5.Shader": 329, "core-js/modules/es.array.concat": 151, "core-js/modules/es.array.copy-within": 152, "core-js/modules/es.array.every": 153, "core-js/modules/es.array.fill": 154, "core-js/modules/es.array.from": 157, "core-js/modules/es.array.includes": 158, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.array.some": 165, "core-js/modules/es.map": 168, "core-js/modules/es.object.assign": 174, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.get-prototype-of": 178, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.reflect.construct": 182, "core-js/modules/es.regexp.to-string": 186, "core-js/modules/es.set": 187, "core-js/modules/es.string.includes": 189, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.float32-array": 209, "core-js/modules/es.typed-array.float64-array": 210, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.int16-array": 214, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint16-array": 230, "core-js/modules/es.typed-array.uint32-array": 231, "core-js/modules/es.typed-array.uint8-array": 232, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236, libtess: 245, path: 248 }], 329: [function(e3, t3, r3) {
          "use strict";
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.index-of"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.array.slice"), e3("core-js/modules/es.function.name"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/web.dom-collections.iterator"), Object.defineProperty(r3, "__esModule", { value: true }), r3.default = void 0;
          var s3 = (e3 = e3("../core/main")) && e3.__esModule ? e3 : { default: e3 };
          function n2(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o2 = t4[r4];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e4, o2.key, o2);
            }
          }
          s3.default.Shader = function() {
            function o2(e5, t5, r5) {
              if (!(this instanceof o2))
                throw new TypeError("Cannot call a class as a function");
              this._renderer = e5, this._vertSrc = t5, this._fragSrc = r5, this._vertShader = -1, this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = false, this.attributes = {}, this._loadedUniforms = false, this.uniforms = {}, this._bound = false, this.samplers = [];
            }
            var e4, t4, r4;
            return e4 = o2, (t4 = [{ key: "init", value: function() {
              if (0 === this._glProgram) {
                var e5 = this._renderer.GL;
                if (this._vertShader = e5.createShader(e5.VERTEX_SHADER), e5.shaderSource(this._vertShader, this._vertSrc), e5.compileShader(this._vertShader), !e5.getShaderParameter(this._vertShader, e5.COMPILE_STATUS))
                  return s3.default._friendlyError("Yikes! An error occurred compiling the vertex shader:".concat(e5.getShaderInfoLog(this._vertShader))), null;
                if (this._fragShader = e5.createShader(e5.FRAGMENT_SHADER), e5.shaderSource(this._fragShader, this._fragSrc), e5.compileShader(this._fragShader), !e5.getShaderParameter(this._fragShader, e5.COMPILE_STATUS))
                  return s3.default._friendlyError("Darn! An error occurred compiling the fragment shader:".concat(e5.getShaderInfoLog(this._fragShader))), null;
                this._glProgram = e5.createProgram(), e5.attachShader(this._glProgram, this._vertShader), e5.attachShader(this._glProgram, this._fragShader), e5.linkProgram(this._glProgram), e5.getProgramParameter(this._glProgram, e5.LINK_STATUS) || s3.default._friendlyError("Snap! Error linking shader program: ".concat(e5.getProgramInfoLog(this._glProgram))), this._loadAttributes(), this._loadUniforms();
              }
              return this;
            } }, { key: "_loadAttributes", value: function() {
              if (!this._loadedAttributes) {
                this.attributes = {};
                for (var e5 = this._renderer.GL, t5 = e5.getProgramParameter(this._glProgram, e5.ACTIVE_ATTRIBUTES), r5 = 0; r5 < t5; ++r5) {
                  var o3 = e5.getActiveAttrib(this._glProgram, r5), n3 = o3.name, s4 = e5.getAttribLocation(this._glProgram, n3), i2 = {};
                  i2.name = n3, i2.location = s4, i2.index = r5, i2.type = o3.type, i2.size = o3.size, this.attributes[n3] = i2;
                }
                this._loadedAttributes = true;
              }
            } }, { key: "_loadUniforms", value: function() {
              if (!this._loadedUniforms) {
                for (var e5 = this._renderer.GL, t5 = e5.getProgramParameter(this._glProgram, e5.ACTIVE_UNIFORMS), r5 = 0, o3 = 0; o3 < t5; ++o3) {
                  var n3 = e5.getActiveUniform(this._glProgram, o3), s4 = {}, i2 = (s4.location = e5.getUniformLocation(this._glProgram, n3.name), s4.size = n3.size, n3.name);
                  1 < n3.size && (i2 = i2.substring(0, i2.indexOf("[0]"))), s4.name = i2, s4.type = n3.type, s4._cachedData = void 0, s4.type === e5.SAMPLER_2D && (s4.samplerIndex = r5, r5++, this.samplers.push(s4)), s4.isArray = 1 < n3.size || s4.type === e5.FLOAT_MAT3 || s4.type === e5.FLOAT_MAT4 || s4.type === e5.FLOAT_VEC2 || s4.type === e5.FLOAT_VEC3 || s4.type === e5.FLOAT_VEC4 || s4.type === e5.INT_VEC2 || s4.type === e5.INT_VEC4 || s4.type === e5.INT_VEC3, this.uniforms[i2] = s4;
                }
                this._loadedUniforms = true;
              }
            } }, { key: "compile", value: function() {
            } }, { key: "bindShader", value: function() {
              this.init(), this._bound || (this.useProgram(), this._bound = true, this._setMatrixUniforms(), this.setUniform("uViewport", this._renderer._viewport));
            } }, { key: "unbindShader", value: function() {
              return this._bound && (this.unbindTextures(), this._bound = false), this;
            } }, { key: "bindTextures", value: function() {
              var e5 = this._renderer.GL, t5 = true, r5 = false, o3 = void 0;
              try {
                for (var n3, s4 = this.samplers[Symbol.iterator](); !(t5 = (n3 = s4.next()).done); t5 = true) {
                  var i2 = n3.value, a = i2.texture;
                  void 0 === a && (a = this._renderer._getEmptyTexture()), e5.activeTexture(e5.TEXTURE0 + i2.samplerIndex), a.bindTexture(), a.update(), e5.uniform1i(i2.location, i2.samplerIndex);
                }
              } catch (e6) {
                r5 = true, o3 = e6;
              } finally {
                try {
                  t5 || null == s4.return || s4.return();
                } finally {
                  if (r5)
                    throw o3;
                }
              }
            } }, { key: "updateTextures", value: function() {
              var e5 = true, t5 = false, r5 = void 0;
              try {
                for (var o3, n3 = this.samplers[Symbol.iterator](); !(e5 = (o3 = n3.next()).done); e5 = true) {
                  var s4 = o3.value.texture;
                  s4 && s4.update();
                }
              } catch (e6) {
                t5 = true, r5 = e6;
              } finally {
                try {
                  e5 || null == n3.return || n3.return();
                } finally {
                  if (t5)
                    throw r5;
                }
              }
            } }, { key: "unbindTextures", value: function() {
              var e5 = true, t5 = false, r5 = void 0;
              try {
                for (var o3, n3 = this.samplers[Symbol.iterator](); !(e5 = (o3 = n3.next()).done); e5 = true) {
                  var s4 = o3.value;
                  this.setUniform(s4.name, this._renderer._getEmptyTexture());
                }
              } catch (e6) {
                t5 = true, r5 = e6;
              } finally {
                try {
                  e5 || null == n3.return || n3.return();
                } finally {
                  if (t5)
                    throw r5;
                }
              }
            } }, { key: "_setMatrixUniforms", value: function() {
              var e5 = this._renderer._curCamera.cameraMatrix, t5 = this._renderer.uPMatrix, r5 = this._renderer.uMVMatrix, o3 = r5.copy();
              o3.mult(t5), this.isStrokeShader() && ("default" === this._renderer._curCamera.cameraType ? this.setUniform("uPerspective", 1) : this.setUniform("uPerspective", 0)), this.setUniform("uViewMatrix", e5.mat4), this.setUniform("uProjectionMatrix", t5.mat4), this.setUniform("uModelViewMatrix", r5.mat4), this.setUniform("uModelViewProjectionMatrix", o3.mat4), this.uniforms.uNormalMatrix && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3));
            } }, { key: "useProgram", value: function() {
              var e5 = this._renderer.GL;
              return this._renderer._curShader !== this && (e5.useProgram(this._glProgram), this._renderer._curShader = this), this;
            } }, { key: "setUniform", value: function(e5, t5) {
              var r5 = this.uniforms[e5];
              if (r5) {
                var o3 = this._renderer.GL;
                if (r5.isArray) {
                  if (r5._cachedData && this._renderer._arraysEqual(r5._cachedData, t5))
                    return;
                  r5._cachedData = t5.slice(0);
                } else {
                  if (r5._cachedData && r5._cachedData === t5)
                    return;
                  Array.isArray(t5) ? r5._cachedData = t5.slice(0) : r5._cachedData = t5;
                }
                var n3 = r5.location;
                switch (this.useProgram(), r5.type) {
                  case o3.BOOL:
                    true === t5 ? o3.uniform1i(n3, 1) : o3.uniform1i(n3, 0);
                    break;
                  case o3.INT:
                    1 < r5.size ? t5.length && o3.uniform1iv(n3, t5) : o3.uniform1i(n3, t5);
                    break;
                  case o3.FLOAT:
                    1 < r5.size ? t5.length && o3.uniform1fv(n3, t5) : o3.uniform1f(n3, t5);
                    break;
                  case o3.FLOAT_MAT3:
                    o3.uniformMatrix3fv(n3, false, t5);
                    break;
                  case o3.FLOAT_MAT4:
                    o3.uniformMatrix4fv(n3, false, t5);
                    break;
                  case o3.FLOAT_VEC2:
                    1 < r5.size ? t5.length && o3.uniform2fv(n3, t5) : o3.uniform2f(n3, t5[0], t5[1]);
                    break;
                  case o3.FLOAT_VEC3:
                    1 < r5.size ? t5.length && o3.uniform3fv(n3, t5) : o3.uniform3f(n3, t5[0], t5[1], t5[2]);
                    break;
                  case o3.FLOAT_VEC4:
                    1 < r5.size ? t5.length && o3.uniform4fv(n3, t5) : o3.uniform4f(n3, t5[0], t5[1], t5[2], t5[3]);
                    break;
                  case o3.INT_VEC2:
                    1 < r5.size ? t5.length && o3.uniform2iv(n3, t5) : o3.uniform2i(n3, t5[0], t5[1]);
                    break;
                  case o3.INT_VEC3:
                    1 < r5.size ? t5.length && o3.uniform3iv(n3, t5) : o3.uniform3i(n3, t5[0], t5[1], t5[2]);
                    break;
                  case o3.INT_VEC4:
                    1 < r5.size ? t5.length && o3.uniform4iv(n3, t5) : o3.uniform4i(n3, t5[0], t5[1], t5[2], t5[3]);
                    break;
                  case o3.SAMPLER_2D:
                    o3.activeTexture(o3.TEXTURE0 + r5.samplerIndex), r5.texture = t5 instanceof s3.default.Texture ? t5 : this._renderer.getTexture(t5), o3.uniform1i(n3, r5.samplerIndex), r5.texture.src.gifProperties && r5.texture.src._animateGif(this._renderer._pInst);
                }
                return this;
              }
            } }, { key: "isLightShader", value: function() {
              return void 0 !== this.attributes.aNormal || void 0 !== this.uniforms.uUseLighting || void 0 !== this.uniforms.uAmbientLightCount || void 0 !== this.uniforms.uDirectionalLightCount || void 0 !== this.uniforms.uPointLightCount || void 0 !== this.uniforms.uAmbientColor || void 0 !== this.uniforms.uDirectionalDiffuseColors || void 0 !== this.uniforms.uDirectionalSpecularColors || void 0 !== this.uniforms.uPointLightLocation || void 0 !== this.uniforms.uPointLightDiffuseColors || void 0 !== this.uniforms.uPointLightSpecularColors || void 0 !== this.uniforms.uLightingDirection || void 0 !== this.uniforms.uSpecular;
            } }, { key: "isNormalShader", value: function() {
              return void 0 !== this.attributes.aNormal;
            } }, { key: "isTextureShader", value: function() {
              return 0 < this.samplers.length;
            } }, { key: "isColorShader", value: function() {
              return void 0 !== this.attributes.aVertexColor || void 0 !== this.uniforms.uMaterialColor;
            } }, { key: "isTexLightShader", value: function() {
              return this.isLightShader() && this.isTextureShader();
            } }, { key: "isStrokeShader", value: function() {
              return void 0 !== this.uniforms.uStrokeWeight;
            } }, { key: "enableAttrib", value: function(e5, t5, r5, o3, n3, s4) {
              var i2;
              return e5 && -1 !== (e5 = e5.location) && (i2 = this._renderer.GL, this._renderer.registerEnabled[e5] || (i2.enableVertexAttribArray(e5), this._renderer.registerEnabled[e5] = true), this._renderer.GL.vertexAttribPointer(e5, t5, r5 || i2.FLOAT, o3 || false, n3 || 0, s4 || 0)), this;
            } }]) && n2(e4.prototype, t4), r4 && n2(e4, r4), o2;
          }();
          e3 = s3.default.Shader;
          r3.default = e3;
        }, { "../core/main": 273, "core-js/modules/es.array.index-of": 159, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.array.slice": 164, "core-js/modules/es.function.name": 167, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/web.dom-collections.iterator": 236 }], 330: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.typed-array.uint8-array"), e3("core-js/modules/es.typed-array.copy-within"), e3("core-js/modules/es.typed-array.every"), e3("core-js/modules/es.typed-array.fill"), e3("core-js/modules/es.typed-array.filter"), e3("core-js/modules/es.typed-array.find"), e3("core-js/modules/es.typed-array.find-index"), e3("core-js/modules/es.typed-array.for-each"), e3("core-js/modules/es.typed-array.includes"), e3("core-js/modules/es.typed-array.index-of"), e3("core-js/modules/es.typed-array.iterator"), e3("core-js/modules/es.typed-array.join"), e3("core-js/modules/es.typed-array.last-index-of"), e3("core-js/modules/es.typed-array.map"), e3("core-js/modules/es.typed-array.reduce"), e3("core-js/modules/es.typed-array.reduce-right"), e3("core-js/modules/es.typed-array.reverse"), e3("core-js/modules/es.typed-array.set"), e3("core-js/modules/es.typed-array.slice"), e3("core-js/modules/es.typed-array.some"), e3("core-js/modules/es.typed-array.sort"), e3("core-js/modules/es.typed-array.subarray"), e3("core-js/modules/es.typed-array.to-locale-string"), e3("core-js/modules/es.typed-array.to-string"), Object.defineProperty(r3, "__esModule", { value: true }), r3.checkWebGLCapabilities = c, r3.default = void 0;
          var s3 = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, a = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = l();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function l() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), l = function() {
              return e4;
            }, e4);
          }
          function u(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function c(e4) {
            var t4 = e4.GL, e4 = e4.webglVersion, r4 = e4 === a.WEBGL2 ? t4.getExtension("EXT_color_buffer_float") && t4.getExtension("EXT_float_blend") : t4.getExtension("OES_texture_float"), o3 = r4 && t4.getExtension("OES_texture_float_linear"), e4 = e4 === a.WEBGL2 ? t4.getExtension("EXT_color_buffer_float") : t4.getExtension("OES_texture_half_float");
            return { float: r4, floatLinear: o3, halfFloat: e4, halfFloatLinear: e4 && t4.getExtension("OES_texture_half_float_linear") };
          }
          s3.default.Texture = function() {
            function n3(e5, t5, r5) {
              if (!(this instanceof n3))
                throw new TypeError("Cannot call a class as a function");
              this._renderer = e5;
              var o3 = this._renderer.GL, r5 = (r5 = r5 || {}, this.src = t5, this.glTex = void 0, this.glTarget = o3.TEXTURE_2D, this.glFormat = r5.format || o3.RGBA, this.mipmaps = false, this.glMinFilter = r5.minFilter || o3.LINEAR, this.glMagFilter = r5.magFilter || o3.LINEAR, this.glWrapS = r5.wrapS || o3.CLAMP_TO_EDGE, this.glWrapT = r5.wrapT || o3.CLAMP_TO_EDGE, this.glDataType = r5.dataType || o3.UNSIGNED_BYTE, c(e5)), e5 = (this.glFormat !== o3.HALF_FLOAT || r5.halfFloat || (console.log("This device does not support dataType HALF_FLOAT. Falling back to FLOAT."), this.glDataType = o3.FLOAT), this.glFormat !== o3.HALF_FLOAT || this.glMinFilter !== o3.LINEAR && this.glMagFilter !== o3.LINEAR || r5.halfFloatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o3.LINEAR && (this.glMinFilter = o3.NEAREST), this.glMagFilter === o3.LINEAR && (this.glMagFilter = o3.NEAREST)), this.glFormat !== o3.FLOAT || r5.float || (console.log("This device does not support dataType FLOAT. Falling back to UNSIGNED_BYTE."), this.glDataType = o3.UNSIGNED_BYTE), this.glFormat !== o3.FLOAT || this.glMinFilter !== o3.LINEAR && this.glMagFilter !== o3.LINEAR || r5.floatLinear || (console.log("This device does not support linear filtering for dataType FLOAT. Falling back to NEAREST."), this.glMinFilter === o3.LINEAR && (this.glMinFilter = o3.NEAREST), this.glMagFilter === o3.LINEAR && (this.glMagFilter = o3.NEAREST)), this.isSrcMediaElement = void 0 !== s3.default.MediaElement && t5 instanceof s3.default.MediaElement, this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = void 0 !== s3.default.Element && t5 instanceof s3.default.Element && !(t5 instanceof s3.default.Graphics) && !(t5 instanceof s3.default.Renderer), this.isSrcP5Image = t5 instanceof s3.default.Image, this.isSrcP5Graphics = t5 instanceof s3.default.Graphics, this.isSrcP5Renderer = t5 instanceof s3.default.Renderer, this.isImageData = "undefined" != typeof ImageData && t5 instanceof ImageData, this.isFramebufferTexture = t5 instanceof s3.default.FramebufferTexture, this._getTextureDataFromSource());
              return this.width = e5.width, this.height = e5.height, this.init(e5), this;
            }
            var e4, t4, r4;
            return e4 = n3, (t4 = [{ key: "_getTextureDataFromSource", value: function() {
              var e5;
              return this.isFramebufferTexture ? e5 = this.src.rawTexture() : this.isSrcP5Image ? e5 = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcP5Renderer || this.isSrcHTMLElement ? e5 = this.src.elt : this.isImageData && (e5 = this.src), e5;
            } }, { key: "init", value: function(e5) {
              var t5, r5 = this._renderer.GL;
              this.isFramebufferTexture || (this.glTex = r5.createTexture()), this.glWrapS = this._renderer.textureWrapX, this.glWrapT = this._renderer.textureWrapY, this.setWrapMode(this.glWrapS, this.glWrapT), this.bindTexture(), r5.texParameteri(r5.TEXTURE_2D, r5.TEXTURE_MAG_FILTER, this.glMagFilter), r5.texParameteri(r5.TEXTURE_2D, r5.TEXTURE_MIN_FILTER, this.glMinFilter), this.isFramebufferTexture || (0 === this.width || 0 === this.height || this.isSrcMediaElement && !this.src.loadedmetadata ? (t5 = new Uint8Array([1, 1, 1, 1]), r5.texImage2D(this.glTarget, 0, r5.RGBA, 1, 1, 0, this.glFormat, this.glDataType, t5)) : r5.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e5));
            } }, { key: "update", value: function() {
              var e5, t5, r5, o3 = this.src;
              return 0 !== o3.width && 0 !== o3.height && (!this.isFramebufferTexture && (e5 = this._getTextureDataFromSource(), t5 = false, r5 = this._renderer.GL, e5.width !== this.width || e5.height !== this.height ? (t5 = true, this.width = e5.width || o3.width, this.height = e5.height || o3.height, this.isSrcP5Image ? o3.setModified(false) : (this.isSrcMediaElement || this.isSrcHTMLElement) && o3.setModified(true)) : this.isSrcP5Image ? o3.isModified() && o3.setModified(!(t5 = true)) : this.isSrcMediaElement ? o3.isModified() ? o3.setModified(!(t5 = true)) : o3.loadedmetadata && this._videoPrevUpdateTime !== o3.time() && (this._videoPrevUpdateTime = o3.time(), t5 = true) : this.isImageData ? o3._dirty && (t5 = !(o3._dirty = false)) : t5 = true, t5 && (this.bindTexture(), r5.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, this.glDataType, e5)), t5));
            } }, { key: "bindTexture", value: function() {
              return this._renderer.GL.bindTexture(this.glTarget, this.getTexture()), this;
            } }, { key: "unbindTexture", value: function() {
              this._renderer.GL.bindTexture(this.glTarget, null);
            } }, { key: "getTexture", value: function() {
              return this.isFramebufferTexture ? this.src.rawTexture() : this.glTex;
            } }, { key: "setInterpolation", value: function(e5, t5) {
              var r5 = this._renderer.GL;
              e5 === a.NEAREST ? this.glMinFilter = r5.NEAREST : this.glMinFilter = r5.LINEAR, t5 === a.NEAREST ? this.glMagFilter = r5.NEAREST : this.glMagFilter = r5.LINEAR, this.bindTexture(), r5.texParameteri(r5.TEXTURE_2D, r5.TEXTURE_MIN_FILTER, this.glMinFilter), r5.texParameteri(r5.TEXTURE_2D, r5.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
            } }, { key: "setWrapMode", value: function(e5, t5) {
              function r5(e6) {
                return 0 == (e6 & e6 - 1);
              }
              var o3 = this._renderer.GL, n4 = this._getTextureDataFromSource(), n4 = n4.naturalWidth && n4.naturalHeight ? (s4 = n4.naturalWidth, n4.naturalHeight) : (s4 = this.width, this.height), s4 = r5(s4), n4 = r5(n4);
              e5 === a.REPEAT ? this._renderer.webglVersion === a.WEBGL2 || s4 && n4 ? this.glWrapS = o3.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o3.CLAMP_TO_EDGE) : e5 === a.MIRROR ? this._renderer.webglVersion === a.WEBGL2 || s4 && n4 ? this.glWrapS = o3.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = o3.CLAMP_TO_EDGE) : this.glWrapS = o3.CLAMP_TO_EDGE, t5 === a.REPEAT ? this._renderer.webglVersion === a.WEBGL2 || s4 && n4 ? this.glWrapT = o3.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o3.CLAMP_TO_EDGE) : t5 === a.MIRROR ? this._renderer.webglVersion === a.WEBGL2 || s4 && n4 ? this.glWrapT = o3.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = o3.CLAMP_TO_EDGE) : this.glWrapT = o3.CLAMP_TO_EDGE, this.bindTexture(), o3.texParameteri(o3.TEXTURE_2D, o3.TEXTURE_WRAP_S, this.glWrapS), o3.texParameteri(o3.TEXTURE_2D, o3.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
            } }]) && u(e4.prototype, t4), r4 && u(e4, r4), n3;
          }();
          var n2 = s3.default.Texture;
          r3.default = n2;
        }, { "../core/constants": 262, "../core/main": 273, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.typed-array.copy-within": 203, "core-js/modules/es.typed-array.every": 204, "core-js/modules/es.typed-array.fill": 205, "core-js/modules/es.typed-array.filter": 206, "core-js/modules/es.typed-array.find": 208, "core-js/modules/es.typed-array.find-index": 207, "core-js/modules/es.typed-array.for-each": 211, "core-js/modules/es.typed-array.includes": 212, "core-js/modules/es.typed-array.index-of": 213, "core-js/modules/es.typed-array.iterator": 216, "core-js/modules/es.typed-array.join": 217, "core-js/modules/es.typed-array.last-index-of": 218, "core-js/modules/es.typed-array.map": 219, "core-js/modules/es.typed-array.reduce": 221, "core-js/modules/es.typed-array.reduce-right": 220, "core-js/modules/es.typed-array.reverse": 222, "core-js/modules/es.typed-array.set": 223, "core-js/modules/es.typed-array.slice": 224, "core-js/modules/es.typed-array.some": 225, "core-js/modules/es.typed-array.sort": 226, "core-js/modules/es.typed-array.subarray": 227, "core-js/modules/es.typed-array.to-locale-string": 228, "core-js/modules/es.typed-array.to-string": 229, "core-js/modules/es.typed-array.uint8-array": 232, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }], 331: [function(e3, t3, r3) {
          "use strict";
          function o2(e4) {
            return (o2 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e5) {
              return typeof e5;
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : typeof e5;
            })(e4);
          }
          function i2(e4) {
            return (i2 = "function" == typeof Symbol && "symbol" === o2(Symbol.iterator) ? function(e5) {
              return o2(e5);
            } : function(e5) {
              return e5 && "function" == typeof Symbol && e5.constructor === Symbol && e5 !== Symbol.prototype ? "symbol" : o2(e5);
            })(e4);
          }
          e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.get-own-property-descriptor"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.sub"), e3("core-js/modules/es.weak-map"), e3("core-js/modules/web.dom-collections.iterator"), e3("core-js/modules/es.symbol"), e3("core-js/modules/es.symbol.description"), e3("core-js/modules/es.symbol.iterator"), e3("core-js/modules/es.array.iterator"), e3("core-js/modules/es.object.to-string"), e3("core-js/modules/es.regexp.exec"), e3("core-js/modules/es.string.iterator"), e3("core-js/modules/es.string.split"), e3("core-js/modules/es.string.sub"), e3("core-js/modules/web.dom-collections.iterator");
          var n2, B = (n2 = e3("../core/main")) && n2.__esModule ? n2 : { default: n2 }, M = function(e4) {
            if (e4 && e4.__esModule)
              return e4;
            if (null === e4 || "object" !== i2(e4) && "function" != typeof e4)
              return { default: e4 };
            var t4 = a();
            if (t4 && t4.has(e4))
              return t4.get(e4);
            var r4, o3 = {}, n3 = Object.defineProperty && Object.getOwnPropertyDescriptor;
            for (r4 in e4) {
              var s4;
              Object.prototype.hasOwnProperty.call(e4, r4) && ((s4 = n3 ? Object.getOwnPropertyDescriptor(e4, r4) : null) && (s4.get || s4.set) ? Object.defineProperty(o3, r4, s4) : o3[r4] = e4[r4]);
            }
            o3.default = e4, t4 && t4.set(e4, o3);
            return o3;
          }(e3("../core/constants"));
          function a() {
            var e4;
            return "function" != typeof WeakMap ? null : (e4 = /* @__PURE__ */ new WeakMap(), a = function() {
              return e4;
            }, e4);
          }
          function G(e4, t4) {
            if (!(e4 instanceof t4))
              throw new TypeError("Cannot call a class as a function");
          }
          function s3(e4, t4) {
            for (var r4 = 0; r4 < t4.length; r4++) {
              var o3 = t4[r4];
              o3.enumerable = o3.enumerable || false, o3.configurable = true, "value" in o3 && (o3.writable = true), Object.defineProperty(e4, o3.key, o3);
            }
          }
          function V(e4, t4, r4) {
            t4 && s3(e4.prototype, t4), r4 && s3(e4, r4);
          }
          e3("./p5.Shader"), e3("./p5.RendererGL.Retained"), B.default.RendererGL.prototype._applyTextProperties = function() {
          }, B.default.RendererGL.prototype.textWidth = function(e4) {
            return this._isOpenType() ? this._textFont._textWidth(e4, this._textSize) : 0;
          };
          var l = function() {
            function r4(e4, t4) {
              G(this, r4), this.width = e4, this.height = t4, this.infos = [];
            }
            return V(r4, [{ key: "findImage", value: function(e4) {
              var t4, r5, o3 = this.width * this.height;
              if (o3 < e4)
                throw new Error("font is too complex to render in 3D");
              for (var n3 = this.infos.length - 1; 0 <= n3; --n3) {
                var s4 = this.infos[n3];
                if (s4.index + e4 < o3) {
                  r5 = (t4 = s4).imageData;
                  break;
                }
              }
              if (!t4) {
                try {
                  r5 = new ImageData(this.width, this.height);
                } catch (e5) {
                  var i3 = document.getElementsByTagName("canvas")[0], a2 = !i3, l2 = (i3 || ((i3 = document.createElement("canvas")).style.display = "none", document.body.appendChild(i3)), i3.getContext("2d"));
                  l2 && (r5 = l2.createImageData(this.width, this.height)), a2 && document.body.removeChild(i3);
                }
                this.infos.push(t4 = { index: 0, imageData: r5 });
              }
              l2 = t4.index;
              return t4.index += e4, r5._dirty = true, { imageData: r5, index: l2 };
            } }]), r4;
          }();
          function z(e4, t4, r4, o3, n3) {
            var s4 = e4.imageData.data, e4 = 4 * e4.index++;
            s4[e4++] = t4, s4[e4++] = r4, s4[e4++] = o3, s4[+e4] = n3;
          }
          var H = Math.sqrt(3), T = function() {
            function t4(e4) {
              G(this, t4), this.font = e4, this.strokeImageInfos = new l(64, 64), this.colDimImageInfos = new l(64, 64), this.rowDimImageInfos = new l(64, 64), this.colCellImageInfos = new l(64, 64), this.rowCellImageInfos = new l(64, 64), this.glyphInfos = {};
            }
            return V(t4, [{ key: "getGlyphInfo", value: function(e4) {
              var t5 = this.glyphInfos[e4.index];
              if (!t5) {
                var r4 = e4.getBoundingBox(), o3 = r4.x1, n3 = r4.y1, s4 = r4.x2 - o3, i3 = r4.y2 - n3, a2 = e4.path.commands;
                if (0 == s4 || 0 == i3 || !a2.length)
                  return this.glyphInfos[e4.index] = {};
                for (var u = [], c = [], d = [], l2 = 8; 0 <= l2; --l2)
                  d.push([]);
                for (l2 = 8; 0 <= l2; --l2)
                  c.push([]);
                var f, h, p, m, D = function() {
                  function n4(e5, t6, r5, o4) {
                    G(this, n4), this.p0 = e5, this.c0 = t6, this.c1 = r5, this.p1 = o4;
                  }
                  return V(n4, [{ key: "toQuadratic", value: function() {
                    return { x: this.p0.x, y: this.p0.y, x1: this.p1.x, y1: this.p1.y, cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4, cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4 };
                  } }, { key: "quadError", value: function() {
                    return B.default.Vector.sub(B.default.Vector.sub(this.p1, this.p0), B.default.Vector.mult(B.default.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
                  } }, { key: "split", value: function(e5) {
                    var t6 = B.default.Vector.lerp(this.p0, this.c0, e5), r5 = B.default.Vector.lerp(this.c0, this.c1, e5), o4 = B.default.Vector.lerp(t6, r5, e5), r5 = (this.c1 = B.default.Vector.lerp(this.c1, this.p1, e5), this.c0 = B.default.Vector.lerp(r5, this.c1, e5), B.default.Vector.lerp(o4, this.c0, e5)), e5 = new n4(this.p0, t6, o4, r5);
                    return this.p0 = r5, e5;
                  } }, { key: "splitInflections", value: function() {
                    var e5 = B.default.Vector.sub(this.c0, this.p0), t6 = B.default.Vector.sub(B.default.Vector.sub(this.c1, this.c0), e5), r5 = B.default.Vector.sub(B.default.Vector.sub(B.default.Vector.sub(this.p1, this.c1), e5), B.default.Vector.mult(t6, 2)), o4 = [], n5 = t6.x * r5.y - t6.y * r5.x;
                    return 0 !== n5 && 0 <= (e5 = (r5 = e5.x * r5.y - e5.y * r5.x) * r5 - 4 * n5 * (e5.x * t6.y - e5.y * t6.x)) && (n5 < 0 && (n5 = -n5, r5 = -r5, 0), e5 = (-r5 + (t6 = Math.sqrt(e5))) / (2 * n5), 0 < (r5 = (-r5 - t6) / (2 * n5)) && r5 < 1 && (o4.push(this.split(r5)), e5 = 1 - (1 - e5) / (1 - r5)), 0 < e5 && e5 < 1 && o4.push(this.split(e5))), o4.push(this), o4;
                  } }]), n4;
                }(), y = true, g = false, v = void 0;
                try {
                  for (var b, j = a2[Symbol.iterator](); !(y = (b = j.next()).done); y = true) {
                    var _ = b.value, x = (_.x - o3) / s4, w = (_.y - n3) / i3;
                    if (!U(f, h, x, w)) {
                      switch (_.type) {
                        case "M":
                          p = x, m = w;
                          break;
                        case "L":
                          I(f, h, x, w);
                          break;
                        case "Q":
                          var S = (_.x1 - o3) / s4, E = (_.y1 - n3) / i3;
                          L([f, x, S], [h, w, E], { x: f, y: h, cx: S, cy: E });
                          break;
                        case "Z":
                          U(f, h, p, m) ? u.push({ x: f, y: h }) : (I(f, h, p, m), u.push({ x: p, y: m }));
                          break;
                        case "C":
                          for (var M2 = function(e5, t6, r5, o4, n4, s5, i4, a3) {
                            var e5 = new D(new B.default.Vector(e5, t6), new B.default.Vector(r5, o4), new B.default.Vector(n4, s5), new B.default.Vector(i4, a3)).splitInflections(), l3 = [], u2 = 30 / H, c2 = true, t6 = false, r5 = void 0;
                            try {
                              for (var d2, f2 = e5[Symbol.iterator](); !(c2 = (d2 = f2.next()).done); c2 = true) {
                                for (var h2 = d2.value, p2 = [], m2 = void 0; !(0.125 <= (m2 = u2 / h2.quadError())); ) {
                                  var y2 = Math.pow(m2, 1 / 3), g2 = h2.split(y2), v2 = h2.split(1 - y2 / (1 - y2));
                                  l3.push(g2), p2.push(h2), h2 = v2;
                                }
                                m2 < 1 && l3.push(h2.split(0.5)), l3.push(h2), Array.prototype.push.apply(l3, p2.reverse());
                              }
                            } catch (e6) {
                              t6 = true, r5 = e6;
                            } finally {
                              try {
                                c2 || null == f2.return || f2.return();
                              } finally {
                                if (t6)
                                  throw r5;
                              }
                            }
                            return l3;
                          }(f, h, (_.x1 - o3) / s4, (_.y1 - n3) / i3, (_.x2 - o3) / s4, (_.y2 - n3) / i3, x, w), T2 = 0; T2 < M2.length; T2++) {
                            var k = M2[T2].toQuadratic();
                            L([k.x, k.x1, k.cx], [k.y, k.y1, k.cy], k);
                          }
                          break;
                        default:
                          throw new Error("unknown command type: ".concat(_.type));
                      }
                      f = x, h = w;
                    }
                  }
                } catch (e5) {
                  g = true, v = e5;
                } finally {
                  try {
                    y || null == j.return || j.return();
                  } finally {
                    if (g)
                      throw v;
                  }
                }
                for (var O = u.length, C = this.strokeImageInfos.findImage(O), F = C.index, A = 0; A < O; ++A) {
                  var P = u[A];
                  z(C, R(P.x), R(P.y), R(P.cx), R(P.cy));
                }
                (t5 = this.glyphInfos[e4.index] = { glyph: e4, uGlyphRect: [r4.x1, -r4.y1, r4.x2, -r4.y2], strokeImageInfo: C, strokes: u, colInfo: N(d, this.colDimImageInfos, this.colCellImageInfos), rowInfo: N(c, this.rowDimImageInfos, this.rowCellImageInfos) }).uGridOffset = [t5.colInfo.dimOffset, t5.rowInfo.dimOffset];
              }
              return t5;
              function L(e5, t6, r5) {
                var o4 = u.length;
                function n4(e6, t7, r6) {
                  for (var o5 = e6.length; 0 < o5--; ) {
                    var n5 = e6[o5];
                    n5 < t7 && (t7 = n5), r6 < n5 && (r6 = n5);
                  }
                  return { min: t7, max: r6 };
                }
                u.push(r5);
                for (var r5 = n4(e5, 1, 0), e5 = Math.max(Math.floor(9 * r5.min - 0.5), 0), s5 = Math.min(Math.ceil(9 * r5.max + 0.5), 9), i4 = e5; i4 < s5; ++i4)
                  d[i4].push(o4);
                for (var r5 = n4(t6, 1, 0), e5 = Math.max(Math.floor(9 * r5.min - 0.5), 0), a3 = Math.min(Math.ceil(9 * r5.max + 0.5), 9), l3 = e5; l3 < a3; ++l3)
                  c[l3].push(o4);
              }
              function R(e5) {
                return (e5 = (r5 = 255) * e5) < (t6 = 0) ? t6 : r5 < e5 ? r5 : e5;
                var t6, r5;
              }
              function I(e5, t6, r5, o4) {
                L([e5, r5], [t6, o4], { x: e5, y: t6, cx: (e5 + r5) / 2, cy: (t6 + o4) / 2 });
              }
              function U(e5, t6, r5, o4) {
                return Math.abs(r5 - e5) < 1e-5 && Math.abs(o4 - t6) < 1e-5;
              }
              function N(e5, t6, r5) {
                for (var o4 = e5.length, n4 = t6.findImage(o4), t6 = n4.index, s5 = 0, i4 = 0; i4 < o4; ++i4)
                  s5 += e5[i4].length;
                for (var a3 = r5.findImage(s5), l3 = 0; l3 < o4; ++l3) {
                  var u2 = e5[l3], c2 = u2.length, d2 = a3.index;
                  z(n4, d2 >> 7, 127 & d2, c2 >> 7, 127 & c2);
                  for (var f2 = 0; f2 < c2; ++f2) {
                    var h2 = u2[f2] + F;
                    z(a3, h2 >> 7, 127 & h2, 0, 0);
                  }
                }
                return { cellImageInfo: a3, dimOffset: t6, dimImageInfo: n4 };
              }
            } }]), t4;
          }();
          B.default.RendererGL.prototype._renderText = function(e4, t4, r4, o3, n3) {
            if (this._textFont && "string" != typeof this._textFont) {
              if (!(n3 <= o3) && this._doFill) {
                if (this._isOpenType()) {
                  e4.push();
                  var n3 = this._doStroke, s4 = this.drawMode, i3 = (this._doStroke = false, this.drawMode = M.TEXTURE, this._textFont.font), a2 = (a2 = this._textFont._fontInfo) || (this._textFont._fontInfo = new T(i3)), r4 = this._textFont._handleAlignment(this, t4, r4, o3), o3 = this._textSize / i3.unitsPerEm, l2 = (this.translate(r4.x, r4.y, 0), this.scale(o3, o3, 1), this.GL), r4 = !this._defaultFontShader, u = this._getFontShader(), c = (u.init(), u.bindShader(), r4 && (u.setUniform("uGridImageSize", [64, 64]), u.setUniform("uCellsImageSize", [64, 64]), u.setUniform("uStrokeImageSize", [64, 64]), u.setUniform("uGridSize", [9, 9])), this._applyColorBlend(this.curFillColor), this.retainedMode.geometry.glyph), d = (c || ((o3 = this._textGeom = new B.default.Geometry(1, 1, function() {
                    for (var e5 = 0; e5 <= 1; e5++)
                      for (var t5 = 0; t5 <= 1; t5++)
                        this.vertices.push(new B.default.Vector(t5, e5, 0)), this.uvs.push(t5, e5);
                  })).computeFaces().computeNormals(), c = this.createBuffers("glyph", o3)), true), r4 = false, o3 = void 0;
                  try {
                    for (var f, h = this.retainedMode.buffers.text[Symbol.iterator](); !(d = (f = h.next()).done); d = true)
                      f.value._prepareBuffer(c, u);
                  } catch (e5) {
                    r4 = true, o3 = e5;
                  } finally {
                    try {
                      d || null == h.return || h.return();
                    } finally {
                      if (r4)
                        throw o3;
                    }
                  }
                  this._bindBuffer(c.indexBuffer, l2.ELEMENT_ARRAY_BUFFER), u.setUniform("uMaterialColor", this.curFillColor), l2.pixelStorei(l2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);
                  try {
                    var p = 0, m = null, y = i3.stringToGlyphs(t4), g = true, v = false, b = void 0;
                    try {
                      for (var j, _ = y[Symbol.iterator](); !(g = (j = _.next()).done); g = true) {
                        var x, w, S = j.value, E = (m && (p += i3.getKerningValue(m, S)), a2.getGlyphInfo(S));
                        E.uGlyphRect && (x = E.rowInfo, w = E.colInfo, u.setUniform("uSamplerStrokes", E.strokeImageInfo.imageData), u.setUniform("uSamplerRowStrokes", x.cellImageInfo.imageData), u.setUniform("uSamplerRows", x.dimImageInfo.imageData), u.setUniform("uSamplerColStrokes", w.cellImageInfo.imageData), u.setUniform("uSamplerCols", w.dimImageInfo.imageData), u.setUniform("uGridOffset", E.uGridOffset), u.setUniform("uGlyphRect", E.uGlyphRect), u.setUniform("uGlyphOffset", p), u.bindTextures(), l2.drawElements(l2.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0)), p += S.advanceWidth, m = S;
                      }
                    } catch (e5) {
                      v = true, b = e5;
                    } finally {
                      try {
                        g || null == _.return || _.return();
                      } finally {
                        if (v)
                          throw b;
                      }
                    }
                  } finally {
                    u.unbindShader(), this._doStroke = n3, this.drawMode = s4, l2.pixelStorei(l2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true), e4.pop();
                  }
                } else
                  console.log("WEBGL: only Opentype (.otf) and Truetype (.ttf) fonts are supported");
                return e4;
              }
            } else
              console.log("WEBGL: you must load and set a font before drawing text. See `loadFont` and `textFont` for more details.");
          };
        }, { "../core/constants": 262, "../core/main": 273, "./p5.RendererGL.Retained": 327, "./p5.Shader": 329, "core-js/modules/es.array.iterator": 160, "core-js/modules/es.object.get-own-property-descriptor": 176, "core-js/modules/es.object.to-string": 180, "core-js/modules/es.regexp.exec": 185, "core-js/modules/es.string.iterator": 190, "core-js/modules/es.string.split": 196, "core-js/modules/es.string.sub": 198, "core-js/modules/es.symbol": 202, "core-js/modules/es.symbol.description": 200, "core-js/modules/es.symbol.iterator": 201, "core-js/modules/es.weak-map": 234, "core-js/modules/web.dom-collections.iterator": 236 }] }, {}, [257])(257);
      });
    }
  });

  // node_modules/.pnpm/matter-js@0.19.0/node_modules/matter-js/build/matter.js
  var require_matter = __commonJS({
    "node_modules/.pnpm/matter-js@0.19.0/node_modules/matter-js/build/matter.js"(exports, module) {
      init_live_reload();
      (function webpackUniversalModuleDefinition(root, factory) {
        if (typeof exports === "object" && typeof module === "object")
          module.exports = factory();
        else if (typeof define === "function" && define.amd)
          define("Matter", [], factory);
        else if (typeof exports === "object")
          exports["Matter"] = factory();
        else
          root["Matter"] = factory();
      })(exports, function() {
        return (
          /******/
          function(modules) {
            var installedModules = {};
            function __webpack_require__(moduleId) {
              if (installedModules[moduleId]) {
                return installedModules[moduleId].exports;
              }
              var module2 = installedModules[moduleId] = {
                /******/
                i: moduleId,
                /******/
                l: false,
                /******/
                exports: {}
                /******/
              };
              modules[moduleId].call(module2.exports, module2, module2.exports, __webpack_require__);
              module2.l = true;
              return module2.exports;
            }
            __webpack_require__.m = modules;
            __webpack_require__.c = installedModules;
            __webpack_require__.d = function(exports2, name, getter) {
              if (!__webpack_require__.o(exports2, name)) {
                Object.defineProperty(exports2, name, { enumerable: true, get: getter });
              }
            };
            __webpack_require__.r = function(exports2) {
              if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
              }
              Object.defineProperty(exports2, "__esModule", { value: true });
            };
            __webpack_require__.t = function(value, mode) {
              if (mode & 1)
                value = __webpack_require__(value);
              if (mode & 8)
                return value;
              if (mode & 4 && typeof value === "object" && value && value.__esModule)
                return value;
              var ns = /* @__PURE__ */ Object.create(null);
              __webpack_require__.r(ns);
              Object.defineProperty(ns, "default", { enumerable: true, value });
              if (mode & 2 && typeof value != "string")
                for (var key in value)
                  __webpack_require__.d(ns, key, function(key2) {
                    return value[key2];
                  }.bind(null, key));
              return ns;
            };
            __webpack_require__.n = function(module2) {
              var getter = module2 && module2.__esModule ? (
                /******/
                function getDefault() {
                  return module2["default"];
                }
              ) : (
                /******/
                function getModuleExports() {
                  return module2;
                }
              );
              __webpack_require__.d(getter, "a", getter);
              return getter;
            };
            __webpack_require__.o = function(object, property) {
              return Object.prototype.hasOwnProperty.call(object, property);
            };
            __webpack_require__.p = "";
            return __webpack_require__(__webpack_require__.s = 20);
          }([
            /* 0 */
            /***/
            function(module2, exports2) {
              var Common = {};
              module2.exports = Common;
              (function() {
                Common._baseDelta = 1e3 / 60;
                Common._nextId = 0;
                Common._seed = 0;
                Common._nowStartTime = +/* @__PURE__ */ new Date();
                Common._warnedOnce = {};
                Common._decomp = null;
                Common.extend = function(obj, deep) {
                  var argsStart, args, deepClone;
                  if (typeof deep === "boolean") {
                    argsStart = 2;
                    deepClone = deep;
                  } else {
                    argsStart = 1;
                    deepClone = true;
                  }
                  for (var i2 = argsStart; i2 < arguments.length; i2++) {
                    var source = arguments[i2];
                    if (source) {
                      for (var prop in source) {
                        if (deepClone && source[prop] && source[prop].constructor === Object) {
                          if (!obj[prop] || obj[prop].constructor === Object) {
                            obj[prop] = obj[prop] || {};
                            Common.extend(obj[prop], deepClone, source[prop]);
                          } else {
                            obj[prop] = source[prop];
                          }
                        } else {
                          obj[prop] = source[prop];
                        }
                      }
                    }
                  }
                  return obj;
                };
                Common.clone = function(obj, deep) {
                  return Common.extend({}, deep, obj);
                };
                Common.keys = function(obj) {
                  if (Object.keys)
                    return Object.keys(obj);
                  var keys = [];
                  for (var key in obj)
                    keys.push(key);
                  return keys;
                };
                Common.values = function(obj) {
                  var values = [];
                  if (Object.keys) {
                    var keys = Object.keys(obj);
                    for (var i2 = 0; i2 < keys.length; i2++) {
                      values.push(obj[keys[i2]]);
                    }
                    return values;
                  }
                  for (var key in obj)
                    values.push(obj[key]);
                  return values;
                };
                Common.get = function(obj, path, begin, end) {
                  path = path.split(".").slice(begin, end);
                  for (var i2 = 0; i2 < path.length; i2 += 1) {
                    obj = obj[path[i2]];
                  }
                  return obj;
                };
                Common.set = function(obj, path, val, begin, end) {
                  var parts = path.split(".").slice(begin, end);
                  Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;
                  return val;
                };
                Common.shuffle = function(array) {
                  for (var i2 = array.length - 1; i2 > 0; i2--) {
                    var j = Math.floor(Common.random() * (i2 + 1));
                    var temp = array[i2];
                    array[i2] = array[j];
                    array[j] = temp;
                  }
                  return array;
                };
                Common.choose = function(choices) {
                  return choices[Math.floor(Common.random() * choices.length)];
                };
                Common.isElement = function(obj) {
                  if (typeof HTMLElement !== "undefined") {
                    return obj instanceof HTMLElement;
                  }
                  return !!(obj && obj.nodeType && obj.nodeName);
                };
                Common.isArray = function(obj) {
                  return Object.prototype.toString.call(obj) === "[object Array]";
                };
                Common.isFunction = function(obj) {
                  return typeof obj === "function";
                };
                Common.isPlainObject = function(obj) {
                  return typeof obj === "object" && obj.constructor === Object;
                };
                Common.isString = function(obj) {
                  return toString.call(obj) === "[object String]";
                };
                Common.clamp = function(value, min, max2) {
                  if (value < min)
                    return min;
                  if (value > max2)
                    return max2;
                  return value;
                };
                Common.sign = function(value) {
                  return value < 0 ? -1 : 1;
                };
                Common.now = function() {
                  if (typeof window !== "undefined" && window.performance) {
                    if (window.performance.now) {
                      return window.performance.now();
                    } else if (window.performance.webkitNow) {
                      return window.performance.webkitNow();
                    }
                  }
                  if (Date.now) {
                    return Date.now();
                  }
                  return /* @__PURE__ */ new Date() - Common._nowStartTime;
                };
                Common.random = function(min, max2) {
                  min = typeof min !== "undefined" ? min : 0;
                  max2 = typeof max2 !== "undefined" ? max2 : 1;
                  return min + _seededRandom() * (max2 - min);
                };
                var _seededRandom = function() {
                  Common._seed = (Common._seed * 9301 + 49297) % 233280;
                  return Common._seed / 233280;
                };
                Common.colorToNumber = function(colorString) {
                  colorString = colorString.replace("#", "");
                  if (colorString.length == 3) {
                    colorString = colorString.charAt(0) + colorString.charAt(0) + colorString.charAt(1) + colorString.charAt(1) + colorString.charAt(2) + colorString.charAt(2);
                  }
                  return parseInt(colorString, 16);
                };
                Common.logLevel = 1;
                Common.log = function() {
                  if (console && Common.logLevel > 0 && Common.logLevel <= 3) {
                    console.log.apply(console, ["matter-js:"].concat(Array.prototype.slice.call(arguments)));
                  }
                };
                Common.info = function() {
                  if (console && Common.logLevel > 0 && Common.logLevel <= 2) {
                    console.info.apply(console, ["matter-js:"].concat(Array.prototype.slice.call(arguments)));
                  }
                };
                Common.warn = function() {
                  if (console && Common.logLevel > 0 && Common.logLevel <= 3) {
                    console.warn.apply(console, ["matter-js:"].concat(Array.prototype.slice.call(arguments)));
                  }
                };
                Common.warnOnce = function() {
                  var message = Array.prototype.slice.call(arguments).join(" ");
                  if (!Common._warnedOnce[message]) {
                    Common.warn(message);
                    Common._warnedOnce[message] = true;
                  }
                };
                Common.deprecated = function(obj, prop, warning) {
                  obj[prop] = Common.chain(function() {
                    Common.warnOnce("\u{1F505} deprecated \u{1F505}", warning);
                  }, obj[prop]);
                };
                Common.nextId = function() {
                  return Common._nextId++;
                };
                Common.indexOf = function(haystack, needle) {
                  if (haystack.indexOf)
                    return haystack.indexOf(needle);
                  for (var i2 = 0; i2 < haystack.length; i2++) {
                    if (haystack[i2] === needle)
                      return i2;
                  }
                  return -1;
                };
                Common.map = function(list, func) {
                  if (list.map) {
                    return list.map(func);
                  }
                  var mapped = [];
                  for (var i2 = 0; i2 < list.length; i2 += 1) {
                    mapped.push(func(list[i2]));
                  }
                  return mapped;
                };
                Common.topologicalSort = function(graph) {
                  var result = [], visited = [], temp = [];
                  for (var node in graph) {
                    if (!visited[node] && !temp[node]) {
                      Common._topologicalSort(node, visited, temp, graph, result);
                    }
                  }
                  return result;
                };
                Common._topologicalSort = function(node, visited, temp, graph, result) {
                  var neighbors = graph[node] || [];
                  temp[node] = true;
                  for (var i2 = 0; i2 < neighbors.length; i2 += 1) {
                    var neighbor = neighbors[i2];
                    if (temp[neighbor]) {
                      continue;
                    }
                    if (!visited[neighbor]) {
                      Common._topologicalSort(neighbor, visited, temp, graph, result);
                    }
                  }
                  temp[node] = false;
                  visited[node] = true;
                  result.push(node);
                };
                Common.chain = function() {
                  var funcs = [];
                  for (var i2 = 0; i2 < arguments.length; i2 += 1) {
                    var func = arguments[i2];
                    if (func._chained) {
                      funcs.push.apply(funcs, func._chained);
                    } else {
                      funcs.push(func);
                    }
                  }
                  var chain = function() {
                    var lastResult, args = new Array(arguments.length);
                    for (var i3 = 0, l = arguments.length; i3 < l; i3++) {
                      args[i3] = arguments[i3];
                    }
                    for (i3 = 0; i3 < funcs.length; i3 += 1) {
                      var result = funcs[i3].apply(lastResult, args);
                      if (typeof result !== "undefined") {
                        lastResult = result;
                      }
                    }
                    return lastResult;
                  };
                  chain._chained = funcs;
                  return chain;
                };
                Common.chainPathBefore = function(base, path, func) {
                  return Common.set(base, path, Common.chain(
                    func,
                    Common.get(base, path)
                  ));
                };
                Common.chainPathAfter = function(base, path, func) {
                  return Common.set(base, path, Common.chain(
                    Common.get(base, path),
                    func
                  ));
                };
                Common.setDecomp = function(decomp) {
                  Common._decomp = decomp;
                };
                Common.getDecomp = function() {
                  var decomp = Common._decomp;
                  try {
                    if (!decomp && typeof window !== "undefined") {
                      decomp = window.decomp;
                    }
                    if (!decomp && typeof global !== "undefined") {
                      decomp = global.decomp;
                    }
                  } catch (e3) {
                    decomp = null;
                  }
                  return decomp;
                };
              })();
            },
            /* 1 */
            /***/
            function(module2, exports2) {
              var Bounds = {};
              module2.exports = Bounds;
              (function() {
                Bounds.create = function(vertices) {
                  var bounds = {
                    min: { x: 0, y: 0 },
                    max: { x: 0, y: 0 }
                  };
                  if (vertices)
                    Bounds.update(bounds, vertices);
                  return bounds;
                };
                Bounds.update = function(bounds, vertices, velocity) {
                  bounds.min.x = Infinity;
                  bounds.max.x = -Infinity;
                  bounds.min.y = Infinity;
                  bounds.max.y = -Infinity;
                  for (var i2 = 0; i2 < vertices.length; i2++) {
                    var vertex = vertices[i2];
                    if (vertex.x > bounds.max.x)
                      bounds.max.x = vertex.x;
                    if (vertex.x < bounds.min.x)
                      bounds.min.x = vertex.x;
                    if (vertex.y > bounds.max.y)
                      bounds.max.y = vertex.y;
                    if (vertex.y < bounds.min.y)
                      bounds.min.y = vertex.y;
                  }
                  if (velocity) {
                    if (velocity.x > 0) {
                      bounds.max.x += velocity.x;
                    } else {
                      bounds.min.x += velocity.x;
                    }
                    if (velocity.y > 0) {
                      bounds.max.y += velocity.y;
                    } else {
                      bounds.min.y += velocity.y;
                    }
                  }
                };
                Bounds.contains = function(bounds, point) {
                  return point.x >= bounds.min.x && point.x <= bounds.max.x && point.y >= bounds.min.y && point.y <= bounds.max.y;
                };
                Bounds.overlaps = function(boundsA, boundsB) {
                  return boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y;
                };
                Bounds.translate = function(bounds, vector) {
                  bounds.min.x += vector.x;
                  bounds.max.x += vector.x;
                  bounds.min.y += vector.y;
                  bounds.max.y += vector.y;
                };
                Bounds.shift = function(bounds, position) {
                  var deltaX = bounds.max.x - bounds.min.x, deltaY = bounds.max.y - bounds.min.y;
                  bounds.min.x = position.x;
                  bounds.max.x = position.x + deltaX;
                  bounds.min.y = position.y;
                  bounds.max.y = position.y + deltaY;
                };
              })();
            },
            /* 2 */
            /***/
            function(module2, exports2) {
              var Vector = {};
              module2.exports = Vector;
              (function() {
                Vector.create = function(x, y) {
                  return { x: x || 0, y: y || 0 };
                };
                Vector.clone = function(vector) {
                  return { x: vector.x, y: vector.y };
                };
                Vector.magnitude = function(vector) {
                  return Math.sqrt(vector.x * vector.x + vector.y * vector.y);
                };
                Vector.magnitudeSquared = function(vector) {
                  return vector.x * vector.x + vector.y * vector.y;
                };
                Vector.rotate = function(vector, angle, output) {
                  var cos = Math.cos(angle), sin = Math.sin(angle);
                  if (!output)
                    output = {};
                  var x = vector.x * cos - vector.y * sin;
                  output.y = vector.x * sin + vector.y * cos;
                  output.x = x;
                  return output;
                };
                Vector.rotateAbout = function(vector, angle, point, output) {
                  var cos = Math.cos(angle), sin = Math.sin(angle);
                  if (!output)
                    output = {};
                  var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);
                  output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);
                  output.x = x;
                  return output;
                };
                Vector.normalise = function(vector) {
                  var magnitude = Vector.magnitude(vector);
                  if (magnitude === 0)
                    return { x: 0, y: 0 };
                  return { x: vector.x / magnitude, y: vector.y / magnitude };
                };
                Vector.dot = function(vectorA, vectorB) {
                  return vectorA.x * vectorB.x + vectorA.y * vectorB.y;
                };
                Vector.cross = function(vectorA, vectorB) {
                  return vectorA.x * vectorB.y - vectorA.y * vectorB.x;
                };
                Vector.cross3 = function(vectorA, vectorB, vectorC) {
                  return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);
                };
                Vector.add = function(vectorA, vectorB, output) {
                  if (!output)
                    output = {};
                  output.x = vectorA.x + vectorB.x;
                  output.y = vectorA.y + vectorB.y;
                  return output;
                };
                Vector.sub = function(vectorA, vectorB, output) {
                  if (!output)
                    output = {};
                  output.x = vectorA.x - vectorB.x;
                  output.y = vectorA.y - vectorB.y;
                  return output;
                };
                Vector.mult = function(vector, scalar) {
                  return { x: vector.x * scalar, y: vector.y * scalar };
                };
                Vector.div = function(vector, scalar) {
                  return { x: vector.x / scalar, y: vector.y / scalar };
                };
                Vector.perp = function(vector, negate) {
                  negate = negate === true ? -1 : 1;
                  return { x: negate * -vector.y, y: negate * vector.x };
                };
                Vector.neg = function(vector) {
                  return { x: -vector.x, y: -vector.y };
                };
                Vector.angle = function(vectorA, vectorB) {
                  return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);
                };
                Vector._temp = [
                  Vector.create(),
                  Vector.create(),
                  Vector.create(),
                  Vector.create(),
                  Vector.create(),
                  Vector.create()
                ];
              })();
            },
            /* 3 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Vertices = {};
              module2.exports = Vertices;
              var Vector = __webpack_require__(2);
              var Common = __webpack_require__(0);
              (function() {
                Vertices.create = function(points, body) {
                  var vertices = [];
                  for (var i2 = 0; i2 < points.length; i2++) {
                    var point = points[i2], vertex = {
                      x: point.x,
                      y: point.y,
                      index: i2,
                      body,
                      isInternal: false
                    };
                    vertices.push(vertex);
                  }
                  return vertices;
                };
                Vertices.fromPath = function(path, body) {
                  var pathPattern = /L?\s*([-\d.e]+)[\s,]*([-\d.e]+)*/ig, points = [];
                  path.replace(pathPattern, function(match, x, y) {
                    points.push({ x: parseFloat(x), y: parseFloat(y) });
                  });
                  return Vertices.create(points, body);
                };
                Vertices.centre = function(vertices) {
                  var area = Vertices.area(vertices, true), centre = { x: 0, y: 0 }, cross, temp, j;
                  for (var i2 = 0; i2 < vertices.length; i2++) {
                    j = (i2 + 1) % vertices.length;
                    cross = Vector.cross(vertices[i2], vertices[j]);
                    temp = Vector.mult(Vector.add(vertices[i2], vertices[j]), cross);
                    centre = Vector.add(centre, temp);
                  }
                  return Vector.div(centre, 6 * area);
                };
                Vertices.mean = function(vertices) {
                  var average = { x: 0, y: 0 };
                  for (var i2 = 0; i2 < vertices.length; i2++) {
                    average.x += vertices[i2].x;
                    average.y += vertices[i2].y;
                  }
                  return Vector.div(average, vertices.length);
                };
                Vertices.area = function(vertices, signed) {
                  var area = 0, j = vertices.length - 1;
                  for (var i2 = 0; i2 < vertices.length; i2++) {
                    area += (vertices[j].x - vertices[i2].x) * (vertices[j].y + vertices[i2].y);
                    j = i2;
                  }
                  if (signed)
                    return area / 2;
                  return Math.abs(area) / 2;
                };
                Vertices.inertia = function(vertices, mass) {
                  var numerator = 0, denominator = 0, v = vertices, cross, j;
                  for (var n2 = 0; n2 < v.length; n2++) {
                    j = (n2 + 1) % v.length;
                    cross = Math.abs(Vector.cross(v[j], v[n2]));
                    numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n2]) + Vector.dot(v[n2], v[n2]));
                    denominator += cross;
                  }
                  return mass / 6 * (numerator / denominator);
                };
                Vertices.translate = function(vertices, vector, scalar) {
                  scalar = typeof scalar !== "undefined" ? scalar : 1;
                  var verticesLength = vertices.length, translateX = vector.x * scalar, translateY = vector.y * scalar, i2;
                  for (i2 = 0; i2 < verticesLength; i2++) {
                    vertices[i2].x += translateX;
                    vertices[i2].y += translateY;
                  }
                  return vertices;
                };
                Vertices.rotate = function(vertices, angle, point) {
                  if (angle === 0)
                    return;
                  var cos = Math.cos(angle), sin = Math.sin(angle), pointX = point.x, pointY = point.y, verticesLength = vertices.length, vertex, dx, dy, i2;
                  for (i2 = 0; i2 < verticesLength; i2++) {
                    vertex = vertices[i2];
                    dx = vertex.x - pointX;
                    dy = vertex.y - pointY;
                    vertex.x = pointX + (dx * cos - dy * sin);
                    vertex.y = pointY + (dx * sin + dy * cos);
                  }
                  return vertices;
                };
                Vertices.contains = function(vertices, point) {
                  var pointX = point.x, pointY = point.y, verticesLength = vertices.length, vertex = vertices[verticesLength - 1], nextVertex;
                  for (var i2 = 0; i2 < verticesLength; i2++) {
                    nextVertex = vertices[i2];
                    if ((pointX - vertex.x) * (nextVertex.y - vertex.y) + (pointY - vertex.y) * (vertex.x - nextVertex.x) > 0) {
                      return false;
                    }
                    vertex = nextVertex;
                  }
                  return true;
                };
                Vertices.scale = function(vertices, scaleX, scaleY, point) {
                  if (scaleX === 1 && scaleY === 1)
                    return vertices;
                  point = point || Vertices.centre(vertices);
                  var vertex, delta;
                  for (var i2 = 0; i2 < vertices.length; i2++) {
                    vertex = vertices[i2];
                    delta = Vector.sub(vertex, point);
                    vertices[i2].x = point.x + delta.x * scaleX;
                    vertices[i2].y = point.y + delta.y * scaleY;
                  }
                  return vertices;
                };
                Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {
                  if (typeof radius === "number") {
                    radius = [radius];
                  } else {
                    radius = radius || [8];
                  }
                  quality = typeof quality !== "undefined" ? quality : -1;
                  qualityMin = qualityMin || 2;
                  qualityMax = qualityMax || 14;
                  var newVertices = [];
                  for (var i2 = 0; i2 < vertices.length; i2++) {
                    var prevVertex = vertices[i2 - 1 >= 0 ? i2 - 1 : vertices.length - 1], vertex = vertices[i2], nextVertex = vertices[(i2 + 1) % vertices.length], currentRadius = radius[i2 < radius.length ? i2 : radius.length - 1];
                    if (currentRadius === 0) {
                      newVertices.push(vertex);
                      continue;
                    }
                    var prevNormal = Vector.normalise({
                      x: vertex.y - prevVertex.y,
                      y: prevVertex.x - vertex.x
                    });
                    var nextNormal = Vector.normalise({
                      x: nextVertex.y - vertex.y,
                      y: vertex.x - nextVertex.x
                    });
                    var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)), radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius), midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)), scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));
                    var precision = quality;
                    if (quality === -1) {
                      precision = Math.pow(currentRadius, 0.32) * 1.75;
                    }
                    precision = Common.clamp(precision, qualityMin, qualityMax);
                    if (precision % 2 === 1)
                      precision += 1;
                    var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)), theta = alpha / precision;
                    for (var j = 0; j < precision; j++) {
                      newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));
                    }
                  }
                  return newVertices;
                };
                Vertices.clockwiseSort = function(vertices) {
                  var centre = Vertices.mean(vertices);
                  vertices.sort(function(vertexA, vertexB) {
                    return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);
                  });
                  return vertices;
                };
                Vertices.isConvex = function(vertices) {
                  var flag = 0, n2 = vertices.length, i2, j, k, z;
                  if (n2 < 3)
                    return null;
                  for (i2 = 0; i2 < n2; i2++) {
                    j = (i2 + 1) % n2;
                    k = (i2 + 2) % n2;
                    z = (vertices[j].x - vertices[i2].x) * (vertices[k].y - vertices[j].y);
                    z -= (vertices[j].y - vertices[i2].y) * (vertices[k].x - vertices[j].x);
                    if (z < 0) {
                      flag |= 1;
                    } else if (z > 0) {
                      flag |= 2;
                    }
                    if (flag === 3) {
                      return false;
                    }
                  }
                  if (flag !== 0) {
                    return true;
                  } else {
                    return null;
                  }
                };
                Vertices.hull = function(vertices) {
                  var upper = [], lower = [], vertex, i2;
                  vertices = vertices.slice(0);
                  vertices.sort(function(vertexA, vertexB) {
                    var dx = vertexA.x - vertexB.x;
                    return dx !== 0 ? dx : vertexA.y - vertexB.y;
                  });
                  for (i2 = 0; i2 < vertices.length; i2 += 1) {
                    vertex = vertices[i2];
                    while (lower.length >= 2 && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {
                      lower.pop();
                    }
                    lower.push(vertex);
                  }
                  for (i2 = vertices.length - 1; i2 >= 0; i2 -= 1) {
                    vertex = vertices[i2];
                    while (upper.length >= 2 && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {
                      upper.pop();
                    }
                    upper.push(vertex);
                  }
                  upper.pop();
                  lower.pop();
                  return upper.concat(lower);
                };
              })();
            },
            /* 4 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Body = {};
              module2.exports = Body;
              var Vertices = __webpack_require__(3);
              var Vector = __webpack_require__(2);
              var Sleeping = __webpack_require__(7);
              var Common = __webpack_require__(0);
              var Bounds = __webpack_require__(1);
              var Axes = __webpack_require__(11);
              (function() {
                Body._timeCorrection = true;
                Body._inertiaScale = 4;
                Body._nextCollidingGroupId = 1;
                Body._nextNonCollidingGroupId = -1;
                Body._nextCategory = 1;
                Body._baseDelta = 1e3 / 60;
                Body.create = function(options) {
                  var defaults3 = {
                    id: Common.nextId(),
                    type: "body",
                    label: "Body",
                    parts: [],
                    plugin: {},
                    angle: 0,
                    vertices: Vertices.fromPath("L 0 0 L 40 0 L 40 40 L 0 40"),
                    position: { x: 0, y: 0 },
                    force: { x: 0, y: 0 },
                    torque: 0,
                    positionImpulse: { x: 0, y: 0 },
                    constraintImpulse: { x: 0, y: 0, angle: 0 },
                    totalContacts: 0,
                    speed: 0,
                    angularSpeed: 0,
                    velocity: { x: 0, y: 0 },
                    angularVelocity: 0,
                    isSensor: false,
                    isStatic: false,
                    isSleeping: false,
                    motion: 0,
                    sleepThreshold: 60,
                    density: 1e-3,
                    restitution: 0,
                    friction: 0.1,
                    frictionStatic: 0.5,
                    frictionAir: 0.01,
                    collisionFilter: {
                      category: 1,
                      mask: 4294967295,
                      group: 0
                    },
                    slop: 0.05,
                    timeScale: 1,
                    render: {
                      visible: true,
                      opacity: 1,
                      strokeStyle: null,
                      fillStyle: null,
                      lineWidth: null,
                      sprite: {
                        xScale: 1,
                        yScale: 1,
                        xOffset: 0,
                        yOffset: 0
                      }
                    },
                    events: null,
                    bounds: null,
                    chamfer: null,
                    circleRadius: 0,
                    positionPrev: null,
                    anglePrev: 0,
                    parent: null,
                    axes: null,
                    area: 0,
                    mass: 0,
                    inertia: 0,
                    deltaTime: 1e3 / 60,
                    _original: null
                  };
                  var body = Common.extend(defaults3, options);
                  _initProperties(body, options);
                  return body;
                };
                Body.nextGroup = function(isNonColliding) {
                  if (isNonColliding)
                    return Body._nextNonCollidingGroupId--;
                  return Body._nextCollidingGroupId++;
                };
                Body.nextCategory = function() {
                  Body._nextCategory = Body._nextCategory << 1;
                  return Body._nextCategory;
                };
                var _initProperties = function(body, options) {
                  options = options || {};
                  Body.set(body, {
                    bounds: body.bounds || Bounds.create(body.vertices),
                    positionPrev: body.positionPrev || Vector.clone(body.position),
                    anglePrev: body.anglePrev || body.angle,
                    vertices: body.vertices,
                    parts: body.parts || [body],
                    isStatic: body.isStatic,
                    isSleeping: body.isSleeping,
                    parent: body.parent || body
                  });
                  Vertices.rotate(body.vertices, body.angle, body.position);
                  Axes.rotate(body.axes, body.angle);
                  Bounds.update(body.bounds, body.vertices, body.velocity);
                  Body.set(body, {
                    axes: options.axes || body.axes,
                    area: options.area || body.area,
                    mass: options.mass || body.mass,
                    inertia: options.inertia || body.inertia
                  });
                  var defaultFillStyle = body.isStatic ? "#14151f" : Common.choose(["#f19648", "#f5d259", "#f55a3c", "#063e7b", "#ececd1"]), defaultStrokeStyle = body.isStatic ? "#555" : "#ccc", defaultLineWidth = body.isStatic && body.render.fillStyle === null ? 1 : 0;
                  body.render.fillStyle = body.render.fillStyle || defaultFillStyle;
                  body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;
                  body.render.lineWidth = body.render.lineWidth || defaultLineWidth;
                  body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);
                  body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);
                };
                Body.set = function(body, settings, value) {
                  var property;
                  if (typeof settings === "string") {
                    property = settings;
                    settings = {};
                    settings[property] = value;
                  }
                  for (property in settings) {
                    if (!Object.prototype.hasOwnProperty.call(settings, property))
                      continue;
                    value = settings[property];
                    switch (property) {
                      case "isStatic":
                        Body.setStatic(body, value);
                        break;
                      case "isSleeping":
                        Sleeping.set(body, value);
                        break;
                      case "mass":
                        Body.setMass(body, value);
                        break;
                      case "density":
                        Body.setDensity(body, value);
                        break;
                      case "inertia":
                        Body.setInertia(body, value);
                        break;
                      case "vertices":
                        Body.setVertices(body, value);
                        break;
                      case "position":
                        Body.setPosition(body, value);
                        break;
                      case "angle":
                        Body.setAngle(body, value);
                        break;
                      case "velocity":
                        Body.setVelocity(body, value);
                        break;
                      case "angularVelocity":
                        Body.setAngularVelocity(body, value);
                        break;
                      case "speed":
                        Body.setSpeed(body, value);
                        break;
                      case "angularSpeed":
                        Body.setAngularSpeed(body, value);
                        break;
                      case "parts":
                        Body.setParts(body, value);
                        break;
                      case "centre":
                        Body.setCentre(body, value);
                        break;
                      default:
                        body[property] = value;
                    }
                  }
                };
                Body.setStatic = function(body, isStatic) {
                  for (var i2 = 0; i2 < body.parts.length; i2++) {
                    var part = body.parts[i2];
                    part.isStatic = isStatic;
                    if (isStatic) {
                      part._original = {
                        restitution: part.restitution,
                        friction: part.friction,
                        mass: part.mass,
                        inertia: part.inertia,
                        density: part.density,
                        inverseMass: part.inverseMass,
                        inverseInertia: part.inverseInertia
                      };
                      part.restitution = 0;
                      part.friction = 1;
                      part.mass = part.inertia = part.density = Infinity;
                      part.inverseMass = part.inverseInertia = 0;
                      part.positionPrev.x = part.position.x;
                      part.positionPrev.y = part.position.y;
                      part.anglePrev = part.angle;
                      part.angularVelocity = 0;
                      part.speed = 0;
                      part.angularSpeed = 0;
                      part.motion = 0;
                    } else if (part._original) {
                      part.restitution = part._original.restitution;
                      part.friction = part._original.friction;
                      part.mass = part._original.mass;
                      part.inertia = part._original.inertia;
                      part.density = part._original.density;
                      part.inverseMass = part._original.inverseMass;
                      part.inverseInertia = part._original.inverseInertia;
                      part._original = null;
                    }
                  }
                };
                Body.setMass = function(body, mass) {
                  var moment = body.inertia / (body.mass / 6);
                  body.inertia = moment * (mass / 6);
                  body.inverseInertia = 1 / body.inertia;
                  body.mass = mass;
                  body.inverseMass = 1 / body.mass;
                  body.density = body.mass / body.area;
                };
                Body.setDensity = function(body, density) {
                  Body.setMass(body, density * body.area);
                  body.density = density;
                };
                Body.setInertia = function(body, inertia) {
                  body.inertia = inertia;
                  body.inverseInertia = 1 / body.inertia;
                };
                Body.setVertices = function(body, vertices) {
                  if (vertices[0].body === body) {
                    body.vertices = vertices;
                  } else {
                    body.vertices = Vertices.create(vertices, body);
                  }
                  body.axes = Axes.fromVertices(body.vertices);
                  body.area = Vertices.area(body.vertices);
                  Body.setMass(body, body.density * body.area);
                  var centre = Vertices.centre(body.vertices);
                  Vertices.translate(body.vertices, centre, -1);
                  Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));
                  Vertices.translate(body.vertices, body.position);
                  Bounds.update(body.bounds, body.vertices, body.velocity);
                };
                Body.setParts = function(body, parts, autoHull) {
                  var i2;
                  parts = parts.slice(0);
                  body.parts.length = 0;
                  body.parts.push(body);
                  body.parent = body;
                  for (i2 = 0; i2 < parts.length; i2++) {
                    var part = parts[i2];
                    if (part !== body) {
                      part.parent = body;
                      body.parts.push(part);
                    }
                  }
                  if (body.parts.length === 1)
                    return;
                  autoHull = typeof autoHull !== "undefined" ? autoHull : true;
                  if (autoHull) {
                    var vertices = [];
                    for (i2 = 0; i2 < parts.length; i2++) {
                      vertices = vertices.concat(parts[i2].vertices);
                    }
                    Vertices.clockwiseSort(vertices);
                    var hull = Vertices.hull(vertices), hullCentre = Vertices.centre(hull);
                    Body.setVertices(body, hull);
                    Vertices.translate(body.vertices, hullCentre);
                  }
                  var total = Body._totalProperties(body);
                  body.area = total.area;
                  body.parent = body;
                  body.position.x = total.centre.x;
                  body.position.y = total.centre.y;
                  body.positionPrev.x = total.centre.x;
                  body.positionPrev.y = total.centre.y;
                  Body.setMass(body, total.mass);
                  Body.setInertia(body, total.inertia);
                  Body.setPosition(body, total.centre);
                };
                Body.setCentre = function(body, centre, relative) {
                  if (!relative) {
                    body.positionPrev.x = centre.x - (body.position.x - body.positionPrev.x);
                    body.positionPrev.y = centre.y - (body.position.y - body.positionPrev.y);
                    body.position.x = centre.x;
                    body.position.y = centre.y;
                  } else {
                    body.positionPrev.x += centre.x;
                    body.positionPrev.y += centre.y;
                    body.position.x += centre.x;
                    body.position.y += centre.y;
                  }
                };
                Body.setPosition = function(body, position, updateVelocity) {
                  var delta = Vector.sub(position, body.position);
                  if (updateVelocity) {
                    body.positionPrev.x = body.position.x;
                    body.positionPrev.y = body.position.y;
                    body.velocity.x = delta.x;
                    body.velocity.y = delta.y;
                    body.speed = Vector.magnitude(delta);
                  } else {
                    body.positionPrev.x += delta.x;
                    body.positionPrev.y += delta.y;
                  }
                  for (var i2 = 0; i2 < body.parts.length; i2++) {
                    var part = body.parts[i2];
                    part.position.x += delta.x;
                    part.position.y += delta.y;
                    Vertices.translate(part.vertices, delta);
                    Bounds.update(part.bounds, part.vertices, body.velocity);
                  }
                };
                Body.setAngle = function(body, angle, updateVelocity) {
                  var delta = angle - body.angle;
                  if (updateVelocity) {
                    body.anglePrev = body.angle;
                    body.angularVelocity = delta;
                    body.angularSpeed = Math.abs(delta);
                  } else {
                    body.anglePrev += delta;
                  }
                  for (var i2 = 0; i2 < body.parts.length; i2++) {
                    var part = body.parts[i2];
                    part.angle += delta;
                    Vertices.rotate(part.vertices, delta, body.position);
                    Axes.rotate(part.axes, delta);
                    Bounds.update(part.bounds, part.vertices, body.velocity);
                    if (i2 > 0) {
                      Vector.rotateAbout(part.position, delta, body.position, part.position);
                    }
                  }
                };
                Body.setVelocity = function(body, velocity) {
                  var timeScale = body.deltaTime / Body._baseDelta;
                  body.positionPrev.x = body.position.x - velocity.x * timeScale;
                  body.positionPrev.y = body.position.y - velocity.y * timeScale;
                  body.velocity.x = (body.position.x - body.positionPrev.x) / timeScale;
                  body.velocity.y = (body.position.y - body.positionPrev.y) / timeScale;
                  body.speed = Vector.magnitude(body.velocity);
                };
                Body.getVelocity = function(body) {
                  var timeScale = Body._baseDelta / body.deltaTime;
                  return {
                    x: (body.position.x - body.positionPrev.x) * timeScale,
                    y: (body.position.y - body.positionPrev.y) * timeScale
                  };
                };
                Body.getSpeed = function(body) {
                  return Vector.magnitude(Body.getVelocity(body));
                };
                Body.setSpeed = function(body, speed) {
                  Body.setVelocity(body, Vector.mult(Vector.normalise(Body.getVelocity(body)), speed));
                };
                Body.setAngularVelocity = function(body, velocity) {
                  var timeScale = body.deltaTime / Body._baseDelta;
                  body.anglePrev = body.angle - velocity * timeScale;
                  body.angularVelocity = (body.angle - body.anglePrev) / timeScale;
                  body.angularSpeed = Math.abs(body.angularVelocity);
                };
                Body.getAngularVelocity = function(body) {
                  return (body.angle - body.anglePrev) * Body._baseDelta / body.deltaTime;
                };
                Body.getAngularSpeed = function(body) {
                  return Math.abs(Body.getAngularVelocity(body));
                };
                Body.setAngularSpeed = function(body, speed) {
                  Body.setAngularVelocity(body, Common.sign(Body.getAngularVelocity(body)) * speed);
                };
                Body.translate = function(body, translation, updateVelocity) {
                  Body.setPosition(body, Vector.add(body.position, translation), updateVelocity);
                };
                Body.rotate = function(body, rotation, point, updateVelocity) {
                  if (!point) {
                    Body.setAngle(body, body.angle + rotation, updateVelocity);
                  } else {
                    var cos = Math.cos(rotation), sin = Math.sin(rotation), dx = body.position.x - point.x, dy = body.position.y - point.y;
                    Body.setPosition(body, {
                      x: point.x + (dx * cos - dy * sin),
                      y: point.y + (dx * sin + dy * cos)
                    }, updateVelocity);
                    Body.setAngle(body, body.angle + rotation, updateVelocity);
                  }
                };
                Body.scale = function(body, scaleX, scaleY, point) {
                  var totalArea = 0, totalInertia = 0;
                  point = point || body.position;
                  for (var i2 = 0; i2 < body.parts.length; i2++) {
                    var part = body.parts[i2];
                    Vertices.scale(part.vertices, scaleX, scaleY, point);
                    part.axes = Axes.fromVertices(part.vertices);
                    part.area = Vertices.area(part.vertices);
                    Body.setMass(part, body.density * part.area);
                    Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });
                    Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));
                    Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });
                    if (i2 > 0) {
                      totalArea += part.area;
                      totalInertia += part.inertia;
                    }
                    part.position.x = point.x + (part.position.x - point.x) * scaleX;
                    part.position.y = point.y + (part.position.y - point.y) * scaleY;
                    Bounds.update(part.bounds, part.vertices, body.velocity);
                  }
                  if (body.parts.length > 1) {
                    body.area = totalArea;
                    if (!body.isStatic) {
                      Body.setMass(body, body.density * totalArea);
                      Body.setInertia(body, totalInertia);
                    }
                  }
                  if (body.circleRadius) {
                    if (scaleX === scaleY) {
                      body.circleRadius *= scaleX;
                    } else {
                      body.circleRadius = null;
                    }
                  }
                };
                Body.update = function(body, deltaTime) {
                  deltaTime = (typeof deltaTime !== "undefined" ? deltaTime : 1e3 / 60) * body.timeScale;
                  var deltaTimeSquared = deltaTime * deltaTime, correction = Body._timeCorrection ? deltaTime / (body.deltaTime || deltaTime) : 1;
                  var frictionAir = 1 - body.frictionAir * (deltaTime / Common._baseDelta), velocityPrevX = (body.position.x - body.positionPrev.x) * correction, velocityPrevY = (body.position.y - body.positionPrev.y) * correction;
                  body.velocity.x = velocityPrevX * frictionAir + body.force.x / body.mass * deltaTimeSquared;
                  body.velocity.y = velocityPrevY * frictionAir + body.force.y / body.mass * deltaTimeSquared;
                  body.positionPrev.x = body.position.x;
                  body.positionPrev.y = body.position.y;
                  body.position.x += body.velocity.x;
                  body.position.y += body.velocity.y;
                  body.deltaTime = deltaTime;
                  body.angularVelocity = (body.angle - body.anglePrev) * frictionAir * correction + body.torque / body.inertia * deltaTimeSquared;
                  body.anglePrev = body.angle;
                  body.angle += body.angularVelocity;
                  for (var i2 = 0; i2 < body.parts.length; i2++) {
                    var part = body.parts[i2];
                    Vertices.translate(part.vertices, body.velocity);
                    if (i2 > 0) {
                      part.position.x += body.velocity.x;
                      part.position.y += body.velocity.y;
                    }
                    if (body.angularVelocity !== 0) {
                      Vertices.rotate(part.vertices, body.angularVelocity, body.position);
                      Axes.rotate(part.axes, body.angularVelocity);
                      if (i2 > 0) {
                        Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);
                      }
                    }
                    Bounds.update(part.bounds, part.vertices, body.velocity);
                  }
                };
                Body.updateVelocities = function(body) {
                  var timeScale = Body._baseDelta / body.deltaTime, bodyVelocity = body.velocity;
                  bodyVelocity.x = (body.position.x - body.positionPrev.x) * timeScale;
                  bodyVelocity.y = (body.position.y - body.positionPrev.y) * timeScale;
                  body.speed = Math.sqrt(bodyVelocity.x * bodyVelocity.x + bodyVelocity.y * bodyVelocity.y);
                  body.angularVelocity = (body.angle - body.anglePrev) * timeScale;
                  body.angularSpeed = Math.abs(body.angularVelocity);
                };
                Body.applyForce = function(body, position, force) {
                  var offset = { x: position.x - body.position.x, y: position.y - body.position.y };
                  body.force.x += force.x;
                  body.force.y += force.y;
                  body.torque += offset.x * force.y - offset.y * force.x;
                };
                Body._totalProperties = function(body) {
                  var properties = {
                    mass: 0,
                    area: 0,
                    inertia: 0,
                    centre: { x: 0, y: 0 }
                  };
                  for (var i2 = body.parts.length === 1 ? 0 : 1; i2 < body.parts.length; i2++) {
                    var part = body.parts[i2], mass = part.mass !== Infinity ? part.mass : 1;
                    properties.mass += mass;
                    properties.area += part.area;
                    properties.inertia += part.inertia;
                    properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));
                  }
                  properties.centre = Vector.div(properties.centre, properties.mass);
                  return properties;
                };
              })();
            },
            /* 5 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Events = {};
              module2.exports = Events;
              var Common = __webpack_require__(0);
              (function() {
                Events.on = function(object, eventNames, callback) {
                  var names = eventNames.split(" "), name;
                  for (var i2 = 0; i2 < names.length; i2++) {
                    name = names[i2];
                    object.events = object.events || {};
                    object.events[name] = object.events[name] || [];
                    object.events[name].push(callback);
                  }
                  return callback;
                };
                Events.off = function(object, eventNames, callback) {
                  if (!eventNames) {
                    object.events = {};
                    return;
                  }
                  if (typeof eventNames === "function") {
                    callback = eventNames;
                    eventNames = Common.keys(object.events).join(" ");
                  }
                  var names = eventNames.split(" ");
                  for (var i2 = 0; i2 < names.length; i2++) {
                    var callbacks = object.events[names[i2]], newCallbacks = [];
                    if (callback && callbacks) {
                      for (var j = 0; j < callbacks.length; j++) {
                        if (callbacks[j] !== callback)
                          newCallbacks.push(callbacks[j]);
                      }
                    }
                    object.events[names[i2]] = newCallbacks;
                  }
                };
                Events.trigger = function(object, eventNames, event2) {
                  var names, name, callbacks, eventClone;
                  var events2 = object.events;
                  if (events2 && Common.keys(events2).length > 0) {
                    if (!event2)
                      event2 = {};
                    names = eventNames.split(" ");
                    for (var i2 = 0; i2 < names.length; i2++) {
                      name = names[i2];
                      callbacks = events2[name];
                      if (callbacks) {
                        eventClone = Common.clone(event2, false);
                        eventClone.name = name;
                        eventClone.source = object;
                        for (var j = 0; j < callbacks.length; j++) {
                          callbacks[j].apply(object, [eventClone]);
                        }
                      }
                    }
                  }
                };
              })();
            },
            /* 6 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Composite = {};
              module2.exports = Composite;
              var Events = __webpack_require__(5);
              var Common = __webpack_require__(0);
              var Bounds = __webpack_require__(1);
              var Body = __webpack_require__(4);
              (function() {
                Composite.create = function(options) {
                  return Common.extend({
                    id: Common.nextId(),
                    type: "composite",
                    parent: null,
                    isModified: false,
                    bodies: [],
                    constraints: [],
                    composites: [],
                    label: "Composite",
                    plugin: {},
                    cache: {
                      allBodies: null,
                      allConstraints: null,
                      allComposites: null
                    }
                  }, options);
                };
                Composite.setModified = function(composite, isModified, updateParents, updateChildren) {
                  composite.isModified = isModified;
                  if (isModified && composite.cache) {
                    composite.cache.allBodies = null;
                    composite.cache.allConstraints = null;
                    composite.cache.allComposites = null;
                  }
                  if (updateParents && composite.parent) {
                    Composite.setModified(composite.parent, isModified, updateParents, updateChildren);
                  }
                  if (updateChildren) {
                    for (var i2 = 0; i2 < composite.composites.length; i2++) {
                      var childComposite = composite.composites[i2];
                      Composite.setModified(childComposite, isModified, updateParents, updateChildren);
                    }
                  }
                };
                Composite.add = function(composite, object) {
                  var objects = [].concat(object);
                  Events.trigger(composite, "beforeAdd", { object });
                  for (var i2 = 0; i2 < objects.length; i2++) {
                    var obj = objects[i2];
                    switch (obj.type) {
                      case "body":
                        if (obj.parent !== obj) {
                          Common.warn("Composite.add: skipped adding a compound body part (you must add its parent instead)");
                          break;
                        }
                        Composite.addBody(composite, obj);
                        break;
                      case "constraint":
                        Composite.addConstraint(composite, obj);
                        break;
                      case "composite":
                        Composite.addComposite(composite, obj);
                        break;
                      case "mouseConstraint":
                        Composite.addConstraint(composite, obj.constraint);
                        break;
                    }
                  }
                  Events.trigger(composite, "afterAdd", { object });
                  return composite;
                };
                Composite.remove = function(composite, object, deep) {
                  var objects = [].concat(object);
                  Events.trigger(composite, "beforeRemove", { object });
                  for (var i2 = 0; i2 < objects.length; i2++) {
                    var obj = objects[i2];
                    switch (obj.type) {
                      case "body":
                        Composite.removeBody(composite, obj, deep);
                        break;
                      case "constraint":
                        Composite.removeConstraint(composite, obj, deep);
                        break;
                      case "composite":
                        Composite.removeComposite(composite, obj, deep);
                        break;
                      case "mouseConstraint":
                        Composite.removeConstraint(composite, obj.constraint);
                        break;
                    }
                  }
                  Events.trigger(composite, "afterRemove", { object });
                  return composite;
                };
                Composite.addComposite = function(compositeA, compositeB) {
                  compositeA.composites.push(compositeB);
                  compositeB.parent = compositeA;
                  Composite.setModified(compositeA, true, true, false);
                  return compositeA;
                };
                Composite.removeComposite = function(compositeA, compositeB, deep) {
                  var position = Common.indexOf(compositeA.composites, compositeB);
                  if (position !== -1) {
                    Composite.removeCompositeAt(compositeA, position);
                  }
                  if (deep) {
                    for (var i2 = 0; i2 < compositeA.composites.length; i2++) {
                      Composite.removeComposite(compositeA.composites[i2], compositeB, true);
                    }
                  }
                  return compositeA;
                };
                Composite.removeCompositeAt = function(composite, position) {
                  composite.composites.splice(position, 1);
                  Composite.setModified(composite, true, true, false);
                  return composite;
                };
                Composite.addBody = function(composite, body) {
                  composite.bodies.push(body);
                  Composite.setModified(composite, true, true, false);
                  return composite;
                };
                Composite.removeBody = function(composite, body, deep) {
                  var position = Common.indexOf(composite.bodies, body);
                  if (position !== -1) {
                    Composite.removeBodyAt(composite, position);
                  }
                  if (deep) {
                    for (var i2 = 0; i2 < composite.composites.length; i2++) {
                      Composite.removeBody(composite.composites[i2], body, true);
                    }
                  }
                  return composite;
                };
                Composite.removeBodyAt = function(composite, position) {
                  composite.bodies.splice(position, 1);
                  Composite.setModified(composite, true, true, false);
                  return composite;
                };
                Composite.addConstraint = function(composite, constraint) {
                  composite.constraints.push(constraint);
                  Composite.setModified(composite, true, true, false);
                  return composite;
                };
                Composite.removeConstraint = function(composite, constraint, deep) {
                  var position = Common.indexOf(composite.constraints, constraint);
                  if (position !== -1) {
                    Composite.removeConstraintAt(composite, position);
                  }
                  if (deep) {
                    for (var i2 = 0; i2 < composite.composites.length; i2++) {
                      Composite.removeConstraint(composite.composites[i2], constraint, true);
                    }
                  }
                  return composite;
                };
                Composite.removeConstraintAt = function(composite, position) {
                  composite.constraints.splice(position, 1);
                  Composite.setModified(composite, true, true, false);
                  return composite;
                };
                Composite.clear = function(composite, keepStatic, deep) {
                  if (deep) {
                    for (var i2 = 0; i2 < composite.composites.length; i2++) {
                      Composite.clear(composite.composites[i2], keepStatic, true);
                    }
                  }
                  if (keepStatic) {
                    composite.bodies = composite.bodies.filter(function(body) {
                      return body.isStatic;
                    });
                  } else {
                    composite.bodies.length = 0;
                  }
                  composite.constraints.length = 0;
                  composite.composites.length = 0;
                  Composite.setModified(composite, true, true, false);
                  return composite;
                };
                Composite.allBodies = function(composite) {
                  if (composite.cache && composite.cache.allBodies) {
                    return composite.cache.allBodies;
                  }
                  var bodies = [].concat(composite.bodies);
                  for (var i2 = 0; i2 < composite.composites.length; i2++)
                    bodies = bodies.concat(Composite.allBodies(composite.composites[i2]));
                  if (composite.cache) {
                    composite.cache.allBodies = bodies;
                  }
                  return bodies;
                };
                Composite.allConstraints = function(composite) {
                  if (composite.cache && composite.cache.allConstraints) {
                    return composite.cache.allConstraints;
                  }
                  var constraints = [].concat(composite.constraints);
                  for (var i2 = 0; i2 < composite.composites.length; i2++)
                    constraints = constraints.concat(Composite.allConstraints(composite.composites[i2]));
                  if (composite.cache) {
                    composite.cache.allConstraints = constraints;
                  }
                  return constraints;
                };
                Composite.allComposites = function(composite) {
                  if (composite.cache && composite.cache.allComposites) {
                    return composite.cache.allComposites;
                  }
                  var composites = [].concat(composite.composites);
                  for (var i2 = 0; i2 < composite.composites.length; i2++)
                    composites = composites.concat(Composite.allComposites(composite.composites[i2]));
                  if (composite.cache) {
                    composite.cache.allComposites = composites;
                  }
                  return composites;
                };
                Composite.get = function(composite, id, type) {
                  var objects, object;
                  switch (type) {
                    case "body":
                      objects = Composite.allBodies(composite);
                      break;
                    case "constraint":
                      objects = Composite.allConstraints(composite);
                      break;
                    case "composite":
                      objects = Composite.allComposites(composite).concat(composite);
                      break;
                  }
                  if (!objects)
                    return null;
                  object = objects.filter(function(object2) {
                    return object2.id.toString() === id.toString();
                  });
                  return object.length === 0 ? null : object[0];
                };
                Composite.move = function(compositeA, objects, compositeB) {
                  Composite.remove(compositeA, objects);
                  Composite.add(compositeB, objects);
                  return compositeA;
                };
                Composite.rebase = function(composite) {
                  var objects = Composite.allBodies(composite).concat(Composite.allConstraints(composite)).concat(Composite.allComposites(composite));
                  for (var i2 = 0; i2 < objects.length; i2++) {
                    objects[i2].id = Common.nextId();
                  }
                  return composite;
                };
                Composite.translate = function(composite, translation, recursive) {
                  var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    Body.translate(bodies[i2], translation);
                  }
                  return composite;
                };
                Composite.rotate = function(composite, rotation, point, recursive) {
                  var cos = Math.cos(rotation), sin = Math.sin(rotation), bodies = recursive ? Composite.allBodies(composite) : composite.bodies;
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2], dx = body.position.x - point.x, dy = body.position.y - point.y;
                    Body.setPosition(body, {
                      x: point.x + (dx * cos - dy * sin),
                      y: point.y + (dx * sin + dy * cos)
                    });
                    Body.rotate(body, rotation);
                  }
                  return composite;
                };
                Composite.scale = function(composite, scaleX, scaleY, point, recursive) {
                  var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2], dx = body.position.x - point.x, dy = body.position.y - point.y;
                    Body.setPosition(body, {
                      x: point.x + dx * scaleX,
                      y: point.y + dy * scaleY
                    });
                    Body.scale(body, scaleX, scaleY);
                  }
                  return composite;
                };
                Composite.bounds = function(composite) {
                  var bodies = Composite.allBodies(composite), vertices = [];
                  for (var i2 = 0; i2 < bodies.length; i2 += 1) {
                    var body = bodies[i2];
                    vertices.push(body.bounds.min, body.bounds.max);
                  }
                  return Bounds.create(vertices);
                };
              })();
            },
            /* 7 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Sleeping = {};
              module2.exports = Sleeping;
              var Body = __webpack_require__(4);
              var Events = __webpack_require__(5);
              var Common = __webpack_require__(0);
              (function() {
                Sleeping._motionWakeThreshold = 0.18;
                Sleeping._motionSleepThreshold = 0.08;
                Sleeping._minBias = 0.9;
                Sleeping.update = function(bodies, delta) {
                  var timeScale = delta / Common._baseDelta, motionSleepThreshold = Sleeping._motionSleepThreshold;
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2], speed = Body.getSpeed(body), angularSpeed = Body.getAngularSpeed(body), motion = speed * speed + angularSpeed * angularSpeed;
                    if (body.force.x !== 0 || body.force.y !== 0) {
                      Sleeping.set(body, false);
                      continue;
                    }
                    var minMotion = Math.min(body.motion, motion), maxMotion = Math.max(body.motion, motion);
                    body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;
                    if (body.sleepThreshold > 0 && body.motion < motionSleepThreshold) {
                      body.sleepCounter += 1;
                      if (body.sleepCounter >= body.sleepThreshold / timeScale) {
                        Sleeping.set(body, true);
                      }
                    } else if (body.sleepCounter > 0) {
                      body.sleepCounter -= 1;
                    }
                  }
                };
                Sleeping.afterCollisions = function(pairs) {
                  var motionSleepThreshold = Sleeping._motionSleepThreshold;
                  for (var i2 = 0; i2 < pairs.length; i2++) {
                    var pair = pairs[i2];
                    if (!pair.isActive)
                      continue;
                    var collision = pair.collision, bodyA = collision.bodyA.parent, bodyB = collision.bodyB.parent;
                    if (bodyA.isSleeping && bodyB.isSleeping || bodyA.isStatic || bodyB.isStatic)
                      continue;
                    if (bodyA.isSleeping || bodyB.isSleeping) {
                      var sleepingBody = bodyA.isSleeping && !bodyA.isStatic ? bodyA : bodyB, movingBody = sleepingBody === bodyA ? bodyB : bodyA;
                      if (!sleepingBody.isStatic && movingBody.motion > motionSleepThreshold) {
                        Sleeping.set(sleepingBody, false);
                      }
                    }
                  }
                };
                Sleeping.set = function(body, isSleeping) {
                  var wasSleeping = body.isSleeping;
                  if (isSleeping) {
                    body.isSleeping = true;
                    body.sleepCounter = body.sleepThreshold;
                    body.positionImpulse.x = 0;
                    body.positionImpulse.y = 0;
                    body.positionPrev.x = body.position.x;
                    body.positionPrev.y = body.position.y;
                    body.anglePrev = body.angle;
                    body.speed = 0;
                    body.angularSpeed = 0;
                    body.motion = 0;
                    if (!wasSleeping) {
                      Events.trigger(body, "sleepStart");
                    }
                  } else {
                    body.isSleeping = false;
                    body.sleepCounter = 0;
                    if (wasSleeping) {
                      Events.trigger(body, "sleepEnd");
                    }
                  }
                };
              })();
            },
            /* 8 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Collision = {};
              module2.exports = Collision;
              var Vertices = __webpack_require__(3);
              var Pair = __webpack_require__(9);
              (function() {
                var _supports = [];
                var _overlapAB = {
                  overlap: 0,
                  axis: null
                };
                var _overlapBA = {
                  overlap: 0,
                  axis: null
                };
                Collision.create = function(bodyA, bodyB) {
                  return {
                    pair: null,
                    collided: false,
                    bodyA,
                    bodyB,
                    parentA: bodyA.parent,
                    parentB: bodyB.parent,
                    depth: 0,
                    normal: { x: 0, y: 0 },
                    tangent: { x: 0, y: 0 },
                    penetration: { x: 0, y: 0 },
                    supports: []
                  };
                };
                Collision.collides = function(bodyA, bodyB, pairs) {
                  Collision._overlapAxes(_overlapAB, bodyA.vertices, bodyB.vertices, bodyA.axes);
                  if (_overlapAB.overlap <= 0) {
                    return null;
                  }
                  Collision._overlapAxes(_overlapBA, bodyB.vertices, bodyA.vertices, bodyB.axes);
                  if (_overlapBA.overlap <= 0) {
                    return null;
                  }
                  var pair = pairs && pairs.table[Pair.id(bodyA, bodyB)], collision;
                  if (!pair) {
                    collision = Collision.create(bodyA, bodyB);
                    collision.collided = true;
                    collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;
                    collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;
                    collision.parentA = collision.bodyA.parent;
                    collision.parentB = collision.bodyB.parent;
                  } else {
                    collision = pair.collision;
                  }
                  bodyA = collision.bodyA;
                  bodyB = collision.bodyB;
                  var minOverlap;
                  if (_overlapAB.overlap < _overlapBA.overlap) {
                    minOverlap = _overlapAB;
                  } else {
                    minOverlap = _overlapBA;
                  }
                  var normal = collision.normal, supports = collision.supports, minAxis = minOverlap.axis, minAxisX = minAxis.x, minAxisY = minAxis.y;
                  if (minAxisX * (bodyB.position.x - bodyA.position.x) + minAxisY * (bodyB.position.y - bodyA.position.y) < 0) {
                    normal.x = minAxisX;
                    normal.y = minAxisY;
                  } else {
                    normal.x = -minAxisX;
                    normal.y = -minAxisY;
                  }
                  collision.tangent.x = -normal.y;
                  collision.tangent.y = normal.x;
                  collision.depth = minOverlap.overlap;
                  collision.penetration.x = normal.x * collision.depth;
                  collision.penetration.y = normal.y * collision.depth;
                  var supportsB = Collision._findSupports(bodyA, bodyB, normal, 1), supportCount = 0;
                  if (Vertices.contains(bodyA.vertices, supportsB[0])) {
                    supports[supportCount++] = supportsB[0];
                  }
                  if (Vertices.contains(bodyA.vertices, supportsB[1])) {
                    supports[supportCount++] = supportsB[1];
                  }
                  if (supportCount < 2) {
                    var supportsA = Collision._findSupports(bodyB, bodyA, normal, -1);
                    if (Vertices.contains(bodyB.vertices, supportsA[0])) {
                      supports[supportCount++] = supportsA[0];
                    }
                    if (supportCount < 2 && Vertices.contains(bodyB.vertices, supportsA[1])) {
                      supports[supportCount++] = supportsA[1];
                    }
                  }
                  if (supportCount === 0) {
                    supports[supportCount++] = supportsB[0];
                  }
                  supports.length = supportCount;
                  return collision;
                };
                Collision._overlapAxes = function(result, verticesA, verticesB, axes) {
                  var verticesALength = verticesA.length, verticesBLength = verticesB.length, verticesAX = verticesA[0].x, verticesAY = verticesA[0].y, verticesBX = verticesB[0].x, verticesBY = verticesB[0].y, axesLength = axes.length, overlapMin = Number.MAX_VALUE, overlapAxisNumber = 0, overlap, overlapAB, overlapBA, dot, i2, j;
                  for (i2 = 0; i2 < axesLength; i2++) {
                    var axis = axes[i2], axisX = axis.x, axisY = axis.y, minA = verticesAX * axisX + verticesAY * axisY, minB = verticesBX * axisX + verticesBY * axisY, maxA = minA, maxB = minB;
                    for (j = 1; j < verticesALength; j += 1) {
                      dot = verticesA[j].x * axisX + verticesA[j].y * axisY;
                      if (dot > maxA) {
                        maxA = dot;
                      } else if (dot < minA) {
                        minA = dot;
                      }
                    }
                    for (j = 1; j < verticesBLength; j += 1) {
                      dot = verticesB[j].x * axisX + verticesB[j].y * axisY;
                      if (dot > maxB) {
                        maxB = dot;
                      } else if (dot < minB) {
                        minB = dot;
                      }
                    }
                    overlapAB = maxA - minB;
                    overlapBA = maxB - minA;
                    overlap = overlapAB < overlapBA ? overlapAB : overlapBA;
                    if (overlap < overlapMin) {
                      overlapMin = overlap;
                      overlapAxisNumber = i2;
                      if (overlap <= 0) {
                        break;
                      }
                    }
                  }
                  result.axis = axes[overlapAxisNumber];
                  result.overlap = overlapMin;
                };
                Collision._projectToAxis = function(projection, vertices, axis) {
                  var min = vertices[0].x * axis.x + vertices[0].y * axis.y, max2 = min;
                  for (var i2 = 1; i2 < vertices.length; i2 += 1) {
                    var dot = vertices[i2].x * axis.x + vertices[i2].y * axis.y;
                    if (dot > max2) {
                      max2 = dot;
                    } else if (dot < min) {
                      min = dot;
                    }
                  }
                  projection.min = min;
                  projection.max = max2;
                };
                Collision._findSupports = function(bodyA, bodyB, normal, direction) {
                  var vertices = bodyB.vertices, verticesLength = vertices.length, bodyAPositionX = bodyA.position.x, bodyAPositionY = bodyA.position.y, normalX = normal.x * direction, normalY = normal.y * direction, nearestDistance = Number.MAX_VALUE, vertexA, vertexB, vertexC, distance, j;
                  for (j = 0; j < verticesLength; j += 1) {
                    vertexB = vertices[j];
                    distance = normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y);
                    if (distance < nearestDistance) {
                      nearestDistance = distance;
                      vertexA = vertexB;
                    }
                  }
                  vertexC = vertices[(verticesLength + vertexA.index - 1) % verticesLength];
                  nearestDistance = normalX * (bodyAPositionX - vertexC.x) + normalY * (bodyAPositionY - vertexC.y);
                  vertexB = vertices[(vertexA.index + 1) % verticesLength];
                  if (normalX * (bodyAPositionX - vertexB.x) + normalY * (bodyAPositionY - vertexB.y) < nearestDistance) {
                    _supports[0] = vertexA;
                    _supports[1] = vertexB;
                    return _supports;
                  }
                  _supports[0] = vertexA;
                  _supports[1] = vertexC;
                  return _supports;
                };
              })();
            },
            /* 9 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Pair = {};
              module2.exports = Pair;
              var Contact = __webpack_require__(16);
              (function() {
                Pair.create = function(collision, timestamp) {
                  var bodyA = collision.bodyA, bodyB = collision.bodyB;
                  var pair = {
                    id: Pair.id(bodyA, bodyB),
                    bodyA,
                    bodyB,
                    collision,
                    contacts: [],
                    activeContacts: [],
                    separation: 0,
                    isActive: true,
                    confirmedActive: true,
                    isSensor: bodyA.isSensor || bodyB.isSensor,
                    timeCreated: timestamp,
                    timeUpdated: timestamp,
                    inverseMass: 0,
                    friction: 0,
                    frictionStatic: 0,
                    restitution: 0,
                    slop: 0
                  };
                  Pair.update(pair, collision, timestamp);
                  return pair;
                };
                Pair.update = function(pair, collision, timestamp) {
                  var contacts = pair.contacts, supports = collision.supports, activeContacts = pair.activeContacts, parentA = collision.parentA, parentB = collision.parentB, parentAVerticesLength = parentA.vertices.length;
                  pair.isActive = true;
                  pair.timeUpdated = timestamp;
                  pair.collision = collision;
                  pair.separation = collision.depth;
                  pair.inverseMass = parentA.inverseMass + parentB.inverseMass;
                  pair.friction = parentA.friction < parentB.friction ? parentA.friction : parentB.friction;
                  pair.frictionStatic = parentA.frictionStatic > parentB.frictionStatic ? parentA.frictionStatic : parentB.frictionStatic;
                  pair.restitution = parentA.restitution > parentB.restitution ? parentA.restitution : parentB.restitution;
                  pair.slop = parentA.slop > parentB.slop ? parentA.slop : parentB.slop;
                  collision.pair = pair;
                  activeContacts.length = 0;
                  for (var i2 = 0; i2 < supports.length; i2++) {
                    var support2 = supports[i2], contactId = support2.body === parentA ? support2.index : parentAVerticesLength + support2.index, contact2 = contacts[contactId];
                    if (contact2) {
                      activeContacts.push(contact2);
                    } else {
                      activeContacts.push(contacts[contactId] = Contact.create(support2));
                    }
                  }
                };
                Pair.setActive = function(pair, isActive, timestamp) {
                  if (isActive) {
                    pair.isActive = true;
                    pair.timeUpdated = timestamp;
                  } else {
                    pair.isActive = false;
                    pair.activeContacts.length = 0;
                  }
                };
                Pair.id = function(bodyA, bodyB) {
                  if (bodyA.id < bodyB.id) {
                    return "A" + bodyA.id + "B" + bodyB.id;
                  } else {
                    return "A" + bodyB.id + "B" + bodyA.id;
                  }
                };
              })();
            },
            /* 10 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Constraint = {};
              module2.exports = Constraint;
              var Vertices = __webpack_require__(3);
              var Vector = __webpack_require__(2);
              var Sleeping = __webpack_require__(7);
              var Bounds = __webpack_require__(1);
              var Axes = __webpack_require__(11);
              var Common = __webpack_require__(0);
              (function() {
                Constraint._warming = 0.4;
                Constraint._torqueDampen = 1;
                Constraint._minLength = 1e-6;
                Constraint.create = function(options) {
                  var constraint = options;
                  if (constraint.bodyA && !constraint.pointA)
                    constraint.pointA = { x: 0, y: 0 };
                  if (constraint.bodyB && !constraint.pointB)
                    constraint.pointB = { x: 0, y: 0 };
                  var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA, initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB, length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));
                  constraint.length = typeof constraint.length !== "undefined" ? constraint.length : length;
                  constraint.id = constraint.id || Common.nextId();
                  constraint.label = constraint.label || "Constraint";
                  constraint.type = "constraint";
                  constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);
                  constraint.damping = constraint.damping || 0;
                  constraint.angularStiffness = constraint.angularStiffness || 0;
                  constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;
                  constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;
                  constraint.plugin = {};
                  var render3 = {
                    visible: true,
                    lineWidth: 2,
                    strokeStyle: "#ffffff",
                    type: "line",
                    anchors: true
                  };
                  if (constraint.length === 0 && constraint.stiffness > 0.1) {
                    render3.type = "pin";
                    render3.anchors = false;
                  } else if (constraint.stiffness < 0.9) {
                    render3.type = "spring";
                  }
                  constraint.render = Common.extend(render3, constraint.render);
                  return constraint;
                };
                Constraint.preSolveAll = function(bodies) {
                  for (var i2 = 0; i2 < bodies.length; i2 += 1) {
                    var body = bodies[i2], impulse = body.constraintImpulse;
                    if (body.isStatic || impulse.x === 0 && impulse.y === 0 && impulse.angle === 0) {
                      continue;
                    }
                    body.position.x += impulse.x;
                    body.position.y += impulse.y;
                    body.angle += impulse.angle;
                  }
                };
                Constraint.solveAll = function(constraints, delta) {
                  var timeScale = Common.clamp(delta / Common._baseDelta, 0, 1);
                  for (var i2 = 0; i2 < constraints.length; i2 += 1) {
                    var constraint = constraints[i2], fixedA = !constraint.bodyA || constraint.bodyA && constraint.bodyA.isStatic, fixedB = !constraint.bodyB || constraint.bodyB && constraint.bodyB.isStatic;
                    if (fixedA || fixedB) {
                      Constraint.solve(constraints[i2], timeScale);
                    }
                  }
                  for (i2 = 0; i2 < constraints.length; i2 += 1) {
                    constraint = constraints[i2];
                    fixedA = !constraint.bodyA || constraint.bodyA && constraint.bodyA.isStatic;
                    fixedB = !constraint.bodyB || constraint.bodyB && constraint.bodyB.isStatic;
                    if (!fixedA && !fixedB) {
                      Constraint.solve(constraints[i2], timeScale);
                    }
                  }
                };
                Constraint.solve = function(constraint, timeScale) {
                  var bodyA = constraint.bodyA, bodyB = constraint.bodyB, pointA = constraint.pointA, pointB = constraint.pointB;
                  if (!bodyA && !bodyB)
                    return;
                  if (bodyA && !bodyA.isStatic) {
                    Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);
                    constraint.angleA = bodyA.angle;
                  }
                  if (bodyB && !bodyB.isStatic) {
                    Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);
                    constraint.angleB = bodyB.angle;
                  }
                  var pointAWorld = pointA, pointBWorld = pointB;
                  if (bodyA)
                    pointAWorld = Vector.add(bodyA.position, pointA);
                  if (bodyB)
                    pointBWorld = Vector.add(bodyB.position, pointB);
                  if (!pointAWorld || !pointBWorld)
                    return;
                  var delta = Vector.sub(pointAWorld, pointBWorld), currentLength = Vector.magnitude(delta);
                  if (currentLength < Constraint._minLength) {
                    currentLength = Constraint._minLength;
                  }
                  var difference = (currentLength - constraint.length) / currentLength, isRigid = constraint.stiffness >= 1 || constraint.length === 0, stiffness = isRigid ? constraint.stiffness * timeScale : constraint.stiffness * timeScale * timeScale, damping = constraint.damping * timeScale, force = Vector.mult(delta, difference * stiffness), massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0), inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0), resistanceTotal = massTotal + inertiaTotal, torque, share, normal, normalVelocity, relativeVelocity;
                  if (damping > 0) {
                    var zero = Vector.create();
                    normal = Vector.div(delta, currentLength);
                    relativeVelocity = Vector.sub(
                      bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,
                      bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero
                    );
                    normalVelocity = Vector.dot(normal, relativeVelocity);
                  }
                  if (bodyA && !bodyA.isStatic) {
                    share = bodyA.inverseMass / massTotal;
                    bodyA.constraintImpulse.x -= force.x * share;
                    bodyA.constraintImpulse.y -= force.y * share;
                    bodyA.position.x -= force.x * share;
                    bodyA.position.y -= force.y * share;
                    if (damping > 0) {
                      bodyA.positionPrev.x -= damping * normal.x * normalVelocity * share;
                      bodyA.positionPrev.y -= damping * normal.y * normalVelocity * share;
                    }
                    torque = Vector.cross(pointA, force) / resistanceTotal * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);
                    bodyA.constraintImpulse.angle -= torque;
                    bodyA.angle -= torque;
                  }
                  if (bodyB && !bodyB.isStatic) {
                    share = bodyB.inverseMass / massTotal;
                    bodyB.constraintImpulse.x += force.x * share;
                    bodyB.constraintImpulse.y += force.y * share;
                    bodyB.position.x += force.x * share;
                    bodyB.position.y += force.y * share;
                    if (damping > 0) {
                      bodyB.positionPrev.x += damping * normal.x * normalVelocity * share;
                      bodyB.positionPrev.y += damping * normal.y * normalVelocity * share;
                    }
                    torque = Vector.cross(pointB, force) / resistanceTotal * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);
                    bodyB.constraintImpulse.angle += torque;
                    bodyB.angle += torque;
                  }
                };
                Constraint.postSolveAll = function(bodies) {
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2], impulse = body.constraintImpulse;
                    if (body.isStatic || impulse.x === 0 && impulse.y === 0 && impulse.angle === 0) {
                      continue;
                    }
                    Sleeping.set(body, false);
                    for (var j = 0; j < body.parts.length; j++) {
                      var part = body.parts[j];
                      Vertices.translate(part.vertices, impulse);
                      if (j > 0) {
                        part.position.x += impulse.x;
                        part.position.y += impulse.y;
                      }
                      if (impulse.angle !== 0) {
                        Vertices.rotate(part.vertices, impulse.angle, body.position);
                        Axes.rotate(part.axes, impulse.angle);
                        if (j > 0) {
                          Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);
                        }
                      }
                      Bounds.update(part.bounds, part.vertices, body.velocity);
                    }
                    impulse.angle *= Constraint._warming;
                    impulse.x *= Constraint._warming;
                    impulse.y *= Constraint._warming;
                  }
                };
                Constraint.pointAWorld = function(constraint) {
                  return {
                    x: (constraint.bodyA ? constraint.bodyA.position.x : 0) + (constraint.pointA ? constraint.pointA.x : 0),
                    y: (constraint.bodyA ? constraint.bodyA.position.y : 0) + (constraint.pointA ? constraint.pointA.y : 0)
                  };
                };
                Constraint.pointBWorld = function(constraint) {
                  return {
                    x: (constraint.bodyB ? constraint.bodyB.position.x : 0) + (constraint.pointB ? constraint.pointB.x : 0),
                    y: (constraint.bodyB ? constraint.bodyB.position.y : 0) + (constraint.pointB ? constraint.pointB.y : 0)
                  };
                };
              })();
            },
            /* 11 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Axes = {};
              module2.exports = Axes;
              var Vector = __webpack_require__(2);
              var Common = __webpack_require__(0);
              (function() {
                Axes.fromVertices = function(vertices) {
                  var axes = {};
                  for (var i2 = 0; i2 < vertices.length; i2++) {
                    var j = (i2 + 1) % vertices.length, normal = Vector.normalise({
                      x: vertices[j].y - vertices[i2].y,
                      y: vertices[i2].x - vertices[j].x
                    }), gradient = normal.y === 0 ? Infinity : normal.x / normal.y;
                    gradient = gradient.toFixed(3).toString();
                    axes[gradient] = normal;
                  }
                  return Common.values(axes);
                };
                Axes.rotate = function(axes, angle) {
                  if (angle === 0)
                    return;
                  var cos = Math.cos(angle), sin = Math.sin(angle);
                  for (var i2 = 0; i2 < axes.length; i2++) {
                    var axis = axes[i2], xx;
                    xx = axis.x * cos - axis.y * sin;
                    axis.y = axis.x * sin + axis.y * cos;
                    axis.x = xx;
                  }
                };
              })();
            },
            /* 12 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Bodies = {};
              module2.exports = Bodies;
              var Vertices = __webpack_require__(3);
              var Common = __webpack_require__(0);
              var Body = __webpack_require__(4);
              var Bounds = __webpack_require__(1);
              var Vector = __webpack_require__(2);
              (function() {
                Bodies.rectangle = function(x, y, width2, height2, options) {
                  options = options || {};
                  var rectangle = {
                    label: "Rectangle Body",
                    position: { x, y },
                    vertices: Vertices.fromPath("L 0 0 L " + width2 + " 0 L " + width2 + " " + height2 + " L 0 " + height2)
                  };
                  if (options.chamfer) {
                    var chamfer = options.chamfer;
                    rectangle.vertices = Vertices.chamfer(
                      rectangle.vertices,
                      chamfer.radius,
                      chamfer.quality,
                      chamfer.qualityMin,
                      chamfer.qualityMax
                    );
                    delete options.chamfer;
                  }
                  return Body.create(Common.extend({}, rectangle, options));
                };
                Bodies.trapezoid = function(x, y, width2, height2, slope, options) {
                  options = options || {};
                  slope *= 0.5;
                  var roof = (1 - slope * 2) * width2;
                  var x1 = width2 * slope, x2 = x1 + roof, x3 = x2 + x1, verticesPath;
                  if (slope < 0.5) {
                    verticesPath = "L 0 0 L " + x1 + " " + -height2 + " L " + x2 + " " + -height2 + " L " + x3 + " 0";
                  } else {
                    verticesPath = "L 0 0 L " + x2 + " " + -height2 + " L " + x3 + " 0";
                  }
                  var trapezoid = {
                    label: "Trapezoid Body",
                    position: { x, y },
                    vertices: Vertices.fromPath(verticesPath)
                  };
                  if (options.chamfer) {
                    var chamfer = options.chamfer;
                    trapezoid.vertices = Vertices.chamfer(
                      trapezoid.vertices,
                      chamfer.radius,
                      chamfer.quality,
                      chamfer.qualityMin,
                      chamfer.qualityMax
                    );
                    delete options.chamfer;
                  }
                  return Body.create(Common.extend({}, trapezoid, options));
                };
                Bodies.circle = function(x, y, radius, options, maxSides) {
                  options = options || {};
                  var circle = {
                    label: "Circle Body",
                    circleRadius: radius
                  };
                  maxSides = maxSides || 25;
                  var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));
                  if (sides % 2 === 1)
                    sides += 1;
                  return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));
                };
                Bodies.polygon = function(x, y, sides, radius, options) {
                  options = options || {};
                  if (sides < 3)
                    return Bodies.circle(x, y, radius, options);
                  var theta = 2 * Math.PI / sides, path = "", offset = theta * 0.5;
                  for (var i2 = 0; i2 < sides; i2 += 1) {
                    var angle = offset + i2 * theta, xx = Math.cos(angle) * radius, yy = Math.sin(angle) * radius;
                    path += "L " + xx.toFixed(3) + " " + yy.toFixed(3) + " ";
                  }
                  var polygon = {
                    label: "Polygon Body",
                    position: { x, y },
                    vertices: Vertices.fromPath(path)
                  };
                  if (options.chamfer) {
                    var chamfer = options.chamfer;
                    polygon.vertices = Vertices.chamfer(
                      polygon.vertices,
                      chamfer.radius,
                      chamfer.quality,
                      chamfer.qualityMin,
                      chamfer.qualityMax
                    );
                    delete options.chamfer;
                  }
                  return Body.create(Common.extend({}, polygon, options));
                };
                Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea, removeDuplicatePoints) {
                  var decomp = Common.getDecomp(), canDecomp, body, parts, isConvex, isConcave, vertices, i2, j, k, v, z;
                  canDecomp = Boolean(decomp && decomp.quickDecomp);
                  options = options || {};
                  parts = [];
                  flagInternal = typeof flagInternal !== "undefined" ? flagInternal : false;
                  removeCollinear = typeof removeCollinear !== "undefined" ? removeCollinear : 0.01;
                  minimumArea = typeof minimumArea !== "undefined" ? minimumArea : 10;
                  removeDuplicatePoints = typeof removeDuplicatePoints !== "undefined" ? removeDuplicatePoints : 0.01;
                  if (!Common.isArray(vertexSets[0])) {
                    vertexSets = [vertexSets];
                  }
                  for (v = 0; v < vertexSets.length; v += 1) {
                    vertices = vertexSets[v];
                    isConvex = Vertices.isConvex(vertices);
                    isConcave = !isConvex;
                    if (isConcave && !canDecomp) {
                      Common.warnOnce(
                        "Bodies.fromVertices: Install the 'poly-decomp' library and use Common.setDecomp or provide 'decomp' as a global to decompose concave vertices."
                      );
                    }
                    if (isConvex || !canDecomp) {
                      if (isConvex) {
                        vertices = Vertices.clockwiseSort(vertices);
                      } else {
                        vertices = Vertices.hull(vertices);
                      }
                      parts.push({
                        position: { x, y },
                        vertices
                      });
                    } else {
                      var concave = vertices.map(function(vertex) {
                        return [vertex.x, vertex.y];
                      });
                      decomp.makeCCW(concave);
                      if (removeCollinear !== false)
                        decomp.removeCollinearPoints(concave, removeCollinear);
                      if (removeDuplicatePoints !== false && decomp.removeDuplicatePoints)
                        decomp.removeDuplicatePoints(concave, removeDuplicatePoints);
                      var decomposed = decomp.quickDecomp(concave);
                      for (i2 = 0; i2 < decomposed.length; i2++) {
                        var chunk = decomposed[i2];
                        var chunkVertices = chunk.map(function(vertices2) {
                          return {
                            x: vertices2[0],
                            y: vertices2[1]
                          };
                        });
                        if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)
                          continue;
                        parts.push({
                          position: Vertices.centre(chunkVertices),
                          vertices: chunkVertices
                        });
                      }
                    }
                  }
                  for (i2 = 0; i2 < parts.length; i2++) {
                    parts[i2] = Body.create(Common.extend(parts[i2], options));
                  }
                  if (flagInternal) {
                    var coincident_max_dist = 5;
                    for (i2 = 0; i2 < parts.length; i2++) {
                      var partA = parts[i2];
                      for (j = i2 + 1; j < parts.length; j++) {
                        var partB = parts[j];
                        if (Bounds.overlaps(partA.bounds, partB.bounds)) {
                          var pav = partA.vertices, pbv = partB.vertices;
                          for (k = 0; k < partA.vertices.length; k++) {
                            for (z = 0; z < partB.vertices.length; z++) {
                              var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])), db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));
                              if (da < coincident_max_dist && db < coincident_max_dist) {
                                pav[k].isInternal = true;
                                pbv[z].isInternal = true;
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                  if (parts.length > 1) {
                    body = Body.create(Common.extend({ parts: parts.slice(0) }, options));
                    Body.setPosition(body, { x, y });
                    return body;
                  } else {
                    return parts[0];
                  }
                };
              })();
            },
            /* 13 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Detector = {};
              module2.exports = Detector;
              var Common = __webpack_require__(0);
              var Collision = __webpack_require__(8);
              (function() {
                Detector.create = function(options) {
                  var defaults3 = {
                    bodies: [],
                    pairs: null
                  };
                  return Common.extend(defaults3, options);
                };
                Detector.setBodies = function(detector, bodies) {
                  detector.bodies = bodies.slice(0);
                };
                Detector.clear = function(detector) {
                  detector.bodies = [];
                };
                Detector.collisions = function(detector) {
                  var collisions = [], pairs = detector.pairs, bodies = detector.bodies, bodiesLength = bodies.length, canCollide = Detector.canCollide, collides = Collision.collides, i2, j;
                  bodies.sort(Detector._compareBoundsX);
                  for (i2 = 0; i2 < bodiesLength; i2++) {
                    var bodyA = bodies[i2], boundsA = bodyA.bounds, boundXMax = bodyA.bounds.max.x, boundYMax = bodyA.bounds.max.y, boundYMin = bodyA.bounds.min.y, bodyAStatic = bodyA.isStatic || bodyA.isSleeping, partsALength = bodyA.parts.length, partsASingle = partsALength === 1;
                    for (j = i2 + 1; j < bodiesLength; j++) {
                      var bodyB = bodies[j], boundsB = bodyB.bounds;
                      if (boundsB.min.x > boundXMax) {
                        break;
                      }
                      if (boundYMax < boundsB.min.y || boundYMin > boundsB.max.y) {
                        continue;
                      }
                      if (bodyAStatic && (bodyB.isStatic || bodyB.isSleeping)) {
                        continue;
                      }
                      if (!canCollide(bodyA.collisionFilter, bodyB.collisionFilter)) {
                        continue;
                      }
                      var partsBLength = bodyB.parts.length;
                      if (partsASingle && partsBLength === 1) {
                        var collision = collides(bodyA, bodyB, pairs);
                        if (collision) {
                          collisions.push(collision);
                        }
                      } else {
                        var partsAStart = partsALength > 1 ? 1 : 0, partsBStart = partsBLength > 1 ? 1 : 0;
                        for (var k = partsAStart; k < partsALength; k++) {
                          var partA = bodyA.parts[k], boundsA = partA.bounds;
                          for (var z = partsBStart; z < partsBLength; z++) {
                            var partB = bodyB.parts[z], boundsB = partB.bounds;
                            if (boundsA.min.x > boundsB.max.x || boundsA.max.x < boundsB.min.x || boundsA.max.y < boundsB.min.y || boundsA.min.y > boundsB.max.y) {
                              continue;
                            }
                            var collision = collides(partA, partB, pairs);
                            if (collision) {
                              collisions.push(collision);
                            }
                          }
                        }
                      }
                    }
                  }
                  return collisions;
                };
                Detector.canCollide = function(filterA, filterB) {
                  if (filterA.group === filterB.group && filterA.group !== 0)
                    return filterA.group > 0;
                  return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;
                };
                Detector._compareBoundsX = function(bodyA, bodyB) {
                  return bodyA.bounds.min.x - bodyB.bounds.min.x;
                };
              })();
            },
            /* 14 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Mouse = {};
              module2.exports = Mouse;
              var Common = __webpack_require__(0);
              (function() {
                Mouse.create = function(element) {
                  var mouse = {};
                  if (!element) {
                    Common.log("Mouse.create: element was undefined, defaulting to document.body", "warn");
                  }
                  mouse.element = element || document.body;
                  mouse.absolute = { x: 0, y: 0 };
                  mouse.position = { x: 0, y: 0 };
                  mouse.mousedownPosition = { x: 0, y: 0 };
                  mouse.mouseupPosition = { x: 0, y: 0 };
                  mouse.offset = { x: 0, y: 0 };
                  mouse.scale = { x: 1, y: 1 };
                  mouse.wheelDelta = 0;
                  mouse.button = -1;
                  mouse.pixelRatio = parseInt(mouse.element.getAttribute("data-pixel-ratio"), 10) || 1;
                  mouse.sourceEvents = {
                    mousemove: null,
                    mousedown: null,
                    mouseup: null,
                    mousewheel: null
                  };
                  mouse.mousemove = function(event2) {
                    var position = Mouse._getRelativeMousePosition(event2, mouse.element, mouse.pixelRatio), touches = event2.changedTouches;
                    if (touches) {
                      mouse.button = 0;
                      event2.preventDefault();
                    }
                    mouse.absolute.x = position.x;
                    mouse.absolute.y = position.y;
                    mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;
                    mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;
                    mouse.sourceEvents.mousemove = event2;
                  };
                  mouse.mousedown = function(event2) {
                    var position = Mouse._getRelativeMousePosition(event2, mouse.element, mouse.pixelRatio), touches = event2.changedTouches;
                    if (touches) {
                      mouse.button = 0;
                      event2.preventDefault();
                    } else {
                      mouse.button = event2.button;
                    }
                    mouse.absolute.x = position.x;
                    mouse.absolute.y = position.y;
                    mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;
                    mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;
                    mouse.mousedownPosition.x = mouse.position.x;
                    mouse.mousedownPosition.y = mouse.position.y;
                    mouse.sourceEvents.mousedown = event2;
                  };
                  mouse.mouseup = function(event2) {
                    var position = Mouse._getRelativeMousePosition(event2, mouse.element, mouse.pixelRatio), touches = event2.changedTouches;
                    if (touches) {
                      event2.preventDefault();
                    }
                    mouse.button = -1;
                    mouse.absolute.x = position.x;
                    mouse.absolute.y = position.y;
                    mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;
                    mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;
                    mouse.mouseupPosition.x = mouse.position.x;
                    mouse.mouseupPosition.y = mouse.position.y;
                    mouse.sourceEvents.mouseup = event2;
                  };
                  mouse.mousewheel = function(event2) {
                    mouse.wheelDelta = Math.max(-1, Math.min(1, event2.wheelDelta || -event2.detail));
                    event2.preventDefault();
                  };
                  Mouse.setElement(mouse, mouse.element);
                  return mouse;
                };
                Mouse.setElement = function(mouse, element) {
                  mouse.element = element;
                  element.addEventListener("mousemove", mouse.mousemove);
                  element.addEventListener("mousedown", mouse.mousedown);
                  element.addEventListener("mouseup", mouse.mouseup);
                  element.addEventListener("mousewheel", mouse.mousewheel);
                  element.addEventListener("DOMMouseScroll", mouse.mousewheel);
                  element.addEventListener("touchmove", mouse.mousemove);
                  element.addEventListener("touchstart", mouse.mousedown);
                  element.addEventListener("touchend", mouse.mouseup);
                };
                Mouse.clearSourceEvents = function(mouse) {
                  mouse.sourceEvents.mousemove = null;
                  mouse.sourceEvents.mousedown = null;
                  mouse.sourceEvents.mouseup = null;
                  mouse.sourceEvents.mousewheel = null;
                  mouse.wheelDelta = 0;
                };
                Mouse.setOffset = function(mouse, offset) {
                  mouse.offset.x = offset.x;
                  mouse.offset.y = offset.y;
                  mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;
                  mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;
                };
                Mouse.setScale = function(mouse, scale) {
                  mouse.scale.x = scale.x;
                  mouse.scale.y = scale.y;
                  mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;
                  mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;
                };
                Mouse._getRelativeMousePosition = function(event2, element, pixelRatio) {
                  var elementBounds = element.getBoundingClientRect(), rootNode = document.documentElement || document.body.parentNode || document.body, scrollX = window.pageXOffset !== void 0 ? window.pageXOffset : rootNode.scrollLeft, scrollY = window.pageYOffset !== void 0 ? window.pageYOffset : rootNode.scrollTop, touches = event2.changedTouches, x, y;
                  if (touches) {
                    x = touches[0].pageX - elementBounds.left - scrollX;
                    y = touches[0].pageY - elementBounds.top - scrollY;
                  } else {
                    x = event2.pageX - elementBounds.left - scrollX;
                    y = event2.pageY - elementBounds.top - scrollY;
                  }
                  return {
                    x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),
                    y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)
                  };
                };
              })();
            },
            /* 15 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Plugin = {};
              module2.exports = Plugin;
              var Common = __webpack_require__(0);
              (function() {
                Plugin._registry = {};
                Plugin.register = function(plugin) {
                  if (!Plugin.isPlugin(plugin)) {
                    Common.warn("Plugin.register:", Plugin.toString(plugin), "does not implement all required fields.");
                  }
                  if (plugin.name in Plugin._registry) {
                    var registered = Plugin._registry[plugin.name], pluginVersion = Plugin.versionParse(plugin.version).number, registeredVersion = Plugin.versionParse(registered.version).number;
                    if (pluginVersion > registeredVersion) {
                      Common.warn("Plugin.register:", Plugin.toString(registered), "was upgraded to", Plugin.toString(plugin));
                      Plugin._registry[plugin.name] = plugin;
                    } else if (pluginVersion < registeredVersion) {
                      Common.warn("Plugin.register:", Plugin.toString(registered), "can not be downgraded to", Plugin.toString(plugin));
                    } else if (plugin !== registered) {
                      Common.warn("Plugin.register:", Plugin.toString(plugin), "is already registered to different plugin object");
                    }
                  } else {
                    Plugin._registry[plugin.name] = plugin;
                  }
                  return plugin;
                };
                Plugin.resolve = function(dependency) {
                  return Plugin._registry[Plugin.dependencyParse(dependency).name];
                };
                Plugin.toString = function(plugin) {
                  return typeof plugin === "string" ? plugin : (plugin.name || "anonymous") + "@" + (plugin.version || plugin.range || "0.0.0");
                };
                Plugin.isPlugin = function(obj) {
                  return obj && obj.name && obj.version && obj.install;
                };
                Plugin.isUsed = function(module3, name) {
                  return module3.used.indexOf(name) > -1;
                };
                Plugin.isFor = function(plugin, module3) {
                  var parsed = plugin.for && Plugin.dependencyParse(plugin.for);
                  return !plugin.for || module3.name === parsed.name && Plugin.versionSatisfies(module3.version, parsed.range);
                };
                Plugin.use = function(module3, plugins) {
                  module3.uses = (module3.uses || []).concat(plugins || []);
                  if (module3.uses.length === 0) {
                    Common.warn("Plugin.use:", Plugin.toString(module3), "does not specify any dependencies to install.");
                    return;
                  }
                  var dependencies = Plugin.dependencies(module3), sortedDependencies = Common.topologicalSort(dependencies), status = [];
                  for (var i2 = 0; i2 < sortedDependencies.length; i2 += 1) {
                    if (sortedDependencies[i2] === module3.name) {
                      continue;
                    }
                    var plugin = Plugin.resolve(sortedDependencies[i2]);
                    if (!plugin) {
                      status.push("\u274C " + sortedDependencies[i2]);
                      continue;
                    }
                    if (Plugin.isUsed(module3, plugin.name)) {
                      continue;
                    }
                    if (!Plugin.isFor(plugin, module3)) {
                      Common.warn("Plugin.use:", Plugin.toString(plugin), "is for", plugin.for, "but installed on", Plugin.toString(module3) + ".");
                      plugin._warned = true;
                    }
                    if (plugin.install) {
                      plugin.install(module3);
                    } else {
                      Common.warn("Plugin.use:", Plugin.toString(plugin), "does not specify an install function.");
                      plugin._warned = true;
                    }
                    if (plugin._warned) {
                      status.push("\u{1F536} " + Plugin.toString(plugin));
                      delete plugin._warned;
                    } else {
                      status.push("\u2705 " + Plugin.toString(plugin));
                    }
                    module3.used.push(plugin.name);
                  }
                  if (status.length > 0) {
                    Common.info(status.join("  "));
                  }
                };
                Plugin.dependencies = function(module3, tracked) {
                  var parsedBase = Plugin.dependencyParse(module3), name = parsedBase.name;
                  tracked = tracked || {};
                  if (name in tracked) {
                    return;
                  }
                  module3 = Plugin.resolve(module3) || module3;
                  tracked[name] = Common.map(module3.uses || [], function(dependency) {
                    if (Plugin.isPlugin(dependency)) {
                      Plugin.register(dependency);
                    }
                    var parsed = Plugin.dependencyParse(dependency), resolved = Plugin.resolve(dependency);
                    if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {
                      Common.warn(
                        "Plugin.dependencies:",
                        Plugin.toString(resolved),
                        "does not satisfy",
                        Plugin.toString(parsed),
                        "used by",
                        Plugin.toString(parsedBase) + "."
                      );
                      resolved._warned = true;
                      module3._warned = true;
                    } else if (!resolved) {
                      Common.warn(
                        "Plugin.dependencies:",
                        Plugin.toString(dependency),
                        "used by",
                        Plugin.toString(parsedBase),
                        "could not be resolved."
                      );
                      module3._warned = true;
                    }
                    return parsed.name;
                  });
                  for (var i2 = 0; i2 < tracked[name].length; i2 += 1) {
                    Plugin.dependencies(tracked[name][i2], tracked);
                  }
                  return tracked;
                };
                Plugin.dependencyParse = function(dependency) {
                  if (Common.isString(dependency)) {
                    var pattern = /^[\w-]+(@(\*|[\^~]?\d+\.\d+\.\d+(-[0-9A-Za-z-+]+)?))?$/;
                    if (!pattern.test(dependency)) {
                      Common.warn("Plugin.dependencyParse:", dependency, "is not a valid dependency string.");
                    }
                    return {
                      name: dependency.split("@")[0],
                      range: dependency.split("@")[1] || "*"
                    };
                  }
                  return {
                    name: dependency.name,
                    range: dependency.range || dependency.version
                  };
                };
                Plugin.versionParse = function(range) {
                  var pattern = /^(\*)|(\^|~|>=|>)?\s*((\d+)\.(\d+)\.(\d+))(-[0-9A-Za-z-+]+)?$/;
                  if (!pattern.test(range)) {
                    Common.warn("Plugin.versionParse:", range, "is not a valid version or range.");
                  }
                  var parts = pattern.exec(range);
                  var major = Number(parts[4]);
                  var minor = Number(parts[5]);
                  var patch = Number(parts[6]);
                  return {
                    isRange: Boolean(parts[1] || parts[2]),
                    version: parts[3],
                    range,
                    operator: parts[1] || parts[2] || "",
                    major,
                    minor,
                    patch,
                    parts: [major, minor, patch],
                    prerelease: parts[7],
                    number: major * 1e8 + minor * 1e4 + patch
                  };
                };
                Plugin.versionSatisfies = function(version, range) {
                  range = range || "*";
                  var r2 = Plugin.versionParse(range), v = Plugin.versionParse(version);
                  if (r2.isRange) {
                    if (r2.operator === "*" || version === "*") {
                      return true;
                    }
                    if (r2.operator === ">") {
                      return v.number > r2.number;
                    }
                    if (r2.operator === ">=") {
                      return v.number >= r2.number;
                    }
                    if (r2.operator === "~") {
                      return v.major === r2.major && v.minor === r2.minor && v.patch >= r2.patch;
                    }
                    if (r2.operator === "^") {
                      if (r2.major > 0) {
                        return v.major === r2.major && v.number >= r2.number;
                      }
                      if (r2.minor > 0) {
                        return v.minor === r2.minor && v.patch >= r2.patch;
                      }
                      return v.patch === r2.patch;
                    }
                  }
                  return version === range || version === "*";
                };
              })();
            },
            /* 16 */
            /***/
            function(module2, exports2) {
              var Contact = {};
              module2.exports = Contact;
              (function() {
                Contact.create = function(vertex) {
                  return {
                    vertex,
                    normalImpulse: 0,
                    tangentImpulse: 0
                  };
                };
              })();
            },
            /* 17 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Engine = {};
              module2.exports = Engine;
              var Sleeping = __webpack_require__(7);
              var Resolver = __webpack_require__(18);
              var Detector = __webpack_require__(13);
              var Pairs = __webpack_require__(19);
              var Events = __webpack_require__(5);
              var Composite = __webpack_require__(6);
              var Constraint = __webpack_require__(10);
              var Common = __webpack_require__(0);
              var Body = __webpack_require__(4);
              (function() {
                Engine.create = function(options) {
                  options = options || {};
                  var defaults3 = {
                    positionIterations: 6,
                    velocityIterations: 4,
                    constraintIterations: 2,
                    enableSleeping: false,
                    events: [],
                    plugin: {},
                    gravity: {
                      x: 0,
                      y: 1,
                      scale: 1e-3
                    },
                    timing: {
                      timestamp: 0,
                      timeScale: 1,
                      lastDelta: 0,
                      lastElapsed: 0
                    }
                  };
                  var engine = Common.extend(defaults3, options);
                  engine.world = options.world || Composite.create({ label: "World" });
                  engine.pairs = options.pairs || Pairs.create();
                  engine.detector = options.detector || Detector.create();
                  engine.grid = { buckets: [] };
                  engine.world.gravity = engine.gravity;
                  engine.broadphase = engine.grid;
                  engine.metrics = {};
                  return engine;
                };
                Engine.update = function(engine, delta) {
                  var startTime = Common.now();
                  var world = engine.world, detector = engine.detector, pairs = engine.pairs, timing = engine.timing, timestamp = timing.timestamp, i2;
                  delta = typeof delta !== "undefined" ? delta : Common._baseDelta;
                  delta *= timing.timeScale;
                  timing.timestamp += delta;
                  timing.lastDelta = delta;
                  var event2 = {
                    timestamp: timing.timestamp,
                    delta
                  };
                  Events.trigger(engine, "beforeUpdate", event2);
                  var allBodies = Composite.allBodies(world), allConstraints = Composite.allConstraints(world);
                  if (world.isModified) {
                    Detector.setBodies(detector, allBodies);
                    Composite.setModified(world, false, false, true);
                  }
                  if (engine.enableSleeping)
                    Sleeping.update(allBodies, delta);
                  Engine._bodiesApplyGravity(allBodies, engine.gravity);
                  if (delta > 0) {
                    Engine._bodiesUpdate(allBodies, delta);
                  }
                  Constraint.preSolveAll(allBodies);
                  for (i2 = 0; i2 < engine.constraintIterations; i2++) {
                    Constraint.solveAll(allConstraints, delta);
                  }
                  Constraint.postSolveAll(allBodies);
                  detector.pairs = engine.pairs;
                  var collisions = Detector.collisions(detector);
                  Pairs.update(pairs, collisions, timestamp);
                  if (engine.enableSleeping)
                    Sleeping.afterCollisions(pairs.list);
                  if (pairs.collisionStart.length > 0)
                    Events.trigger(engine, "collisionStart", { pairs: pairs.collisionStart });
                  var positionDamping = Common.clamp(20 / engine.positionIterations, 0, 1);
                  Resolver.preSolvePosition(pairs.list);
                  for (i2 = 0; i2 < engine.positionIterations; i2++) {
                    Resolver.solvePosition(pairs.list, delta, positionDamping);
                  }
                  Resolver.postSolvePosition(allBodies);
                  Constraint.preSolveAll(allBodies);
                  for (i2 = 0; i2 < engine.constraintIterations; i2++) {
                    Constraint.solveAll(allConstraints, delta);
                  }
                  Constraint.postSolveAll(allBodies);
                  Resolver.preSolveVelocity(pairs.list);
                  for (i2 = 0; i2 < engine.velocityIterations; i2++) {
                    Resolver.solveVelocity(pairs.list, delta);
                  }
                  Engine._bodiesUpdateVelocities(allBodies);
                  if (pairs.collisionActive.length > 0)
                    Events.trigger(engine, "collisionActive", { pairs: pairs.collisionActive });
                  if (pairs.collisionEnd.length > 0)
                    Events.trigger(engine, "collisionEnd", { pairs: pairs.collisionEnd });
                  Engine._bodiesClearForces(allBodies);
                  Events.trigger(engine, "afterUpdate", event2);
                  engine.timing.lastElapsed = Common.now() - startTime;
                  return engine;
                };
                Engine.merge = function(engineA, engineB) {
                  Common.extend(engineA, engineB);
                  if (engineB.world) {
                    engineA.world = engineB.world;
                    Engine.clear(engineA);
                    var bodies = Composite.allBodies(engineA.world);
                    for (var i2 = 0; i2 < bodies.length; i2++) {
                      var body = bodies[i2];
                      Sleeping.set(body, false);
                      body.id = Common.nextId();
                    }
                  }
                };
                Engine.clear = function(engine) {
                  Pairs.clear(engine.pairs);
                  Detector.clear(engine.detector);
                };
                Engine._bodiesClearForces = function(bodies) {
                  var bodiesLength = bodies.length;
                  for (var i2 = 0; i2 < bodiesLength; i2++) {
                    var body = bodies[i2];
                    body.force.x = 0;
                    body.force.y = 0;
                    body.torque = 0;
                  }
                };
                Engine._bodiesApplyGravity = function(bodies, gravity) {
                  var gravityScale = typeof gravity.scale !== "undefined" ? gravity.scale : 1e-3, bodiesLength = bodies.length;
                  if (gravity.x === 0 && gravity.y === 0 || gravityScale === 0) {
                    return;
                  }
                  for (var i2 = 0; i2 < bodiesLength; i2++) {
                    var body = bodies[i2];
                    if (body.isStatic || body.isSleeping)
                      continue;
                    body.force.y += body.mass * gravity.y * gravityScale;
                    body.force.x += body.mass * gravity.x * gravityScale;
                  }
                };
                Engine._bodiesUpdate = function(bodies, delta) {
                  var bodiesLength = bodies.length;
                  for (var i2 = 0; i2 < bodiesLength; i2++) {
                    var body = bodies[i2];
                    if (body.isStatic || body.isSleeping)
                      continue;
                    Body.update(body, delta);
                  }
                };
                Engine._bodiesUpdateVelocities = function(bodies) {
                  var bodiesLength = bodies.length;
                  for (var i2 = 0; i2 < bodiesLength; i2++) {
                    Body.updateVelocities(bodies[i2]);
                  }
                };
              })();
            },
            /* 18 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Resolver = {};
              module2.exports = Resolver;
              var Vertices = __webpack_require__(3);
              var Common = __webpack_require__(0);
              var Bounds = __webpack_require__(1);
              (function() {
                Resolver._restingThresh = 2;
                Resolver._restingThreshTangent = Math.sqrt(6);
                Resolver._positionDampen = 0.9;
                Resolver._positionWarming = 0.8;
                Resolver._frictionNormalMultiplier = 5;
                Resolver._frictionMaxStatic = Number.MAX_VALUE;
                Resolver.preSolvePosition = function(pairs) {
                  var i2, pair, activeCount, pairsLength = pairs.length;
                  for (i2 = 0; i2 < pairsLength; i2++) {
                    pair = pairs[i2];
                    if (!pair.isActive)
                      continue;
                    activeCount = pair.activeContacts.length;
                    pair.collision.parentA.totalContacts += activeCount;
                    pair.collision.parentB.totalContacts += activeCount;
                  }
                };
                Resolver.solvePosition = function(pairs, delta, damping) {
                  var i2, pair, collision, bodyA, bodyB, normal, contactShare, positionImpulse, positionDampen = Resolver._positionDampen * (damping || 1), slopDampen = Common.clamp(delta / Common._baseDelta, 0, 1), pairsLength = pairs.length;
                  for (i2 = 0; i2 < pairsLength; i2++) {
                    pair = pairs[i2];
                    if (!pair.isActive || pair.isSensor)
                      continue;
                    collision = pair.collision;
                    bodyA = collision.parentA;
                    bodyB = collision.parentB;
                    normal = collision.normal;
                    pair.separation = normal.x * (bodyB.positionImpulse.x + collision.penetration.x - bodyA.positionImpulse.x) + normal.y * (bodyB.positionImpulse.y + collision.penetration.y - bodyA.positionImpulse.y);
                  }
                  for (i2 = 0; i2 < pairsLength; i2++) {
                    pair = pairs[i2];
                    if (!pair.isActive || pair.isSensor)
                      continue;
                    collision = pair.collision;
                    bodyA = collision.parentA;
                    bodyB = collision.parentB;
                    normal = collision.normal;
                    positionImpulse = pair.separation - pair.slop * slopDampen;
                    if (bodyA.isStatic || bodyB.isStatic)
                      positionImpulse *= 2;
                    if (!(bodyA.isStatic || bodyA.isSleeping)) {
                      contactShare = positionDampen / bodyA.totalContacts;
                      bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;
                      bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;
                    }
                    if (!(bodyB.isStatic || bodyB.isSleeping)) {
                      contactShare = positionDampen / bodyB.totalContacts;
                      bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;
                      bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;
                    }
                  }
                };
                Resolver.postSolvePosition = function(bodies) {
                  var positionWarming = Resolver._positionWarming, bodiesLength = bodies.length, verticesTranslate = Vertices.translate, boundsUpdate = Bounds.update;
                  for (var i2 = 0; i2 < bodiesLength; i2++) {
                    var body = bodies[i2], positionImpulse = body.positionImpulse, positionImpulseX = positionImpulse.x, positionImpulseY = positionImpulse.y, velocity = body.velocity;
                    body.totalContacts = 0;
                    if (positionImpulseX !== 0 || positionImpulseY !== 0) {
                      for (var j = 0; j < body.parts.length; j++) {
                        var part = body.parts[j];
                        verticesTranslate(part.vertices, positionImpulse);
                        boundsUpdate(part.bounds, part.vertices, velocity);
                        part.position.x += positionImpulseX;
                        part.position.y += positionImpulseY;
                      }
                      body.positionPrev.x += positionImpulseX;
                      body.positionPrev.y += positionImpulseY;
                      if (positionImpulseX * velocity.x + positionImpulseY * velocity.y < 0) {
                        positionImpulse.x = 0;
                        positionImpulse.y = 0;
                      } else {
                        positionImpulse.x *= positionWarming;
                        positionImpulse.y *= positionWarming;
                      }
                    }
                  }
                };
                Resolver.preSolveVelocity = function(pairs) {
                  var pairsLength = pairs.length, i2, j;
                  for (i2 = 0; i2 < pairsLength; i2++) {
                    var pair = pairs[i2];
                    if (!pair.isActive || pair.isSensor)
                      continue;
                    var contacts = pair.activeContacts, contactsLength = contacts.length, collision = pair.collision, bodyA = collision.parentA, bodyB = collision.parentB, normal = collision.normal, tangent = collision.tangent;
                    for (j = 0; j < contactsLength; j++) {
                      var contact2 = contacts[j], contactVertex = contact2.vertex, normalImpulse = contact2.normalImpulse, tangentImpulse = contact2.tangentImpulse;
                      if (normalImpulse !== 0 || tangentImpulse !== 0) {
                        var impulseX = normal.x * normalImpulse + tangent.x * tangentImpulse, impulseY = normal.y * normalImpulse + tangent.y * tangentImpulse;
                        if (!(bodyA.isStatic || bodyA.isSleeping)) {
                          bodyA.positionPrev.x += impulseX * bodyA.inverseMass;
                          bodyA.positionPrev.y += impulseY * bodyA.inverseMass;
                          bodyA.anglePrev += bodyA.inverseInertia * ((contactVertex.x - bodyA.position.x) * impulseY - (contactVertex.y - bodyA.position.y) * impulseX);
                        }
                        if (!(bodyB.isStatic || bodyB.isSleeping)) {
                          bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;
                          bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;
                          bodyB.anglePrev -= bodyB.inverseInertia * ((contactVertex.x - bodyB.position.x) * impulseY - (contactVertex.y - bodyB.position.y) * impulseX);
                        }
                      }
                    }
                  }
                };
                Resolver.solveVelocity = function(pairs, delta) {
                  var timeScale = delta / Common._baseDelta, timeScaleSquared = timeScale * timeScale, timeScaleCubed = timeScaleSquared * timeScale, restingThresh = -Resolver._restingThresh * timeScale, restingThreshTangent = Resolver._restingThreshTangent, frictionNormalMultiplier = Resolver._frictionNormalMultiplier * timeScale, frictionMaxStatic = Resolver._frictionMaxStatic, pairsLength = pairs.length, tangentImpulse, maxFriction, i2, j;
                  for (i2 = 0; i2 < pairsLength; i2++) {
                    var pair = pairs[i2];
                    if (!pair.isActive || pair.isSensor)
                      continue;
                    var collision = pair.collision, bodyA = collision.parentA, bodyB = collision.parentB, bodyAVelocity = bodyA.velocity, bodyBVelocity = bodyB.velocity, normalX = collision.normal.x, normalY = collision.normal.y, tangentX = collision.tangent.x, tangentY = collision.tangent.y, contacts = pair.activeContacts, contactsLength = contacts.length, contactShare = 1 / contactsLength, inverseMassTotal = bodyA.inverseMass + bodyB.inverseMass, friction = pair.friction * pair.frictionStatic * frictionNormalMultiplier;
                    bodyAVelocity.x = bodyA.position.x - bodyA.positionPrev.x;
                    bodyAVelocity.y = bodyA.position.y - bodyA.positionPrev.y;
                    bodyBVelocity.x = bodyB.position.x - bodyB.positionPrev.x;
                    bodyBVelocity.y = bodyB.position.y - bodyB.positionPrev.y;
                    bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;
                    bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;
                    for (j = 0; j < contactsLength; j++) {
                      var contact2 = contacts[j], contactVertex = contact2.vertex;
                      var offsetAX = contactVertex.x - bodyA.position.x, offsetAY = contactVertex.y - bodyA.position.y, offsetBX = contactVertex.x - bodyB.position.x, offsetBY = contactVertex.y - bodyB.position.y;
                      var velocityPointAX = bodyAVelocity.x - offsetAY * bodyA.angularVelocity, velocityPointAY = bodyAVelocity.y + offsetAX * bodyA.angularVelocity, velocityPointBX = bodyBVelocity.x - offsetBY * bodyB.angularVelocity, velocityPointBY = bodyBVelocity.y + offsetBX * bodyB.angularVelocity;
                      var relativeVelocityX = velocityPointAX - velocityPointBX, relativeVelocityY = velocityPointAY - velocityPointBY;
                      var normalVelocity = normalX * relativeVelocityX + normalY * relativeVelocityY, tangentVelocity = tangentX * relativeVelocityX + tangentY * relativeVelocityY;
                      var normalOverlap = pair.separation + normalVelocity;
                      var normalForce = Math.min(normalOverlap, 1);
                      normalForce = normalOverlap < 0 ? 0 : normalForce;
                      var frictionLimit = normalForce * friction;
                      if (tangentVelocity < -frictionLimit || tangentVelocity > frictionLimit) {
                        maxFriction = tangentVelocity > 0 ? tangentVelocity : -tangentVelocity;
                        tangentImpulse = pair.friction * (tangentVelocity > 0 ? 1 : -1) * timeScaleCubed;
                        if (tangentImpulse < -maxFriction) {
                          tangentImpulse = -maxFriction;
                        } else if (tangentImpulse > maxFriction) {
                          tangentImpulse = maxFriction;
                        }
                      } else {
                        tangentImpulse = tangentVelocity;
                        maxFriction = frictionMaxStatic;
                      }
                      var oAcN = offsetAX * normalY - offsetAY * normalX, oBcN = offsetBX * normalY - offsetBY * normalX, share = contactShare / (inverseMassTotal + bodyA.inverseInertia * oAcN * oAcN + bodyB.inverseInertia * oBcN * oBcN);
                      var normalImpulse = (1 + pair.restitution) * normalVelocity * share;
                      tangentImpulse *= share;
                      if (normalVelocity < restingThresh) {
                        contact2.normalImpulse = 0;
                      } else {
                        var contactNormalImpulse = contact2.normalImpulse;
                        contact2.normalImpulse += normalImpulse;
                        if (contact2.normalImpulse > 0)
                          contact2.normalImpulse = 0;
                        normalImpulse = contact2.normalImpulse - contactNormalImpulse;
                      }
                      if (tangentVelocity < -restingThreshTangent || tangentVelocity > restingThreshTangent) {
                        contact2.tangentImpulse = 0;
                      } else {
                        var contactTangentImpulse = contact2.tangentImpulse;
                        contact2.tangentImpulse += tangentImpulse;
                        if (contact2.tangentImpulse < -maxFriction)
                          contact2.tangentImpulse = -maxFriction;
                        if (contact2.tangentImpulse > maxFriction)
                          contact2.tangentImpulse = maxFriction;
                        tangentImpulse = contact2.tangentImpulse - contactTangentImpulse;
                      }
                      var impulseX = normalX * normalImpulse + tangentX * tangentImpulse, impulseY = normalY * normalImpulse + tangentY * tangentImpulse;
                      if (!(bodyA.isStatic || bodyA.isSleeping)) {
                        bodyA.positionPrev.x += impulseX * bodyA.inverseMass;
                        bodyA.positionPrev.y += impulseY * bodyA.inverseMass;
                        bodyA.anglePrev += (offsetAX * impulseY - offsetAY * impulseX) * bodyA.inverseInertia;
                      }
                      if (!(bodyB.isStatic || bodyB.isSleeping)) {
                        bodyB.positionPrev.x -= impulseX * bodyB.inverseMass;
                        bodyB.positionPrev.y -= impulseY * bodyB.inverseMass;
                        bodyB.anglePrev -= (offsetBX * impulseY - offsetBY * impulseX) * bodyB.inverseInertia;
                      }
                    }
                  }
                };
              })();
            },
            /* 19 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Pairs = {};
              module2.exports = Pairs;
              var Pair = __webpack_require__(9);
              var Common = __webpack_require__(0);
              (function() {
                Pairs.create = function(options) {
                  return Common.extend({
                    table: {},
                    list: [],
                    collisionStart: [],
                    collisionActive: [],
                    collisionEnd: []
                  }, options);
                };
                Pairs.update = function(pairs, collisions, timestamp) {
                  var pairsList = pairs.list, pairsListLength = pairsList.length, pairsTable = pairs.table, collisionsLength = collisions.length, collisionStart = pairs.collisionStart, collisionEnd = pairs.collisionEnd, collisionActive = pairs.collisionActive, collision, pairIndex, pair, i2;
                  collisionStart.length = 0;
                  collisionEnd.length = 0;
                  collisionActive.length = 0;
                  for (i2 = 0; i2 < pairsListLength; i2++) {
                    pairsList[i2].confirmedActive = false;
                  }
                  for (i2 = 0; i2 < collisionsLength; i2++) {
                    collision = collisions[i2];
                    pair = collision.pair;
                    if (pair) {
                      if (pair.isActive) {
                        collisionActive.push(pair);
                      } else {
                        collisionStart.push(pair);
                      }
                      Pair.update(pair, collision, timestamp);
                      pair.confirmedActive = true;
                    } else {
                      pair = Pair.create(collision, timestamp);
                      pairsTable[pair.id] = pair;
                      collisionStart.push(pair);
                      pairsList.push(pair);
                    }
                  }
                  var removePairIndex = [];
                  pairsListLength = pairsList.length;
                  for (i2 = 0; i2 < pairsListLength; i2++) {
                    pair = pairsList[i2];
                    if (!pair.confirmedActive) {
                      Pair.setActive(pair, false, timestamp);
                      collisionEnd.push(pair);
                      if (!pair.collision.bodyA.isSleeping && !pair.collision.bodyB.isSleeping) {
                        removePairIndex.push(i2);
                      }
                    }
                  }
                  for (i2 = 0; i2 < removePairIndex.length; i2++) {
                    pairIndex = removePairIndex[i2] - i2;
                    pair = pairsList[pairIndex];
                    pairsList.splice(pairIndex, 1);
                    delete pairsTable[pair.id];
                  }
                };
                Pairs.clear = function(pairs) {
                  pairs.table = {};
                  pairs.list.length = 0;
                  pairs.collisionStart.length = 0;
                  pairs.collisionActive.length = 0;
                  pairs.collisionEnd.length = 0;
                  return pairs;
                };
              })();
            },
            /* 20 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Matter2 = module2.exports = __webpack_require__(21);
              Matter2.Axes = __webpack_require__(11);
              Matter2.Bodies = __webpack_require__(12);
              Matter2.Body = __webpack_require__(4);
              Matter2.Bounds = __webpack_require__(1);
              Matter2.Collision = __webpack_require__(8);
              Matter2.Common = __webpack_require__(0);
              Matter2.Composite = __webpack_require__(6);
              Matter2.Composites = __webpack_require__(22);
              Matter2.Constraint = __webpack_require__(10);
              Matter2.Contact = __webpack_require__(16);
              Matter2.Detector = __webpack_require__(13);
              Matter2.Engine = __webpack_require__(17);
              Matter2.Events = __webpack_require__(5);
              Matter2.Grid = __webpack_require__(23);
              Matter2.Mouse = __webpack_require__(14);
              Matter2.MouseConstraint = __webpack_require__(24);
              Matter2.Pair = __webpack_require__(9);
              Matter2.Pairs = __webpack_require__(19);
              Matter2.Plugin = __webpack_require__(15);
              Matter2.Query = __webpack_require__(25);
              Matter2.Render = __webpack_require__(26);
              Matter2.Resolver = __webpack_require__(18);
              Matter2.Runner = __webpack_require__(27);
              Matter2.SAT = __webpack_require__(28);
              Matter2.Sleeping = __webpack_require__(7);
              Matter2.Svg = __webpack_require__(29);
              Matter2.Vector = __webpack_require__(2);
              Matter2.Vertices = __webpack_require__(3);
              Matter2.World = __webpack_require__(30);
              Matter2.Engine.run = Matter2.Runner.run;
              Matter2.Common.deprecated(Matter2.Engine, "run", "Engine.run \u27A4 use Matter.Runner.run(engine) instead");
            },
            /* 21 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Matter2 = {};
              module2.exports = Matter2;
              var Plugin = __webpack_require__(15);
              var Common = __webpack_require__(0);
              (function() {
                Matter2.name = "matter-js";
                Matter2.version = true ? "0.19.0" : void 0;
                Matter2.uses = [];
                Matter2.used = [];
                Matter2.use = function() {
                  Plugin.use(Matter2, Array.prototype.slice.call(arguments));
                };
                Matter2.before = function(path, func) {
                  path = path.replace(/^Matter./, "");
                  return Common.chainPathBefore(Matter2, path, func);
                };
                Matter2.after = function(path, func) {
                  path = path.replace(/^Matter./, "");
                  return Common.chainPathAfter(Matter2, path, func);
                };
              })();
            },
            /* 22 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Composites = {};
              module2.exports = Composites;
              var Composite = __webpack_require__(6);
              var Constraint = __webpack_require__(10);
              var Common = __webpack_require__(0);
              var Body = __webpack_require__(4);
              var Bodies = __webpack_require__(12);
              var deprecated = Common.deprecated;
              (function() {
                Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {
                  var stack = Composite.create({ label: "Stack" }), x = xx, y = yy, lastBody, i2 = 0;
                  for (var row = 0; row < rows; row++) {
                    var maxHeight = 0;
                    for (var column = 0; column < columns; column++) {
                      var body = callback(x, y, column, row, lastBody, i2);
                      if (body) {
                        var bodyHeight = body.bounds.max.y - body.bounds.min.y, bodyWidth = body.bounds.max.x - body.bounds.min.x;
                        if (bodyHeight > maxHeight)
                          maxHeight = bodyHeight;
                        Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });
                        x = body.bounds.max.x + columnGap;
                        Composite.addBody(stack, body);
                        lastBody = body;
                        i2 += 1;
                      } else {
                        x += columnGap;
                      }
                    }
                    y += maxHeight + rowGap;
                    x = xx;
                  }
                  return stack;
                };
                Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {
                  var bodies = composite.bodies;
                  for (var i2 = 1; i2 < bodies.length; i2++) {
                    var bodyA = bodies[i2 - 1], bodyB = bodies[i2], bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y, bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y, bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;
                    var defaults3 = {
                      bodyA,
                      pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },
                      bodyB,
                      pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }
                    };
                    var constraint = Common.extend(defaults3, options);
                    Composite.addConstraint(composite, Constraint.create(constraint));
                  }
                  composite.label += " Chain";
                  return composite;
                };
                Composites.mesh = function(composite, columns, rows, crossBrace, options) {
                  var bodies = composite.bodies, row, col, bodyA, bodyB, bodyC;
                  for (row = 0; row < rows; row++) {
                    for (col = 1; col < columns; col++) {
                      bodyA = bodies[col - 1 + row * columns];
                      bodyB = bodies[col + row * columns];
                      Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA, bodyB }, options)));
                    }
                    if (row > 0) {
                      for (col = 0; col < columns; col++) {
                        bodyA = bodies[col + (row - 1) * columns];
                        bodyB = bodies[col + row * columns];
                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA, bodyB }, options)));
                        if (crossBrace && col > 0) {
                          bodyC = bodies[col - 1 + (row - 1) * columns];
                          Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB }, options)));
                        }
                        if (crossBrace && col < columns - 1) {
                          bodyC = bodies[col + 1 + (row - 1) * columns];
                          Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB }, options)));
                        }
                      }
                    }
                  }
                  composite.label += " Mesh";
                  return composite;
                };
                Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {
                  return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i2) {
                    var actualRows = Math.min(rows, Math.ceil(columns / 2)), lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;
                    if (row > actualRows)
                      return;
                    row = actualRows - row;
                    var start = row, end = columns - 1 - row;
                    if (column < start || column > end)
                      return;
                    if (i2 === 1) {
                      Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });
                    }
                    var xOffset = lastBody ? column * lastBodyWidth : 0;
                    return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i2);
                  });
                };
                Composites.newtonsCradle = function(xx, yy, number, size, length) {
                  var newtonsCradle = Composite.create({ label: "Newtons Cradle" });
                  for (var i2 = 0; i2 < number; i2++) {
                    var separation = 1.9, circle = Bodies.circle(
                      xx + i2 * (size * separation),
                      yy + length,
                      size,
                      { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 1e-4, slop: 1 }
                    ), constraint = Constraint.create({ pointA: { x: xx + i2 * (size * separation), y: yy }, bodyB: circle });
                    Composite.addBody(newtonsCradle, circle);
                    Composite.addConstraint(newtonsCradle, constraint);
                  }
                  return newtonsCradle;
                };
                deprecated(Composites, "newtonsCradle", "Composites.newtonsCradle \u27A4 moved to newtonsCradle example");
                Composites.car = function(xx, yy, width2, height2, wheelSize) {
                  var group = Body.nextGroup(true), wheelBase = 20, wheelAOffset = -width2 * 0.5 + wheelBase, wheelBOffset = width2 * 0.5 - wheelBase, wheelYOffset = 0;
                  var car = Composite.create({ label: "Car" }), body = Bodies.rectangle(xx, yy, width2, height2, {
                    collisionFilter: {
                      group
                    },
                    chamfer: {
                      radius: height2 * 0.5
                    },
                    density: 2e-4
                  });
                  var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, {
                    collisionFilter: {
                      group
                    },
                    friction: 0.8
                  });
                  var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, {
                    collisionFilter: {
                      group
                    },
                    friction: 0.8
                  });
                  var axelA = Constraint.create({
                    bodyB: body,
                    pointB: { x: wheelAOffset, y: wheelYOffset },
                    bodyA: wheelA,
                    stiffness: 1,
                    length: 0
                  });
                  var axelB = Constraint.create({
                    bodyB: body,
                    pointB: { x: wheelBOffset, y: wheelYOffset },
                    bodyA: wheelB,
                    stiffness: 1,
                    length: 0
                  });
                  Composite.addBody(car, body);
                  Composite.addBody(car, wheelA);
                  Composite.addBody(car, wheelB);
                  Composite.addConstraint(car, axelA);
                  Composite.addConstraint(car, axelB);
                  return car;
                };
                deprecated(Composites, "car", "Composites.car \u27A4 moved to car example");
                Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {
                  particleOptions = Common.extend({ inertia: Infinity }, particleOptions);
                  constraintOptions = Common.extend({ stiffness: 0.2, render: { type: "line", anchors: false } }, constraintOptions);
                  var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {
                    return Bodies.circle(x, y, particleRadius, particleOptions);
                  });
                  Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);
                  softBody.label = "Soft Body";
                  return softBody;
                };
                deprecated(Composites, "softBody", "Composites.softBody \u27A4 moved to softBody and cloth examples");
              })();
            },
            /* 23 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Grid2 = {};
              module2.exports = Grid2;
              var Pair = __webpack_require__(9);
              var Common = __webpack_require__(0);
              var deprecated = Common.deprecated;
              (function() {
                Grid2.create = function(options) {
                  var defaults3 = {
                    buckets: {},
                    pairs: {},
                    pairsList: [],
                    bucketWidth: 48,
                    bucketHeight: 48
                  };
                  return Common.extend(defaults3, options);
                };
                Grid2.update = function(grid, bodies, engine, forceUpdate) {
                  var i2, col, row, world = engine.world, buckets = grid.buckets, bucket, bucketId, gridChanged = false;
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2];
                    if (body.isSleeping && !forceUpdate)
                      continue;
                    if (world.bounds && (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y))
                      continue;
                    var newRegion = Grid2._getRegion(grid, body);
                    if (!body.region || newRegion.id !== body.region.id || forceUpdate) {
                      if (!body.region || forceUpdate)
                        body.region = newRegion;
                      var union = Grid2._regionUnion(newRegion, body.region);
                      for (col = union.startCol; col <= union.endCol; col++) {
                        for (row = union.startRow; row <= union.endRow; row++) {
                          bucketId = Grid2._getBucketId(col, row);
                          bucket = buckets[bucketId];
                          var isInsideNewRegion = col >= newRegion.startCol && col <= newRegion.endCol && row >= newRegion.startRow && row <= newRegion.endRow;
                          var isInsideOldRegion = col >= body.region.startCol && col <= body.region.endCol && row >= body.region.startRow && row <= body.region.endRow;
                          if (!isInsideNewRegion && isInsideOldRegion) {
                            if (isInsideOldRegion) {
                              if (bucket)
                                Grid2._bucketRemoveBody(grid, bucket, body);
                            }
                          }
                          if (body.region === newRegion || isInsideNewRegion && !isInsideOldRegion || forceUpdate) {
                            if (!bucket)
                              bucket = Grid2._createBucket(buckets, bucketId);
                            Grid2._bucketAddBody(grid, bucket, body);
                          }
                        }
                      }
                      body.region = newRegion;
                      gridChanged = true;
                    }
                  }
                  if (gridChanged)
                    grid.pairsList = Grid2._createActivePairsList(grid);
                };
                deprecated(Grid2, "update", "Grid.update \u27A4 replaced by Matter.Detector");
                Grid2.clear = function(grid) {
                  grid.buckets = {};
                  grid.pairs = {};
                  grid.pairsList = [];
                };
                deprecated(Grid2, "clear", "Grid.clear \u27A4 replaced by Matter.Detector");
                Grid2._regionUnion = function(regionA, regionB) {
                  var startCol = Math.min(regionA.startCol, regionB.startCol), endCol = Math.max(regionA.endCol, regionB.endCol), startRow = Math.min(regionA.startRow, regionB.startRow), endRow = Math.max(regionA.endRow, regionB.endRow);
                  return Grid2._createRegion(startCol, endCol, startRow, endRow);
                };
                Grid2._getRegion = function(grid, body) {
                  var bounds = body.bounds, startCol = Math.floor(bounds.min.x / grid.bucketWidth), endCol = Math.floor(bounds.max.x / grid.bucketWidth), startRow = Math.floor(bounds.min.y / grid.bucketHeight), endRow = Math.floor(bounds.max.y / grid.bucketHeight);
                  return Grid2._createRegion(startCol, endCol, startRow, endRow);
                };
                Grid2._createRegion = function(startCol, endCol, startRow, endRow) {
                  return {
                    id: startCol + "," + endCol + "," + startRow + "," + endRow,
                    startCol,
                    endCol,
                    startRow,
                    endRow
                  };
                };
                Grid2._getBucketId = function(column, row) {
                  return "C" + column + "R" + row;
                };
                Grid2._createBucket = function(buckets, bucketId) {
                  var bucket = buckets[bucketId] = [];
                  return bucket;
                };
                Grid2._bucketAddBody = function(grid, bucket, body) {
                  var gridPairs = grid.pairs, pairId = Pair.id, bucketLength = bucket.length, i2;
                  for (i2 = 0; i2 < bucketLength; i2++) {
                    var bodyB = bucket[i2];
                    if (body.id === bodyB.id || body.isStatic && bodyB.isStatic)
                      continue;
                    var id = pairId(body, bodyB), pair = gridPairs[id];
                    if (pair) {
                      pair[2] += 1;
                    } else {
                      gridPairs[id] = [body, bodyB, 1];
                    }
                  }
                  bucket.push(body);
                };
                Grid2._bucketRemoveBody = function(grid, bucket, body) {
                  var gridPairs = grid.pairs, pairId = Pair.id, i2;
                  bucket.splice(Common.indexOf(bucket, body), 1);
                  var bucketLength = bucket.length;
                  for (i2 = 0; i2 < bucketLength; i2++) {
                    var pair = gridPairs[pairId(body, bucket[i2])];
                    if (pair)
                      pair[2] -= 1;
                  }
                };
                Grid2._createActivePairsList = function(grid) {
                  var pair, gridPairs = grid.pairs, pairKeys = Common.keys(gridPairs), pairKeysLength = pairKeys.length, pairs = [], k;
                  for (k = 0; k < pairKeysLength; k++) {
                    pair = gridPairs[pairKeys[k]];
                    if (pair[2] > 0) {
                      pairs.push(pair);
                    } else {
                      delete gridPairs[pairKeys[k]];
                    }
                  }
                  return pairs;
                };
              })();
            },
            /* 24 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var MouseConstraint = {};
              module2.exports = MouseConstraint;
              var Vertices = __webpack_require__(3);
              var Sleeping = __webpack_require__(7);
              var Mouse = __webpack_require__(14);
              var Events = __webpack_require__(5);
              var Detector = __webpack_require__(13);
              var Constraint = __webpack_require__(10);
              var Composite = __webpack_require__(6);
              var Common = __webpack_require__(0);
              var Bounds = __webpack_require__(1);
              (function() {
                MouseConstraint.create = function(engine, options) {
                  var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);
                  if (!mouse) {
                    if (engine && engine.render && engine.render.canvas) {
                      mouse = Mouse.create(engine.render.canvas);
                    } else if (options && options.element) {
                      mouse = Mouse.create(options.element);
                    } else {
                      mouse = Mouse.create();
                      Common.warn("MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected");
                    }
                  }
                  var constraint = Constraint.create({
                    label: "Mouse Constraint",
                    pointA: mouse.position,
                    pointB: { x: 0, y: 0 },
                    length: 0.01,
                    stiffness: 0.1,
                    angularStiffness: 1,
                    render: {
                      strokeStyle: "#90EE90",
                      lineWidth: 3
                    }
                  });
                  var defaults3 = {
                    type: "mouseConstraint",
                    mouse,
                    element: null,
                    body: null,
                    constraint,
                    collisionFilter: {
                      category: 1,
                      mask: 4294967295,
                      group: 0
                    }
                  };
                  var mouseConstraint = Common.extend(defaults3, options);
                  Events.on(engine, "beforeUpdate", function() {
                    var allBodies = Composite.allBodies(engine.world);
                    MouseConstraint.update(mouseConstraint, allBodies);
                    MouseConstraint._triggerEvents(mouseConstraint);
                  });
                  return mouseConstraint;
                };
                MouseConstraint.update = function(mouseConstraint, bodies) {
                  var mouse = mouseConstraint.mouse, constraint = mouseConstraint.constraint, body = mouseConstraint.body;
                  if (mouse.button === 0) {
                    if (!constraint.bodyB) {
                      for (var i2 = 0; i2 < bodies.length; i2++) {
                        body = bodies[i2];
                        if (Bounds.contains(body.bounds, mouse.position) && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {
                          for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {
                            var part = body.parts[j];
                            if (Vertices.contains(part.vertices, mouse.position)) {
                              constraint.pointA = mouse.position;
                              constraint.bodyB = mouseConstraint.body = body;
                              constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };
                              constraint.angleB = body.angle;
                              Sleeping.set(body, false);
                              Events.trigger(mouseConstraint, "startdrag", { mouse, body });
                              break;
                            }
                          }
                        }
                      }
                    } else {
                      Sleeping.set(constraint.bodyB, false);
                      constraint.pointA = mouse.position;
                    }
                  } else {
                    constraint.bodyB = mouseConstraint.body = null;
                    constraint.pointB = null;
                    if (body)
                      Events.trigger(mouseConstraint, "enddrag", { mouse, body });
                  }
                };
                MouseConstraint._triggerEvents = function(mouseConstraint) {
                  var mouse = mouseConstraint.mouse, mouseEvents = mouse.sourceEvents;
                  if (mouseEvents.mousemove)
                    Events.trigger(mouseConstraint, "mousemove", { mouse });
                  if (mouseEvents.mousedown)
                    Events.trigger(mouseConstraint, "mousedown", { mouse });
                  if (mouseEvents.mouseup)
                    Events.trigger(mouseConstraint, "mouseup", { mouse });
                  Mouse.clearSourceEvents(mouse);
                };
              })();
            },
            /* 25 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Query = {};
              module2.exports = Query;
              var Vector = __webpack_require__(2);
              var Collision = __webpack_require__(8);
              var Bounds = __webpack_require__(1);
              var Bodies = __webpack_require__(12);
              var Vertices = __webpack_require__(3);
              (function() {
                Query.collides = function(body, bodies) {
                  var collisions = [], bodiesLength = bodies.length, bounds = body.bounds, collides = Collision.collides, overlaps = Bounds.overlaps;
                  for (var i2 = 0; i2 < bodiesLength; i2++) {
                    var bodyA = bodies[i2], partsALength = bodyA.parts.length, partsAStart = partsALength === 1 ? 0 : 1;
                    if (overlaps(bodyA.bounds, bounds)) {
                      for (var j = partsAStart; j < partsALength; j++) {
                        var part = bodyA.parts[j];
                        if (overlaps(part.bounds, bounds)) {
                          var collision = collides(part, body);
                          if (collision) {
                            collisions.push(collision);
                            break;
                          }
                        }
                      }
                    }
                  }
                  return collisions;
                };
                Query.ray = function(bodies, startPoint, endPoint, rayWidth) {
                  rayWidth = rayWidth || 1e-100;
                  var rayAngle = Vector.angle(startPoint, endPoint), rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)), rayX = (endPoint.x + startPoint.x) * 0.5, rayY = (endPoint.y + startPoint.y) * 0.5, ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }), collisions = Query.collides(ray, bodies);
                  for (var i2 = 0; i2 < collisions.length; i2 += 1) {
                    var collision = collisions[i2];
                    collision.body = collision.bodyB = collision.bodyA;
                  }
                  return collisions;
                };
                Query.region = function(bodies, bounds, outside) {
                  var result = [];
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2], overlaps = Bounds.overlaps(body.bounds, bounds);
                    if (overlaps && !outside || !overlaps && outside)
                      result.push(body);
                  }
                  return result;
                };
                Query.point = function(bodies, point) {
                  var result = [];
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2];
                    if (Bounds.contains(body.bounds, point)) {
                      for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {
                        var part = body.parts[j];
                        if (Bounds.contains(part.bounds, point) && Vertices.contains(part.vertices, point)) {
                          result.push(body);
                          break;
                        }
                      }
                    }
                  }
                  return result;
                };
              })();
            },
            /* 26 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Render = {};
              module2.exports = Render;
              var Body = __webpack_require__(4);
              var Common = __webpack_require__(0);
              var Composite = __webpack_require__(6);
              var Bounds = __webpack_require__(1);
              var Events = __webpack_require__(5);
              var Vector = __webpack_require__(2);
              var Mouse = __webpack_require__(14);
              (function() {
                var _requestAnimationFrame, _cancelAnimationFrame;
                if (typeof window !== "undefined") {
                  _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || function(callback) {
                    window.setTimeout(function() {
                      callback(Common.now());
                    }, 1e3 / 60);
                  };
                  _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;
                }
                Render._goodFps = 30;
                Render._goodDelta = 1e3 / 60;
                Render.create = function(options) {
                  var defaults3 = {
                    engine: null,
                    element: null,
                    canvas: null,
                    mouse: null,
                    frameRequestId: null,
                    timing: {
                      historySize: 60,
                      delta: 0,
                      deltaHistory: [],
                      lastTime: 0,
                      lastTimestamp: 0,
                      lastElapsed: 0,
                      timestampElapsed: 0,
                      timestampElapsedHistory: [],
                      engineDeltaHistory: [],
                      engineElapsedHistory: [],
                      elapsedHistory: []
                    },
                    options: {
                      width: 800,
                      height: 600,
                      pixelRatio: 1,
                      background: "#14151f",
                      wireframeBackground: "#14151f",
                      hasBounds: !!options.bounds,
                      enabled: true,
                      wireframes: true,
                      showSleeping: true,
                      showDebug: false,
                      showStats: false,
                      showPerformance: false,
                      showBounds: false,
                      showVelocity: false,
                      showCollisions: false,
                      showSeparations: false,
                      showAxes: false,
                      showPositions: false,
                      showAngleIndicator: false,
                      showIds: false,
                      showVertexNumbers: false,
                      showConvexHulls: false,
                      showInternalEdges: false,
                      showMousePosition: false
                    }
                  };
                  var render3 = Common.extend(defaults3, options);
                  if (render3.canvas) {
                    render3.canvas.width = render3.options.width || render3.canvas.width;
                    render3.canvas.height = render3.options.height || render3.canvas.height;
                  }
                  render3.mouse = options.mouse;
                  render3.engine = options.engine;
                  render3.canvas = render3.canvas || _createCanvas(render3.options.width, render3.options.height);
                  render3.context = render3.canvas.getContext("2d");
                  render3.textures = {};
                  render3.bounds = render3.bounds || {
                    min: {
                      x: 0,
                      y: 0
                    },
                    max: {
                      x: render3.canvas.width,
                      y: render3.canvas.height
                    }
                  };
                  render3.controller = Render;
                  render3.options.showBroadphase = false;
                  if (render3.options.pixelRatio !== 1) {
                    Render.setPixelRatio(render3, render3.options.pixelRatio);
                  }
                  if (Common.isElement(render3.element)) {
                    render3.element.appendChild(render3.canvas);
                  }
                  return render3;
                };
                Render.run = function(render3) {
                  (function loop2(time) {
                    render3.frameRequestId = _requestAnimationFrame(loop2);
                    _updateTiming(render3, time);
                    Render.world(render3, time);
                    if (render3.options.showStats || render3.options.showDebug) {
                      Render.stats(render3, render3.context, time);
                    }
                    if (render3.options.showPerformance || render3.options.showDebug) {
                      Render.performance(render3, render3.context, time);
                    }
                  })();
                };
                Render.stop = function(render3) {
                  _cancelAnimationFrame(render3.frameRequestId);
                };
                Render.setPixelRatio = function(render3, pixelRatio) {
                  var options = render3.options, canvas = render3.canvas;
                  if (pixelRatio === "auto") {
                    pixelRatio = _getPixelRatio(canvas);
                  }
                  options.pixelRatio = pixelRatio;
                  canvas.setAttribute("data-pixel-ratio", pixelRatio);
                  canvas.width = options.width * pixelRatio;
                  canvas.height = options.height * pixelRatio;
                  canvas.style.width = options.width + "px";
                  canvas.style.height = options.height + "px";
                };
                Render.lookAt = function(render3, objects, padding, center) {
                  center = typeof center !== "undefined" ? center : true;
                  objects = Common.isArray(objects) ? objects : [objects];
                  padding = padding || {
                    x: 0,
                    y: 0
                  };
                  var bounds = {
                    min: { x: Infinity, y: Infinity },
                    max: { x: -Infinity, y: -Infinity }
                  };
                  for (var i2 = 0; i2 < objects.length; i2 += 1) {
                    var object = objects[i2], min = object.bounds ? object.bounds.min : object.min || object.position || object, max2 = object.bounds ? object.bounds.max : object.max || object.position || object;
                    if (min && max2) {
                      if (min.x < bounds.min.x)
                        bounds.min.x = min.x;
                      if (max2.x > bounds.max.x)
                        bounds.max.x = max2.x;
                      if (min.y < bounds.min.y)
                        bounds.min.y = min.y;
                      if (max2.y > bounds.max.y)
                        bounds.max.y = max2.y;
                    }
                  }
                  var width2 = bounds.max.x - bounds.min.x + 2 * padding.x, height2 = bounds.max.y - bounds.min.y + 2 * padding.y, viewHeight = render3.canvas.height, viewWidth = render3.canvas.width, outerRatio = viewWidth / viewHeight, innerRatio = width2 / height2, scaleX = 1, scaleY = 1;
                  if (innerRatio > outerRatio) {
                    scaleY = innerRatio / outerRatio;
                  } else {
                    scaleX = outerRatio / innerRatio;
                  }
                  render3.options.hasBounds = true;
                  render3.bounds.min.x = bounds.min.x;
                  render3.bounds.max.x = bounds.min.x + width2 * scaleX;
                  render3.bounds.min.y = bounds.min.y;
                  render3.bounds.max.y = bounds.min.y + height2 * scaleY;
                  if (center) {
                    render3.bounds.min.x += width2 * 0.5 - width2 * scaleX * 0.5;
                    render3.bounds.max.x += width2 * 0.5 - width2 * scaleX * 0.5;
                    render3.bounds.min.y += height2 * 0.5 - height2 * scaleY * 0.5;
                    render3.bounds.max.y += height2 * 0.5 - height2 * scaleY * 0.5;
                  }
                  render3.bounds.min.x -= padding.x;
                  render3.bounds.max.x -= padding.x;
                  render3.bounds.min.y -= padding.y;
                  render3.bounds.max.y -= padding.y;
                  if (render3.mouse) {
                    Mouse.setScale(render3.mouse, {
                      x: (render3.bounds.max.x - render3.bounds.min.x) / render3.canvas.width,
                      y: (render3.bounds.max.y - render3.bounds.min.y) / render3.canvas.height
                    });
                    Mouse.setOffset(render3.mouse, render3.bounds.min);
                  }
                };
                Render.startViewTransform = function(render3) {
                  var boundsWidth = render3.bounds.max.x - render3.bounds.min.x, boundsHeight = render3.bounds.max.y - render3.bounds.min.y, boundsScaleX = boundsWidth / render3.options.width, boundsScaleY = boundsHeight / render3.options.height;
                  render3.context.setTransform(
                    render3.options.pixelRatio / boundsScaleX,
                    0,
                    0,
                    render3.options.pixelRatio / boundsScaleY,
                    0,
                    0
                  );
                  render3.context.translate(-render3.bounds.min.x, -render3.bounds.min.y);
                };
                Render.endViewTransform = function(render3) {
                  render3.context.setTransform(render3.options.pixelRatio, 0, 0, render3.options.pixelRatio, 0, 0);
                };
                Render.world = function(render3, time) {
                  var startTime = Common.now(), engine = render3.engine, world = engine.world, canvas = render3.canvas, context3 = render3.context, options = render3.options, timing = render3.timing;
                  var allBodies = Composite.allBodies(world), allConstraints = Composite.allConstraints(world), background2 = options.wireframes ? options.wireframeBackground : options.background, bodies = [], constraints = [], i2;
                  var event2 = {
                    timestamp: engine.timing.timestamp
                  };
                  Events.trigger(render3, "beforeRender", event2);
                  if (render3.currentBackground !== background2)
                    _applyBackground(render3, background2);
                  context3.globalCompositeOperation = "source-in";
                  context3.fillStyle = "transparent";
                  context3.fillRect(0, 0, canvas.width, canvas.height);
                  context3.globalCompositeOperation = "source-over";
                  if (options.hasBounds) {
                    for (i2 = 0; i2 < allBodies.length; i2++) {
                      var body = allBodies[i2];
                      if (Bounds.overlaps(body.bounds, render3.bounds))
                        bodies.push(body);
                    }
                    for (i2 = 0; i2 < allConstraints.length; i2++) {
                      var constraint = allConstraints[i2], bodyA = constraint.bodyA, bodyB = constraint.bodyB, pointAWorld = constraint.pointA, pointBWorld = constraint.pointB;
                      if (bodyA)
                        pointAWorld = Vector.add(bodyA.position, constraint.pointA);
                      if (bodyB)
                        pointBWorld = Vector.add(bodyB.position, constraint.pointB);
                      if (!pointAWorld || !pointBWorld)
                        continue;
                      if (Bounds.contains(render3.bounds, pointAWorld) || Bounds.contains(render3.bounds, pointBWorld))
                        constraints.push(constraint);
                    }
                    Render.startViewTransform(render3);
                    if (render3.mouse) {
                      Mouse.setScale(render3.mouse, {
                        x: (render3.bounds.max.x - render3.bounds.min.x) / render3.options.width,
                        y: (render3.bounds.max.y - render3.bounds.min.y) / render3.options.height
                      });
                      Mouse.setOffset(render3.mouse, render3.bounds.min);
                    }
                  } else {
                    constraints = allConstraints;
                    bodies = allBodies;
                    if (render3.options.pixelRatio !== 1) {
                      render3.context.setTransform(render3.options.pixelRatio, 0, 0, render3.options.pixelRatio, 0, 0);
                    }
                  }
                  if (!options.wireframes || engine.enableSleeping && options.showSleeping) {
                    Render.bodies(render3, bodies, context3);
                  } else {
                    if (options.showConvexHulls)
                      Render.bodyConvexHulls(render3, bodies, context3);
                    Render.bodyWireframes(render3, bodies, context3);
                  }
                  if (options.showBounds)
                    Render.bodyBounds(render3, bodies, context3);
                  if (options.showAxes || options.showAngleIndicator)
                    Render.bodyAxes(render3, bodies, context3);
                  if (options.showPositions)
                    Render.bodyPositions(render3, bodies, context3);
                  if (options.showVelocity)
                    Render.bodyVelocity(render3, bodies, context3);
                  if (options.showIds)
                    Render.bodyIds(render3, bodies, context3);
                  if (options.showSeparations)
                    Render.separations(render3, engine.pairs.list, context3);
                  if (options.showCollisions)
                    Render.collisions(render3, engine.pairs.list, context3);
                  if (options.showVertexNumbers)
                    Render.vertexNumbers(render3, bodies, context3);
                  if (options.showMousePosition)
                    Render.mousePosition(render3, render3.mouse, context3);
                  Render.constraints(constraints, context3);
                  if (options.hasBounds) {
                    Render.endViewTransform(render3);
                  }
                  Events.trigger(render3, "afterRender", event2);
                  timing.lastElapsed = Common.now() - startTime;
                };
                Render.stats = function(render3, context3, time) {
                  var engine = render3.engine, world = engine.world, bodies = Composite.allBodies(world), parts = 0, width2 = 55, height2 = 44, x = 0, y = 0;
                  for (var i2 = 0; i2 < bodies.length; i2 += 1) {
                    parts += bodies[i2].parts.length;
                  }
                  var sections = {
                    "Part": parts,
                    "Body": bodies.length,
                    "Cons": Composite.allConstraints(world).length,
                    "Comp": Composite.allComposites(world).length,
                    "Pair": engine.pairs.list.length
                  };
                  context3.fillStyle = "#0e0f19";
                  context3.fillRect(x, y, width2 * 5.5, height2);
                  context3.font = "12px Arial";
                  context3.textBaseline = "top";
                  context3.textAlign = "right";
                  for (var key in sections) {
                    var section = sections[key];
                    context3.fillStyle = "#aaa";
                    context3.fillText(key, x + width2, y + 8);
                    context3.fillStyle = "#eee";
                    context3.fillText(section, x + width2, y + 26);
                    x += width2;
                  }
                };
                Render.performance = function(render3, context3) {
                  var engine = render3.engine, timing = render3.timing, deltaHistory = timing.deltaHistory, elapsedHistory = timing.elapsedHistory, timestampElapsedHistory = timing.timestampElapsedHistory, engineDeltaHistory = timing.engineDeltaHistory, engineElapsedHistory = timing.engineElapsedHistory, lastEngineDelta = engine.timing.lastDelta;
                  var deltaMean = _mean(deltaHistory), elapsedMean = _mean(elapsedHistory), engineDeltaMean = _mean(engineDeltaHistory), engineElapsedMean = _mean(engineElapsedHistory), timestampElapsedMean = _mean(timestampElapsedHistory), rateMean = timestampElapsedMean / deltaMean || 0, fps = 1e3 / deltaMean || 0;
                  var graphHeight = 4, gap = 12, width2 = 60, height2 = 34, x = 10, y = 69;
                  context3.fillStyle = "#0e0f19";
                  context3.fillRect(0, 50, gap * 4 + width2 * 5 + 22, height2);
                  Render.status(
                    context3,
                    x,
                    y,
                    width2,
                    graphHeight,
                    deltaHistory.length,
                    Math.round(fps) + " fps",
                    fps / Render._goodFps,
                    function(i2) {
                      return deltaHistory[i2] / deltaMean - 1;
                    }
                  );
                  Render.status(
                    context3,
                    x + gap + width2,
                    y,
                    width2,
                    graphHeight,
                    engineDeltaHistory.length,
                    lastEngineDelta.toFixed(2) + " dt",
                    Render._goodDelta / lastEngineDelta,
                    function(i2) {
                      return engineDeltaHistory[i2] / engineDeltaMean - 1;
                    }
                  );
                  Render.status(
                    context3,
                    x + (gap + width2) * 2,
                    y,
                    width2,
                    graphHeight,
                    engineElapsedHistory.length,
                    engineElapsedMean.toFixed(2) + " ut",
                    1 - engineElapsedMean / Render._goodFps,
                    function(i2) {
                      return engineElapsedHistory[i2] / engineElapsedMean - 1;
                    }
                  );
                  Render.status(
                    context3,
                    x + (gap + width2) * 3,
                    y,
                    width2,
                    graphHeight,
                    elapsedHistory.length,
                    elapsedMean.toFixed(2) + " rt",
                    1 - elapsedMean / Render._goodFps,
                    function(i2) {
                      return elapsedHistory[i2] / elapsedMean - 1;
                    }
                  );
                  Render.status(
                    context3,
                    x + (gap + width2) * 4,
                    y,
                    width2,
                    graphHeight,
                    timestampElapsedHistory.length,
                    rateMean.toFixed(2) + " x",
                    rateMean * rateMean * rateMean,
                    function(i2) {
                      return (timestampElapsedHistory[i2] / deltaHistory[i2] / rateMean || 0) - 1;
                    }
                  );
                };
                Render.status = function(context3, x, y, width2, height2, count, label, indicator, plotY) {
                  context3.strokeStyle = "#888";
                  context3.fillStyle = "#444";
                  context3.lineWidth = 1;
                  context3.fillRect(x, y + 7, width2, 1);
                  context3.beginPath();
                  context3.moveTo(x, y + 7 - height2 * Common.clamp(0.4 * plotY(0), -2, 2));
                  for (var i2 = 0; i2 < width2; i2 += 1) {
                    context3.lineTo(x + i2, y + 7 - (i2 < count ? height2 * Common.clamp(0.4 * plotY(i2), -2, 2) : 0));
                  }
                  context3.stroke();
                  context3.fillStyle = "hsl(" + Common.clamp(25 + 95 * indicator, 0, 120) + ",100%,60%)";
                  context3.fillRect(x, y - 7, 4, 4);
                  context3.font = "12px Arial";
                  context3.textBaseline = "middle";
                  context3.textAlign = "right";
                  context3.fillStyle = "#eee";
                  context3.fillText(label, x + width2, y - 5);
                };
                Render.constraints = function(constraints, context3) {
                  var c = context3;
                  for (var i2 = 0; i2 < constraints.length; i2++) {
                    var constraint = constraints[i2];
                    if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)
                      continue;
                    var bodyA = constraint.bodyA, bodyB = constraint.bodyB, start, end;
                    if (bodyA) {
                      start = Vector.add(bodyA.position, constraint.pointA);
                    } else {
                      start = constraint.pointA;
                    }
                    if (constraint.render.type === "pin") {
                      c.beginPath();
                      c.arc(start.x, start.y, 3, 0, 2 * Math.PI);
                      c.closePath();
                    } else {
                      if (bodyB) {
                        end = Vector.add(bodyB.position, constraint.pointB);
                      } else {
                        end = constraint.pointB;
                      }
                      c.beginPath();
                      c.moveTo(start.x, start.y);
                      if (constraint.render.type === "spring") {
                        var delta = Vector.sub(end, start), normal = Vector.perp(Vector.normalise(delta)), coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)), offset;
                        for (var j = 1; j < coils; j += 1) {
                          offset = j % 2 === 0 ? 1 : -1;
                          c.lineTo(
                            start.x + delta.x * (j / coils) + normal.x * offset * 4,
                            start.y + delta.y * (j / coils) + normal.y * offset * 4
                          );
                        }
                      }
                      c.lineTo(end.x, end.y);
                    }
                    if (constraint.render.lineWidth) {
                      c.lineWidth = constraint.render.lineWidth;
                      c.strokeStyle = constraint.render.strokeStyle;
                      c.stroke();
                    }
                    if (constraint.render.anchors) {
                      c.fillStyle = constraint.render.strokeStyle;
                      c.beginPath();
                      c.arc(start.x, start.y, 3, 0, 2 * Math.PI);
                      c.arc(end.x, end.y, 3, 0, 2 * Math.PI);
                      c.closePath();
                      c.fill();
                    }
                  }
                };
                Render.bodies = function(render3, bodies, context3) {
                  var c = context3, engine = render3.engine, options = render3.options, showInternalEdges = options.showInternalEdges || !options.wireframes, body, part, i2, k;
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    body = bodies[i2];
                    if (!body.render.visible)
                      continue;
                    for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {
                      part = body.parts[k];
                      if (!part.render.visible)
                        continue;
                      if (options.showSleeping && body.isSleeping) {
                        c.globalAlpha = 0.5 * part.render.opacity;
                      } else if (part.render.opacity !== 1) {
                        c.globalAlpha = part.render.opacity;
                      }
                      if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {
                        var sprite = part.render.sprite, texture = _getTexture(render3, sprite.texture);
                        c.translate(part.position.x, part.position.y);
                        c.rotate(part.angle);
                        c.drawImage(
                          texture,
                          texture.width * -sprite.xOffset * sprite.xScale,
                          texture.height * -sprite.yOffset * sprite.yScale,
                          texture.width * sprite.xScale,
                          texture.height * sprite.yScale
                        );
                        c.rotate(-part.angle);
                        c.translate(-part.position.x, -part.position.y);
                      } else {
                        if (part.circleRadius) {
                          c.beginPath();
                          c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);
                        } else {
                          c.beginPath();
                          c.moveTo(part.vertices[0].x, part.vertices[0].y);
                          for (var j = 1; j < part.vertices.length; j++) {
                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {
                              c.lineTo(part.vertices[j].x, part.vertices[j].y);
                            } else {
                              c.moveTo(part.vertices[j].x, part.vertices[j].y);
                            }
                            if (part.vertices[j].isInternal && !showInternalEdges) {
                              c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);
                            }
                          }
                          c.lineTo(part.vertices[0].x, part.vertices[0].y);
                          c.closePath();
                        }
                        if (!options.wireframes) {
                          c.fillStyle = part.render.fillStyle;
                          if (part.render.lineWidth) {
                            c.lineWidth = part.render.lineWidth;
                            c.strokeStyle = part.render.strokeStyle;
                            c.stroke();
                          }
                          c.fill();
                        } else {
                          c.lineWidth = 1;
                          c.strokeStyle = "#bbb";
                          c.stroke();
                        }
                      }
                      c.globalAlpha = 1;
                    }
                  }
                };
                Render.bodyWireframes = function(render3, bodies, context3) {
                  var c = context3, showInternalEdges = render3.options.showInternalEdges, body, part, i2, j, k;
                  c.beginPath();
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    body = bodies[i2];
                    if (!body.render.visible)
                      continue;
                    for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {
                      part = body.parts[k];
                      c.moveTo(part.vertices[0].x, part.vertices[0].y);
                      for (j = 1; j < part.vertices.length; j++) {
                        if (!part.vertices[j - 1].isInternal || showInternalEdges) {
                          c.lineTo(part.vertices[j].x, part.vertices[j].y);
                        } else {
                          c.moveTo(part.vertices[j].x, part.vertices[j].y);
                        }
                        if (part.vertices[j].isInternal && !showInternalEdges) {
                          c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);
                        }
                      }
                      c.lineTo(part.vertices[0].x, part.vertices[0].y);
                    }
                  }
                  c.lineWidth = 1;
                  c.strokeStyle = "#bbb";
                  c.stroke();
                };
                Render.bodyConvexHulls = function(render3, bodies, context3) {
                  var c = context3, body, part, i2, j, k;
                  c.beginPath();
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    body = bodies[i2];
                    if (!body.render.visible || body.parts.length === 1)
                      continue;
                    c.moveTo(body.vertices[0].x, body.vertices[0].y);
                    for (j = 1; j < body.vertices.length; j++) {
                      c.lineTo(body.vertices[j].x, body.vertices[j].y);
                    }
                    c.lineTo(body.vertices[0].x, body.vertices[0].y);
                  }
                  c.lineWidth = 1;
                  c.strokeStyle = "rgba(255,255,255,0.2)";
                  c.stroke();
                };
                Render.vertexNumbers = function(render3, bodies, context3) {
                  var c = context3, i2, j, k;
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    var parts = bodies[i2].parts;
                    for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {
                      var part = parts[k];
                      for (j = 0; j < part.vertices.length; j++) {
                        c.fillStyle = "rgba(255,255,255,0.2)";
                        c.fillText(i2 + "_" + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);
                      }
                    }
                  }
                };
                Render.mousePosition = function(render3, mouse, context3) {
                  var c = context3;
                  c.fillStyle = "rgba(255,255,255,0.8)";
                  c.fillText(mouse.position.x + "  " + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);
                };
                Render.bodyBounds = function(render3, bodies, context3) {
                  var c = context3, engine = render3.engine, options = render3.options;
                  c.beginPath();
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2];
                    if (body.render.visible) {
                      var parts = bodies[i2].parts;
                      for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {
                        var part = parts[j];
                        c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);
                      }
                    }
                  }
                  if (options.wireframes) {
                    c.strokeStyle = "rgba(255,255,255,0.08)";
                  } else {
                    c.strokeStyle = "rgba(0,0,0,0.1)";
                  }
                  c.lineWidth = 1;
                  c.stroke();
                };
                Render.bodyAxes = function(render3, bodies, context3) {
                  var c = context3, engine = render3.engine, options = render3.options, part, i2, j, k;
                  c.beginPath();
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2], parts = body.parts;
                    if (!body.render.visible)
                      continue;
                    if (options.showAxes) {
                      for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {
                        part = parts[j];
                        for (k = 0; k < part.axes.length; k++) {
                          var axis = part.axes[k];
                          c.moveTo(part.position.x, part.position.y);
                          c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);
                        }
                      }
                    } else {
                      for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {
                        part = parts[j];
                        for (k = 0; k < part.axes.length; k++) {
                          c.moveTo(part.position.x, part.position.y);
                          c.lineTo(
                            (part.vertices[0].x + part.vertices[part.vertices.length - 1].x) / 2,
                            (part.vertices[0].y + part.vertices[part.vertices.length - 1].y) / 2
                          );
                        }
                      }
                    }
                  }
                  if (options.wireframes) {
                    c.strokeStyle = "indianred";
                    c.lineWidth = 1;
                  } else {
                    c.strokeStyle = "rgba(255, 255, 255, 0.4)";
                    c.globalCompositeOperation = "overlay";
                    c.lineWidth = 2;
                  }
                  c.stroke();
                  c.globalCompositeOperation = "source-over";
                };
                Render.bodyPositions = function(render3, bodies, context3) {
                  var c = context3, engine = render3.engine, options = render3.options, body, part, i2, k;
                  c.beginPath();
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    body = bodies[i2];
                    if (!body.render.visible)
                      continue;
                    for (k = 0; k < body.parts.length; k++) {
                      part = body.parts[k];
                      c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);
                      c.closePath();
                    }
                  }
                  if (options.wireframes) {
                    c.fillStyle = "indianred";
                  } else {
                    c.fillStyle = "rgba(0,0,0,0.5)";
                  }
                  c.fill();
                  c.beginPath();
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    body = bodies[i2];
                    if (body.render.visible) {
                      c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);
                      c.closePath();
                    }
                  }
                  c.fillStyle = "rgba(255,165,0,0.8)";
                  c.fill();
                };
                Render.bodyVelocity = function(render3, bodies, context3) {
                  var c = context3;
                  c.beginPath();
                  for (var i2 = 0; i2 < bodies.length; i2++) {
                    var body = bodies[i2];
                    if (!body.render.visible)
                      continue;
                    var velocity = Body.getVelocity(body);
                    c.moveTo(body.position.x, body.position.y);
                    c.lineTo(body.position.x + velocity.x, body.position.y + velocity.y);
                  }
                  c.lineWidth = 3;
                  c.strokeStyle = "cornflowerblue";
                  c.stroke();
                };
                Render.bodyIds = function(render3, bodies, context3) {
                  var c = context3, i2, j;
                  for (i2 = 0; i2 < bodies.length; i2++) {
                    if (!bodies[i2].render.visible)
                      continue;
                    var parts = bodies[i2].parts;
                    for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {
                      var part = parts[j];
                      c.font = "12px Arial";
                      c.fillStyle = "rgba(255,255,255,0.5)";
                      c.fillText(part.id, part.position.x + 10, part.position.y - 10);
                    }
                  }
                };
                Render.collisions = function(render3, pairs, context3) {
                  var c = context3, options = render3.options, pair, collision, corrected, bodyA, bodyB, i2, j;
                  c.beginPath();
                  for (i2 = 0; i2 < pairs.length; i2++) {
                    pair = pairs[i2];
                    if (!pair.isActive)
                      continue;
                    collision = pair.collision;
                    for (j = 0; j < pair.activeContacts.length; j++) {
                      var contact2 = pair.activeContacts[j], vertex = contact2.vertex;
                      c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);
                    }
                  }
                  if (options.wireframes) {
                    c.fillStyle = "rgba(255,255,255,0.7)";
                  } else {
                    c.fillStyle = "orange";
                  }
                  c.fill();
                  c.beginPath();
                  for (i2 = 0; i2 < pairs.length; i2++) {
                    pair = pairs[i2];
                    if (!pair.isActive)
                      continue;
                    collision = pair.collision;
                    if (pair.activeContacts.length > 0) {
                      var normalPosX = pair.activeContacts[0].vertex.x, normalPosY = pair.activeContacts[0].vertex.y;
                      if (pair.activeContacts.length === 2) {
                        normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;
                        normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;
                      }
                      if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {
                        c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);
                      } else {
                        c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);
                      }
                      c.lineTo(normalPosX, normalPosY);
                    }
                  }
                  if (options.wireframes) {
                    c.strokeStyle = "rgba(255,165,0,0.7)";
                  } else {
                    c.strokeStyle = "orange";
                  }
                  c.lineWidth = 1;
                  c.stroke();
                };
                Render.separations = function(render3, pairs, context3) {
                  var c = context3, options = render3.options, pair, collision, corrected, bodyA, bodyB, i2, j;
                  c.beginPath();
                  for (i2 = 0; i2 < pairs.length; i2++) {
                    pair = pairs[i2];
                    if (!pair.isActive)
                      continue;
                    collision = pair.collision;
                    bodyA = collision.bodyA;
                    bodyB = collision.bodyB;
                    var k = 1;
                    if (!bodyB.isStatic && !bodyA.isStatic)
                      k = 0.5;
                    if (bodyB.isStatic)
                      k = 0;
                    c.moveTo(bodyB.position.x, bodyB.position.y);
                    c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);
                    k = 1;
                    if (!bodyB.isStatic && !bodyA.isStatic)
                      k = 0.5;
                    if (bodyA.isStatic)
                      k = 0;
                    c.moveTo(bodyA.position.x, bodyA.position.y);
                    c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);
                  }
                  if (options.wireframes) {
                    c.strokeStyle = "rgba(255,165,0,0.5)";
                  } else {
                    c.strokeStyle = "orange";
                  }
                  c.stroke();
                };
                Render.inspector = function(inspector, context3) {
                  var engine = inspector.engine, selected = inspector.selected, render3 = inspector.render, options = render3.options, bounds;
                  if (options.hasBounds) {
                    var boundsWidth = render3.bounds.max.x - render3.bounds.min.x, boundsHeight = render3.bounds.max.y - render3.bounds.min.y, boundsScaleX = boundsWidth / render3.options.width, boundsScaleY = boundsHeight / render3.options.height;
                    context3.scale(1 / boundsScaleX, 1 / boundsScaleY);
                    context3.translate(-render3.bounds.min.x, -render3.bounds.min.y);
                  }
                  for (var i2 = 0; i2 < selected.length; i2++) {
                    var item = selected[i2].data;
                    context3.translate(0.5, 0.5);
                    context3.lineWidth = 1;
                    context3.strokeStyle = "rgba(255,165,0,0.9)";
                    context3.setLineDash([1, 2]);
                    switch (item.type) {
                      case "body":
                        bounds = item.bounds;
                        context3.beginPath();
                        context3.rect(
                          Math.floor(bounds.min.x - 3),
                          Math.floor(bounds.min.y - 3),
                          Math.floor(bounds.max.x - bounds.min.x + 6),
                          Math.floor(bounds.max.y - bounds.min.y + 6)
                        );
                        context3.closePath();
                        context3.stroke();
                        break;
                      case "constraint":
                        var point = item.pointA;
                        if (item.bodyA)
                          point = item.pointB;
                        context3.beginPath();
                        context3.arc(point.x, point.y, 10, 0, 2 * Math.PI);
                        context3.closePath();
                        context3.stroke();
                        break;
                    }
                    context3.setLineDash([]);
                    context3.translate(-0.5, -0.5);
                  }
                  if (inspector.selectStart !== null) {
                    context3.translate(0.5, 0.5);
                    context3.lineWidth = 1;
                    context3.strokeStyle = "rgba(255,165,0,0.6)";
                    context3.fillStyle = "rgba(255,165,0,0.1)";
                    bounds = inspector.selectBounds;
                    context3.beginPath();
                    context3.rect(
                      Math.floor(bounds.min.x),
                      Math.floor(bounds.min.y),
                      Math.floor(bounds.max.x - bounds.min.x),
                      Math.floor(bounds.max.y - bounds.min.y)
                    );
                    context3.closePath();
                    context3.stroke();
                    context3.fill();
                    context3.translate(-0.5, -0.5);
                  }
                  if (options.hasBounds)
                    context3.setTransform(1, 0, 0, 1, 0, 0);
                };
                var _updateTiming = function(render3, time) {
                  var engine = render3.engine, timing = render3.timing, historySize = timing.historySize, timestamp = engine.timing.timestamp;
                  timing.delta = time - timing.lastTime || Render._goodDelta;
                  timing.lastTime = time;
                  timing.timestampElapsed = timestamp - timing.lastTimestamp || 0;
                  timing.lastTimestamp = timestamp;
                  timing.deltaHistory.unshift(timing.delta);
                  timing.deltaHistory.length = Math.min(timing.deltaHistory.length, historySize);
                  timing.engineDeltaHistory.unshift(engine.timing.lastDelta);
                  timing.engineDeltaHistory.length = Math.min(timing.engineDeltaHistory.length, historySize);
                  timing.timestampElapsedHistory.unshift(timing.timestampElapsed);
                  timing.timestampElapsedHistory.length = Math.min(timing.timestampElapsedHistory.length, historySize);
                  timing.engineElapsedHistory.unshift(engine.timing.lastElapsed);
                  timing.engineElapsedHistory.length = Math.min(timing.engineElapsedHistory.length, historySize);
                  timing.elapsedHistory.unshift(timing.lastElapsed);
                  timing.elapsedHistory.length = Math.min(timing.elapsedHistory.length, historySize);
                };
                var _mean = function(values) {
                  var result = 0;
                  for (var i2 = 0; i2 < values.length; i2 += 1) {
                    result += values[i2];
                  }
                  return result / values.length || 0;
                };
                var _createCanvas = function(width2, height2) {
                  var canvas = document.createElement("canvas");
                  canvas.width = width2;
                  canvas.height = height2;
                  canvas.oncontextmenu = function() {
                    return false;
                  };
                  canvas.onselectstart = function() {
                    return false;
                  };
                  return canvas;
                };
                var _getPixelRatio = function(canvas) {
                  var context3 = canvas.getContext("2d"), devicePixelRatio = window.devicePixelRatio || 1, backingStorePixelRatio = context3.webkitBackingStorePixelRatio || context3.mozBackingStorePixelRatio || context3.msBackingStorePixelRatio || context3.oBackingStorePixelRatio || context3.backingStorePixelRatio || 1;
                  return devicePixelRatio / backingStorePixelRatio;
                };
                var _getTexture = function(render3, imagePath) {
                  var image = render3.textures[imagePath];
                  if (image)
                    return image;
                  image = render3.textures[imagePath] = new Image();
                  image.src = imagePath;
                  return image;
                };
                var _applyBackground = function(render3, background2) {
                  var cssBackground = background2;
                  if (/(jpg|gif|png)$/.test(background2))
                    cssBackground = "url(" + background2 + ")";
                  render3.canvas.style.background = cssBackground;
                  render3.canvas.style.backgroundSize = "contain";
                  render3.currentBackground = background2;
                };
              })();
            },
            /* 27 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Runner = {};
              module2.exports = Runner;
              var Events = __webpack_require__(5);
              var Engine = __webpack_require__(17);
              var Common = __webpack_require__(0);
              (function() {
                var _requestAnimationFrame, _cancelAnimationFrame;
                if (typeof window !== "undefined") {
                  _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;
                  _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;
                }
                if (!_requestAnimationFrame) {
                  var _frameTimeout;
                  _requestAnimationFrame = function(callback) {
                    _frameTimeout = setTimeout(function() {
                      callback(Common.now());
                    }, 1e3 / 60);
                  };
                  _cancelAnimationFrame = function() {
                    clearTimeout(_frameTimeout);
                  };
                }
                Runner.create = function(options) {
                  var defaults3 = {
                    fps: 60,
                    deltaSampleSize: 60,
                    counterTimestamp: 0,
                    frameCounter: 0,
                    deltaHistory: [],
                    timePrev: null,
                    frameRequestId: null,
                    isFixed: false,
                    enabled: true
                  };
                  var runner = Common.extend(defaults3, options);
                  runner.delta = runner.delta || 1e3 / runner.fps;
                  runner.deltaMin = runner.deltaMin || 1e3 / runner.fps;
                  runner.deltaMax = runner.deltaMax || 1e3 / (runner.fps * 0.5);
                  runner.fps = 1e3 / runner.delta;
                  return runner;
                };
                Runner.run = function(runner, engine) {
                  if (typeof runner.positionIterations !== "undefined") {
                    engine = runner;
                    runner = Runner.create();
                  }
                  (function run(time) {
                    runner.frameRequestId = _requestAnimationFrame(run);
                    if (time && runner.enabled) {
                      Runner.tick(runner, engine, time);
                    }
                  })();
                  return runner;
                };
                Runner.tick = function(runner, engine, time) {
                  var timing = engine.timing, delta;
                  if (runner.isFixed) {
                    delta = runner.delta;
                  } else {
                    delta = time - runner.timePrev || runner.delta;
                    runner.timePrev = time;
                    runner.deltaHistory.push(delta);
                    runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);
                    delta = Math.min.apply(null, runner.deltaHistory);
                    delta = delta < runner.deltaMin ? runner.deltaMin : delta;
                    delta = delta > runner.deltaMax ? runner.deltaMax : delta;
                    runner.delta = delta;
                  }
                  var event2 = {
                    timestamp: timing.timestamp
                  };
                  Events.trigger(runner, "beforeTick", event2);
                  runner.frameCounter += 1;
                  if (time - runner.counterTimestamp >= 1e3) {
                    runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1e3);
                    runner.counterTimestamp = time;
                    runner.frameCounter = 0;
                  }
                  Events.trigger(runner, "tick", event2);
                  Events.trigger(runner, "beforeUpdate", event2);
                  Engine.update(engine, delta);
                  Events.trigger(runner, "afterUpdate", event2);
                  Events.trigger(runner, "afterTick", event2);
                };
                Runner.stop = function(runner) {
                  _cancelAnimationFrame(runner.frameRequestId);
                };
                Runner.start = function(runner, engine) {
                  Runner.run(runner, engine);
                };
              })();
            },
            /* 28 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var SAT = {};
              module2.exports = SAT;
              var Collision = __webpack_require__(8);
              var Common = __webpack_require__(0);
              var deprecated = Common.deprecated;
              (function() {
                SAT.collides = function(bodyA, bodyB) {
                  return Collision.collides(bodyA, bodyB);
                };
                deprecated(SAT, "collides", "SAT.collides \u27A4 replaced by Collision.collides");
              })();
            },
            /* 29 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var Svg = {};
              module2.exports = Svg;
              var Bounds = __webpack_require__(1);
              var Common = __webpack_require__(0);
              (function() {
                Svg.pathToVertices = function(path, sampleLength) {
                  if (typeof window !== "undefined" && !("SVGPathSeg" in window)) {
                    Common.warn("Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.");
                  }
                  var i2, il, total, point, segment, segments, segmentsQueue, lastSegment, lastPoint, segmentIndex, points = [], lx, ly, length = 0, x = 0, y = 0;
                  sampleLength = sampleLength || 15;
                  var addPoint = function(px, py, pathSegType) {
                    var isRelative = pathSegType % 2 === 1 && pathSegType > 1;
                    if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {
                      if (lastPoint && isRelative) {
                        lx = lastPoint.x;
                        ly = lastPoint.y;
                      } else {
                        lx = 0;
                        ly = 0;
                      }
                      var point2 = {
                        x: lx + px,
                        y: ly + py
                      };
                      if (isRelative || !lastPoint) {
                        lastPoint = point2;
                      }
                      points.push(point2);
                      x = lx + px;
                      y = ly + py;
                    }
                  };
                  var addSegmentPoint = function(segment2) {
                    var segType = segment2.pathSegTypeAsLetter.toUpperCase();
                    if (segType === "Z")
                      return;
                    switch (segType) {
                      case "M":
                      case "L":
                      case "T":
                      case "C":
                      case "S":
                      case "Q":
                        x = segment2.x;
                        y = segment2.y;
                        break;
                      case "H":
                        x = segment2.x;
                        break;
                      case "V":
                        y = segment2.y;
                        break;
                    }
                    addPoint(x, y, segment2.pathSegType);
                  };
                  Svg._svgPathToAbsolute(path);
                  total = path.getTotalLength();
                  segments = [];
                  for (i2 = 0; i2 < path.pathSegList.numberOfItems; i2 += 1)
                    segments.push(path.pathSegList.getItem(i2));
                  segmentsQueue = segments.concat();
                  while (length < total) {
                    segmentIndex = path.getPathSegAtLength(length);
                    segment = segments[segmentIndex];
                    if (segment != lastSegment) {
                      while (segmentsQueue.length && segmentsQueue[0] != segment)
                        addSegmentPoint(segmentsQueue.shift());
                      lastSegment = segment;
                    }
                    switch (segment.pathSegTypeAsLetter.toUpperCase()) {
                      case "C":
                      case "T":
                      case "S":
                      case "Q":
                      case "A":
                        point = path.getPointAtLength(length);
                        addPoint(point.x, point.y, 0);
                        break;
                    }
                    length += sampleLength;
                  }
                  for (i2 = 0, il = segmentsQueue.length; i2 < il; ++i2)
                    addSegmentPoint(segmentsQueue[i2]);
                  return points;
                };
                Svg._svgPathToAbsolute = function(path) {
                  var x0, y0, x1, y1, x2, y2, segs = path.pathSegList, x = 0, y = 0, len = segs.numberOfItems;
                  for (var i2 = 0; i2 < len; ++i2) {
                    var seg = segs.getItem(i2), segType = seg.pathSegTypeAsLetter;
                    if (/[MLHVCSQTA]/.test(segType)) {
                      if ("x" in seg)
                        x = seg.x;
                      if ("y" in seg)
                        y = seg.y;
                    } else {
                      if ("x1" in seg)
                        x1 = x + seg.x1;
                      if ("x2" in seg)
                        x2 = x + seg.x2;
                      if ("y1" in seg)
                        y1 = y + seg.y1;
                      if ("y2" in seg)
                        y2 = y + seg.y2;
                      if ("x" in seg)
                        x += seg.x;
                      if ("y" in seg)
                        y += seg.y;
                      switch (segType) {
                        case "m":
                          segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i2);
                          break;
                        case "l":
                          segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i2);
                          break;
                        case "h":
                          segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i2);
                          break;
                        case "v":
                          segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i2);
                          break;
                        case "c":
                          segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i2);
                          break;
                        case "s":
                          segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i2);
                          break;
                        case "q":
                          segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i2);
                          break;
                        case "t":
                          segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i2);
                          break;
                        case "a":
                          segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i2);
                          break;
                        case "z":
                        case "Z":
                          x = x0;
                          y = y0;
                          break;
                      }
                    }
                    if (segType == "M" || segType == "m") {
                      x0 = x;
                      y0 = y;
                    }
                  }
                };
              })();
            },
            /* 30 */
            /***/
            function(module2, exports2, __webpack_require__) {
              var World = {};
              module2.exports = World;
              var Composite = __webpack_require__(6);
              var Common = __webpack_require__(0);
              (function() {
                World.create = Composite.create;
                World.add = Composite.add;
                World.remove = Composite.remove;
                World.clear = Composite.clear;
                World.addComposite = Composite.addComposite;
                World.addBody = Composite.addBody;
                World.addConstraint = Composite.addConstraint;
              })();
            }
            /******/
          ])
        );
      });
    }
  });

  // node_modules/.pnpm/jquery-mask-plugin@1.14.16/node_modules/jquery-mask-plugin/dist/jquery.mask.js
  var require_jquery_mask = __commonJS({
    "node_modules/.pnpm/jquery-mask-plugin@1.14.16/node_modules/jquery-mask-plugin/dist/jquery.mask.js"(exports, module) {
      init_live_reload();
      (function(factory, jQuery2, Zepto) {
        if (typeof define === "function" && define.amd) {
          define(["jquery"], factory);
        } else if (typeof exports === "object" && typeof Meteor === "undefined") {
          module.exports = factory(require_jquery());
        } else {
          factory(jQuery2 || Zepto);
        }
      })(function($6) {
        "use strict";
        var Mask = function(el, mask, options) {
          var p = {
            invalid: [],
            getCaret: function() {
              try {
                var sel, pos = 0, ctrl = el.get(0), dSel = document.selection, cSelStart = ctrl.selectionStart;
                if (dSel && navigator.appVersion.indexOf("MSIE 10") === -1) {
                  sel = dSel.createRange();
                  sel.moveStart("character", -p.val().length);
                  pos = sel.text.length;
                } else if (cSelStart || cSelStart === "0") {
                  pos = cSelStart;
                }
                return pos;
              } catch (e3) {
              }
            },
            setCaret: function(pos) {
              try {
                if (el.is(":focus")) {
                  var range, ctrl = el.get(0);
                  if (ctrl.setSelectionRange) {
                    ctrl.setSelectionRange(pos, pos);
                  } else {
                    range = ctrl.createTextRange();
                    range.collapse(true);
                    range.moveEnd("character", pos);
                    range.moveStart("character", pos);
                    range.select();
                  }
                }
              } catch (e3) {
              }
            },
            events: function() {
              el.on("keydown.mask", function(e3) {
                el.data("mask-keycode", e3.keyCode || e3.which);
                el.data("mask-previus-value", el.val());
                el.data("mask-previus-caret-pos", p.getCaret());
                p.maskDigitPosMapOld = p.maskDigitPosMap;
              }).on($6.jMaskGlobals.useInput ? "input.mask" : "keyup.mask", p.behaviour).on("paste.mask drop.mask", function() {
                setTimeout(function() {
                  el.keydown().keyup();
                }, 100);
              }).on("change.mask", function() {
                el.data("changed", true);
              }).on("blur.mask", function() {
                if (oldValue !== p.val() && !el.data("changed")) {
                  el.trigger("change");
                }
                el.data("changed", false);
              }).on("blur.mask", function() {
                oldValue = p.val();
              }).on("focus.mask", function(e3) {
                if (options.selectOnFocus === true) {
                  $6(e3.target).select();
                }
              }).on("focusout.mask", function() {
                if (options.clearIfNotMatch && !regexMask.test(p.val())) {
                  p.val("");
                }
              });
            },
            getRegexMask: function() {
              var maskChunks = [], translation, pattern, optional, recursive, oRecursive, r2;
              for (var i2 = 0; i2 < mask.length; i2++) {
                translation = jMask.translation[mask.charAt(i2)];
                if (translation) {
                  pattern = translation.pattern.toString().replace(/.{1}$|^.{1}/g, "");
                  optional = translation.optional;
                  recursive = translation.recursive;
                  if (recursive) {
                    maskChunks.push(mask.charAt(i2));
                    oRecursive = { digit: mask.charAt(i2), pattern };
                  } else {
                    maskChunks.push(!optional && !recursive ? pattern : pattern + "?");
                  }
                } else {
                  maskChunks.push(mask.charAt(i2).replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"));
                }
              }
              r2 = maskChunks.join("");
              if (oRecursive) {
                r2 = r2.replace(new RegExp("(" + oRecursive.digit + "(.*" + oRecursive.digit + ")?)"), "($1)?").replace(new RegExp(oRecursive.digit, "g"), oRecursive.pattern);
              }
              return new RegExp(r2);
            },
            destroyEvents: function() {
              el.off(["input", "keydown", "keyup", "paste", "drop", "blur", "focusout", ""].join(".mask "));
            },
            val: function(v) {
              var isInput = el.is("input"), method = isInput ? "val" : "text", r2;
              if (arguments.length > 0) {
                if (el[method]() !== v) {
                  el[method](v);
                }
                r2 = el;
              } else {
                r2 = el[method]();
              }
              return r2;
            },
            calculateCaretPosition: function(oldVal) {
              var newVal = p.getMasked(), caretPosNew = p.getCaret();
              if (oldVal !== newVal) {
                var caretPosOld = el.data("mask-previus-caret-pos") || 0, newValL = newVal.length, oldValL = oldVal.length, maskDigitsBeforeCaret = 0, maskDigitsAfterCaret = 0, maskDigitsBeforeCaretAll = 0, maskDigitsBeforeCaretAllOld = 0, i2 = 0;
                for (i2 = caretPosNew; i2 < newValL; i2++) {
                  if (!p.maskDigitPosMap[i2]) {
                    break;
                  }
                  maskDigitsAfterCaret++;
                }
                for (i2 = caretPosNew - 1; i2 >= 0; i2--) {
                  if (!p.maskDigitPosMap[i2]) {
                    break;
                  }
                  maskDigitsBeforeCaret++;
                }
                for (i2 = caretPosNew - 1; i2 >= 0; i2--) {
                  if (p.maskDigitPosMap[i2]) {
                    maskDigitsBeforeCaretAll++;
                  }
                }
                for (i2 = caretPosOld - 1; i2 >= 0; i2--) {
                  if (p.maskDigitPosMapOld[i2]) {
                    maskDigitsBeforeCaretAllOld++;
                  }
                }
                if (caretPosNew > oldValL) {
                  caretPosNew = newValL * 10;
                } else if (caretPosOld >= caretPosNew && caretPosOld !== oldValL) {
                  if (!p.maskDigitPosMapOld[caretPosNew]) {
                    var caretPos = caretPosNew;
                    caretPosNew -= maskDigitsBeforeCaretAllOld - maskDigitsBeforeCaretAll;
                    caretPosNew -= maskDigitsBeforeCaret;
                    if (p.maskDigitPosMap[caretPosNew]) {
                      caretPosNew = caretPos;
                    }
                  }
                } else if (caretPosNew > caretPosOld) {
                  caretPosNew += maskDigitsBeforeCaretAll - maskDigitsBeforeCaretAllOld;
                  caretPosNew += maskDigitsAfterCaret;
                }
              }
              return caretPosNew;
            },
            behaviour: function(e3) {
              e3 = e3 || window.event;
              p.invalid = [];
              var keyCode = el.data("mask-keycode");
              if ($6.inArray(keyCode, jMask.byPassKeys) === -1) {
                var newVal = p.getMasked(), caretPos = p.getCaret(), oldVal = el.data("mask-previus-value") || "";
                setTimeout(function() {
                  p.setCaret(p.calculateCaretPosition(oldVal));
                }, $6.jMaskGlobals.keyStrokeCompensation);
                p.val(newVal);
                p.setCaret(caretPos);
                return p.callbacks(e3);
              }
            },
            getMasked: function(skipMaskChars, val) {
              var buf = [], value = val === void 0 ? p.val() : val + "", m = 0, maskLen = mask.length, v = 0, valLen = value.length, offset = 1, addMethod = "push", resetPos = -1, maskDigitCount = 0, maskDigitPosArr = [], lastMaskChar, check;
              if (options.reverse) {
                addMethod = "unshift";
                offset = -1;
                lastMaskChar = 0;
                m = maskLen - 1;
                v = valLen - 1;
                check = function() {
                  return m > -1 && v > -1;
                };
              } else {
                lastMaskChar = maskLen - 1;
                check = function() {
                  return m < maskLen && v < valLen;
                };
              }
              var lastUntranslatedMaskChar;
              while (check()) {
                var maskDigit = mask.charAt(m), valDigit = value.charAt(v), translation = jMask.translation[maskDigit];
                if (translation) {
                  if (valDigit.match(translation.pattern)) {
                    buf[addMethod](valDigit);
                    if (translation.recursive) {
                      if (resetPos === -1) {
                        resetPos = m;
                      } else if (m === lastMaskChar && m !== resetPos) {
                        m = resetPos - offset;
                      }
                      if (lastMaskChar === resetPos) {
                        m -= offset;
                      }
                    }
                    m += offset;
                  } else if (valDigit === lastUntranslatedMaskChar) {
                    maskDigitCount--;
                    lastUntranslatedMaskChar = void 0;
                  } else if (translation.optional) {
                    m += offset;
                    v -= offset;
                  } else if (translation.fallback) {
                    buf[addMethod](translation.fallback);
                    m += offset;
                    v -= offset;
                  } else {
                    p.invalid.push({ p: v, v: valDigit, e: translation.pattern });
                  }
                  v += offset;
                } else {
                  if (!skipMaskChars) {
                    buf[addMethod](maskDigit);
                  }
                  if (valDigit === maskDigit) {
                    maskDigitPosArr.push(v);
                    v += offset;
                  } else {
                    lastUntranslatedMaskChar = maskDigit;
                    maskDigitPosArr.push(v + maskDigitCount);
                    maskDigitCount++;
                  }
                  m += offset;
                }
              }
              var lastMaskCharDigit = mask.charAt(lastMaskChar);
              if (maskLen === valLen + 1 && !jMask.translation[lastMaskCharDigit]) {
                buf.push(lastMaskCharDigit);
              }
              var newVal = buf.join("");
              p.mapMaskdigitPositions(newVal, maskDigitPosArr, valLen);
              return newVal;
            },
            mapMaskdigitPositions: function(newVal, maskDigitPosArr, valLen) {
              var maskDiff = options.reverse ? newVal.length - valLen : 0;
              p.maskDigitPosMap = {};
              for (var i2 = 0; i2 < maskDigitPosArr.length; i2++) {
                p.maskDigitPosMap[maskDigitPosArr[i2] + maskDiff] = 1;
              }
            },
            callbacks: function(e3) {
              var val = p.val(), changed = val !== oldValue, defaultArgs = [val, e3, el, options], callback = function(name, criteria, args) {
                if (typeof options[name] === "function" && criteria) {
                  options[name].apply(this, args);
                }
              };
              callback("onChange", changed === true, defaultArgs);
              callback("onKeyPress", changed === true, defaultArgs);
              callback("onComplete", val.length === mask.length, defaultArgs);
              callback("onInvalid", p.invalid.length > 0, [val, e3, el, p.invalid, options]);
            }
          };
          el = $6(el);
          var jMask = this, oldValue = p.val(), regexMask;
          mask = typeof mask === "function" ? mask(p.val(), void 0, el, options) : mask;
          jMask.mask = mask;
          jMask.options = options;
          jMask.remove = function() {
            var caret = p.getCaret();
            if (jMask.options.placeholder) {
              el.removeAttr("placeholder");
            }
            if (el.data("mask-maxlength")) {
              el.removeAttr("maxlength");
            }
            p.destroyEvents();
            p.val(jMask.getCleanVal());
            p.setCaret(caret);
            return el;
          };
          jMask.getCleanVal = function() {
            return p.getMasked(true);
          };
          jMask.getMaskedVal = function(val) {
            return p.getMasked(false, val);
          };
          jMask.init = function(onlyMask) {
            onlyMask = onlyMask || false;
            options = options || {};
            jMask.clearIfNotMatch = $6.jMaskGlobals.clearIfNotMatch;
            jMask.byPassKeys = $6.jMaskGlobals.byPassKeys;
            jMask.translation = $6.extend({}, $6.jMaskGlobals.translation, options.translation);
            jMask = $6.extend(true, {}, jMask, options);
            regexMask = p.getRegexMask();
            if (onlyMask) {
              p.events();
              p.val(p.getMasked());
            } else {
              if (options.placeholder) {
                el.attr("placeholder", options.placeholder);
              }
              if (el.data("mask")) {
                el.attr("autocomplete", "off");
              }
              for (var i2 = 0, maxlength = true; i2 < mask.length; i2++) {
                var translation = jMask.translation[mask.charAt(i2)];
                if (translation && translation.recursive) {
                  maxlength = false;
                  break;
                }
              }
              if (maxlength) {
                el.attr("maxlength", mask.length).data("mask-maxlength", true);
              }
              p.destroyEvents();
              p.events();
              var caret = p.getCaret();
              p.val(p.getMasked());
              p.setCaret(caret);
            }
          };
          jMask.init(!el.is("input"));
        };
        $6.maskWatchers = {};
        var HTMLAttributes = function() {
          var input = $6(this), options = {}, prefix = "data-mask-", mask = input.attr("data-mask");
          if (input.attr(prefix + "reverse")) {
            options.reverse = true;
          }
          if (input.attr(prefix + "clearifnotmatch")) {
            options.clearIfNotMatch = true;
          }
          if (input.attr(prefix + "selectonfocus") === "true") {
            options.selectOnFocus = true;
          }
          if (notSameMaskObject(input, mask, options)) {
            return input.data("mask", new Mask(this, mask, options));
          }
        }, notSameMaskObject = function(field, mask, options) {
          options = options || {};
          var maskObject = $6(field).data("mask"), stringify = JSON.stringify, value = $6(field).val() || $6(field).text();
          try {
            if (typeof mask === "function") {
              mask = mask(value);
            }
            return typeof maskObject !== "object" || stringify(maskObject.options) !== stringify(options) || maskObject.mask !== mask;
          } catch (e3) {
          }
        }, eventSupported = function(eventName) {
          var el = document.createElement("div"), isSupported;
          eventName = "on" + eventName;
          isSupported = eventName in el;
          if (!isSupported) {
            el.setAttribute(eventName, "return;");
            isSupported = typeof el[eventName] === "function";
          }
          el = null;
          return isSupported;
        };
        $6.fn.mask = function(mask, options) {
          options = options || {};
          var selector3 = this.selector, globals2 = $6.jMaskGlobals, interval = globals2.watchInterval, watchInputs = options.watchInputs || globals2.watchInputs, maskFunction = function() {
            if (notSameMaskObject(this, mask, options)) {
              return $6(this).data("mask", new Mask(this, mask, options));
            }
          };
          $6(this).each(maskFunction);
          if (selector3 && selector3 !== "" && watchInputs) {
            clearInterval($6.maskWatchers[selector3]);
            $6.maskWatchers[selector3] = setInterval(function() {
              $6(document).find(selector3).each(maskFunction);
            }, interval);
          }
          return this;
        };
        $6.fn.masked = function(val) {
          return this.data("mask").getMaskedVal(val);
        };
        $6.fn.unmask = function() {
          clearInterval($6.maskWatchers[this.selector]);
          delete $6.maskWatchers[this.selector];
          return this.each(function() {
            var dataMask = $6(this).data("mask");
            if (dataMask) {
              dataMask.remove().removeData("mask");
            }
          });
        };
        $6.fn.cleanVal = function() {
          return this.data("mask").getCleanVal();
        };
        $6.applyDataMask = function(selector3) {
          selector3 = selector3 || $6.jMaskGlobals.maskElements;
          var $selector = selector3 instanceof $6 ? selector3 : $6(selector3);
          $selector.filter($6.jMaskGlobals.dataMaskAttr).each(HTMLAttributes);
        };
        var globals = {
          maskElements: "input,td,span,div",
          dataMaskAttr: "*[data-mask]",
          dataMask: true,
          watchInterval: 300,
          watchInputs: true,
          keyStrokeCompensation: 10,
          // old versions of chrome dont work great with input event
          useInput: !/Chrome\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && eventSupported("input"),
          watchDataMask: false,
          byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91],
          translation: {
            "0": { pattern: /\d/ },
            "9": { pattern: /\d/, optional: true },
            "#": { pattern: /\d/, recursive: true },
            "A": { pattern: /[a-zA-Z0-9]/ },
            "S": { pattern: /[a-zA-Z]/ }
          }
        };
        $6.jMaskGlobals = $6.jMaskGlobals || {};
        globals = $6.jMaskGlobals = $6.extend(true, {}, globals, $6.jMaskGlobals);
        if (globals.dataMask) {
          $6.applyDataMask();
        }
        setInterval(function() {
          if ($6.jMaskGlobals.watchDataMask) {
            $6.applyDataMask();
          }
        }, globals.watchInterval);
      }, window.jQuery, window.Zepto);
    }
  });

  // node_modules/.pnpm/jquery-validation@1.19.5_jquery@3.7.1/node_modules/jquery-validation/dist/jquery.validate.js
  var require_jquery_validate = __commonJS({
    "node_modules/.pnpm/jquery-validation@1.19.5_jquery@3.7.1/node_modules/jquery-validation/dist/jquery.validate.js"(exports, module) {
      init_live_reload();
      (function(factory) {
        if (typeof define === "function" && define.amd) {
          define(["jquery"], factory);
        } else if (typeof module === "object" && module.exports) {
          module.exports = factory(require_jquery());
        } else {
          factory(jQuery);
        }
      })(function($6) {
        $6.extend($6.fn, {
          // https://jqueryvalidation.org/validate/
          validate: function(options) {
            if (!this.length) {
              if (options && options.debug && window.console) {
                console.warn("Nothing selected, can't validate, returning nothing.");
              }
              return;
            }
            var validator = $6.data(this[0], "validator");
            if (validator) {
              return validator;
            }
            this.attr("novalidate", "novalidate");
            validator = new $6.validator(options, this[0]);
            $6.data(this[0], "validator", validator);
            if (validator.settings.onsubmit) {
              this.on("click.validate", ":submit", function(event2) {
                validator.submitButton = event2.currentTarget;
                if ($6(this).hasClass("cancel")) {
                  validator.cancelSubmit = true;
                }
                if ($6(this).attr("formnovalidate") !== void 0) {
                  validator.cancelSubmit = true;
                }
              });
              this.on("submit.validate", function(event2) {
                if (validator.settings.debug) {
                  event2.preventDefault();
                }
                function handle() {
                  var hidden, result;
                  if (validator.submitButton && (validator.settings.submitHandler || validator.formSubmitted)) {
                    hidden = $6("<input type='hidden'/>").attr("name", validator.submitButton.name).val($6(validator.submitButton).val()).appendTo(validator.currentForm);
                  }
                  if (validator.settings.submitHandler && !validator.settings.debug) {
                    result = validator.settings.submitHandler.call(validator, validator.currentForm, event2);
                    if (hidden) {
                      hidden.remove();
                    }
                    if (result !== void 0) {
                      return result;
                    }
                    return false;
                  }
                  return true;
                }
                if (validator.cancelSubmit) {
                  validator.cancelSubmit = false;
                  return handle();
                }
                if (validator.form()) {
                  if (validator.pendingRequest) {
                    validator.formSubmitted = true;
                    return false;
                  }
                  return handle();
                } else {
                  validator.focusInvalid();
                  return false;
                }
              });
            }
            return validator;
          },
          // https://jqueryvalidation.org/valid/
          valid: function() {
            var valid, validator, errorList;
            if ($6(this[0]).is("form")) {
              valid = this.validate().form();
            } else {
              errorList = [];
              valid = true;
              validator = $6(this[0].form).validate();
              this.each(function() {
                valid = validator.element(this) && valid;
                if (!valid) {
                  errorList = errorList.concat(validator.errorList);
                }
              });
              validator.errorList = errorList;
            }
            return valid;
          },
          // https://jqueryvalidation.org/rules/
          rules: function(command, argument) {
            var element = this[0], isContentEditable = typeof this.attr("contenteditable") !== "undefined" && this.attr("contenteditable") !== "false", settings, staticRules, existingRules, data, param, filtered;
            if (element == null) {
              return;
            }
            if (!element.form && isContentEditable) {
              element.form = this.closest("form")[0];
              element.name = this.attr("name");
            }
            if (element.form == null) {
              return;
            }
            if (command) {
              settings = $6.data(element.form, "validator").settings;
              staticRules = settings.rules;
              existingRules = $6.validator.staticRules(element);
              switch (command) {
                case "add":
                  $6.extend(existingRules, $6.validator.normalizeRule(argument));
                  delete existingRules.messages;
                  staticRules[element.name] = existingRules;
                  if (argument.messages) {
                    settings.messages[element.name] = $6.extend(settings.messages[element.name], argument.messages);
                  }
                  break;
                case "remove":
                  if (!argument) {
                    delete staticRules[element.name];
                    return existingRules;
                  }
                  filtered = {};
                  $6.each(argument.split(/\s/), function(index, method) {
                    filtered[method] = existingRules[method];
                    delete existingRules[method];
                  });
                  return filtered;
              }
            }
            data = $6.validator.normalizeRules(
              $6.extend(
                {},
                $6.validator.classRules(element),
                $6.validator.attributeRules(element),
                $6.validator.dataRules(element),
                $6.validator.staticRules(element)
              ),
              element
            );
            if (data.required) {
              param = data.required;
              delete data.required;
              data = $6.extend({ required: param }, data);
            }
            if (data.remote) {
              param = data.remote;
              delete data.remote;
              data = $6.extend(data, { remote: param });
            }
            return data;
          }
        });
        var trim = function(str) {
          return str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
        };
        $6.extend($6.expr.pseudos || $6.expr[":"], {
          // '|| $.expr[ ":" ]' here enables backwards compatibility to jQuery 1.7. Can be removed when dropping jQ 1.7.x support
          // https://jqueryvalidation.org/blank-selector/
          blank: function(a) {
            return !trim("" + $6(a).val());
          },
          // https://jqueryvalidation.org/filled-selector/
          filled: function(a) {
            var val = $6(a).val();
            return val !== null && !!trim("" + val);
          },
          // https://jqueryvalidation.org/unchecked-selector/
          unchecked: function(a) {
            return !$6(a).prop("checked");
          }
        });
        $6.validator = function(options, form) {
          this.settings = $6.extend(true, {}, $6.validator.defaults, options);
          this.currentForm = form;
          this.init();
        };
        $6.validator.format = function(source, params) {
          if (arguments.length === 1) {
            return function() {
              var args = $6.makeArray(arguments);
              args.unshift(source);
              return $6.validator.format.apply(this, args);
            };
          }
          if (params === void 0) {
            return source;
          }
          if (arguments.length > 2 && params.constructor !== Array) {
            params = $6.makeArray(arguments).slice(1);
          }
          if (params.constructor !== Array) {
            params = [params];
          }
          $6.each(params, function(i2, n2) {
            source = source.replace(new RegExp("\\{" + i2 + "\\}", "g"), function() {
              return n2;
            });
          });
          return source;
        };
        $6.extend($6.validator, {
          defaults: {
            messages: {},
            groups: {},
            rules: {},
            errorClass: "error",
            pendingClass: "pending",
            validClass: "valid",
            errorElement: "label",
            focusCleanup: false,
            focusInvalid: true,
            errorContainer: $6([]),
            errorLabelContainer: $6([]),
            onsubmit: true,
            ignore: ":hidden",
            ignoreTitle: false,
            onfocusin: function(element) {
              this.lastActive = element;
              if (this.settings.focusCleanup) {
                if (this.settings.unhighlight) {
                  this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);
                }
                this.hideThese(this.errorsFor(element));
              }
            },
            onfocusout: function(element) {
              if (!this.checkable(element) && (element.name in this.submitted || !this.optional(element))) {
                this.element(element);
              }
            },
            onkeyup: function(element, event2) {
              var excludedKeys = [
                16,
                17,
                18,
                20,
                35,
                36,
                37,
                38,
                39,
                40,
                45,
                144,
                225
              ];
              if (event2.which === 9 && this.elementValue(element) === "" || $6.inArray(event2.keyCode, excludedKeys) !== -1) {
                return;
              } else if (element.name in this.submitted || element.name in this.invalid) {
                this.element(element);
              }
            },
            onclick: function(element) {
              if (element.name in this.submitted) {
                this.element(element);
              } else if (element.parentNode.name in this.submitted) {
                this.element(element.parentNode);
              }
            },
            highlight: function(element, errorClass, validClass) {
              if (element.type === "radio") {
                this.findByName(element.name).addClass(errorClass).removeClass(validClass);
              } else {
                $6(element).addClass(errorClass).removeClass(validClass);
              }
            },
            unhighlight: function(element, errorClass, validClass) {
              if (element.type === "radio") {
                this.findByName(element.name).removeClass(errorClass).addClass(validClass);
              } else {
                $6(element).removeClass(errorClass).addClass(validClass);
              }
            }
          },
          // https://jqueryvalidation.org/jQuery.validator.setDefaults/
          setDefaults: function(settings) {
            $6.extend($6.validator.defaults, settings);
          },
          messages: {
            required: "This field is required.",
            remote: "Please fix this field.",
            email: "Please enter a valid email address.",
            url: "Please enter a valid URL.",
            date: "Please enter a valid date.",
            dateISO: "Please enter a valid date (ISO).",
            number: "Please enter a valid number.",
            digits: "Please enter only digits.",
            equalTo: "Please enter the same value again.",
            maxlength: $6.validator.format("Please enter no more than {0} characters."),
            minlength: $6.validator.format("Please enter at least {0} characters."),
            rangelength: $6.validator.format("Please enter a value between {0} and {1} characters long."),
            range: $6.validator.format("Please enter a value between {0} and {1}."),
            max: $6.validator.format("Please enter a value less than or equal to {0}."),
            min: $6.validator.format("Please enter a value greater than or equal to {0}."),
            step: $6.validator.format("Please enter a multiple of {0}.")
          },
          autoCreateRanges: false,
          prototype: {
            init: function() {
              this.labelContainer = $6(this.settings.errorLabelContainer);
              this.errorContext = this.labelContainer.length && this.labelContainer || $6(this.currentForm);
              this.containers = $6(this.settings.errorContainer).add(this.settings.errorLabelContainer);
              this.submitted = {};
              this.valueCache = {};
              this.pendingRequest = 0;
              this.pending = {};
              this.invalid = {};
              this.reset();
              var currentForm = this.currentForm, groups = this.groups = {}, rules;
              $6.each(this.settings.groups, function(key, value) {
                if (typeof value === "string") {
                  value = value.split(/\s/);
                }
                $6.each(value, function(index, name) {
                  groups[name] = key;
                });
              });
              rules = this.settings.rules;
              $6.each(rules, function(key, value) {
                rules[key] = $6.validator.normalizeRule(value);
              });
              function delegate(event2) {
                var isContentEditable = typeof $6(this).attr("contenteditable") !== "undefined" && $6(this).attr("contenteditable") !== "false";
                if (!this.form && isContentEditable) {
                  this.form = $6(this).closest("form")[0];
                  this.name = $6(this).attr("name");
                }
                if (currentForm !== this.form) {
                  return;
                }
                var validator = $6.data(this.form, "validator"), eventType = "on" + event2.type.replace(/^validate/, ""), settings = validator.settings;
                if (settings[eventType] && !$6(this).is(settings.ignore)) {
                  settings[eventType].call(validator, this, event2);
                }
              }
              $6(this.currentForm).on(
                "focusin.validate focusout.validate keyup.validate",
                ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",
                delegate
              ).on("click.validate", "select, option, [type='radio'], [type='checkbox']", delegate);
              if (this.settings.invalidHandler) {
                $6(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler);
              }
            },
            // https://jqueryvalidation.org/Validator.form/
            form: function() {
              this.checkForm();
              $6.extend(this.submitted, this.errorMap);
              this.invalid = $6.extend({}, this.errorMap);
              if (!this.valid()) {
                $6(this.currentForm).triggerHandler("invalid-form", [this]);
              }
              this.showErrors();
              return this.valid();
            },
            checkForm: function() {
              this.prepareForm();
              for (var i2 = 0, elements = this.currentElements = this.elements(); elements[i2]; i2++) {
                this.check(elements[i2]);
              }
              return this.valid();
            },
            // https://jqueryvalidation.org/Validator.element/
            element: function(element) {
              var cleanElement = this.clean(element), checkElement = this.validationTargetFor(cleanElement), v = this, result = true, rs, group;
              if (checkElement === void 0) {
                delete this.invalid[cleanElement.name];
              } else {
                this.prepareElement(checkElement);
                this.currentElements = $6(checkElement);
                group = this.groups[checkElement.name];
                if (group) {
                  $6.each(this.groups, function(name, testgroup) {
                    if (testgroup === group && name !== checkElement.name) {
                      cleanElement = v.validationTargetFor(v.clean(v.findByName(name)));
                      if (cleanElement && cleanElement.name in v.invalid) {
                        v.currentElements.push(cleanElement);
                        result = v.check(cleanElement) && result;
                      }
                    }
                  });
                }
                rs = this.check(checkElement) !== false;
                result = result && rs;
                if (rs) {
                  this.invalid[checkElement.name] = false;
                } else {
                  this.invalid[checkElement.name] = true;
                }
                if (!this.numberOfInvalids()) {
                  this.toHide = this.toHide.add(this.containers);
                }
                this.showErrors();
                $6(element).attr("aria-invalid", !rs);
              }
              return result;
            },
            // https://jqueryvalidation.org/Validator.showErrors/
            showErrors: function(errors) {
              if (errors) {
                var validator = this;
                $6.extend(this.errorMap, errors);
                this.errorList = $6.map(this.errorMap, function(message, name) {
                  return {
                    message,
                    element: validator.findByName(name)[0]
                  };
                });
                this.successList = $6.grep(this.successList, function(element) {
                  return !(element.name in errors);
                });
              }
              if (this.settings.showErrors) {
                this.settings.showErrors.call(this, this.errorMap, this.errorList);
              } else {
                this.defaultShowErrors();
              }
            },
            // https://jqueryvalidation.org/Validator.resetForm/
            resetForm: function() {
              if ($6.fn.resetForm) {
                $6(this.currentForm).resetForm();
              }
              this.invalid = {};
              this.submitted = {};
              this.prepareForm();
              this.hideErrors();
              var elements = this.elements().removeData("previousValue").removeAttr("aria-invalid");
              this.resetElements(elements);
            },
            resetElements: function(elements) {
              var i2;
              if (this.settings.unhighlight) {
                for (i2 = 0; elements[i2]; i2++) {
                  this.settings.unhighlight.call(
                    this,
                    elements[i2],
                    this.settings.errorClass,
                    ""
                  );
                  this.findByName(elements[i2].name).removeClass(this.settings.validClass);
                }
              } else {
                elements.removeClass(this.settings.errorClass).removeClass(this.settings.validClass);
              }
            },
            numberOfInvalids: function() {
              return this.objectLength(this.invalid);
            },
            objectLength: function(obj) {
              var count = 0, i2;
              for (i2 in obj) {
                if (obj[i2] !== void 0 && obj[i2] !== null && obj[i2] !== false) {
                  count++;
                }
              }
              return count;
            },
            hideErrors: function() {
              this.hideThese(this.toHide);
            },
            hideThese: function(errors) {
              errors.not(this.containers).text("");
              this.addWrapper(errors).hide();
            },
            valid: function() {
              return this.size() === 0;
            },
            size: function() {
              return this.errorList.length;
            },
            focusInvalid: function() {
              if (this.settings.focusInvalid) {
                try {
                  $6(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").trigger("focus").trigger("focusin");
                } catch (e3) {
                }
              }
            },
            findLastActive: function() {
              var lastActive = this.lastActive;
              return lastActive && $6.grep(this.errorList, function(n2) {
                return n2.element.name === lastActive.name;
              }).length === 1 && lastActive;
            },
            elements: function() {
              var validator = this, rulesCache = {};
              return $6(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function() {
                var name = this.name || $6(this).attr("name");
                var isContentEditable = typeof $6(this).attr("contenteditable") !== "undefined" && $6(this).attr("contenteditable") !== "false";
                if (!name && validator.settings.debug && window.console) {
                  console.error("%o has no name assigned", this);
                }
                if (isContentEditable) {
                  this.form = $6(this).closest("form")[0];
                  this.name = name;
                }
                if (this.form !== validator.currentForm) {
                  return false;
                }
                if (name in rulesCache || !validator.objectLength($6(this).rules())) {
                  return false;
                }
                rulesCache[name] = true;
                return true;
              });
            },
            clean: function(selector3) {
              return $6(selector3)[0];
            },
            errors: function() {
              var errorClass = this.settings.errorClass.split(" ").join(".");
              return $6(this.settings.errorElement + "." + errorClass, this.errorContext);
            },
            resetInternals: function() {
              this.successList = [];
              this.errorList = [];
              this.errorMap = {};
              this.toShow = $6([]);
              this.toHide = $6([]);
            },
            reset: function() {
              this.resetInternals();
              this.currentElements = $6([]);
            },
            prepareForm: function() {
              this.reset();
              this.toHide = this.errors().add(this.containers);
            },
            prepareElement: function(element) {
              this.reset();
              this.toHide = this.errorsFor(element);
            },
            elementValue: function(element) {
              var $element = $6(element), type = element.type, isContentEditable = typeof $element.attr("contenteditable") !== "undefined" && $element.attr("contenteditable") !== "false", val, idx;
              if (type === "radio" || type === "checkbox") {
                return this.findByName(element.name).filter(":checked").val();
              } else if (type === "number" && typeof element.validity !== "undefined") {
                return element.validity.badInput ? "NaN" : $element.val();
              }
              if (isContentEditable) {
                val = $element.text();
              } else {
                val = $element.val();
              }
              if (type === "file") {
                if (val.substr(0, 12) === "C:\\fakepath\\") {
                  return val.substr(12);
                }
                idx = val.lastIndexOf("/");
                if (idx >= 0) {
                  return val.substr(idx + 1);
                }
                idx = val.lastIndexOf("\\");
                if (idx >= 0) {
                  return val.substr(idx + 1);
                }
                return val;
              }
              if (typeof val === "string") {
                return val.replace(/\r/g, "");
              }
              return val;
            },
            check: function(element) {
              element = this.validationTargetFor(this.clean(element));
              var rules = $6(element).rules(), rulesCount = $6.map(rules, function(n2, i2) {
                return i2;
              }).length, dependencyMismatch = false, val = this.elementValue(element), result, method, rule, normalizer;
              if (typeof rules.normalizer === "function") {
                normalizer = rules.normalizer;
              } else if (typeof this.settings.normalizer === "function") {
                normalizer = this.settings.normalizer;
              }
              if (normalizer) {
                val = normalizer.call(element, val);
                delete rules.normalizer;
              }
              for (method in rules) {
                rule = { method, parameters: rules[method] };
                try {
                  result = $6.validator.methods[method].call(this, val, element, rule.parameters);
                  if (result === "dependency-mismatch" && rulesCount === 1) {
                    dependencyMismatch = true;
                    continue;
                  }
                  dependencyMismatch = false;
                  if (result === "pending") {
                    this.toHide = this.toHide.not(this.errorsFor(element));
                    return;
                  }
                  if (!result) {
                    this.formatAndAdd(element, rule);
                    return false;
                  }
                } catch (e3) {
                  if (this.settings.debug && window.console) {
                    console.log("Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.", e3);
                  }
                  if (e3 instanceof TypeError) {
                    e3.message += ".  Exception occurred when checking element " + element.id + ", check the '" + rule.method + "' method.";
                  }
                  throw e3;
                }
              }
              if (dependencyMismatch) {
                return;
              }
              if (this.objectLength(rules)) {
                this.successList.push(element);
              }
              return true;
            },
            // Return the custom message for the given element and validation method
            // specified in the element's HTML5 data attribute
            // return the generic message if present and no method specific message is present
            customDataMessage: function(element, method) {
              return $6(element).data("msg" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase()) || $6(element).data("msg");
            },
            // Return the custom message for the given element name and validation method
            customMessage: function(name, method) {
              var m = this.settings.messages[name];
              return m && (m.constructor === String ? m : m[method]);
            },
            // Return the first defined argument, allowing empty strings
            findDefined: function() {
              for (var i2 = 0; i2 < arguments.length; i2++) {
                if (arguments[i2] !== void 0) {
                  return arguments[i2];
                }
              }
              return void 0;
            },
            // The second parameter 'rule' used to be a string, and extended to an object literal
            // of the following form:
            // rule = {
            //     method: "method name",
            //     parameters: "the given method parameters"
            // }
            //
            // The old behavior still supported, kept to maintain backward compatibility with
            // old code, and will be removed in the next major release.
            defaultMessage: function(element, rule) {
              if (typeof rule === "string") {
                rule = { method: rule };
              }
              var message = this.findDefined(
                this.customMessage(element.name, rule.method),
                this.customDataMessage(element, rule.method),
                // 'title' is never undefined, so handle empty string as undefined
                !this.settings.ignoreTitle && element.title || void 0,
                $6.validator.messages[rule.method],
                "<strong>Warning: No message defined for " + element.name + "</strong>"
              ), theregex = /\$?\{(\d+)\}/g;
              if (typeof message === "function") {
                message = message.call(this, rule.parameters, element);
              } else if (theregex.test(message)) {
                message = $6.validator.format(message.replace(theregex, "{$1}"), rule.parameters);
              }
              return message;
            },
            formatAndAdd: function(element, rule) {
              var message = this.defaultMessage(element, rule);
              this.errorList.push({
                message,
                element,
                method: rule.method
              });
              this.errorMap[element.name] = message;
              this.submitted[element.name] = message;
            },
            addWrapper: function(toToggle) {
              if (this.settings.wrapper) {
                toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));
              }
              return toToggle;
            },
            defaultShowErrors: function() {
              var i2, elements, error;
              for (i2 = 0; this.errorList[i2]; i2++) {
                error = this.errorList[i2];
                if (this.settings.highlight) {
                  this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);
                }
                this.showLabel(error.element, error.message);
              }
              if (this.errorList.length) {
                this.toShow = this.toShow.add(this.containers);
              }
              if (this.settings.success) {
                for (i2 = 0; this.successList[i2]; i2++) {
                  this.showLabel(this.successList[i2]);
                }
              }
              if (this.settings.unhighlight) {
                for (i2 = 0, elements = this.validElements(); elements[i2]; i2++) {
                  this.settings.unhighlight.call(this, elements[i2], this.settings.errorClass, this.settings.validClass);
                }
              }
              this.toHide = this.toHide.not(this.toShow);
              this.hideErrors();
              this.addWrapper(this.toShow).show();
            },
            validElements: function() {
              return this.currentElements.not(this.invalidElements());
            },
            invalidElements: function() {
              return $6(this.errorList).map(function() {
                return this.element;
              });
            },
            showLabel: function(element, message) {
              var place, group, errorID, v, error = this.errorsFor(element), elementID = this.idOrName(element), describedBy = $6(element).attr("aria-describedby");
              if (error.length) {
                error.removeClass(this.settings.validClass).addClass(this.settings.errorClass);
                error.html(message);
              } else {
                error = $6("<" + this.settings.errorElement + ">").attr("id", elementID + "-error").addClass(this.settings.errorClass).html(message || "");
                place = error;
                if (this.settings.wrapper) {
                  place = error.hide().show().wrap("<" + this.settings.wrapper + "/>").parent();
                }
                if (this.labelContainer.length) {
                  this.labelContainer.append(place);
                } else if (this.settings.errorPlacement) {
                  this.settings.errorPlacement.call(this, place, $6(element));
                } else {
                  place.insertAfter(element);
                }
                if (error.is("label")) {
                  error.attr("for", elementID);
                } else if (error.parents("label[for='" + this.escapeCssMeta(elementID) + "']").length === 0) {
                  errorID = error.attr("id");
                  if (!describedBy) {
                    describedBy = errorID;
                  } else if (!describedBy.match(new RegExp("\\b" + this.escapeCssMeta(errorID) + "\\b"))) {
                    describedBy += " " + errorID;
                  }
                  $6(element).attr("aria-describedby", describedBy);
                  group = this.groups[element.name];
                  if (group) {
                    v = this;
                    $6.each(v.groups, function(name, testgroup) {
                      if (testgroup === group) {
                        $6("[name='" + v.escapeCssMeta(name) + "']", v.currentForm).attr("aria-describedby", error.attr("id"));
                      }
                    });
                  }
                }
              }
              if (!message && this.settings.success) {
                error.text("");
                if (typeof this.settings.success === "string") {
                  error.addClass(this.settings.success);
                } else {
                  this.settings.success(error, element);
                }
              }
              this.toShow = this.toShow.add(error);
            },
            errorsFor: function(element) {
              var name = this.escapeCssMeta(this.idOrName(element)), describer = $6(element).attr("aria-describedby"), selector3 = "label[for='" + name + "'], label[for='" + name + "'] *";
              if (describer) {
                selector3 = selector3 + ", #" + this.escapeCssMeta(describer).replace(/\s+/g, ", #");
              }
              return this.errors().filter(selector3);
            },
            // See https://api.jquery.com/category/selectors/, for CSS
            // meta-characters that should be escaped in order to be used with JQuery
            // as a literal part of a name/id or any selector.
            escapeCssMeta: function(string) {
              if (string === void 0) {
                return "";
              }
              return string.replace(/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g, "\\$1");
            },
            idOrName: function(element) {
              return this.groups[element.name] || (this.checkable(element) ? element.name : element.id || element.name);
            },
            validationTargetFor: function(element) {
              if (this.checkable(element)) {
                element = this.findByName(element.name);
              }
              return $6(element).not(this.settings.ignore)[0];
            },
            checkable: function(element) {
              return /radio|checkbox/i.test(element.type);
            },
            findByName: function(name) {
              return $6(this.currentForm).find("[name='" + this.escapeCssMeta(name) + "']");
            },
            getLength: function(value, element) {
              switch (element.nodeName.toLowerCase()) {
                case "select":
                  return $6("option:selected", element).length;
                case "input":
                  if (this.checkable(element)) {
                    return this.findByName(element.name).filter(":checked").length;
                  }
              }
              return value.length;
            },
            depend: function(param, element) {
              return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;
            },
            dependTypes: {
              "boolean": function(param) {
                return param;
              },
              "string": function(param, element) {
                return !!$6(param, element.form).length;
              },
              "function": function(param, element) {
                return param(element);
              }
            },
            optional: function(element) {
              var val = this.elementValue(element);
              return !$6.validator.methods.required.call(this, val, element) && "dependency-mismatch";
            },
            startRequest: function(element) {
              if (!this.pending[element.name]) {
                this.pendingRequest++;
                $6(element).addClass(this.settings.pendingClass);
                this.pending[element.name] = true;
              }
            },
            stopRequest: function(element, valid) {
              this.pendingRequest--;
              if (this.pendingRequest < 0) {
                this.pendingRequest = 0;
              }
              delete this.pending[element.name];
              $6(element).removeClass(this.settings.pendingClass);
              if (valid && this.pendingRequest === 0 && this.formSubmitted && this.form() && this.pendingRequest === 0) {
                $6(this.currentForm).trigger("submit");
                if (this.submitButton) {
                  $6("input:hidden[name='" + this.submitButton.name + "']", this.currentForm).remove();
                }
                this.formSubmitted = false;
              } else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {
                $6(this.currentForm).triggerHandler("invalid-form", [this]);
                this.formSubmitted = false;
              }
            },
            previousValue: function(element, method) {
              method = typeof method === "string" && method || "remote";
              return $6.data(element, "previousValue") || $6.data(element, "previousValue", {
                old: null,
                valid: true,
                message: this.defaultMessage(element, { method })
              });
            },
            // Cleans up all forms and elements, removes validator-specific events
            destroy: function() {
              this.resetForm();
              $6(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur").find(".validate-lessThan-blur").off(".validate-lessThan").removeClass("validate-lessThan-blur").find(".validate-lessThanEqual-blur").off(".validate-lessThanEqual").removeClass("validate-lessThanEqual-blur").find(".validate-greaterThanEqual-blur").off(".validate-greaterThanEqual").removeClass("validate-greaterThanEqual-blur").find(".validate-greaterThan-blur").off(".validate-greaterThan").removeClass("validate-greaterThan-blur");
            }
          },
          classRuleSettings: {
            required: { required: true },
            email: { email: true },
            url: { url: true },
            date: { date: true },
            dateISO: { dateISO: true },
            number: { number: true },
            digits: { digits: true },
            creditcard: { creditcard: true }
          },
          addClassRules: function(className, rules) {
            if (className.constructor === String) {
              this.classRuleSettings[className] = rules;
            } else {
              $6.extend(this.classRuleSettings, className);
            }
          },
          classRules: function(element) {
            var rules = {}, classes2 = $6(element).attr("class");
            if (classes2) {
              $6.each(classes2.split(" "), function() {
                if (this in $6.validator.classRuleSettings) {
                  $6.extend(rules, $6.validator.classRuleSettings[this]);
                }
              });
            }
            return rules;
          },
          normalizeAttributeRule: function(rules, type, method, value) {
            if (/min|max|step/.test(method) && (type === null || /number|range|text/.test(type))) {
              value = Number(value);
              if (isNaN(value)) {
                value = void 0;
              }
            }
            if (value || value === 0) {
              rules[method] = value;
            } else if (type === method && type !== "range") {
              rules[type === "date" ? "dateISO" : method] = true;
            }
          },
          attributeRules: function(element) {
            var rules = {}, $element = $6(element), type = element.getAttribute("type"), method, value;
            for (method in $6.validator.methods) {
              if (method === "required") {
                value = element.getAttribute(method);
                if (value === "") {
                  value = true;
                }
                value = !!value;
              } else {
                value = $element.attr(method);
              }
              this.normalizeAttributeRule(rules, type, method, value);
            }
            if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {
              delete rules.maxlength;
            }
            return rules;
          },
          dataRules: function(element) {
            var rules = {}, $element = $6(element), type = element.getAttribute("type"), method, value;
            for (method in $6.validator.methods) {
              value = $element.data("rule" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase());
              if (value === "") {
                value = true;
              }
              this.normalizeAttributeRule(rules, type, method, value);
            }
            return rules;
          },
          staticRules: function(element) {
            var rules = {}, validator = $6.data(element.form, "validator");
            if (validator.settings.rules) {
              rules = $6.validator.normalizeRule(validator.settings.rules[element.name]) || {};
            }
            return rules;
          },
          normalizeRules: function(rules, element) {
            $6.each(rules, function(prop, val) {
              if (val === false) {
                delete rules[prop];
                return;
              }
              if (val.param || val.depends) {
                var keepRule = true;
                switch (typeof val.depends) {
                  case "string":
                    keepRule = !!$6(val.depends, element.form).length;
                    break;
                  case "function":
                    keepRule = val.depends.call(element, element);
                    break;
                }
                if (keepRule) {
                  rules[prop] = val.param !== void 0 ? val.param : true;
                } else {
                  $6.data(element.form, "validator").resetElements($6(element));
                  delete rules[prop];
                }
              }
            });
            $6.each(rules, function(rule, parameter) {
              rules[rule] = typeof parameter === "function" && rule !== "normalizer" ? parameter(element) : parameter;
            });
            $6.each(["minlength", "maxlength"], function() {
              if (rules[this]) {
                rules[this] = Number(rules[this]);
              }
            });
            $6.each(["rangelength", "range"], function() {
              var parts;
              if (rules[this]) {
                if (Array.isArray(rules[this])) {
                  rules[this] = [Number(rules[this][0]), Number(rules[this][1])];
                } else if (typeof rules[this] === "string") {
                  parts = rules[this].replace(/[\[\]]/g, "").split(/[\s,]+/);
                  rules[this] = [Number(parts[0]), Number(parts[1])];
                }
              }
            });
            if ($6.validator.autoCreateRanges) {
              if (rules.min != null && rules.max != null) {
                rules.range = [rules.min, rules.max];
                delete rules.min;
                delete rules.max;
              }
              if (rules.minlength != null && rules.maxlength != null) {
                rules.rangelength = [rules.minlength, rules.maxlength];
                delete rules.minlength;
                delete rules.maxlength;
              }
            }
            return rules;
          },
          // Converts a simple string to a {string: true} rule, e.g., "required" to {required:true}
          normalizeRule: function(data) {
            if (typeof data === "string") {
              var transformed = {};
              $6.each(data.split(/\s/), function() {
                transformed[this] = true;
              });
              data = transformed;
            }
            return data;
          },
          // https://jqueryvalidation.org/jQuery.validator.addMethod/
          addMethod: function(name, method, message) {
            $6.validator.methods[name] = method;
            $6.validator.messages[name] = message !== void 0 ? message : $6.validator.messages[name];
            if (method.length < 3) {
              $6.validator.addClassRules(name, $6.validator.normalizeRule(name));
            }
          },
          // https://jqueryvalidation.org/jQuery.validator.methods/
          methods: {
            // https://jqueryvalidation.org/required-method/
            required: function(value, element, param) {
              if (!this.depend(param, element)) {
                return "dependency-mismatch";
              }
              if (element.nodeName.toLowerCase() === "select") {
                var val = $6(element).val();
                return val && val.length > 0;
              }
              if (this.checkable(element)) {
                return this.getLength(value, element) > 0;
              }
              return value !== void 0 && value !== null && value.length > 0;
            },
            // https://jqueryvalidation.org/email-method/
            email: function(value, element) {
              return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);
            },
            // https://jqueryvalidation.org/url-method/
            url: function(value, element) {
              return this.optional(element) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:(?:[^\]\[?\/<~#`!@$^&*()+=}|:";',>{ ]|%[0-9A-Fa-f]{2})+(?::(?:[^\]\[?\/<~#`!@$^&*()+=}|:";',>{ ]|%[0-9A-Fa-f]{2})*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(value);
            },
            // https://jqueryvalidation.org/date-method/
            date: function() {
              var called = false;
              return function(value, element) {
                if (!called) {
                  called = true;
                  if (this.settings.debug && window.console) {
                    console.warn(
                      "The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`."
                    );
                  }
                }
                return this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());
              };
            }(),
            // https://jqueryvalidation.org/dateISO-method/
            dateISO: function(value, element) {
              return this.optional(element) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);
            },
            // https://jqueryvalidation.org/number-method/
            number: function(value, element) {
              return this.optional(element) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(value);
            },
            // https://jqueryvalidation.org/digits-method/
            digits: function(value, element) {
              return this.optional(element) || /^\d+$/.test(value);
            },
            // https://jqueryvalidation.org/minlength-method/
            minlength: function(value, element, param) {
              var length = Array.isArray(value) ? value.length : this.getLength(value, element);
              return this.optional(element) || length >= param;
            },
            // https://jqueryvalidation.org/maxlength-method/
            maxlength: function(value, element, param) {
              var length = Array.isArray(value) ? value.length : this.getLength(value, element);
              return this.optional(element) || length <= param;
            },
            // https://jqueryvalidation.org/rangelength-method/
            rangelength: function(value, element, param) {
              var length = Array.isArray(value) ? value.length : this.getLength(value, element);
              return this.optional(element) || length >= param[0] && length <= param[1];
            },
            // https://jqueryvalidation.org/min-method/
            min: function(value, element, param) {
              return this.optional(element) || value >= param;
            },
            // https://jqueryvalidation.org/max-method/
            max: function(value, element, param) {
              return this.optional(element) || value <= param;
            },
            // https://jqueryvalidation.org/range-method/
            range: function(value, element, param) {
              return this.optional(element) || value >= param[0] && value <= param[1];
            },
            // https://jqueryvalidation.org/step-method/
            step: function(value, element, param) {
              var type = $6(element).attr("type"), errorMessage = "Step attribute on input type " + type + " is not supported.", supportedTypes = ["text", "number", "range"], re = new RegExp("\\b" + type + "\\b"), notSupported = type && !re.test(supportedTypes.join()), decimalPlaces = function(num) {
                var match = ("" + num).match(/(?:\.(\d+))?$/);
                if (!match) {
                  return 0;
                }
                return match[1] ? match[1].length : 0;
              }, toInt = function(num) {
                return Math.round(num * Math.pow(10, decimals));
              }, valid = true, decimals;
              if (notSupported) {
                throw new Error(errorMessage);
              }
              decimals = decimalPlaces(param);
              if (decimalPlaces(value) > decimals || toInt(value) % toInt(param) !== 0) {
                valid = false;
              }
              return this.optional(element) || valid;
            },
            // https://jqueryvalidation.org/equalTo-method/
            equalTo: function(value, element, param) {
              var target = $6(param);
              if (this.settings.onfocusout && target.not(".validate-equalTo-blur").length) {
                target.addClass("validate-equalTo-blur").on("blur.validate-equalTo", function() {
                  $6(element).valid();
                });
              }
              return value === target.val();
            },
            // https://jqueryvalidation.org/remote-method/
            remote: function(value, element, param, method) {
              if (this.optional(element)) {
                return "dependency-mismatch";
              }
              method = typeof method === "string" && method || "remote";
              var previous = this.previousValue(element, method), validator, data, optionDataString;
              if (!this.settings.messages[element.name]) {
                this.settings.messages[element.name] = {};
              }
              previous.originalMessage = previous.originalMessage || this.settings.messages[element.name][method];
              this.settings.messages[element.name][method] = previous.message;
              param = typeof param === "string" && { url: param } || param;
              optionDataString = $6.param($6.extend({ data: value }, param.data));
              if (previous.old === optionDataString) {
                return previous.valid;
              }
              previous.old = optionDataString;
              validator = this;
              this.startRequest(element);
              data = {};
              data[element.name] = value;
              $6.ajax($6.extend(true, {
                mode: "abort",
                port: "validate" + element.name,
                dataType: "json",
                data,
                context: validator.currentForm,
                success: function(response) {
                  var valid = response === true || response === "true", errors, message, submitted;
                  validator.settings.messages[element.name][method] = previous.originalMessage;
                  if (valid) {
                    submitted = validator.formSubmitted;
                    validator.resetInternals();
                    validator.toHide = validator.errorsFor(element);
                    validator.formSubmitted = submitted;
                    validator.successList.push(element);
                    validator.invalid[element.name] = false;
                    validator.showErrors();
                  } else {
                    errors = {};
                    message = response || validator.defaultMessage(element, { method, parameters: value });
                    errors[element.name] = previous.message = message;
                    validator.invalid[element.name] = true;
                    validator.showErrors(errors);
                  }
                  previous.valid = valid;
                  validator.stopRequest(element, valid);
                }
              }, param));
              return "pending";
            }
          }
        });
        var pendingRequests = {}, ajax;
        if ($6.ajaxPrefilter) {
          $6.ajaxPrefilter(function(settings, _, xhr) {
            var port = settings.port;
            if (settings.mode === "abort") {
              if (pendingRequests[port]) {
                pendingRequests[port].abort();
              }
              pendingRequests[port] = xhr;
            }
          });
        } else {
          ajax = $6.ajax;
          $6.ajax = function(settings) {
            var mode = ("mode" in settings ? settings : $6.ajaxSettings).mode, port = ("port" in settings ? settings : $6.ajaxSettings).port;
            if (mode === "abort") {
              if (pendingRequests[port]) {
                pendingRequests[port].abort();
              }
              pendingRequests[port] = ajax.apply(this, arguments);
              return pendingRequests[port];
            }
            return ajax.apply(this, arguments);
          };
        }
        return $6;
      });
    }
  });

  // src/index.ts
  init_live_reload();
  var import_core = __toESM(require_barba_umd(), 1);

  // node_modules/.pnpm/@finsweet+ts-utils@0.39.2/node_modules/@finsweet/ts-utils/dist/webflow/index.js
  init_live_reload();

  // node_modules/.pnpm/@finsweet+ts-utils@0.39.2/node_modules/@finsweet/ts-utils/dist/webflow/getSiteId.js
  init_live_reload();
  var getSiteId = (page = document) => page.documentElement.getAttribute("data-wf-site");

  // node_modules/.pnpm/@finsweet+ts-utils@0.39.2/node_modules/@finsweet/ts-utils/dist/webflow/restartWebflow.js
  init_live_reload();
  var restartWebflow = async (modules) => {
    const { Webflow } = window;
    if (!Webflow || !("destroy" in Webflow) || !("ready" in Webflow) || !("require" in Webflow))
      return;
    if (modules && !modules.length)
      return;
    if (!modules) {
      Webflow.destroy();
      Webflow.ready();
    }
    if (!modules || modules.includes("ix2")) {
      const ix2 = Webflow.require("ix2");
      if (ix2) {
        const { store, actions } = ix2;
        const { eventState } = store.getState().ixSession;
        const stateEntries = Object.entries(eventState);
        if (!modules)
          ix2.destroy();
        ix2.init();
        await Promise.all(stateEntries.map((state) => store.dispatch(actions.eventStateChanged(...state))));
      }
    }
    if (!modules || modules.includes("commerce")) {
      const commerce = Webflow.require("commerce");
      const siteId = getSiteId();
      if (commerce && siteId) {
        commerce.destroy();
        commerce.init({ siteId, apiUrl: "https://render.webflow.com" });
      }
    }
    if (modules?.includes("lightbox"))
      Webflow.require("lightbox")?.ready();
    if (modules?.includes("slider")) {
      const slider = Webflow.require("slider");
      if (slider) {
        slider.redraw();
        slider.ready();
      }
    }
    if (modules?.includes("tabs"))
      Webflow.require("tabs")?.redraw();
    return new Promise((resolve) => Webflow.push(() => resolve(void 0)));
  };

  // node_modules/.pnpm/@studio-freight+lenis@1.0.27/node_modules/@studio-freight/lenis/dist/lenis.modern.mjs
  init_live_reload();
  function t() {
    return t = Object.assign ? Object.assign.bind() : function(t2) {
      for (var i2 = 1; i2 < arguments.length; i2++) {
        var e3 = arguments[i2];
        for (var s2 in e3)
          Object.prototype.hasOwnProperty.call(e3, s2) && (t2[s2] = e3[s2]);
      }
      return t2;
    }, t.apply(this, arguments);
  }
  function i(t2, i2, e3) {
    return Math.max(t2, Math.min(i2, e3));
  }
  var e2 = class {
    advance(t2) {
      var e3;
      if (!this.isRunning)
        return;
      let s2 = false;
      if (this.lerp)
        this.value = (o2 = this.value, n2 = this.to, (1 - (r2 = 1 - Math.exp(-60 * this.lerp * t2))) * o2 + r2 * n2), Math.round(this.value) === this.to && (this.value = this.to, s2 = true);
      else {
        this.currentTime += t2;
        const e4 = i(0, this.currentTime / this.duration, 1);
        s2 = e4 >= 1;
        const o3 = s2 ? 1 : this.easing(e4);
        this.value = this.from + (this.to - this.from) * o3;
      }
      var o2, n2, r2;
      null == (e3 = this.onUpdate) || e3.call(this, this.value, s2), s2 && this.stop();
    }
    stop() {
      this.isRunning = false;
    }
    fromTo(t2, i2, { lerp: e3 = 0.1, duration: s2 = 1, easing: o2 = (t3) => t3, onStart: n2, onUpdate: r2 }) {
      this.from = this.value = t2, this.to = i2, this.lerp = e3, this.duration = s2, this.easing = o2, this.currentTime = 0, this.isRunning = true, null == n2 || n2(), this.onUpdate = r2;
    }
  };
  var s = class {
    constructor({ wrapper: t2, content: i2, autoResize: e3 = true } = {}) {
      if (this.resize = () => {
        this.onWrapperResize(), this.onContentResize();
      }, this.onWrapperResize = () => {
        this.wrapper === window ? (this.width = window.innerWidth, this.height = window.innerHeight) : (this.width = this.wrapper.clientWidth, this.height = this.wrapper.clientHeight);
      }, this.onContentResize = () => {
        this.scrollHeight = this.content.scrollHeight, this.scrollWidth = this.content.scrollWidth;
      }, this.wrapper = t2, this.content = i2, e3) {
        const t3 = function(t4, i3) {
          let e4;
          return function() {
            let i4 = arguments, s2 = this;
            clearTimeout(e4), e4 = setTimeout(function() {
              t4.apply(s2, i4);
            }, 250);
          };
        }(this.resize);
        this.wrapper !== window && (this.wrapperResizeObserver = new ResizeObserver(t3), this.wrapperResizeObserver.observe(this.wrapper)), this.contentResizeObserver = new ResizeObserver(t3), this.contentResizeObserver.observe(this.content);
      }
      this.resize();
    }
    destroy() {
      var t2, i2;
      null == (t2 = this.wrapperResizeObserver) || t2.disconnect(), null == (i2 = this.contentResizeObserver) || i2.disconnect();
    }
    get limit() {
      return { x: this.scrollWidth - this.width, y: this.scrollHeight - this.height };
    }
  };
  var o = class {
    constructor() {
      this.events = {};
    }
    emit(t2, ...i2) {
      let e3 = this.events[t2] || [];
      for (let t3 = 0, s2 = e3.length; t3 < s2; t3++)
        e3[t3](...i2);
    }
    on(t2, i2) {
      var e3;
      return (null == (e3 = this.events[t2]) ? void 0 : e3.push(i2)) || (this.events[t2] = [i2]), () => {
        var e4;
        this.events[t2] = null == (e4 = this.events[t2]) ? void 0 : e4.filter((t3) => i2 !== t3);
      };
    }
    off(t2, i2) {
      var e3;
      this.events[t2] = null == (e3 = this.events[t2]) ? void 0 : e3.filter((t3) => i2 !== t3);
    }
    destroy() {
      this.events = {};
    }
  };
  var n = class {
    constructor(t2, { wheelMultiplier: e3 = 1, touchMultiplier: s2 = 2, normalizeWheel: n2 = false }) {
      this.onTouchStart = (t3) => {
        const { clientX: i2, clientY: e4 } = t3.targetTouches ? t3.targetTouches[0] : t3;
        this.touchStart.x = i2, this.touchStart.y = e4, this.lastDelta = { x: 0, y: 0 };
      }, this.onTouchMove = (t3) => {
        const { clientX: i2, clientY: e4 } = t3.targetTouches ? t3.targetTouches[0] : t3, s3 = -(i2 - this.touchStart.x) * this.touchMultiplier, o2 = -(e4 - this.touchStart.y) * this.touchMultiplier;
        this.touchStart.x = i2, this.touchStart.y = e4, this.lastDelta = { x: s3, y: o2 }, this.emitter.emit("scroll", { deltaX: s3, deltaY: o2, event: t3 });
      }, this.onTouchEnd = (t3) => {
        this.emitter.emit("scroll", { deltaX: this.lastDelta.x, deltaY: this.lastDelta.y, event: t3 });
      }, this.onWheel = (t3) => {
        let { deltaX: e4, deltaY: s3 } = t3;
        this.normalizeWheel && (e4 = i(-100, e4, 100), s3 = i(-100, s3, 100)), e4 *= this.wheelMultiplier, s3 *= this.wheelMultiplier, this.emitter.emit("scroll", { deltaX: e4, deltaY: s3, event: t3 });
      }, this.element = t2, this.wheelMultiplier = e3, this.touchMultiplier = s2, this.normalizeWheel = n2, this.touchStart = { x: null, y: null }, this.emitter = new o(), this.element.addEventListener("wheel", this.onWheel, { passive: false }), this.element.addEventListener("touchstart", this.onTouchStart, { passive: false }), this.element.addEventListener("touchmove", this.onTouchMove, { passive: false }), this.element.addEventListener("touchend", this.onTouchEnd, { passive: false });
    }
    on(t2, i2) {
      return this.emitter.on(t2, i2);
    }
    destroy() {
      this.emitter.destroy(), this.element.removeEventListener("wheel", this.onWheel, { passive: false }), this.element.removeEventListener("touchstart", this.onTouchStart, { passive: false }), this.element.removeEventListener("touchmove", this.onTouchMove, { passive: false }), this.element.removeEventListener("touchend", this.onTouchEnd, { passive: false });
    }
  };
  var r = class {
    constructor({ wrapper: i2 = window, content: r2 = document.documentElement, wheelEventsTarget: l = i2, eventsTarget: h = l, smoothWheel: a = true, smoothTouch: c = false, syncTouch: u = false, syncTouchLerp: p = 0.1, __iosNoInertiaSyncTouchLerp: d = 0.4, touchInertiaMultiplier: m = 35, duration: g, easing: v = (t2) => Math.min(1, 1.001 - Math.pow(2, -10 * t2)), lerp: S = !g && 0.1, infinite: w = false, orientation: f = "vertical", gestureOrientation: y = "vertical", touchMultiplier: T = 1, wheelMultiplier: z = 1, normalizeWheel: M = false, autoResize: L = true } = {}) {
      this.onVirtualScroll = ({ deltaX: i3, deltaY: e3, event: s2 }) => {
        if (s2.ctrlKey)
          return;
        const o2 = s2.type.includes("touch"), n2 = s2.type.includes("wheel");
        if ("both" === this.options.gestureOrientation && 0 === i3 && 0 === e3 || "vertical" === this.options.gestureOrientation && 0 === e3 || "horizontal" === this.options.gestureOrientation && 0 === i3 || o2 && "vertical" === this.options.gestureOrientation && 0 === this.scroll && !this.options.infinite && e3 <= 0)
          return;
        let r3 = s2.composedPath();
        if (r3 = r3.slice(0, r3.indexOf(this.rootElement)), r3.find((t2) => {
          var i4;
          return (null == t2.hasAttribute ? void 0 : t2.hasAttribute("data-lenis-prevent")) || o2 && (null == t2.hasAttribute ? void 0 : t2.hasAttribute("data-lenis-prevent-touch")) || n2 && (null == t2.hasAttribute ? void 0 : t2.hasAttribute("data-lenis-prevent-wheel")) || (null == (i4 = t2.classList) ? void 0 : i4.contains("lenis"));
        }))
          return;
        if (this.isStopped || this.isLocked)
          return void s2.preventDefault();
        if (this.isSmooth = (this.options.smoothTouch || this.options.syncTouch) && o2 || this.options.smoothWheel && n2, !this.isSmooth)
          return this.isScrolling = false, void this.animate.stop();
        s2.preventDefault();
        let l2 = e3;
        "both" === this.options.gestureOrientation ? l2 = Math.abs(e3) > Math.abs(i3) ? e3 : i3 : "horizontal" === this.options.gestureOrientation && (l2 = i3);
        const h2 = o2 && this.options.syncTouch, a2 = o2 && "touchend" === s2.type && Math.abs(l2) > 1;
        a2 && (l2 = this.velocity * this.options.touchInertiaMultiplier), this.scrollTo(this.targetScroll + l2, t({ programmatic: false }, h2 && { lerp: a2 ? this.syncTouchLerp : this.options.__iosNoInertiaSyncTouchLerp }));
      }, this.onScroll = () => {
        if (!this.isScrolling) {
          const t2 = this.animatedScroll;
          this.animatedScroll = this.targetScroll = this.actualScroll, this.velocity = 0, this.direction = Math.sign(this.animatedScroll - t2), this.emit();
        }
      }, window.lenisVersion = "1.0.27", i2 !== document.documentElement && i2 !== document.body || (i2 = window), this.options = { wrapper: i2, content: r2, wheelEventsTarget: l, eventsTarget: h, smoothWheel: a, smoothTouch: c, syncTouch: u, syncTouchLerp: p, __iosNoInertiaSyncTouchLerp: d, touchInertiaMultiplier: m, duration: g, easing: v, lerp: S, infinite: w, gestureOrientation: y, orientation: f, touchMultiplier: T, wheelMultiplier: z, normalizeWheel: M, autoResize: L }, this.animate = new e2(), this.emitter = new o(), this.dimensions = new s({ wrapper: i2, content: r2, autoResize: L }), this.toggleClass("lenis", true), this.velocity = 0, this.isLocked = false, this.isStopped = false, this.isSmooth = u || a || c, this.isScrolling = false, this.targetScroll = this.animatedScroll = this.actualScroll, this.options.wrapper.addEventListener("scroll", this.onScroll, { passive: false }), this.virtualScroll = new n(h, { touchMultiplier: T, wheelMultiplier: z, normalizeWheel: M }), this.virtualScroll.on("scroll", this.onVirtualScroll);
    }
    destroy() {
      this.emitter.destroy(), this.options.wrapper.removeEventListener("scroll", this.onScroll, { passive: false }), this.virtualScroll.destroy(), this.dimensions.destroy(), this.toggleClass("lenis", false), this.toggleClass("lenis-smooth", false), this.toggleClass("lenis-scrolling", false), this.toggleClass("lenis-stopped", false), this.toggleClass("lenis-locked", false);
    }
    on(t2, i2) {
      return this.emitter.on(t2, i2);
    }
    off(t2, i2) {
      return this.emitter.off(t2, i2);
    }
    setScroll(t2) {
      this.isHorizontal ? this.rootElement.scrollLeft = t2 : this.rootElement.scrollTop = t2;
    }
    resize() {
      this.dimensions.resize();
    }
    emit() {
      this.emitter.emit("scroll", this);
    }
    reset() {
      this.isLocked = false, this.isScrolling = false, this.velocity = 0, this.animate.stop();
    }
    start() {
      this.isStopped = false, this.reset();
    }
    stop() {
      this.isStopped = true, this.animate.stop(), this.reset();
    }
    raf(t2) {
      const i2 = t2 - (this.time || t2);
      this.time = t2, this.animate.advance(1e-3 * i2);
    }
    scrollTo(t2, { offset: e3 = 0, immediate: s2 = false, lock: o2 = false, duration: n2 = this.options.duration, easing: r2 = this.options.easing, lerp: l = !n2 && this.options.lerp, onComplete: h = null, force: a = false, programmatic: c = true } = {}) {
      if (!this.isStopped && !this.isLocked || a) {
        if (["top", "left", "start"].includes(t2))
          t2 = 0;
        else if (["bottom", "right", "end"].includes(t2))
          t2 = this.limit;
        else {
          var u;
          let i2;
          if ("string" == typeof t2 ? i2 = document.querySelector(t2) : null != (u = t2) && u.nodeType && (i2 = t2), i2) {
            if (this.options.wrapper !== window) {
              const t3 = this.options.wrapper.getBoundingClientRect();
              e3 -= this.isHorizontal ? t3.left : t3.top;
            }
            const s3 = i2.getBoundingClientRect();
            t2 = (this.isHorizontal ? s3.left : s3.top) + this.animatedScroll;
          }
        }
        if ("number" == typeof t2) {
          if (t2 += e3, t2 = Math.round(t2), this.options.infinite ? c && (this.targetScroll = this.animatedScroll = this.scroll) : t2 = i(0, t2, this.limit), s2)
            return this.animatedScroll = this.targetScroll = t2, this.setScroll(this.scroll), this.reset(), void (null == h || h(this));
          if (!c) {
            if (t2 === this.targetScroll)
              return;
            this.targetScroll = t2;
          }
          this.animate.fromTo(this.animatedScroll, t2, { duration: n2, easing: r2, lerp: l, onStart: () => {
            o2 && (this.isLocked = true), this.isScrolling = true;
          }, onUpdate: (t3, i2) => {
            this.isScrolling = true, this.velocity = t3 - this.animatedScroll, this.direction = Math.sign(this.velocity), this.animatedScroll = t3, this.setScroll(this.scroll), c && (this.targetScroll = t3), i2 || this.emit(), i2 && requestAnimationFrame(() => {
              this.reset(), this.emit(), null == h || h(this);
            });
          } });
        }
      }
    }
    get rootElement() {
      return this.options.wrapper === window ? this.options.content : this.options.wrapper;
    }
    get limit() {
      return this.dimensions.limit[this.isHorizontal ? "x" : "y"];
    }
    get isHorizontal() {
      return "horizontal" === this.options.orientation;
    }
    get actualScroll() {
      return this.isHorizontal ? this.rootElement.scrollLeft : this.rootElement.scrollTop;
    }
    get scroll() {
      return this.options.infinite ? (this.animatedScroll % (t2 = this.limit) + t2) % t2 : this.animatedScroll;
      var t2;
    }
    get progress() {
      return 0 === this.limit ? 1 : this.scroll / this.limit;
    }
    get isSmooth() {
      return this.__isSmooth;
    }
    set isSmooth(t2) {
      this.__isSmooth !== t2 && (this.__isSmooth = t2, this.toggleClass("lenis-smooth", t2));
    }
    get isScrolling() {
      return this.__isScrolling;
    }
    set isScrolling(t2) {
      this.__isScrolling !== t2 && (this.__isScrolling = t2, this.toggleClass("lenis-scrolling", t2));
    }
    get isStopped() {
      return this.__isStopped;
    }
    set isStopped(t2) {
      this.__isStopped !== t2 && (this.__isStopped = t2, this.toggleClass("lenis-stopped", t2));
    }
    get isLocked() {
      return this.__isLocked;
    }
    set isLocked(t2) {
      this.__isLocked !== t2 && (this.__isLocked = t2, this.toggleClass("lenis-locked", t2));
    }
    get className() {
      let t2 = "lenis";
      return this.isStopped && (t2 += " lenis-stopped"), this.isLocked && (t2 += " lenis-locked"), this.isScrolling && (t2 += " lenis-scrolling"), this.isSmooth && (t2 += " lenis-smooth"), t2;
    }
    toggleClass(t2, i2) {
      this.rootElement.classList.toggle(t2, i2), this.emitter.emit("className change", this);
    }
  };

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/index.js
  init_live_reload();

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/gsap-core.js
  init_live_reload();
  function _assertThisInitialized(self2) {
    if (self2 === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }
    return self2;
  }
  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }
  var _config = {
    autoSleep: 120,
    force3D: "auto",
    nullTargetWarn: 1,
    units: {
      lineHeight: ""
    }
  };
  var _defaults = {
    duration: 0.5,
    overwrite: false,
    delay: 0
  };
  var _suppressOverwrites;
  var _reverting;
  var _context;
  var _bigNum = 1e8;
  var _tinyNum = 1 / _bigNum;
  var _2PI = Math.PI * 2;
  var _HALF_PI = _2PI / 4;
  var _gsID = 0;
  var _sqrt = Math.sqrt;
  var _cos = Math.cos;
  var _sin = Math.sin;
  var _isString = function _isString2(value) {
    return typeof value === "string";
  };
  var _isFunction = function _isFunction2(value) {
    return typeof value === "function";
  };
  var _isNumber = function _isNumber2(value) {
    return typeof value === "number";
  };
  var _isUndefined = function _isUndefined2(value) {
    return typeof value === "undefined";
  };
  var _isObject = function _isObject2(value) {
    return typeof value === "object";
  };
  var _isNotFalse = function _isNotFalse2(value) {
    return value !== false;
  };
  var _windowExists = function _windowExists2() {
    return typeof window !== "undefined";
  };
  var _isFuncOrString = function _isFuncOrString2(value) {
    return _isFunction(value) || _isString(value);
  };
  var _isTypedArray = typeof ArrayBuffer === "function" && ArrayBuffer.isView || function() {
  };
  var _isArray = Array.isArray;
  var _strictNumExp = /(?:-?\.?\d|\.)+/gi;
  var _numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-+]*\d*/g;
  var _numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g;
  var _complexStringNumExp = /[-+=.]*\d+\.?\d*(?:e-|e\+)?\d*/gi;
  var _relExp = /[+-]=-?[.\d]+/;
  var _delimitedValueExp = /[^,'"\[\]\s]+/gi;
  var _unitExp = /^[+\-=e\s\d]*\d+[.\d]*([a-z]*|%)\s*$/i;
  var _globalTimeline;
  var _win;
  var _coreInitted;
  var _doc;
  var _globals = {};
  var _installScope = {};
  var _coreReady;
  var _install = function _install2(scope) {
    return (_installScope = _merge(scope, _globals)) && gsap;
  };
  var _missingPlugin = function _missingPlugin2(property, value) {
    return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
  };
  var _warn = function _warn2(message, suppress) {
    return !suppress && console.warn(message);
  };
  var _addGlobal = function _addGlobal2(name, obj) {
    return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
  };
  var _emptyFunc = function _emptyFunc2() {
    return 0;
  };
  var _startAtRevertConfig = {
    suppressEvents: true,
    isStart: true,
    kill: false
  };
  var _revertConfigNoKill = {
    suppressEvents: true,
    kill: false
  };
  var _revertConfig = {
    suppressEvents: true
  };
  var _reservedProps = {};
  var _lazyTweens = [];
  var _lazyLookup = {};
  var _lastRenderedFrame;
  var _plugins = {};
  var _effects = {};
  var _nextGCFrame = 30;
  var _harnessPlugins = [];
  var _callbackNames = "";
  var _harness = function _harness2(targets) {
    var target = targets[0], harnessPlugin, i2;
    _isObject(target) || _isFunction(target) || (targets = [targets]);
    if (!(harnessPlugin = (target._gsap || {}).harness)) {
      i2 = _harnessPlugins.length;
      while (i2-- && !_harnessPlugins[i2].targetTest(target)) {
      }
      harnessPlugin = _harnessPlugins[i2];
    }
    i2 = targets.length;
    while (i2--) {
      targets[i2] && (targets[i2]._gsap || (targets[i2]._gsap = new GSCache(targets[i2], harnessPlugin))) || targets.splice(i2, 1);
    }
    return targets;
  };
  var _getCache = function _getCache2(target) {
    return target._gsap || _harness(toArray(target))[0]._gsap;
  };
  var _getProperty = function _getProperty2(target, property, v) {
    return (v = target[property]) && _isFunction(v) ? target[property]() : _isUndefined(v) && target.getAttribute && target.getAttribute(property) || v;
  };
  var _forEachName = function _forEachName2(names, func) {
    return (names = names.split(",")).forEach(func) || names;
  };
  var _round = function _round2(value) {
    return Math.round(value * 1e5) / 1e5 || 0;
  };
  var _roundPrecise = function _roundPrecise2(value) {
    return Math.round(value * 1e7) / 1e7 || 0;
  };
  var _parseRelative = function _parseRelative2(start, value) {
    var operator = value.charAt(0), end = parseFloat(value.substr(2));
    start = parseFloat(start);
    return operator === "+" ? start + end : operator === "-" ? start - end : operator === "*" ? start * end : start / end;
  };
  var _arrayContainsAny = function _arrayContainsAny2(toSearch, toFind) {
    var l = toFind.length, i2 = 0;
    for (; toSearch.indexOf(toFind[i2]) < 0 && ++i2 < l; ) {
    }
    return i2 < l;
  };
  var _lazyRender = function _lazyRender2() {
    var l = _lazyTweens.length, a = _lazyTweens.slice(0), i2, tween;
    _lazyLookup = {};
    _lazyTweens.length = 0;
    for (i2 = 0; i2 < l; i2++) {
      tween = a[i2];
      tween && tween._lazy && (tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0);
    }
  };
  var _lazySafeRender = function _lazySafeRender2(animation, time, suppressEvents, force) {
    _lazyTweens.length && !_reverting && _lazyRender();
    animation.render(time, suppressEvents, force || _reverting && time < 0 && (animation._initted || animation._startAt));
    _lazyTweens.length && !_reverting && _lazyRender();
  };
  var _numericIfPossible = function _numericIfPossible2(value) {
    var n2 = parseFloat(value);
    return (n2 || n2 === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n2 : _isString(value) ? value.trim() : value;
  };
  var _passThrough = function _passThrough2(p) {
    return p;
  };
  var _setDefaults = function _setDefaults2(obj, defaults3) {
    for (var p in defaults3) {
      p in obj || (obj[p] = defaults3[p]);
    }
    return obj;
  };
  var _setKeyframeDefaults = function _setKeyframeDefaults2(excludeDuration) {
    return function(obj, defaults3) {
      for (var p in defaults3) {
        p in obj || p === "duration" && excludeDuration || p === "ease" || (obj[p] = defaults3[p]);
      }
    };
  };
  var _merge = function _merge2(base, toMerge) {
    for (var p in toMerge) {
      base[p] = toMerge[p];
    }
    return base;
  };
  var _mergeDeep = function _mergeDeep2(base, toMerge) {
    for (var p in toMerge) {
      p !== "__proto__" && p !== "constructor" && p !== "prototype" && (base[p] = _isObject(toMerge[p]) ? _mergeDeep2(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p]);
    }
    return base;
  };
  var _copyExcluding = function _copyExcluding2(obj, excluding) {
    var copy = {}, p;
    for (p in obj) {
      p in excluding || (copy[p] = obj[p]);
    }
    return copy;
  };
  var _inheritDefaults = function _inheritDefaults2(vars) {
    var parent = vars.parent || _globalTimeline, func = vars.keyframes ? _setKeyframeDefaults(_isArray(vars.keyframes)) : _setDefaults;
    if (_isNotFalse(vars.inherit)) {
      while (parent) {
        func(vars, parent.vars.defaults);
        parent = parent.parent || parent._dp;
      }
    }
    return vars;
  };
  var _arraysMatch = function _arraysMatch2(a1, a2) {
    var i2 = a1.length, match = i2 === a2.length;
    while (match && i2-- && a1[i2] === a2[i2]) {
    }
    return i2 < 0;
  };
  var _addLinkedListItem = function _addLinkedListItem2(parent, child, firstProp, lastProp, sortBy) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }
    if (lastProp === void 0) {
      lastProp = "_last";
    }
    var prev = parent[lastProp], t2;
    if (sortBy) {
      t2 = child[sortBy];
      while (prev && prev[sortBy] > t2) {
        prev = prev._prev;
      }
    }
    if (prev) {
      child._next = prev._next;
      prev._next = child;
    } else {
      child._next = parent[firstProp];
      parent[firstProp] = child;
    }
    if (child._next) {
      child._next._prev = child;
    } else {
      parent[lastProp] = child;
    }
    child._prev = prev;
    child.parent = child._dp = parent;
    return child;
  };
  var _removeLinkedListItem = function _removeLinkedListItem2(parent, child, firstProp, lastProp) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }
    if (lastProp === void 0) {
      lastProp = "_last";
    }
    var prev = child._prev, next = child._next;
    if (prev) {
      prev._next = next;
    } else if (parent[firstProp] === child) {
      parent[firstProp] = next;
    }
    if (next) {
      next._prev = prev;
    } else if (parent[lastProp] === child) {
      parent[lastProp] = prev;
    }
    child._next = child._prev = child.parent = null;
  };
  var _removeFromParent = function _removeFromParent2(child, onlyIfParentHasAutoRemove) {
    child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren) && child.parent.remove && child.parent.remove(child);
    child._act = 0;
  };
  var _uncache = function _uncache2(animation, child) {
    if (animation && (!child || child._end > animation._dur || child._start < 0)) {
      var a = animation;
      while (a) {
        a._dirty = 1;
        a = a.parent;
      }
    }
    return animation;
  };
  var _recacheAncestors = function _recacheAncestors2(animation) {
    var parent = animation.parent;
    while (parent && parent.parent) {
      parent._dirty = 1;
      parent.totalDuration();
      parent = parent.parent;
    }
    return animation;
  };
  var _rewindStartAt = function _rewindStartAt2(tween, totalTime, suppressEvents, force) {
    return tween._startAt && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween.vars.immediateRender && !tween.vars.autoRevert || tween._startAt.render(totalTime, true, force));
  };
  var _hasNoPausedAncestors = function _hasNoPausedAncestors2(animation) {
    return !animation || animation._ts && _hasNoPausedAncestors2(animation.parent);
  };
  var _elapsedCycleDuration = function _elapsedCycleDuration2(animation) {
    return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
  };
  var _animationCycle = function _animationCycle2(tTime, cycleDuration) {
    var whole = Math.floor(tTime /= cycleDuration);
    return tTime && whole === tTime ? whole - 1 : whole;
  };
  var _parentToChildTotalTime = function _parentToChildTotalTime2(parentTime, child) {
    return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
  };
  var _setEnd = function _setEnd2(animation) {
    return animation._end = _roundPrecise(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
  };
  var _alignPlayhead = function _alignPlayhead2(animation, totalTime) {
    var parent = animation._dp;
    if (parent && parent.smoothChildTiming && animation._ts) {
      animation._start = _roundPrecise(parent._time - (animation._ts > 0 ? totalTime / animation._ts : ((animation._dirty ? animation.totalDuration() : animation._tDur) - totalTime) / -animation._ts));
      _setEnd(animation);
      parent._dirty || _uncache(parent, animation);
    }
    return animation;
  };
  var _postAddChecks = function _postAddChecks2(timeline2, child) {
    var t2;
    if (child._time || !child._dur && child._initted || child._start < timeline2._time && (child._dur || !child.add)) {
      t2 = _parentToChildTotalTime(timeline2.rawTime(), child);
      if (!child._dur || _clamp(0, child.totalDuration(), t2) - child._tTime > _tinyNum) {
        child.render(t2, true);
      }
    }
    if (_uncache(timeline2, child)._dp && timeline2._initted && timeline2._time >= timeline2._dur && timeline2._ts) {
      if (timeline2._dur < timeline2.duration()) {
        t2 = timeline2;
        while (t2._dp) {
          t2.rawTime() >= 0 && t2.totalTime(t2._tTime);
          t2 = t2._dp;
        }
      }
      timeline2._zTime = -_tinyNum;
    }
  };
  var _addToTimeline = function _addToTimeline2(timeline2, child, position, skipChecks) {
    child.parent && _removeFromParent(child);
    child._start = _roundPrecise((_isNumber(position) ? position : position || timeline2 !== _globalTimeline ? _parsePosition(timeline2, position, child) : timeline2._time) + child._delay);
    child._end = _roundPrecise(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));
    _addLinkedListItem(timeline2, child, "_first", "_last", timeline2._sort ? "_start" : 0);
    _isFromOrFromStart(child) || (timeline2._recent = child);
    skipChecks || _postAddChecks(timeline2, child);
    timeline2._ts < 0 && _alignPlayhead(timeline2, timeline2._tTime);
    return timeline2;
  };
  var _scrollTrigger = function _scrollTrigger2(animation, trigger) {
    return (_globals.ScrollTrigger || _missingPlugin("scrollTrigger", trigger)) && _globals.ScrollTrigger.create(trigger, animation);
  };
  var _attemptInitTween = function _attemptInitTween2(tween, time, force, suppressEvents, tTime) {
    _initTween(tween, time, tTime);
    if (!tween._initted) {
      return 1;
    }
    if (!force && tween._pt && !_reverting && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
      _lazyTweens.push(tween);
      tween._lazy = [tTime, suppressEvents];
      return 1;
    }
  };
  var _parentPlayheadIsBeforeStart = function _parentPlayheadIsBeforeStart2(_ref) {
    var parent = _ref.parent;
    return parent && parent._ts && parent._initted && !parent._lock && (parent.rawTime() < 0 || _parentPlayheadIsBeforeStart2(parent));
  };
  var _isFromOrFromStart = function _isFromOrFromStart2(_ref2) {
    var data = _ref2.data;
    return data === "isFromStart" || data === "isStart";
  };
  var _renderZeroDurationTween = function _renderZeroDurationTween2(tween, totalTime, suppressEvents, force) {
    var prevRatio = tween.ratio, ratio = totalTime < 0 || !totalTime && (!tween._start && _parentPlayheadIsBeforeStart(tween) && !(!tween._initted && _isFromOrFromStart(tween)) || (tween._ts < 0 || tween._dp._ts < 0) && !_isFromOrFromStart(tween)) ? 0 : 1, repeatDelay = tween._rDelay, tTime = 0, pt, iteration, prevIteration;
    if (repeatDelay && tween._repeat) {
      tTime = _clamp(0, tween._tDur, totalTime);
      iteration = _animationCycle(tTime, repeatDelay);
      tween._yoyo && iteration & 1 && (ratio = 1 - ratio);
      if (iteration !== _animationCycle(tween._tTime, repeatDelay)) {
        prevRatio = 1 - ratio;
        tween.vars.repeatRefresh && tween._initted && tween.invalidate();
      }
    }
    if (ratio !== prevRatio || _reverting || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
      if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents, tTime)) {
        return;
      }
      prevIteration = tween._zTime;
      tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0);
      suppressEvents || (suppressEvents = totalTime && !prevIteration);
      tween.ratio = ratio;
      tween._from && (ratio = 1 - ratio);
      tween._time = 0;
      tween._tTime = tTime;
      pt = tween._pt;
      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }
      totalTime < 0 && _rewindStartAt(tween, totalTime, suppressEvents, true);
      tween._onUpdate && !suppressEvents && _callback(tween, "onUpdate");
      tTime && tween._repeat && !suppressEvents && tween.parent && _callback(tween, "onRepeat");
      if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
        ratio && _removeFromParent(tween, 1);
        if (!suppressEvents && !_reverting) {
          _callback(tween, ratio ? "onComplete" : "onReverseComplete", true);
          tween._prom && tween._prom();
        }
      }
    } else if (!tween._zTime) {
      tween._zTime = totalTime;
    }
  };
  var _findNextPauseTween = function _findNextPauseTween2(animation, prevTime, time) {
    var child;
    if (time > prevTime) {
      child = animation._first;
      while (child && child._start <= time) {
        if (child.data === "isPause" && child._start > prevTime) {
          return child;
        }
        child = child._next;
      }
    } else {
      child = animation._last;
      while (child && child._start >= time) {
        if (child.data === "isPause" && child._start < prevTime) {
          return child;
        }
        child = child._prev;
      }
    }
  };
  var _setDuration = function _setDuration2(animation, duration, skipUncache, leavePlayhead) {
    var repeat = animation._repeat, dur = _roundPrecise(duration) || 0, totalProgress = animation._tTime / animation._tDur;
    totalProgress && !leavePlayhead && (animation._time *= dur / animation._dur);
    animation._dur = dur;
    animation._tDur = !repeat ? dur : repeat < 0 ? 1e10 : _roundPrecise(dur * (repeat + 1) + animation._rDelay * repeat);
    totalProgress > 0 && !leavePlayhead && _alignPlayhead(animation, animation._tTime = animation._tDur * totalProgress);
    animation.parent && _setEnd(animation);
    skipUncache || _uncache(animation.parent, animation);
    return animation;
  };
  var _onUpdateTotalDuration = function _onUpdateTotalDuration2(animation) {
    return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
  };
  var _zeroPosition = {
    _start: 0,
    endTime: _emptyFunc,
    totalDuration: _emptyFunc
  };
  var _parsePosition = function _parsePosition2(animation, position, percentAnimation) {
    var labels = animation.labels, recent = animation._recent || _zeroPosition, clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur, i2, offset, isPercent;
    if (_isString(position) && (isNaN(position) || position in labels)) {
      offset = position.charAt(0);
      isPercent = position.substr(-1) === "%";
      i2 = position.indexOf("=");
      if (offset === "<" || offset === ">") {
        i2 >= 0 && (position = position.replace(/=/, ""));
        return (offset === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0) * (isPercent ? (i2 < 0 ? recent : percentAnimation).totalDuration() / 100 : 1);
      }
      if (i2 < 0) {
        position in labels || (labels[position] = clippedDuration);
        return labels[position];
      }
      offset = parseFloat(position.charAt(i2 - 1) + position.substr(i2 + 1));
      if (isPercent && percentAnimation) {
        offset = offset / 100 * (_isArray(percentAnimation) ? percentAnimation[0] : percentAnimation).totalDuration();
      }
      return i2 > 1 ? _parsePosition2(animation, position.substr(0, i2 - 1), percentAnimation) + offset : clippedDuration + offset;
    }
    return position == null ? clippedDuration : +position;
  };
  var _createTweenType = function _createTweenType2(type, params, timeline2) {
    var isLegacy = _isNumber(params[1]), varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1), vars = params[varsIndex], irVars, parent;
    isLegacy && (vars.duration = params[1]);
    vars.parent = timeline2;
    if (type) {
      irVars = vars;
      parent = timeline2;
      while (parent && !("immediateRender" in irVars)) {
        irVars = parent.vars.defaults || {};
        parent = _isNotFalse(parent.vars.inherit) && parent.parent;
      }
      vars.immediateRender = _isNotFalse(irVars.immediateRender);
      type < 2 ? vars.runBackwards = 1 : vars.startAt = params[varsIndex - 1];
    }
    return new Tween(params[0], vars, params[varsIndex + 1]);
  };
  var _conditionalReturn = function _conditionalReturn2(value, func) {
    return value || value === 0 ? func(value) : func;
  };
  var _clamp = function _clamp2(min, max2, value) {
    return value < min ? min : value > max2 ? max2 : value;
  };
  var getUnit = function getUnit2(value, v) {
    return !_isString(value) || !(v = _unitExp.exec(value)) ? "" : v[1];
  };
  var clamp = function clamp2(min, max2, value) {
    return _conditionalReturn(value, function(v) {
      return _clamp(min, max2, v);
    });
  };
  var _slice = [].slice;
  var _isArrayLike = function _isArrayLike2(value, nonEmpty) {
    return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
  };
  var _flatten = function _flatten2(ar, leaveStrings, accumulator) {
    if (accumulator === void 0) {
      accumulator = [];
    }
    return ar.forEach(function(value) {
      var _accumulator;
      return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
    }) || accumulator;
  };
  var toArray = function toArray2(value, scope, leaveStrings) {
    return _context && !scope && _context.selector ? _context.selector(value) : _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call((scope || _doc).querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [value] : [];
  };
  var selector = function selector2(value) {
    value = toArray(value)[0] || _warn("Invalid scope") || {};
    return function(v) {
      var el = value.current || value.nativeElement || value;
      return toArray(v, el.querySelectorAll ? el : el === value ? _warn("Invalid scope") || _doc.createElement("div") : value);
    };
  };
  var shuffle = function shuffle2(a) {
    return a.sort(function() {
      return 0.5 - Math.random();
    });
  };
  var distribute = function distribute2(v) {
    if (_isFunction(v)) {
      return v;
    }
    var vars = _isObject(v) ? v : {
      each: v
    }, ease = _parseEase(vars.ease), from = vars.from || 0, base = parseFloat(vars.base) || 0, cache = {}, isDecimal = from > 0 && from < 1, ratios = isNaN(from) || isDecimal, axis = vars.axis, ratioX = from, ratioY = from;
    if (_isString(from)) {
      ratioX = ratioY = {
        center: 0.5,
        edges: 0.5,
        end: 1
      }[from] || 0;
    } else if (!isDecimal && ratios) {
      ratioX = from[0];
      ratioY = from[1];
    }
    return function(i2, target, a) {
      var l = (a || vars).length, distances = cache[l], originX, originY, x, y, d, j, max2, min, wrapAt;
      if (!distances) {
        wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum])[1];
        if (!wrapAt) {
          max2 = -_bigNum;
          while (max2 < (max2 = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l) {
          }
          wrapAt--;
        }
        distances = cache[l] = [];
        originX = ratios ? Math.min(wrapAt, l) * ratioX - 0.5 : from % wrapAt;
        originY = wrapAt === _bigNum ? 0 : ratios ? l * ratioY / wrapAt - 0.5 : from / wrapAt | 0;
        max2 = 0;
        min = _bigNum;
        for (j = 0; j < l; j++) {
          x = j % wrapAt - originX;
          y = originY - (j / wrapAt | 0);
          distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);
          d > max2 && (max2 = d);
          d < min && (min = d);
        }
        from === "random" && shuffle(distances);
        distances.max = max2 - min;
        distances.min = min;
        distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
        distances.b = l < 0 ? base - l : base;
        distances.u = getUnit(vars.amount || vars.each) || 0;
        ease = ease && l < 0 ? _invertEase(ease) : ease;
      }
      l = (distances[i2] - distances.min) / distances.max || 0;
      return _roundPrecise(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u;
    };
  };
  var _roundModifier = function _roundModifier2(v) {
    var p = Math.pow(10, ((v + "").split(".")[1] || "").length);
    return function(raw) {
      var n2 = _roundPrecise(Math.round(parseFloat(raw) / v) * v * p);
      return (n2 - n2 % 1) / p + (_isNumber(raw) ? 0 : getUnit(raw));
    };
  };
  var snap = function snap2(snapTo, value) {
    var isArray = _isArray(snapTo), radius, is2D;
    if (!isArray && _isObject(snapTo)) {
      radius = isArray = snapTo.radius || _bigNum;
      if (snapTo.values) {
        snapTo = toArray(snapTo.values);
        if (is2D = !_isNumber(snapTo[0])) {
          radius *= radius;
        }
      } else {
        snapTo = _roundModifier(snapTo.increment);
      }
    }
    return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function(raw) {
      is2D = snapTo(raw);
      return Math.abs(is2D - raw) <= radius ? is2D : raw;
    } : function(raw) {
      var x = parseFloat(is2D ? raw.x : raw), y = parseFloat(is2D ? raw.y : 0), min = _bigNum, closest = 0, i2 = snapTo.length, dx, dy;
      while (i2--) {
        if (is2D) {
          dx = snapTo[i2].x - x;
          dy = snapTo[i2].y - y;
          dx = dx * dx + dy * dy;
        } else {
          dx = Math.abs(snapTo[i2] - x);
        }
        if (dx < min) {
          min = dx;
          closest = i2;
        }
      }
      closest = !radius || min <= radius ? snapTo[closest] : raw;
      return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
    });
  };
  var random = function random2(min, max2, roundingIncrement, returnFunction) {
    return _conditionalReturn(_isArray(min) ? !max2 : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function() {
      return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && Math.floor(Math.round((min - roundingIncrement / 2 + Math.random() * (max2 - min + roundingIncrement * 0.99)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
    });
  };
  var pipe = function pipe2() {
    for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
      functions[_key] = arguments[_key];
    }
    return function(value) {
      return functions.reduce(function(v, f) {
        return f(v);
      }, value);
    };
  };
  var unitize = function unitize2(func, unit) {
    return function(value) {
      return func(parseFloat(value)) + (unit || getUnit(value));
    };
  };
  var normalize = function normalize2(min, max2, value) {
    return mapRange(min, max2, 0, 1, value);
  };
  var _wrapArray = function _wrapArray2(a, wrapper, value) {
    return _conditionalReturn(value, function(index) {
      return a[~~wrapper(index)];
    });
  };
  var wrap = function wrap2(min, max2, value) {
    var range = max2 - min;
    return _isArray(min) ? _wrapArray(min, wrap2(0, min.length), max2) : _conditionalReturn(value, function(value2) {
      return (range + (value2 - min) % range) % range + min;
    });
  };
  var wrapYoyo = function wrapYoyo2(min, max2, value) {
    var range = max2 - min, total = range * 2;
    return _isArray(min) ? _wrapArray(min, wrapYoyo2(0, min.length - 1), max2) : _conditionalReturn(value, function(value2) {
      value2 = (total + (value2 - min) % total) % total || 0;
      return min + (value2 > range ? total - value2 : value2);
    });
  };
  var _replaceRandom = function _replaceRandom2(value) {
    var prev = 0, s2 = "", i2, nums, end, isArray;
    while (~(i2 = value.indexOf("random(", prev))) {
      end = value.indexOf(")", i2);
      isArray = value.charAt(i2 + 7) === "[";
      nums = value.substr(i2 + 7, end - i2 - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
      s2 += value.substr(prev, i2 - prev) + random(isArray ? nums : +nums[0], isArray ? 0 : +nums[1], +nums[2] || 1e-5);
      prev = end + 1;
    }
    return s2 + value.substr(prev, value.length - prev);
  };
  var mapRange = function mapRange2(inMin, inMax, outMin, outMax, value) {
    var inRange = inMax - inMin, outRange = outMax - outMin;
    return _conditionalReturn(value, function(value2) {
      return outMin + ((value2 - inMin) / inRange * outRange || 0);
    });
  };
  var interpolate = function interpolate2(start, end, progress, mutate) {
    var func = isNaN(start + end) ? 0 : function(p2) {
      return (1 - p2) * start + p2 * end;
    };
    if (!func) {
      var isString = _isString(start), master = {}, p, i2, interpolators, l, il;
      progress === true && (mutate = 1) && (progress = null);
      if (isString) {
        start = {
          p: start
        };
        end = {
          p: end
        };
      } else if (_isArray(start) && !_isArray(end)) {
        interpolators = [];
        l = start.length;
        il = l - 2;
        for (i2 = 1; i2 < l; i2++) {
          interpolators.push(interpolate2(start[i2 - 1], start[i2]));
        }
        l--;
        func = function func2(p2) {
          p2 *= l;
          var i3 = Math.min(il, ~~p2);
          return interpolators[i3](p2 - i3);
        };
        progress = end;
      } else if (!mutate) {
        start = _merge(_isArray(start) ? [] : {}, start);
      }
      if (!interpolators) {
        for (p in end) {
          _addPropTween.call(master, start, p, "get", end[p]);
        }
        func = function func2(p2) {
          return _renderPropTweens(p2, master) || (isString ? start.p : start);
        };
      }
    }
    return _conditionalReturn(progress, func);
  };
  var _getLabelInDirection = function _getLabelInDirection2(timeline2, fromTime, backward) {
    var labels = timeline2.labels, min = _bigNum, p, distance, label;
    for (p in labels) {
      distance = labels[p] - fromTime;
      if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
        label = p;
        min = distance;
      }
    }
    return label;
  };
  var _callback = function _callback2(animation, type, executeLazyFirst) {
    var v = animation.vars, callback = v[type], prevContext = _context, context3 = animation._ctx, params, scope, result;
    if (!callback) {
      return;
    }
    params = v[type + "Params"];
    scope = v.callbackScope || animation;
    executeLazyFirst && _lazyTweens.length && _lazyRender();
    context3 && (_context = context3);
    result = params ? callback.apply(scope, params) : callback.call(scope);
    _context = prevContext;
    return result;
  };
  var _interrupt = function _interrupt2(animation) {
    _removeFromParent(animation);
    animation.scrollTrigger && animation.scrollTrigger.kill(!!_reverting);
    animation.progress() < 1 && _callback(animation, "onInterrupt");
    return animation;
  };
  var _quickTween;
  var _registerPluginQueue = [];
  var _createPlugin = function _createPlugin2(config3) {
    if (_windowExists() && config3) {
      config3 = !config3.name && config3["default"] || config3;
      var name = config3.name, isFunc = _isFunction(config3), Plugin = name && !isFunc && config3.init ? function() {
        this._props = [];
      } : config3, instanceDefaults = {
        init: _emptyFunc,
        render: _renderPropTweens,
        add: _addPropTween,
        kill: _killPropTweensOf,
        modifier: _addPluginModifier,
        rawVars: 0
      }, statics = {
        targetTest: 0,
        get: 0,
        getSetter: _getSetter,
        aliases: {},
        register: 0
      };
      _wake();
      if (config3 !== Plugin) {
        if (_plugins[name]) {
          return;
        }
        _setDefaults(Plugin, _setDefaults(_copyExcluding(config3, instanceDefaults), statics));
        _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config3, statics)));
        _plugins[Plugin.prop = name] = Plugin;
        if (config3.targetTest) {
          _harnessPlugins.push(Plugin);
          _reservedProps[name] = 1;
        }
        name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin";
      }
      _addGlobal(name, Plugin);
      config3.register && config3.register(gsap, Plugin, PropTween);
    } else {
      config3 && _registerPluginQueue.push(config3);
    }
  };
  var _255 = 255;
  var _colorLookup = {
    aqua: [0, _255, _255],
    lime: [0, _255, 0],
    silver: [192, 192, 192],
    black: [0, 0, 0],
    maroon: [128, 0, 0],
    teal: [0, 128, 128],
    blue: [0, 0, _255],
    navy: [0, 0, 128],
    white: [_255, _255, _255],
    olive: [128, 128, 0],
    yellow: [_255, _255, 0],
    orange: [_255, 165, 0],
    gray: [128, 128, 128],
    purple: [128, 0, 128],
    green: [0, 128, 0],
    red: [_255, 0, 0],
    pink: [_255, 192, 203],
    cyan: [0, _255, _255],
    transparent: [_255, _255, _255, 0]
  };
  var _hue = function _hue2(h, m1, m2) {
    h += h < 0 ? 1 : h > 1 ? -1 : 0;
    return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < 0.5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + 0.5 | 0;
  };
  var splitColor = function splitColor2(v, toHSL, forceAlpha) {
    var a = !v ? _colorLookup.black : _isNumber(v) ? [v >> 16, v >> 8 & _255, v & _255] : 0, r2, g, b, h, s2, l, max2, min, d, wasHSL;
    if (!a) {
      if (v.substr(-1) === ",") {
        v = v.substr(0, v.length - 1);
      }
      if (_colorLookup[v]) {
        a = _colorLookup[v];
      } else if (v.charAt(0) === "#") {
        if (v.length < 6) {
          r2 = v.charAt(1);
          g = v.charAt(2);
          b = v.charAt(3);
          v = "#" + r2 + r2 + g + g + b + b + (v.length === 5 ? v.charAt(4) + v.charAt(4) : "");
        }
        if (v.length === 9) {
          a = parseInt(v.substr(1, 6), 16);
          return [a >> 16, a >> 8 & _255, a & _255, parseInt(v.substr(7), 16) / 255];
        }
        v = parseInt(v.substr(1), 16);
        a = [v >> 16, v >> 8 & _255, v & _255];
      } else if (v.substr(0, 3) === "hsl") {
        a = wasHSL = v.match(_strictNumExp);
        if (!toHSL) {
          h = +a[0] % 360 / 360;
          s2 = +a[1] / 100;
          l = +a[2] / 100;
          g = l <= 0.5 ? l * (s2 + 1) : l + s2 - l * s2;
          r2 = l * 2 - g;
          a.length > 3 && (a[3] *= 1);
          a[0] = _hue(h + 1 / 3, r2, g);
          a[1] = _hue(h, r2, g);
          a[2] = _hue(h - 1 / 3, r2, g);
        } else if (~v.indexOf("=")) {
          a = v.match(_numExp);
          forceAlpha && a.length < 4 && (a[3] = 1);
          return a;
        }
      } else {
        a = v.match(_strictNumExp) || _colorLookup.transparent;
      }
      a = a.map(Number);
    }
    if (toHSL && !wasHSL) {
      r2 = a[0] / _255;
      g = a[1] / _255;
      b = a[2] / _255;
      max2 = Math.max(r2, g, b);
      min = Math.min(r2, g, b);
      l = (max2 + min) / 2;
      if (max2 === min) {
        h = s2 = 0;
      } else {
        d = max2 - min;
        s2 = l > 0.5 ? d / (2 - max2 - min) : d / (max2 + min);
        h = max2 === r2 ? (g - b) / d + (g < b ? 6 : 0) : max2 === g ? (b - r2) / d + 2 : (r2 - g) / d + 4;
        h *= 60;
      }
      a[0] = ~~(h + 0.5);
      a[1] = ~~(s2 * 100 + 0.5);
      a[2] = ~~(l * 100 + 0.5);
    }
    forceAlpha && a.length < 4 && (a[3] = 1);
    return a;
  };
  var _colorOrderData = function _colorOrderData2(v) {
    var values = [], c = [], i2 = -1;
    v.split(_colorExp).forEach(function(v2) {
      var a = v2.match(_numWithUnitExp) || [];
      values.push.apply(values, a);
      c.push(i2 += a.length + 1);
    });
    values.c = c;
    return values;
  };
  var _formatColors = function _formatColors2(s2, toHSL, orderMatchData) {
    var result = "", colors = (s2 + result).match(_colorExp), type = toHSL ? "hsla(" : "rgba(", i2 = 0, c, shell, d, l;
    if (!colors) {
      return s2;
    }
    colors = colors.map(function(color2) {
      return (color2 = splitColor(color2, toHSL, 1)) && type + (toHSL ? color2[0] + "," + color2[1] + "%," + color2[2] + "%," + color2[3] : color2.join(",")) + ")";
    });
    if (orderMatchData) {
      d = _colorOrderData(s2);
      c = orderMatchData.c;
      if (c.join(result) !== d.c.join(result)) {
        shell = s2.replace(_colorExp, "1").split(_numWithUnitExp);
        l = shell.length - 1;
        for (; i2 < l; i2++) {
          result += shell[i2] + (~c.indexOf(i2) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
        }
      }
    }
    if (!shell) {
      shell = s2.split(_colorExp);
      l = shell.length - 1;
      for (; i2 < l; i2++) {
        result += shell[i2] + colors[i2];
      }
    }
    return result + shell[l];
  };
  var _colorExp = function() {
    var s2 = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3,4}){1,2}\\b", p;
    for (p in _colorLookup) {
      s2 += "|" + p + "\\b";
    }
    return new RegExp(s2 + ")", "gi");
  }();
  var _hslExp = /hsl[a]?\(/;
  var _colorStringFilter = function _colorStringFilter2(a) {
    var combined = a.join(" "), toHSL;
    _colorExp.lastIndex = 0;
    if (_colorExp.test(combined)) {
      toHSL = _hslExp.test(combined);
      a[1] = _formatColors(a[1], toHSL);
      a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1]));
      return true;
    }
  };
  var _tickerActive;
  var _ticker = function() {
    var _getTime3 = Date.now, _lagThreshold = 500, _adjustedLag = 33, _startTime = _getTime3(), _lastUpdate = _startTime, _gap = 1e3 / 240, _nextTime = _gap, _listeners3 = [], _id2, _req, _raf, _self, _delta, _i2, _tick = function _tick2(v) {
      var elapsed = _getTime3() - _lastUpdate, manual = v === true, overlap, dispatch, time, frame;
      elapsed > _lagThreshold && (_startTime += elapsed - _adjustedLag);
      _lastUpdate += elapsed;
      time = _lastUpdate - _startTime;
      overlap = time - _nextTime;
      if (overlap > 0 || manual) {
        frame = ++_self.frame;
        _delta = time - _self.time * 1e3;
        _self.time = time = time / 1e3;
        _nextTime += overlap + (overlap >= _gap ? 4 : _gap - overlap);
        dispatch = 1;
      }
      manual || (_id2 = _req(_tick2));
      if (dispatch) {
        for (_i2 = 0; _i2 < _listeners3.length; _i2++) {
          _listeners3[_i2](time, _delta, frame, v);
        }
      }
    };
    _self = {
      time: 0,
      frame: 0,
      tick: function tick() {
        _tick(true);
      },
      deltaRatio: function deltaRatio(fps) {
        return _delta / (1e3 / (fps || 60));
      },
      wake: function wake() {
        if (_coreReady) {
          if (!_coreInitted && _windowExists()) {
            _win = _coreInitted = window;
            _doc = _win.document || {};
            _globals.gsap = gsap;
            (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);
            _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});
            _raf = _win.requestAnimationFrame;
            _registerPluginQueue.forEach(_createPlugin);
          }
          _id2 && _self.sleep();
          _req = _raf || function(f) {
            return setTimeout(f, _nextTime - _self.time * 1e3 + 1 | 0);
          };
          _tickerActive = 1;
          _tick(2);
        }
      },
      sleep: function sleep() {
        (_raf ? _win.cancelAnimationFrame : clearTimeout)(_id2);
        _tickerActive = 0;
        _req = _emptyFunc;
      },
      lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
        _lagThreshold = threshold || Infinity;
        _adjustedLag = Math.min(adjustedLag || 33, _lagThreshold);
      },
      fps: function fps(_fps) {
        _gap = 1e3 / (_fps || 240);
        _nextTime = _self.time * 1e3 + _gap;
      },
      add: function add(callback, once, prioritize) {
        var func = once ? function(t2, d, f, v) {
          callback(t2, d, f, v);
          _self.remove(func);
        } : callback;
        _self.remove(callback);
        _listeners3[prioritize ? "unshift" : "push"](func);
        _wake();
        return func;
      },
      remove: function remove(callback, i2) {
        ~(i2 = _listeners3.indexOf(callback)) && _listeners3.splice(i2, 1) && _i2 >= i2 && _i2--;
      },
      _listeners: _listeners3
    };
    return _self;
  }();
  var _wake = function _wake2() {
    return !_tickerActive && _ticker.wake();
  };
  var _easeMap = {};
  var _customEaseExp = /^[\d.\-M][\d.\-,\s]/;
  var _quotesExp = /["']/g;
  var _parseObjectInString = function _parseObjectInString2(value) {
    var obj = {}, split = value.substr(1, value.length - 3).split(":"), key = split[0], i2 = 1, l = split.length, index, val, parsedVal;
    for (; i2 < l; i2++) {
      val = split[i2];
      index = i2 !== l - 1 ? val.lastIndexOf(",") : val.length;
      parsedVal = val.substr(0, index);
      obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
      key = val.substr(index + 1).trim();
    }
    return obj;
  };
  var _valueInParentheses = function _valueInParentheses2(value) {
    var open = value.indexOf("(") + 1, close = value.indexOf(")"), nested = value.indexOf("(", open);
    return value.substring(open, ~nested && nested < close ? value.indexOf(")", close + 1) : close);
  };
  var _configEaseFromString = function _configEaseFromString2(name) {
    var split = (name + "").split("("), ease = _easeMap[split[0]];
    return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split[1])] : _valueInParentheses(name).split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
  };
  var _invertEase = function _invertEase2(ease) {
    return function(p) {
      return 1 - ease(1 - p);
    };
  };
  var _propagateYoyoEase = function _propagateYoyoEase2(timeline2, isYoyo) {
    var child = timeline2._first, ease;
    while (child) {
      if (child instanceof Timeline) {
        _propagateYoyoEase2(child, isYoyo);
      } else if (child.vars.yoyoEase && (!child._yoyo || !child._repeat) && child._yoyo !== isYoyo) {
        if (child.timeline) {
          _propagateYoyoEase2(child.timeline, isYoyo);
        } else {
          ease = child._ease;
          child._ease = child._yEase;
          child._yEase = ease;
          child._yoyo = isYoyo;
        }
      }
      child = child._next;
    }
  };
  var _parseEase = function _parseEase2(ease, defaultEase) {
    return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
  };
  var _insertEase = function _insertEase2(names, easeIn, easeOut, easeInOut) {
    if (easeOut === void 0) {
      easeOut = function easeOut2(p) {
        return 1 - easeIn(1 - p);
      };
    }
    if (easeInOut === void 0) {
      easeInOut = function easeInOut2(p) {
        return p < 0.5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
      };
    }
    var ease = {
      easeIn,
      easeOut,
      easeInOut
    }, lowercaseName;
    _forEachName(names, function(name) {
      _easeMap[name] = _globals[name] = ease;
      _easeMap[lowercaseName = name.toLowerCase()] = easeOut;
      for (var p in ease) {
        _easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
      }
    });
    return ease;
  };
  var _easeInOutFromOut = function _easeInOutFromOut2(easeOut) {
    return function(p) {
      return p < 0.5 ? (1 - easeOut(1 - p * 2)) / 2 : 0.5 + easeOut((p - 0.5) * 2) / 2;
    };
  };
  var _configElastic = function _configElastic2(type, amplitude, period) {
    var p1 = amplitude >= 1 ? amplitude : 1, p2 = (period || (type ? 0.3 : 0.45)) / (amplitude < 1 ? amplitude : 1), p3 = p2 / _2PI * (Math.asin(1 / p1) || 0), easeOut = function easeOut2(p) {
      return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
    }, ease = type === "out" ? easeOut : type === "in" ? function(p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);
    p2 = _2PI / p2;
    ease.config = function(amplitude2, period2) {
      return _configElastic2(type, amplitude2, period2);
    };
    return ease;
  };
  var _configBack = function _configBack2(type, overshoot) {
    if (overshoot === void 0) {
      overshoot = 1.70158;
    }
    var easeOut = function easeOut2(p) {
      return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
    }, ease = type === "out" ? easeOut : type === "in" ? function(p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);
    ease.config = function(overshoot2) {
      return _configBack2(type, overshoot2);
    };
    return ease;
  };
  _forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function(name, i2) {
    var power = i2 < 5 ? i2 + 1 : i2;
    _insertEase(name + ",Power" + (power - 1), i2 ? function(p) {
      return Math.pow(p, power);
    } : function(p) {
      return p;
    }, function(p) {
      return 1 - Math.pow(1 - p, power);
    }, function(p) {
      return p < 0.5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
    });
  });
  _easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;
  _insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());
  (function(n2, c) {
    var n1 = 1 / c, n22 = 2 * n1, n3 = 2.5 * n1, easeOut = function easeOut2(p) {
      return p < n1 ? n2 * p * p : p < n22 ? n2 * Math.pow(p - 1.5 / c, 2) + 0.75 : p < n3 ? n2 * (p -= 2.25 / c) * p + 0.9375 : n2 * Math.pow(p - 2.625 / c, 2) + 0.984375;
    };
    _insertEase("Bounce", function(p) {
      return 1 - easeOut(1 - p);
    }, easeOut);
  })(7.5625, 2.75);
  _insertEase("Expo", function(p) {
    return p ? Math.pow(2, 10 * (p - 1)) : 0;
  });
  _insertEase("Circ", function(p) {
    return -(_sqrt(1 - p * p) - 1);
  });
  _insertEase("Sine", function(p) {
    return p === 1 ? 1 : -_cos(p * _HALF_PI) + 1;
  });
  _insertEase("Back", _configBack("in"), _configBack("out"), _configBack());
  _easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
    config: function config(steps, immediateStart) {
      if (steps === void 0) {
        steps = 1;
      }
      var p1 = 1 / steps, p2 = steps + (immediateStart ? 0 : 1), p3 = immediateStart ? 1 : 0, max2 = 1 - _tinyNum;
      return function(p) {
        return ((p2 * _clamp(0, max2, p) | 0) + p3) * p1;
      };
    }
  };
  _defaults.ease = _easeMap["quad.out"];
  _forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function(name) {
    return _callbackNames += name + "," + name + "Params,";
  });
  var GSCache = function GSCache2(target, harness) {
    this.id = _gsID++;
    target._gsap = this;
    this.target = target;
    this.harness = harness;
    this.get = harness ? harness.get : _getProperty;
    this.set = harness ? harness.getSetter : _getSetter;
  };
  var Animation = /* @__PURE__ */ function() {
    function Animation2(vars) {
      this.vars = vars;
      this._delay = +vars.delay || 0;
      if (this._repeat = vars.repeat === Infinity ? -2 : vars.repeat || 0) {
        this._rDelay = vars.repeatDelay || 0;
        this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
      }
      this._ts = 1;
      _setDuration(this, +vars.duration, 1, 1);
      this.data = vars.data;
      if (_context) {
        this._ctx = _context;
        _context.data.push(this);
      }
      _tickerActive || _ticker.wake();
    }
    var _proto = Animation2.prototype;
    _proto.delay = function delay(value) {
      if (value || value === 0) {
        this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
        this._delay = value;
        return this;
      }
      return this._delay;
    };
    _proto.duration = function duration(value) {
      return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
    };
    _proto.totalDuration = function totalDuration(value) {
      if (!arguments.length) {
        return this._tDur;
      }
      this._dirty = 0;
      return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
    };
    _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
      _wake();
      if (!arguments.length) {
        return this._tTime;
      }
      var parent = this._dp;
      if (parent && parent.smoothChildTiming && this._ts) {
        _alignPlayhead(this, _totalTime);
        !parent._dp || parent.parent || _postAddChecks(parent, this);
        while (parent && parent.parent) {
          if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {
            parent.totalTime(parent._tTime, true);
          }
          parent = parent.parent;
        }
        if (!this.parent && this._dp.autoRemoveChildren && (this._ts > 0 && _totalTime < this._tDur || this._ts < 0 && _totalTime > 0 || !this._tDur && !_totalTime)) {
          _addToTimeline(this._dp, this, this._start - this._delay);
        }
      }
      if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum || !_totalTime && !this._initted && (this.add || this._ptLookup)) {
        this._ts || (this._pTime = _totalTime);
        _lazySafeRender(this, _totalTime, suppressEvents);
      }
      return this;
    };
    _proto.time = function time(value, suppressEvents) {
      return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % (this._dur + this._rDelay) || (value ? this._dur : 0), suppressEvents) : this._time;
    };
    _proto.totalProgress = function totalProgress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
    };
    _proto.progress = function progress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
    };
    _proto.iteration = function iteration(value, suppressEvents) {
      var cycleDuration = this.duration() + this._rDelay;
      return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
    };
    _proto.timeScale = function timeScale(value) {
      if (!arguments.length) {
        return this._rts === -_tinyNum ? 0 : this._rts;
      }
      if (this._rts === value) {
        return this;
      }
      var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime;
      this._rts = +value || 0;
      this._ts = this._ps || value === -_tinyNum ? 0 : this._rts;
      this.totalTime(_clamp(-Math.abs(this._delay), this._tDur, tTime), true);
      _setEnd(this);
      return _recacheAncestors(this);
    };
    _proto.paused = function paused(value) {
      if (!arguments.length) {
        return this._ps;
      }
      if (this._ps !== value) {
        this._ps = value;
        if (value) {
          this._pTime = this._tTime || Math.max(-this._delay, this.rawTime());
          this._ts = this._act = 0;
        } else {
          _wake();
          this._ts = this._rts;
          this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && Math.abs(this._zTime) !== _tinyNum && (this._tTime -= _tinyNum));
        }
      }
      return this;
    };
    _proto.startTime = function startTime(value) {
      if (arguments.length) {
        this._start = value;
        var parent = this.parent || this._dp;
        parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
        return this;
      }
      return this._start;
    };
    _proto.endTime = function endTime(includeRepeats) {
      return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts || 1);
    };
    _proto.rawTime = function rawTime(wrapRepeats) {
      var parent = this.parent || this._dp;
      return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
    };
    _proto.revert = function revert(config3) {
      if (config3 === void 0) {
        config3 = _revertConfig;
      }
      var prevIsReverting = _reverting;
      _reverting = config3;
      if (this._initted || this._startAt) {
        this.timeline && this.timeline.revert(config3);
        this.totalTime(-0.01, config3.suppressEvents);
      }
      this.data !== "nested" && config3.kill !== false && this.kill();
      _reverting = prevIsReverting;
      return this;
    };
    _proto.globalTime = function globalTime(rawTime) {
      var animation = this, time = arguments.length ? rawTime : animation.rawTime();
      while (animation) {
        time = animation._start + time / (animation._ts || 1);
        animation = animation._dp;
      }
      return !this.parent && this._sat ? this._sat.vars.immediateRender ? -Infinity : this._sat.globalTime(rawTime) : time;
    };
    _proto.repeat = function repeat(value) {
      if (arguments.length) {
        this._repeat = value === Infinity ? -2 : value;
        return _onUpdateTotalDuration(this);
      }
      return this._repeat === -2 ? Infinity : this._repeat;
    };
    _proto.repeatDelay = function repeatDelay(value) {
      if (arguments.length) {
        var time = this._time;
        this._rDelay = value;
        _onUpdateTotalDuration(this);
        return time ? this.time(time) : this;
      }
      return this._rDelay;
    };
    _proto.yoyo = function yoyo(value) {
      if (arguments.length) {
        this._yoyo = value;
        return this;
      }
      return this._yoyo;
    };
    _proto.seek = function seek(position, suppressEvents) {
      return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
    };
    _proto.restart = function restart(includeDelay, suppressEvents) {
      return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
    };
    _proto.play = function play(from, suppressEvents) {
      from != null && this.seek(from, suppressEvents);
      return this.reversed(false).paused(false);
    };
    _proto.reverse = function reverse(from, suppressEvents) {
      from != null && this.seek(from || this.totalDuration(), suppressEvents);
      return this.reversed(true).paused(false);
    };
    _proto.pause = function pause(atTime, suppressEvents) {
      atTime != null && this.seek(atTime, suppressEvents);
      return this.paused(true);
    };
    _proto.resume = function resume() {
      return this.paused(false);
    };
    _proto.reversed = function reversed(value) {
      if (arguments.length) {
        !!value !== this.reversed() && this.timeScale(-this._rts || (value ? -_tinyNum : 0));
        return this;
      }
      return this._rts < 0;
    };
    _proto.invalidate = function invalidate() {
      this._initted = this._act = 0;
      this._zTime = -_tinyNum;
      return this;
    };
    _proto.isActive = function isActive() {
      var parent = this.parent || this._dp, start = this._start, rawTime;
      return !!(!parent || this._ts && this._initted && parent.isActive() && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
    };
    _proto.eventCallback = function eventCallback(type, callback, params) {
      var vars = this.vars;
      if (arguments.length > 1) {
        if (!callback) {
          delete vars[type];
        } else {
          vars[type] = callback;
          params && (vars[type + "Params"] = params);
          type === "onUpdate" && (this._onUpdate = callback);
        }
        return this;
      }
      return vars[type];
    };
    _proto.then = function then(onFulfilled) {
      var self2 = this;
      return new Promise(function(resolve) {
        var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough, _resolve = function _resolve2() {
          var _then = self2.then;
          self2.then = null;
          _isFunction(f) && (f = f(self2)) && (f.then || f === self2) && (self2.then = _then);
          resolve(f);
          self2.then = _then;
        };
        if (self2._initted && self2.totalProgress() === 1 && self2._ts >= 0 || !self2._tTime && self2._ts < 0) {
          _resolve();
        } else {
          self2._prom = _resolve;
        }
      });
    };
    _proto.kill = function kill() {
      _interrupt(this);
    };
    return Animation2;
  }();
  _setDefaults(Animation.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: false,
    parent: null,
    _initted: false,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -_tinyNum,
    _prom: 0,
    _ps: false,
    _rts: 1
  });
  var Timeline = /* @__PURE__ */ function(_Animation) {
    _inheritsLoose(Timeline2, _Animation);
    function Timeline2(vars, position) {
      var _this;
      if (vars === void 0) {
        vars = {};
      }
      _this = _Animation.call(this, vars) || this;
      _this.labels = {};
      _this.smoothChildTiming = !!vars.smoothChildTiming;
      _this.autoRemoveChildren = !!vars.autoRemoveChildren;
      _this._sort = _isNotFalse(vars.sortChildren);
      _globalTimeline && _addToTimeline(vars.parent || _globalTimeline, _assertThisInitialized(_this), position);
      vars.reversed && _this.reverse();
      vars.paused && _this.paused(true);
      vars.scrollTrigger && _scrollTrigger(_assertThisInitialized(_this), vars.scrollTrigger);
      return _this;
    }
    var _proto2 = Timeline2.prototype;
    _proto2.to = function to(targets, vars, position) {
      _createTweenType(0, arguments, this);
      return this;
    };
    _proto2.from = function from(targets, vars, position) {
      _createTweenType(1, arguments, this);
      return this;
    };
    _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
      _createTweenType(2, arguments, this);
      return this;
    };
    _proto2.set = function set(targets, vars, position) {
      vars.duration = 0;
      vars.parent = this;
      _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
      vars.immediateRender = !!vars.immediateRender;
      new Tween(targets, vars, _parsePosition(this, position), 1);
      return this;
    };
    _proto2.call = function call(callback, params, position) {
      return _addToTimeline(this, Tween.delayedCall(0, callback, params), position);
    };
    _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.duration = duration;
      vars.stagger = vars.stagger || stagger;
      vars.onComplete = onCompleteAll;
      vars.onCompleteParams = onCompleteAllParams;
      vars.parent = this;
      new Tween(targets, vars, _parsePosition(this, position));
      return this;
    };
    _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.runBackwards = 1;
      _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
      return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
    };
    _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
      toVars.startAt = fromVars;
      _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
      return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
    };
    _proto2.render = function render3(totalTime, suppressEvents, force) {
      var prevTime = this._time, tDur = this._dirty ? this.totalDuration() : this._tDur, dur = this._dur, tTime = totalTime <= 0 ? 0 : _roundPrecise(totalTime), crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur), time, child, next, iteration, cycleDuration, prevPaused, pauseTween, timeScale, prevStart, prevIteration, yoyo, isYoyo;
      this !== _globalTimeline && tTime > tDur && totalTime >= 0 && (tTime = tDur);
      if (tTime !== this._tTime || force || crossingStart) {
        if (prevTime !== this._time && dur) {
          tTime += this._time - prevTime;
          totalTime += this._time - prevTime;
        }
        time = tTime;
        prevStart = this._start;
        timeScale = this._ts;
        prevPaused = !timeScale;
        if (crossingStart) {
          dur || (prevTime = this._zTime);
          (totalTime || !suppressEvents) && (this._zTime = totalTime);
        }
        if (this._repeat) {
          yoyo = this._yoyo;
          cycleDuration = dur + this._rDelay;
          if (this._repeat < -1 && totalTime < 0) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }
          time = _roundPrecise(tTime % cycleDuration);
          if (tTime === tDur) {
            iteration = this._repeat;
            time = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);
            if (iteration && iteration === tTime / cycleDuration) {
              time = dur;
              iteration--;
            }
            time > dur && (time = dur);
          }
          prevIteration = _animationCycle(this._tTime, cycleDuration);
          !prevTime && this._tTime && prevIteration !== iteration && this._tTime - prevIteration * cycleDuration - this._dur <= 0 && (prevIteration = iteration);
          if (yoyo && iteration & 1) {
            time = dur - time;
            isYoyo = 1;
          }
          if (iteration !== prevIteration && !this._lock) {
            var rewinding = yoyo && prevIteration & 1, doesWrap = rewinding === (yoyo && iteration & 1);
            iteration < prevIteration && (rewinding = !rewinding);
            prevTime = rewinding ? 0 : tTime % dur ? dur : tTime;
            this._lock = 1;
            this.render(prevTime || (isYoyo ? 0 : _roundPrecise(iteration * cycleDuration)), suppressEvents, !dur)._lock = 0;
            this._tTime = tTime;
            !suppressEvents && this.parent && _callback(this, "onRepeat");
            this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);
            if (prevTime && prevTime !== this._time || prevPaused !== !this._ts || this.vars.onRepeat && !this.parent && !this._act) {
              return this;
            }
            dur = this._dur;
            tDur = this._tDur;
            if (doesWrap) {
              this._lock = 2;
              prevTime = rewinding ? dur : -1e-4;
              this.render(prevTime, true);
              this.vars.repeatRefresh && !isYoyo && this.invalidate();
            }
            this._lock = 0;
            if (!this._ts && !prevPaused) {
              return this;
            }
            _propagateYoyoEase(this, isYoyo);
          }
        }
        if (this._hasPause && !this._forcing && this._lock < 2) {
          pauseTween = _findNextPauseTween(this, _roundPrecise(prevTime), _roundPrecise(time));
          if (pauseTween) {
            tTime -= time - (time = pauseTween._start);
          }
        }
        this._tTime = tTime;
        this._time = time;
        this._act = !timeScale;
        if (!this._initted) {
          this._onUpdate = this.vars.onUpdate;
          this._initted = 1;
          this._zTime = totalTime;
          prevTime = 0;
        }
        if (!prevTime && time && !suppressEvents && !iteration) {
          _callback(this, "onStart");
          if (this._tTime !== tTime) {
            return this;
          }
        }
        if (time >= prevTime && totalTime >= 0) {
          child = this._first;
          while (child) {
            next = child._next;
            if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }
              child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);
              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = -_tinyNum);
                break;
              }
            }
            child = next;
          }
        } else {
          child = this._last;
          var adjustedTime = totalTime < 0 ? totalTime : time;
          while (child) {
            next = child._prev;
            if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }
              child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force || _reverting && (child._initted || child._startAt));
              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum);
                break;
              }
            }
            child = next;
          }
        }
        if (pauseTween && !suppressEvents) {
          this.pause();
          pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;
          if (this._ts) {
            this._start = prevStart;
            _setEnd(this);
            return this.render(totalTime, suppressEvents, force);
          }
        }
        this._onUpdate && !suppressEvents && _callback(this, "onUpdate", true);
        if (tTime === tDur && this._tTime >= this.totalDuration() || !tTime && prevTime) {
          if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) {
            if (!this._lock) {
              (totalTime || !dur) && (tTime === tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);
              if (!suppressEvents && !(totalTime < 0 && !prevTime) && (tTime || prevTime || !tDur)) {
                _callback(this, tTime === tDur && totalTime >= 0 ? "onComplete" : "onReverseComplete", true);
                this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
              }
            }
          }
        }
      }
      return this;
    };
    _proto2.add = function add(child, position) {
      var _this2 = this;
      _isNumber(position) || (position = _parsePosition(this, position, child));
      if (!(child instanceof Animation)) {
        if (_isArray(child)) {
          child.forEach(function(obj) {
            return _this2.add(obj, position);
          });
          return this;
        }
        if (_isString(child)) {
          return this.addLabel(child, position);
        }
        if (_isFunction(child)) {
          child = Tween.delayedCall(0, child);
        } else {
          return this;
        }
      }
      return this !== child ? _addToTimeline(this, child, position) : this;
    };
    _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
      if (nested === void 0) {
        nested = true;
      }
      if (tweens === void 0) {
        tweens = true;
      }
      if (timelines === void 0) {
        timelines = true;
      }
      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = -_bigNum;
      }
      var a = [], child = this._first;
      while (child) {
        if (child._start >= ignoreBeforeTime) {
          if (child instanceof Tween) {
            tweens && a.push(child);
          } else {
            timelines && a.push(child);
            nested && a.push.apply(a, child.getChildren(true, tweens, timelines));
          }
        }
        child = child._next;
      }
      return a;
    };
    _proto2.getById = function getById2(id) {
      var animations = this.getChildren(1, 1, 1), i2 = animations.length;
      while (i2--) {
        if (animations[i2].vars.id === id) {
          return animations[i2];
        }
      }
    };
    _proto2.remove = function remove(child) {
      if (_isString(child)) {
        return this.removeLabel(child);
      }
      if (_isFunction(child)) {
        return this.killTweensOf(child);
      }
      _removeLinkedListItem(this, child);
      if (child === this._recent) {
        this._recent = this._last;
      }
      return _uncache(this);
    };
    _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
      if (!arguments.length) {
        return this._tTime;
      }
      this._forcing = 1;
      if (!this._dp && this._ts) {
        this._start = _roundPrecise(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
      }
      _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);
      this._forcing = 0;
      return this;
    };
    _proto2.addLabel = function addLabel(label, position) {
      this.labels[label] = _parsePosition(this, position);
      return this;
    };
    _proto2.removeLabel = function removeLabel(label) {
      delete this.labels[label];
      return this;
    };
    _proto2.addPause = function addPause(position, callback, params) {
      var t2 = Tween.delayedCall(0, callback || _emptyFunc, params);
      t2.data = "isPause";
      this._hasPause = 1;
      return _addToTimeline(this, t2, _parsePosition(this, position));
    };
    _proto2.removePause = function removePause(position) {
      var child = this._first;
      position = _parsePosition(this, position);
      while (child) {
        if (child._start === position && child.data === "isPause") {
          _removeFromParent(child);
        }
        child = child._next;
      }
    };
    _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      var tweens = this.getTweensOf(targets, onlyActive), i2 = tweens.length;
      while (i2--) {
        _overwritingTween !== tweens[i2] && tweens[i2].kill(targets, props);
      }
      return this;
    };
    _proto2.getTweensOf = function getTweensOf2(targets, onlyActive) {
      var a = [], parsedTargets = toArray(targets), child = this._first, isGlobalTime = _isNumber(onlyActive), children;
      while (child) {
        if (child instanceof Tween) {
          if (_arrayContainsAny(child._targets, parsedTargets) && (isGlobalTime ? (!_overwritingTween || child._initted && child._ts) && child.globalTime(0) <= onlyActive && child.globalTime(child.totalDuration()) > onlyActive : !onlyActive || child.isActive())) {
            a.push(child);
          }
        } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
          a.push.apply(a, children);
        }
        child = child._next;
      }
      return a;
    };
    _proto2.tweenTo = function tweenTo(position, vars) {
      vars = vars || {};
      var tl = this, endTime = _parsePosition(tl, position), _vars = vars, startAt = _vars.startAt, _onStart = _vars.onStart, onStartParams = _vars.onStartParams, immediateRender = _vars.immediateRender, initted, tween = Tween.to(tl, _setDefaults({
        ease: vars.ease || "none",
        lazy: false,
        immediateRender: false,
        time: endTime,
        overwrite: "auto",
        duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
        onStart: function onStart() {
          tl.pause();
          if (!initted) {
            var duration = vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale());
            tween._dur !== duration && _setDuration(tween, duration, 0, 1).render(tween._time, true, true);
            initted = 1;
          }
          _onStart && _onStart.apply(tween, onStartParams || []);
        }
      }, vars));
      return immediateRender ? tween.render(0) : tween;
    };
    _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
      return this.tweenTo(toPosition, _setDefaults({
        startAt: {
          time: _parsePosition(this, fromPosition)
        }
      }, vars));
    };
    _proto2.recent = function recent() {
      return this._recent;
    };
    _proto2.nextLabel = function nextLabel(afterTime) {
      if (afterTime === void 0) {
        afterTime = this._time;
      }
      return _getLabelInDirection(this, _parsePosition(this, afterTime));
    };
    _proto2.previousLabel = function previousLabel(beforeTime) {
      if (beforeTime === void 0) {
        beforeTime = this._time;
      }
      return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
    };
    _proto2.currentLabel = function currentLabel(value) {
      return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
    };
    _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = 0;
      }
      var child = this._first, labels = this.labels, p;
      while (child) {
        if (child._start >= ignoreBeforeTime) {
          child._start += amount;
          child._end += amount;
        }
        child = child._next;
      }
      if (adjustLabels) {
        for (p in labels) {
          if (labels[p] >= ignoreBeforeTime) {
            labels[p] += amount;
          }
        }
      }
      return _uncache(this);
    };
    _proto2.invalidate = function invalidate(soft) {
      var child = this._first;
      this._lock = 0;
      while (child) {
        child.invalidate(soft);
        child = child._next;
      }
      return _Animation.prototype.invalidate.call(this, soft);
    };
    _proto2.clear = function clear(includeLabels) {
      if (includeLabels === void 0) {
        includeLabels = true;
      }
      var child = this._first, next;
      while (child) {
        next = child._next;
        this.remove(child);
        child = next;
      }
      this._dp && (this._time = this._tTime = this._pTime = 0);
      includeLabels && (this.labels = {});
      return _uncache(this);
    };
    _proto2.totalDuration = function totalDuration(value) {
      var max2 = 0, self2 = this, child = self2._last, prevStart = _bigNum, prev, start, parent;
      if (arguments.length) {
        return self2.timeScale((self2._repeat < 0 ? self2.duration() : self2.totalDuration()) / (self2.reversed() ? -value : value));
      }
      if (self2._dirty) {
        parent = self2.parent;
        while (child) {
          prev = child._prev;
          child._dirty && child.totalDuration();
          start = child._start;
          if (start > prevStart && self2._sort && child._ts && !self2._lock) {
            self2._lock = 1;
            _addToTimeline(self2, child, start - child._delay, 1)._lock = 0;
          } else {
            prevStart = start;
          }
          if (start < 0 && child._ts) {
            max2 -= start;
            if (!parent && !self2._dp || parent && parent.smoothChildTiming) {
              self2._start += start / self2._ts;
              self2._time -= start;
              self2._tTime -= start;
            }
            self2.shiftChildren(-start, false, -Infinity);
            prevStart = 0;
          }
          child._end > max2 && child._ts && (max2 = child._end);
          child = prev;
        }
        _setDuration(self2, self2 === _globalTimeline && self2._time > max2 ? self2._time : max2, 1, 1);
        self2._dirty = 0;
      }
      return self2._tDur;
    };
    Timeline2.updateRoot = function updateRoot(time) {
      if (_globalTimeline._ts) {
        _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));
        _lastRenderedFrame = _ticker.frame;
      }
      if (_ticker.frame >= _nextGCFrame) {
        _nextGCFrame += _config.autoSleep || 120;
        var child = _globalTimeline._first;
        if (!child || !child._ts) {
          if (_config.autoSleep && _ticker._listeners.length < 2) {
            while (child && !child._ts) {
              child = child._next;
            }
            child || _ticker.sleep();
          }
        }
      }
    };
    return Timeline2;
  }(Animation);
  _setDefaults(Timeline.prototype, {
    _lock: 0,
    _hasPause: 0,
    _forcing: 0
  });
  var _addComplexStringPropTween = function _addComplexStringPropTween2(target, prop, start, end, setter, stringFilter, funcParam) {
    var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter), index = 0, matchIndex = 0, result, startNums, color2, endNum, chunk, startNum, hasRandom, a;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";
    if (hasRandom = ~end.indexOf("random(")) {
      end = _replaceRandom(end);
    }
    if (stringFilter) {
      a = [start, end];
      stringFilter(a, target, prop);
      start = a[0];
      end = a[1];
    }
    startNums = start.match(_complexStringNumExp) || [];
    while (result = _complexStringNumExp.exec(end)) {
      endNum = result[0];
      chunk = end.substring(index, result.index);
      if (color2) {
        color2 = (color2 + 1) % 5;
      } else if (chunk.substr(-5) === "rgba(") {
        color2 = 1;
      }
      if (endNum !== startNums[matchIndex++]) {
        startNum = parseFloat(startNums[matchIndex - 1]) || 0;
        pt._pt = {
          _next: pt._pt,
          p: chunk || matchIndex === 1 ? chunk : ",",
          //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
          s: startNum,
          c: endNum.charAt(1) === "=" ? _parseRelative(startNum, endNum) - startNum : parseFloat(endNum) - startNum,
          m: color2 && color2 < 4 ? Math.round : 0
        };
        index = _complexStringNumExp.lastIndex;
      }
    }
    pt.c = index < end.length ? end.substring(index, end.length) : "";
    pt.fp = funcParam;
    if (_relExp.test(end) || hasRandom) {
      pt.e = 0;
    }
    this._pt = pt;
    return pt;
  };
  var _addPropTween = function _addPropTween2(target, prop, start, end, index, targets, modifier, stringFilter, funcParam, optional) {
    _isFunction(end) && (end = end(index || 0, target, targets));
    var currentValue = target[prop], parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](), setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc, pt;
    if (_isString(end)) {
      if (~end.indexOf("random(")) {
        end = _replaceRandom(end);
      }
      if (end.charAt(1) === "=") {
        pt = _parseRelative(parsedStart, end) + (getUnit(parsedStart) || 0);
        if (pt || pt === 0) {
          end = pt;
        }
      }
    }
    if (!optional || parsedStart !== end || _forceAllPropTweens) {
      if (!isNaN(parsedStart * end) && end !== "") {
        pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);
        funcParam && (pt.fp = funcParam);
        modifier && pt.modifier(modifier, this, target);
        return this._pt = pt;
      }
      !currentValue && !(prop in target) && _missingPlugin(prop, end);
      return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
    }
  };
  var _processVars = function _processVars2(vars, index, target, targets, tween) {
    _isFunction(vars) && (vars = _parseFuncOrString(vars, tween, index, target, targets));
    if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars) || _isTypedArray(vars)) {
      return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
    }
    var copy = {}, p;
    for (p in vars) {
      copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
    }
    return copy;
  };
  var _checkPlugin = function _checkPlugin2(property, vars, tween, index, target, targets) {
    var plugin, pt, ptLookup, i2;
    if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
      tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);
      if (tween !== _quickTween) {
        ptLookup = tween._ptLookup[tween._targets.indexOf(target)];
        i2 = plugin._props.length;
        while (i2--) {
          ptLookup[plugin._props[i2]] = pt;
        }
      }
    }
    return plugin;
  };
  var _overwritingTween;
  var _forceAllPropTweens;
  var _initTween = function _initTween2(tween, time, tTime) {
    var vars = tween.vars, ease = vars.ease, startAt = vars.startAt, immediateRender = vars.immediateRender, lazy = vars.lazy, onUpdate = vars.onUpdate, onUpdateParams = vars.onUpdateParams, callbackScope = vars.callbackScope, runBackwards = vars.runBackwards, yoyoEase = vars.yoyoEase, keyframes = vars.keyframes, autoRevert = vars.autoRevert, dur = tween._dur, prevStartAt = tween._startAt, targets = tween._targets, parent = tween.parent, fullTargets = parent && parent.data === "nested" ? parent.vars.targets : targets, autoOverwrite = tween._overwrite === "auto" && !_suppressOverwrites, tl = tween.timeline, cleanVars, i2, p, pt, target, hasPriority, gsData, harness, plugin, ptLookup, index, harnessVars, overwritten;
    tl && (!keyframes || !ease) && (ease = "none");
    tween._ease = _parseEase(ease, _defaults.ease);
    tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;
    if (yoyoEase && tween._yoyo && !tween._repeat) {
      yoyoEase = tween._yEase;
      tween._yEase = tween._ease;
      tween._ease = yoyoEase;
    }
    tween._from = !tl && !!vars.runBackwards;
    if (!tl || keyframes && !vars.stagger) {
      harness = targets[0] ? _getCache(targets[0]).harness : 0;
      harnessVars = harness && vars[harness.prop];
      cleanVars = _copyExcluding(vars, _reservedProps);
      if (prevStartAt) {
        prevStartAt._zTime < 0 && prevStartAt.progress(1);
        time < 0 && runBackwards && immediateRender && !autoRevert ? prevStartAt.render(-1, true) : prevStartAt.revert(runBackwards && dur ? _revertConfigNoKill : _startAtRevertConfig);
        prevStartAt._lazy = 0;
      }
      if (startAt) {
        _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
          data: "isStart",
          overwrite: false,
          parent,
          immediateRender: true,
          lazy: !prevStartAt && _isNotFalse(lazy),
          startAt: null,
          delay: 0,
          onUpdate,
          onUpdateParams,
          callbackScope,
          stagger: 0
        }, startAt)));
        tween._startAt._dp = 0;
        tween._startAt._sat = tween;
        time < 0 && (_reverting || !immediateRender && !autoRevert) && tween._startAt.revert(_revertConfigNoKill);
        if (immediateRender) {
          if (dur && time <= 0 && tTime <= 0) {
            time && (tween._zTime = time);
            return;
          }
        }
      } else if (runBackwards && dur) {
        if (!prevStartAt) {
          time && (immediateRender = false);
          p = _setDefaults({
            overwrite: false,
            data: "isFromStart",
            //we tag the tween with as "isFromStart" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a "from()" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:"height", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.
            lazy: immediateRender && !prevStartAt && _isNotFalse(lazy),
            immediateRender,
            //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)
            stagger: 0,
            parent
            //ensures that nested tweens that had a stagger are handled properly, like gsap.from(".class", {y: gsap.utils.wrap([-100,100]), stagger: 0.5})
          }, cleanVars);
          harnessVars && (p[harness.prop] = harnessVars);
          _removeFromParent(tween._startAt = Tween.set(targets, p));
          tween._startAt._dp = 0;
          tween._startAt._sat = tween;
          time < 0 && (_reverting ? tween._startAt.revert(_revertConfigNoKill) : tween._startAt.render(-1, true));
          tween._zTime = time;
          if (!immediateRender) {
            _initTween2(tween._startAt, _tinyNum, _tinyNum);
          } else if (!time) {
            return;
          }
        }
      }
      tween._pt = tween._ptCache = 0;
      lazy = dur && _isNotFalse(lazy) || lazy && !dur;
      for (i2 = 0; i2 < targets.length; i2++) {
        target = targets[i2];
        gsData = target._gsap || _harness(targets)[i2]._gsap;
        tween._ptLookup[i2] = ptLookup = {};
        _lazyLookup[gsData.id] && _lazyTweens.length && _lazyRender();
        index = fullTargets === targets ? i2 : fullTargets.indexOf(target);
        if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
          tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);
          plugin._props.forEach(function(name) {
            ptLookup[name] = pt;
          });
          plugin.priority && (hasPriority = 1);
        }
        if (!harness || harnessVars) {
          for (p in cleanVars) {
            if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {
              plugin.priority && (hasPriority = 1);
            } else {
              ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
            }
          }
        }
        tween._op && tween._op[i2] && tween.kill(target, tween._op[i2]);
        if (autoOverwrite && tween._pt) {
          _overwritingTween = tween;
          _globalTimeline.killTweensOf(target, ptLookup, tween.globalTime(time));
          overwritten = !tween.parent;
          _overwritingTween = 0;
        }
        tween._pt && lazy && (_lazyLookup[gsData.id] = 1);
      }
      hasPriority && _sortPropTweensByPriority(tween);
      tween._onInit && tween._onInit(tween);
    }
    tween._onUpdate = onUpdate;
    tween._initted = (!tween._op || tween._pt) && !overwritten;
    keyframes && time <= 0 && tl.render(_bigNum, true, true);
  };
  var _updatePropTweens = function _updatePropTweens2(tween, property, value, start, startIsRelative, ratio, time) {
    var ptCache = (tween._pt && tween._ptCache || (tween._ptCache = {}))[property], pt, rootPT, lookup, i2;
    if (!ptCache) {
      ptCache = tween._ptCache[property] = [];
      lookup = tween._ptLookup;
      i2 = tween._targets.length;
      while (i2--) {
        pt = lookup[i2][property];
        if (pt && pt.d && pt.d._pt) {
          pt = pt.d._pt;
          while (pt && pt.p !== property && pt.fp !== property) {
            pt = pt._next;
          }
        }
        if (!pt) {
          _forceAllPropTweens = 1;
          tween.vars[property] = "+=0";
          _initTween(tween, time);
          _forceAllPropTweens = 0;
          return 1;
        }
        ptCache.push(pt);
      }
    }
    i2 = ptCache.length;
    while (i2--) {
      rootPT = ptCache[i2];
      pt = rootPT._pt || rootPT;
      pt.s = (start || start === 0) && !startIsRelative ? start : pt.s + (start || 0) + ratio * pt.c;
      pt.c = value - pt.s;
      rootPT.e && (rootPT.e = _round(value) + getUnit(rootPT.e));
      rootPT.b && (rootPT.b = pt.s + getUnit(rootPT.b));
    }
  };
  var _addAliasesToVars = function _addAliasesToVars2(targets, vars) {
    var harness = targets[0] ? _getCache(targets[0]).harness : 0, propertyAliases = harness && harness.aliases, copy, p, i2, aliases;
    if (!propertyAliases) {
      return vars;
    }
    copy = _merge({}, vars);
    for (p in propertyAliases) {
      if (p in copy) {
        aliases = propertyAliases[p].split(",");
        i2 = aliases.length;
        while (i2--) {
          copy[aliases[i2]] = copy[p];
        }
      }
    }
    return copy;
  };
  var _parseKeyframe = function _parseKeyframe2(prop, obj, allProps, easeEach) {
    var ease = obj.ease || easeEach || "power1.inOut", p, a;
    if (_isArray(obj)) {
      a = allProps[prop] || (allProps[prop] = []);
      obj.forEach(function(value, i2) {
        return a.push({
          t: i2 / (obj.length - 1) * 100,
          v: value,
          e: ease
        });
      });
    } else {
      for (p in obj) {
        a = allProps[p] || (allProps[p] = []);
        p === "ease" || a.push({
          t: parseFloat(prop),
          v: obj[p],
          e: ease
        });
      }
    }
  };
  var _parseFuncOrString = function _parseFuncOrString2(value, tween, i2, target, targets) {
    return _isFunction(value) ? value.call(tween, i2, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
  };
  var _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase,autoRevert";
  var _staggerPropsToSkip = {};
  _forEachName(_staggerTweenProps + ",id,stagger,delay,duration,paused,scrollTrigger", function(name) {
    return _staggerPropsToSkip[name] = 1;
  });
  var Tween = /* @__PURE__ */ function(_Animation2) {
    _inheritsLoose(Tween2, _Animation2);
    function Tween2(targets, vars, position, skipInherit) {
      var _this3;
      if (typeof vars === "number") {
        position.duration = vars;
        vars = position;
        position = null;
      }
      _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars)) || this;
      var _this3$vars = _this3.vars, duration = _this3$vars.duration, delay = _this3$vars.delay, immediateRender = _this3$vars.immediateRender, stagger = _this3$vars.stagger, overwrite = _this3$vars.overwrite, keyframes = _this3$vars.keyframes, defaults3 = _this3$vars.defaults, scrollTrigger = _this3$vars.scrollTrigger, yoyoEase = _this3$vars.yoyoEase, parent = vars.parent || _globalTimeline, parsedTargets = (_isArray(targets) || _isTypedArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets), tl, i2, copy, l, p, curTarget, staggerFunc, staggerVarsToMerge;
      _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://greensock.com", !_config.nullTargetWarn) || [];
      _this3._ptLookup = [];
      _this3._overwrite = overwrite;
      if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
        vars = _this3.vars;
        tl = _this3.timeline = new Timeline({
          data: "nested",
          defaults: defaults3 || {},
          targets: parent && parent.data === "nested" ? parent.vars.targets : parsedTargets
        });
        tl.kill();
        tl.parent = tl._dp = _assertThisInitialized(_this3);
        tl._start = 0;
        if (stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
          l = parsedTargets.length;
          staggerFunc = stagger && distribute(stagger);
          if (_isObject(stagger)) {
            for (p in stagger) {
              if (~_staggerTweenProps.indexOf(p)) {
                staggerVarsToMerge || (staggerVarsToMerge = {});
                staggerVarsToMerge[p] = stagger[p];
              }
            }
          }
          for (i2 = 0; i2 < l; i2++) {
            copy = _copyExcluding(vars, _staggerPropsToSkip);
            copy.stagger = 0;
            yoyoEase && (copy.yoyoEase = yoyoEase);
            staggerVarsToMerge && _merge(copy, staggerVarsToMerge);
            curTarget = parsedTargets[i2];
            copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i2, curTarget, parsedTargets);
            copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i2, curTarget, parsedTargets) || 0) - _this3._delay;
            if (!stagger && l === 1 && copy.delay) {
              _this3._delay = delay = copy.delay;
              _this3._start += delay;
              copy.delay = 0;
            }
            tl.to(curTarget, copy, staggerFunc ? staggerFunc(i2, curTarget, parsedTargets) : 0);
            tl._ease = _easeMap.none;
          }
          tl.duration() ? duration = delay = 0 : _this3.timeline = 0;
        } else if (keyframes) {
          _inheritDefaults(_setDefaults(tl.vars.defaults, {
            ease: "none"
          }));
          tl._ease = _parseEase(keyframes.ease || vars.ease || "none");
          var time = 0, a, kf, v;
          if (_isArray(keyframes)) {
            keyframes.forEach(function(frame) {
              return tl.to(parsedTargets, frame, ">");
            });
            tl.duration();
          } else {
            copy = {};
            for (p in keyframes) {
              p === "ease" || p === "easeEach" || _parseKeyframe(p, keyframes[p], copy, keyframes.easeEach);
            }
            for (p in copy) {
              a = copy[p].sort(function(a2, b) {
                return a2.t - b.t;
              });
              time = 0;
              for (i2 = 0; i2 < a.length; i2++) {
                kf = a[i2];
                v = {
                  ease: kf.e,
                  duration: (kf.t - (i2 ? a[i2 - 1].t : 0)) / 100 * duration
                };
                v[p] = kf.v;
                tl.to(parsedTargets, v, time);
                time += v.duration;
              }
            }
            tl.duration() < duration && tl.to({}, {
              duration: duration - tl.duration()
            });
          }
        }
        duration || _this3.duration(duration = tl.duration());
      } else {
        _this3.timeline = 0;
      }
      if (overwrite === true && !_suppressOverwrites) {
        _overwritingTween = _assertThisInitialized(_this3);
        _globalTimeline.killTweensOf(parsedTargets);
        _overwritingTween = 0;
      }
      _addToTimeline(parent, _assertThisInitialized(_this3), position);
      vars.reversed && _this3.reverse();
      vars.paused && _this3.paused(true);
      if (immediateRender || !duration && !keyframes && _this3._start === _roundPrecise(parent._time) && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
        _this3._tTime = -_tinyNum;
        _this3.render(Math.max(0, -delay) || 0);
      }
      scrollTrigger && _scrollTrigger(_assertThisInitialized(_this3), scrollTrigger);
      return _this3;
    }
    var _proto3 = Tween2.prototype;
    _proto3.render = function render3(totalTime, suppressEvents, force) {
      var prevTime = this._time, tDur = this._tDur, dur = this._dur, isNegative = totalTime < 0, tTime = totalTime > tDur - _tinyNum && !isNegative ? tDur : totalTime < _tinyNum ? 0 : totalTime, time, pt, iteration, cycleDuration, prevIteration, isYoyo, ratio, timeline2, yoyoEase;
      if (!dur) {
        _renderZeroDurationTween(this, totalTime, suppressEvents, force);
      } else if (tTime !== this._tTime || !totalTime || force || !this._initted && this._tTime || this._startAt && this._zTime < 0 !== isNegative) {
        time = tTime;
        timeline2 = this.timeline;
        if (this._repeat) {
          cycleDuration = dur + this._rDelay;
          if (this._repeat < -1 && isNegative) {
            return this.totalTime(cycleDuration * 100 + totalTime, suppressEvents, force);
          }
          time = _roundPrecise(tTime % cycleDuration);
          if (tTime === tDur) {
            iteration = this._repeat;
            time = dur;
          } else {
            iteration = ~~(tTime / cycleDuration);
            if (iteration && iteration === tTime / cycleDuration) {
              time = dur;
              iteration--;
            }
            time > dur && (time = dur);
          }
          isYoyo = this._yoyo && iteration & 1;
          if (isYoyo) {
            yoyoEase = this._yEase;
            time = dur - time;
          }
          prevIteration = _animationCycle(this._tTime, cycleDuration);
          if (time === prevTime && !force && this._initted) {
            this._tTime = tTime;
            return this;
          }
          if (iteration !== prevIteration) {
            timeline2 && this._yEase && _propagateYoyoEase(timeline2, isYoyo);
            if (this.vars.repeatRefresh && !isYoyo && !this._lock) {
              this._lock = force = 1;
              this.render(_roundPrecise(cycleDuration * iteration), true).invalidate()._lock = 0;
            }
          }
        }
        if (!this._initted) {
          if (_attemptInitTween(this, isNegative ? totalTime : time, force, suppressEvents, tTime)) {
            this._tTime = 0;
            return this;
          }
          if (prevTime !== this._time) {
            return this;
          }
          if (dur !== this._dur) {
            return this.render(totalTime, suppressEvents, force);
          }
        }
        this._tTime = tTime;
        this._time = time;
        if (!this._act && this._ts) {
          this._act = 1;
          this._lazy = 0;
        }
        this.ratio = ratio = (yoyoEase || this._ease)(time / dur);
        if (this._from) {
          this.ratio = ratio = 1 - ratio;
        }
        if (time && !prevTime && !suppressEvents && !iteration) {
          _callback(this, "onStart");
          if (this._tTime !== tTime) {
            return this;
          }
        }
        pt = this._pt;
        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }
        timeline2 && timeline2.render(totalTime < 0 ? totalTime : !time && isYoyo ? -_tinyNum : timeline2._dur * timeline2._ease(time / this._dur), suppressEvents, force) || this._startAt && (this._zTime = totalTime);
        if (this._onUpdate && !suppressEvents) {
          isNegative && _rewindStartAt(this, totalTime, suppressEvents, force);
          _callback(this, "onUpdate");
        }
        this._repeat && iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent && _callback(this, "onRepeat");
        if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
          isNegative && !this._onUpdate && _rewindStartAt(this, totalTime, true, true);
          (totalTime || !dur) && (tTime === this._tDur && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);
          if (!suppressEvents && !(isNegative && !prevTime) && (tTime || prevTime || isYoyo)) {
            _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);
            this._prom && !(tTime < tDur && this.timeScale() > 0) && this._prom();
          }
        }
      }
      return this;
    };
    _proto3.targets = function targets() {
      return this._targets;
    };
    _proto3.invalidate = function invalidate(soft) {
      (!soft || !this.vars.runBackwards) && (this._startAt = 0);
      this._pt = this._op = this._onUpdate = this._lazy = this.ratio = 0;
      this._ptLookup = [];
      this.timeline && this.timeline.invalidate(soft);
      return _Animation2.prototype.invalidate.call(this, soft);
    };
    _proto3.resetTo = function resetTo(property, value, start, startIsRelative) {
      _tickerActive || _ticker.wake();
      this._ts || this.play();
      var time = Math.min(this._dur, (this._dp._time - this._start) * this._ts), ratio;
      this._initted || _initTween(this, time);
      ratio = this._ease(time / this._dur);
      if (_updatePropTweens(this, property, value, start, startIsRelative, ratio, time)) {
        return this.resetTo(property, value, start, startIsRelative);
      }
      _alignPlayhead(this, 0);
      this.parent || _addLinkedListItem(this._dp, this, "_first", "_last", this._dp._sort ? "_start" : 0);
      return this.render(0);
    };
    _proto3.kill = function kill(targets, vars) {
      if (vars === void 0) {
        vars = "all";
      }
      if (!targets && (!vars || vars === "all")) {
        this._lazy = this._pt = 0;
        return this.parent ? _interrupt(this) : this;
      }
      if (this.timeline) {
        var tDur = this.timeline.totalDuration();
        this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true)._first || _interrupt(this);
        this.parent && tDur !== this.timeline.totalDuration() && _setDuration(this, this._dur * this.timeline._tDur / tDur, 0, 1);
        return this;
      }
      var parsedTargets = this._targets, killingTargets = targets ? toArray(targets) : parsedTargets, propTweenLookup = this._ptLookup, firstPT = this._pt, overwrittenProps, curLookup, curOverwriteProps, props, p, pt, i2;
      if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
        vars === "all" && (this._pt = 0);
        return _interrupt(this);
      }
      overwrittenProps = this._op = this._op || [];
      if (vars !== "all") {
        if (_isString(vars)) {
          p = {};
          _forEachName(vars, function(name) {
            return p[name] = 1;
          });
          vars = p;
        }
        vars = _addAliasesToVars(parsedTargets, vars);
      }
      i2 = parsedTargets.length;
      while (i2--) {
        if (~killingTargets.indexOf(parsedTargets[i2])) {
          curLookup = propTweenLookup[i2];
          if (vars === "all") {
            overwrittenProps[i2] = vars;
            props = curLookup;
            curOverwriteProps = {};
          } else {
            curOverwriteProps = overwrittenProps[i2] = overwrittenProps[i2] || {};
            props = vars;
          }
          for (p in props) {
            pt = curLookup && curLookup[p];
            if (pt) {
              if (!("kill" in pt.d) || pt.d.kill(p) === true) {
                _removeLinkedListItem(this, pt, "_pt");
              }
              delete curLookup[p];
            }
            if (curOverwriteProps !== "all") {
              curOverwriteProps[p] = 1;
            }
          }
        }
      }
      this._initted && !this._pt && firstPT && _interrupt(this);
      return this;
    };
    Tween2.to = function to(targets, vars) {
      return new Tween2(targets, vars, arguments[2]);
    };
    Tween2.from = function from(targets, vars) {
      return _createTweenType(1, arguments);
    };
    Tween2.delayedCall = function delayedCall(delay, callback, params, scope) {
      return new Tween2(callback, 0, {
        immediateRender: false,
        lazy: false,
        overwrite: false,
        delay,
        onComplete: callback,
        onReverseComplete: callback,
        onCompleteParams: params,
        onReverseCompleteParams: params,
        callbackScope: scope
      });
    };
    Tween2.fromTo = function fromTo(targets, fromVars, toVars) {
      return _createTweenType(2, arguments);
    };
    Tween2.set = function set(targets, vars) {
      vars.duration = 0;
      vars.repeatDelay || (vars.repeat = 0);
      return new Tween2(targets, vars);
    };
    Tween2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      return _globalTimeline.killTweensOf(targets, props, onlyActive);
    };
    return Tween2;
  }(Animation);
  _setDefaults(Tween.prototype, {
    _targets: [],
    _lazy: 0,
    _startAt: 0,
    _op: 0,
    _onInit: 0
  });
  _forEachName("staggerTo,staggerFrom,staggerFromTo", function(name) {
    Tween[name] = function() {
      var tl = new Timeline(), params = _slice.call(arguments, 0);
      params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
      return tl[name].apply(tl, params);
    };
  });
  var _setterPlain = function _setterPlain2(target, property, value) {
    return target[property] = value;
  };
  var _setterFunc = function _setterFunc2(target, property, value) {
    return target[property](value);
  };
  var _setterFuncWithParam = function _setterFuncWithParam2(target, property, value, data) {
    return target[property](data.fp, value);
  };
  var _setterAttribute = function _setterAttribute2(target, property, value) {
    return target.setAttribute(property, value);
  };
  var _getSetter = function _getSetter2(target, property) {
    return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
  };
  var _renderPlain = function _renderPlain2(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1e6) / 1e6, data);
  };
  var _renderBoolean = function _renderBoolean2(ratio, data) {
    return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
  };
  var _renderComplexString = function _renderComplexString2(ratio, data) {
    var pt = data._pt, s2 = "";
    if (!ratio && data.b) {
      s2 = data.b;
    } else if (ratio === 1 && data.e) {
      s2 = data.e;
    } else {
      while (pt) {
        s2 = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 1e4) / 1e4) + s2;
        pt = pt._next;
      }
      s2 += data.c;
    }
    data.set(data.t, data.p, s2, data);
  };
  var _renderPropTweens = function _renderPropTweens2(ratio, data) {
    var pt = data._pt;
    while (pt) {
      pt.r(ratio, pt.d);
      pt = pt._next;
    }
  };
  var _addPluginModifier = function _addPluginModifier2(modifier, tween, target, property) {
    var pt = this._pt, next;
    while (pt) {
      next = pt._next;
      pt.p === property && pt.modifier(modifier, tween, target);
      pt = next;
    }
  };
  var _killPropTweensOf = function _killPropTweensOf2(property) {
    var pt = this._pt, hasNonDependentRemaining, next;
    while (pt) {
      next = pt._next;
      if (pt.p === property && !pt.op || pt.op === property) {
        _removeLinkedListItem(this, pt, "_pt");
      } else if (!pt.dep) {
        hasNonDependentRemaining = 1;
      }
      pt = next;
    }
    return !hasNonDependentRemaining;
  };
  var _setterWithModifier = function _setterWithModifier2(target, property, value, data) {
    data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
  };
  var _sortPropTweensByPriority = function _sortPropTweensByPriority2(parent) {
    var pt = parent._pt, next, pt2, first, last;
    while (pt) {
      next = pt._next;
      pt2 = first;
      while (pt2 && pt2.pr > pt.pr) {
        pt2 = pt2._next;
      }
      if (pt._prev = pt2 ? pt2._prev : last) {
        pt._prev._next = pt;
      } else {
        first = pt;
      }
      if (pt._next = pt2) {
        pt2._prev = pt;
      } else {
        last = pt;
      }
      pt = next;
    }
    parent._pt = first;
  };
  var PropTween = /* @__PURE__ */ function() {
    function PropTween2(next, target, prop, start, change, renderer, data, setter, priority) {
      this.t = target;
      this.s = start;
      this.c = change;
      this.p = prop;
      this.r = renderer || _renderPlain;
      this.d = data || this;
      this.set = setter || _setterPlain;
      this.pr = priority || 0;
      this._next = next;
      if (next) {
        next._prev = this;
      }
    }
    var _proto4 = PropTween2.prototype;
    _proto4.modifier = function modifier(func, tween, target) {
      this.mSet = this.mSet || this.set;
      this.set = _setterWithModifier;
      this.m = func;
      this.mt = target;
      this.tween = tween;
    };
    return PropTween2;
  }();
  _forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert,scrollTrigger", function(name) {
    return _reservedProps[name] = 1;
  });
  _globals.TweenMax = _globals.TweenLite = Tween;
  _globals.TimelineLite = _globals.TimelineMax = Timeline;
  _globalTimeline = new Timeline({
    sortChildren: false,
    defaults: _defaults,
    autoRemoveChildren: true,
    id: "root",
    smoothChildTiming: true
  });
  _config.stringFilter = _colorStringFilter;
  var _media = [];
  var _listeners = {};
  var _emptyArray = [];
  var _lastMediaTime = 0;
  var _contextID = 0;
  var _dispatch = function _dispatch2(type) {
    return (_listeners[type] || _emptyArray).map(function(f) {
      return f();
    });
  };
  var _onMediaChange = function _onMediaChange2() {
    var time = Date.now(), matches = [];
    if (time - _lastMediaTime > 2) {
      _dispatch("matchMediaInit");
      _media.forEach(function(c) {
        var queries = c.queries, conditions = c.conditions, match, p, anyMatch, toggled;
        for (p in queries) {
          match = _win.matchMedia(queries[p]).matches;
          match && (anyMatch = 1);
          if (match !== conditions[p]) {
            conditions[p] = match;
            toggled = 1;
          }
        }
        if (toggled) {
          c.revert();
          anyMatch && matches.push(c);
        }
      });
      _dispatch("matchMediaRevert");
      matches.forEach(function(c) {
        return c.onMatch(c);
      });
      _lastMediaTime = time;
      _dispatch("matchMedia");
    }
  };
  var Context = /* @__PURE__ */ function() {
    function Context2(func, scope) {
      this.selector = scope && selector(scope);
      this.data = [];
      this._r = [];
      this.isReverted = false;
      this.id = _contextID++;
      func && this.add(func);
    }
    var _proto5 = Context2.prototype;
    _proto5.add = function add(name, func, scope) {
      if (_isFunction(name)) {
        scope = func;
        func = name;
        name = _isFunction;
      }
      var self2 = this, f = function f2() {
        var prev = _context, prevSelector = self2.selector, result;
        prev && prev !== self2 && prev.data.push(self2);
        scope && (self2.selector = selector(scope));
        _context = self2;
        result = func.apply(self2, arguments);
        _isFunction(result) && self2._r.push(result);
        _context = prev;
        self2.selector = prevSelector;
        self2.isReverted = false;
        return result;
      };
      self2.last = f;
      return name === _isFunction ? f(self2) : name ? self2[name] = f : f;
    };
    _proto5.ignore = function ignore(func) {
      var prev = _context;
      _context = null;
      func(this);
      _context = prev;
    };
    _proto5.getTweens = function getTweens() {
      var a = [];
      this.data.forEach(function(e3) {
        return e3 instanceof Context2 ? a.push.apply(a, e3.getTweens()) : e3 instanceof Tween && !(e3.parent && e3.parent.data === "nested") && a.push(e3);
      });
      return a;
    };
    _proto5.clear = function clear() {
      this._r.length = this.data.length = 0;
    };
    _proto5.kill = function kill(revert, matchMedia2) {
      var _this4 = this;
      if (revert) {
        var tweens = this.getTweens();
        this.data.forEach(function(t2) {
          if (t2.data === "isFlip") {
            t2.revert();
            t2.getChildren(true, true, false).forEach(function(tween) {
              return tweens.splice(tweens.indexOf(tween), 1);
            });
          }
        });
        tweens.map(function(t2) {
          return {
            g: t2.globalTime(0),
            t: t2
          };
        }).sort(function(a, b) {
          return b.g - a.g || -Infinity;
        }).forEach(function(o2) {
          return o2.t.revert(revert);
        });
        this.data.forEach(function(e3) {
          return !(e3 instanceof Tween) && e3.revert && e3.revert(revert);
        });
        this._r.forEach(function(f) {
          return f(revert, _this4);
        });
        this.isReverted = true;
      } else {
        this.data.forEach(function(e3) {
          return e3.kill && e3.kill();
        });
      }
      this.clear();
      if (matchMedia2) {
        var i2 = _media.length;
        while (i2--) {
          _media[i2].id === this.id && _media.splice(i2, 1);
        }
      }
    };
    _proto5.revert = function revert(config3) {
      this.kill(config3 || {});
    };
    return Context2;
  }();
  var MatchMedia = /* @__PURE__ */ function() {
    function MatchMedia2(scope) {
      this.contexts = [];
      this.scope = scope;
    }
    var _proto6 = MatchMedia2.prototype;
    _proto6.add = function add(conditions, func, scope) {
      _isObject(conditions) || (conditions = {
        matches: conditions
      });
      var context3 = new Context(0, scope || this.scope), cond = context3.conditions = {}, mq, p, active;
      _context && !context3.selector && (context3.selector = _context.selector);
      this.contexts.push(context3);
      func = context3.add("onMatch", func);
      context3.queries = conditions;
      for (p in conditions) {
        if (p === "all") {
          active = 1;
        } else {
          mq = _win.matchMedia(conditions[p]);
          if (mq) {
            _media.indexOf(context3) < 0 && _media.push(context3);
            (cond[p] = mq.matches) && (active = 1);
            mq.addListener ? mq.addListener(_onMediaChange) : mq.addEventListener("change", _onMediaChange);
          }
        }
      }
      active && func(context3);
      return this;
    };
    _proto6.revert = function revert(config3) {
      this.kill(config3 || {});
    };
    _proto6.kill = function kill(revert) {
      this.contexts.forEach(function(c) {
        return c.kill(revert, true);
      });
    };
    return MatchMedia2;
  }();
  var _gsap = {
    registerPlugin: function registerPlugin() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      args.forEach(function(config3) {
        return _createPlugin(config3);
      });
    },
    timeline: function timeline(vars) {
      return new Timeline(vars);
    },
    getTweensOf: function getTweensOf(targets, onlyActive) {
      return _globalTimeline.getTweensOf(targets, onlyActive);
    },
    getProperty: function getProperty(target, property, unit, uncache) {
      _isString(target) && (target = toArray(target)[0]);
      var getter = _getCache(target || {}).get, format = unit ? _passThrough : _numericIfPossible;
      unit === "native" && (unit = "");
      return !target ? target : !property ? function(property2, unit2, uncache2) {
        return format((_plugins[property2] && _plugins[property2].get || getter)(target, property2, unit2, uncache2));
      } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
    },
    quickSetter: function quickSetter(target, property, unit) {
      target = toArray(target);
      if (target.length > 1) {
        var setters = target.map(function(t2) {
          return gsap.quickSetter(t2, property, unit);
        }), l = setters.length;
        return function(value) {
          var i2 = l;
          while (i2--) {
            setters[i2](value);
          }
        };
      }
      target = target[0] || {};
      var Plugin = _plugins[property], cache = _getCache(target), p = cache.harness && (cache.harness.aliases || {})[property] || property, setter = Plugin ? function(value) {
        var p2 = new Plugin();
        _quickTween._pt = 0;
        p2.init(target, unit ? value + unit : value, _quickTween, 0, [target]);
        p2.render(1, p2);
        _quickTween._pt && _renderPropTweens(1, _quickTween);
      } : cache.set(target, p);
      return Plugin ? setter : function(value) {
        return setter(target, p, unit ? value + unit : value, cache, 1);
      };
    },
    quickTo: function quickTo(target, property, vars) {
      var _merge22;
      var tween = gsap.to(target, _merge((_merge22 = {}, _merge22[property] = "+=0.1", _merge22.paused = true, _merge22), vars || {})), func = function func2(value, start, startIsRelative) {
        return tween.resetTo(property, value, start, startIsRelative);
      };
      func.tween = tween;
      return func;
    },
    isTweening: function isTweening(targets) {
      return _globalTimeline.getTweensOf(targets, true).length > 0;
    },
    defaults: function defaults(value) {
      value && value.ease && (value.ease = _parseEase(value.ease, _defaults.ease));
      return _mergeDeep(_defaults, value || {});
    },
    config: function config2(value) {
      return _mergeDeep(_config, value || {});
    },
    registerEffect: function registerEffect(_ref3) {
      var name = _ref3.name, effect = _ref3.effect, plugins = _ref3.plugins, defaults3 = _ref3.defaults, extendTimeline = _ref3.extendTimeline;
      (plugins || "").split(",").forEach(function(pluginName) {
        return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
      });
      _effects[name] = function(targets, vars, tl) {
        return effect(toArray(targets), _setDefaults(vars || {}, defaults3), tl);
      };
      if (extendTimeline) {
        Timeline.prototype[name] = function(targets, vars, position) {
          return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
        };
      }
    },
    registerEase: function registerEase(name, ease) {
      _easeMap[name] = _parseEase(ease);
    },
    parseEase: function parseEase(ease, defaultEase) {
      return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
    },
    getById: function getById(id) {
      return _globalTimeline.getById(id);
    },
    exportRoot: function exportRoot(vars, includeDelayedCalls) {
      if (vars === void 0) {
        vars = {};
      }
      var tl = new Timeline(vars), child, next;
      tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);
      _globalTimeline.remove(tl);
      tl._dp = 0;
      tl._time = tl._tTime = _globalTimeline._time;
      child = _globalTimeline._first;
      while (child) {
        next = child._next;
        if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
          _addToTimeline(tl, child, child._start - child._delay);
        }
        child = next;
      }
      _addToTimeline(_globalTimeline, tl, 0);
      return tl;
    },
    context: function context(func, scope) {
      return func ? new Context(func, scope) : _context;
    },
    matchMedia: function matchMedia(scope) {
      return new MatchMedia(scope);
    },
    matchMediaRefresh: function matchMediaRefresh() {
      return _media.forEach(function(c) {
        var cond = c.conditions, found, p;
        for (p in cond) {
          if (cond[p]) {
            cond[p] = false;
            found = 1;
          }
        }
        found && c.revert();
      }) || _onMediaChange();
    },
    addEventListener: function addEventListener(type, callback) {
      var a = _listeners[type] || (_listeners[type] = []);
      ~a.indexOf(callback) || a.push(callback);
    },
    removeEventListener: function removeEventListener(type, callback) {
      var a = _listeners[type], i2 = a && a.indexOf(callback);
      i2 >= 0 && a.splice(i2, 1);
    },
    utils: {
      wrap,
      wrapYoyo,
      distribute,
      random,
      snap,
      normalize,
      getUnit,
      clamp,
      splitColor,
      toArray,
      selector,
      mapRange,
      pipe,
      unitize,
      interpolate,
      shuffle
    },
    install: _install,
    effects: _effects,
    ticker: _ticker,
    updateRoot: Timeline.updateRoot,
    plugins: _plugins,
    globalTimeline: _globalTimeline,
    core: {
      PropTween,
      globals: _addGlobal,
      Tween,
      Timeline,
      Animation,
      getCache: _getCache,
      _removeLinkedListItem,
      reverting: function reverting() {
        return _reverting;
      },
      context: function context2(toAdd) {
        if (toAdd && _context) {
          _context.data.push(toAdd);
          toAdd._ctx = _context;
        }
        return _context;
      },
      suppressOverwrites: function suppressOverwrites(value) {
        return _suppressOverwrites = value;
      }
    }
  };
  _forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function(name) {
    return _gsap[name] = Tween[name];
  });
  _ticker.add(Timeline.updateRoot);
  _quickTween = _gsap.to({}, {
    duration: 0
  });
  var _getPluginPropTween = function _getPluginPropTween2(plugin, prop) {
    var pt = plugin._pt;
    while (pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop) {
      pt = pt._next;
    }
    return pt;
  };
  var _addModifiers = function _addModifiers2(tween, modifiers) {
    var targets = tween._targets, p, i2, pt;
    for (p in modifiers) {
      i2 = targets.length;
      while (i2--) {
        pt = tween._ptLookup[i2][p];
        if (pt && (pt = pt.d)) {
          if (pt._pt) {
            pt = _getPluginPropTween(pt, p);
          }
          pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i2], p);
        }
      }
    }
  };
  var _buildModifierPlugin = function _buildModifierPlugin2(name, modifier) {
    return {
      name,
      rawVars: 1,
      //don't pre-process function-based values or "random()" strings.
      init: function init4(target, vars, tween) {
        tween._onInit = function(tween2) {
          var temp, p;
          if (_isString(vars)) {
            temp = {};
            _forEachName(vars, function(name2) {
              return temp[name2] = 1;
            });
            vars = temp;
          }
          if (modifier) {
            temp = {};
            for (p in vars) {
              temp[p] = modifier(vars[p]);
            }
            vars = temp;
          }
          _addModifiers(tween2, vars);
        };
      }
    };
  };
  var gsap = _gsap.registerPlugin({
    name: "attr",
    init: function init(target, vars, tween, index, targets) {
      var p, pt, v;
      this.tween = tween;
      for (p in vars) {
        v = target.getAttribute(p) || "";
        pt = this.add(target, "setAttribute", (v || 0) + "", vars[p], index, targets, 0, 0, p);
        pt.op = p;
        pt.b = v;
        this._props.push(p);
      }
    },
    render: function render(ratio, data) {
      var pt = data._pt;
      while (pt) {
        _reverting ? pt.set(pt.t, pt.p, pt.b, pt) : pt.r(ratio, pt.d);
        pt = pt._next;
      }
    }
  }, {
    name: "endArray",
    init: function init2(target, value) {
      var i2 = value.length;
      while (i2--) {
        this.add(target, i2, target[i2] || 0, value[i2], 0, 0, 0, 0, 0, 1);
      }
    }
  }, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap;
  Tween.version = Timeline.version = gsap.version = "3.12.2";
  _coreReady = 1;
  _windowExists() && _wake();
  var Power0 = _easeMap.Power0;
  var Power1 = _easeMap.Power1;
  var Power2 = _easeMap.Power2;
  var Power3 = _easeMap.Power3;
  var Power4 = _easeMap.Power4;
  var Linear = _easeMap.Linear;
  var Quad = _easeMap.Quad;
  var Cubic = _easeMap.Cubic;
  var Quart = _easeMap.Quart;
  var Quint = _easeMap.Quint;
  var Strong = _easeMap.Strong;
  var Elastic = _easeMap.Elastic;
  var Back = _easeMap.Back;
  var SteppedEase = _easeMap.SteppedEase;
  var Bounce = _easeMap.Bounce;
  var Sine = _easeMap.Sine;
  var Expo = _easeMap.Expo;
  var Circ = _easeMap.Circ;

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/CSSPlugin.js
  init_live_reload();
  var _win2;
  var _doc2;
  var _docElement;
  var _pluginInitted;
  var _tempDiv;
  var _tempDivStyler;
  var _recentSetterPlugin;
  var _reverting2;
  var _windowExists3 = function _windowExists4() {
    return typeof window !== "undefined";
  };
  var _transformProps = {};
  var _RAD2DEG = 180 / Math.PI;
  var _DEG2RAD = Math.PI / 180;
  var _atan2 = Math.atan2;
  var _bigNum2 = 1e8;
  var _capsExp = /([A-Z])/g;
  var _horizontalExp = /(left|right|width|margin|padding|x)/i;
  var _complexExp = /[\s,\(]\S/;
  var _propertyAliases = {
    autoAlpha: "opacity,visibility",
    scale: "scaleX,scaleY",
    alpha: "opacity"
  };
  var _renderCSSProp = function _renderCSSProp2(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 1e4) / 1e4 + data.u, data);
  };
  var _renderPropWithEnd = function _renderPropWithEnd2(ratio, data) {
    return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 1e4) / 1e4 + data.u, data);
  };
  var _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning2(ratio, data) {
    return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 1e4) / 1e4 + data.u : data.b, data);
  };
  var _renderRoundedCSSProp = function _renderRoundedCSSProp2(ratio, data) {
    var value = data.s + data.c * ratio;
    data.set(data.t, data.p, ~~(value + (value < 0 ? -0.5 : 0.5)) + data.u, data);
  };
  var _renderNonTweeningValue = function _renderNonTweeningValue2(ratio, data) {
    return data.set(data.t, data.p, ratio ? data.e : data.b, data);
  };
  var _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd2(ratio, data) {
    return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
  };
  var _setterCSSStyle = function _setterCSSStyle2(target, property, value) {
    return target.style[property] = value;
  };
  var _setterCSSProp = function _setterCSSProp2(target, property, value) {
    return target.style.setProperty(property, value);
  };
  var _setterTransform = function _setterTransform2(target, property, value) {
    return target._gsap[property] = value;
  };
  var _setterScale = function _setterScale2(target, property, value) {
    return target._gsap.scaleX = target._gsap.scaleY = value;
  };
  var _setterScaleWithRender = function _setterScaleWithRender2(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache.scaleX = cache.scaleY = value;
    cache.renderTransform(ratio, cache);
  };
  var _setterTransformWithRender = function _setterTransformWithRender2(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache[property] = value;
    cache.renderTransform(ratio, cache);
  };
  var _transformProp = "transform";
  var _transformOriginProp = _transformProp + "Origin";
  var _saveStyle = function _saveStyle2(property, isNotCSS) {
    var _this = this;
    var target = this.target, style = target.style;
    if (property in _transformProps && style) {
      this.tfm = this.tfm || {};
      if (property !== "transform") {
        property = _propertyAliases[property] || property;
        ~property.indexOf(",") ? property.split(",").forEach(function(a) {
          return _this.tfm[a] = _get(target, a);
        }) : this.tfm[property] = target._gsap.x ? target._gsap[property] : _get(target, property);
      } else {
        return _propertyAliases.transform.split(",").forEach(function(p) {
          return _saveStyle2.call(_this, p, isNotCSS);
        });
      }
      if (this.props.indexOf(_transformProp) >= 0) {
        return;
      }
      if (target._gsap.svg) {
        this.svgo = target.getAttribute("data-svg-origin");
        this.props.push(_transformOriginProp, isNotCSS, "");
      }
      property = _transformProp;
    }
    (style || isNotCSS) && this.props.push(property, isNotCSS, style[property]);
  };
  var _removeIndependentTransforms = function _removeIndependentTransforms2(style) {
    if (style.translate) {
      style.removeProperty("translate");
      style.removeProperty("scale");
      style.removeProperty("rotate");
    }
  };
  var _revertStyle = function _revertStyle2() {
    var props = this.props, target = this.target, style = target.style, cache = target._gsap, i2, p;
    for (i2 = 0; i2 < props.length; i2 += 3) {
      props[i2 + 1] ? target[props[i2]] = props[i2 + 2] : props[i2 + 2] ? style[props[i2]] = props[i2 + 2] : style.removeProperty(props[i2].substr(0, 2) === "--" ? props[i2] : props[i2].replace(_capsExp, "-$1").toLowerCase());
    }
    if (this.tfm) {
      for (p in this.tfm) {
        cache[p] = this.tfm[p];
      }
      if (cache.svg) {
        cache.renderTransform();
        target.setAttribute("data-svg-origin", this.svgo || "");
      }
      i2 = _reverting2();
      if ((!i2 || !i2.isStart) && !style[_transformProp]) {
        _removeIndependentTransforms(style);
        cache.uncache = 1;
      }
    }
  };
  var _getStyleSaver = function _getStyleSaver2(target, properties) {
    var saver = {
      target,
      props: [],
      revert: _revertStyle,
      save: _saveStyle
    };
    target._gsap || gsap.core.getCache(target);
    properties && properties.split(",").forEach(function(p) {
      return saver.save(p);
    });
    return saver;
  };
  var _supports3D;
  var _createElement = function _createElement2(type, ns) {
    var e3 = _doc2.createElementNS ? _doc2.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc2.createElement(type);
    return e3.style ? e3 : _doc2.createElement(type);
  };
  var _getComputedProperty = function _getComputedProperty2(target, property, skipPrefixFallback) {
    var cs = getComputedStyle(target);
    return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty2(target, _checkPropPrefix(property) || property, 1) || "";
  };
  var _prefixes = "O,Moz,ms,Ms,Webkit".split(",");
  var _checkPropPrefix = function _checkPropPrefix2(property, element, preferPrefix) {
    var e3 = element || _tempDiv, s2 = e3.style, i2 = 5;
    if (property in s2 && !preferPrefix) {
      return property;
    }
    property = property.charAt(0).toUpperCase() + property.substr(1);
    while (i2-- && !(_prefixes[i2] + property in s2)) {
    }
    return i2 < 0 ? null : (i2 === 3 ? "ms" : i2 >= 0 ? _prefixes[i2] : "") + property;
  };
  var _initCore = function _initCore2() {
    if (_windowExists3() && window.document) {
      _win2 = window;
      _doc2 = _win2.document;
      _docElement = _doc2.documentElement;
      _tempDiv = _createElement("div") || {
        style: {}
      };
      _tempDivStyler = _createElement("div");
      _transformProp = _checkPropPrefix(_transformProp);
      _transformOriginProp = _transformProp + "Origin";
      _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0";
      _supports3D = !!_checkPropPrefix("perspective");
      _reverting2 = gsap.core.reverting;
      _pluginInitted = 1;
    }
  };
  var _getBBoxHack = function _getBBoxHack2(swapIfPossible) {
    var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"), oldParent = this.parentNode, oldSibling = this.nextSibling, oldCSS = this.style.cssText, bbox;
    _docElement.appendChild(svg);
    svg.appendChild(this);
    this.style.display = "block";
    if (swapIfPossible) {
      try {
        bbox = this.getBBox();
        this._gsapBBox = this.getBBox;
        this.getBBox = _getBBoxHack2;
      } catch (e3) {
      }
    } else if (this._gsapBBox) {
      bbox = this._gsapBBox();
    }
    if (oldParent) {
      if (oldSibling) {
        oldParent.insertBefore(this, oldSibling);
      } else {
        oldParent.appendChild(this);
      }
    }
    _docElement.removeChild(svg);
    this.style.cssText = oldCSS;
    return bbox;
  };
  var _getAttributeFallbacks = function _getAttributeFallbacks2(target, attributesArray) {
    var i2 = attributesArray.length;
    while (i2--) {
      if (target.hasAttribute(attributesArray[i2])) {
        return target.getAttribute(attributesArray[i2]);
      }
    }
  };
  var _getBBox = function _getBBox2(target) {
    var bounds;
    try {
      bounds = target.getBBox();
    } catch (error) {
      bounds = _getBBoxHack.call(target, true);
    }
    bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true));
    return bounds && !bounds.width && !bounds.x && !bounds.y ? {
      x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
      y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
      width: 0,
      height: 0
    } : bounds;
  };
  var _isSVG = function _isSVG2(e3) {
    return !!(e3.getCTM && (!e3.parentNode || e3.ownerSVGElement) && _getBBox(e3));
  };
  var _removeProperty = function _removeProperty2(target, property) {
    if (property) {
      var style = target.style;
      if (property in _transformProps && property !== _transformOriginProp) {
        property = _transformProp;
      }
      if (style.removeProperty) {
        if (property.substr(0, 2) === "ms" || property.substr(0, 6) === "webkit") {
          property = "-" + property;
        }
        style.removeProperty(property.replace(_capsExp, "-$1").toLowerCase());
      } else {
        style.removeAttribute(property);
      }
    }
  };
  var _addNonTweeningPT = function _addNonTweeningPT2(plugin, target, property, beginning, end, onlySetAtEnd) {
    var pt = new PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
    plugin._pt = pt;
    pt.b = beginning;
    pt.e = end;
    plugin._props.push(property);
    return pt;
  };
  var _nonConvertibleUnits = {
    deg: 1,
    rad: 1,
    turn: 1
  };
  var _nonStandardLayouts = {
    grid: 1,
    flex: 1
  };
  var _convertToUnit = function _convertToUnit2(target, property, value, unit) {
    var curValue = parseFloat(value) || 0, curUnit = (value + "").trim().substr((curValue + "").length) || "px", style = _tempDiv.style, horizontal = _horizontalExp.test(property), isRootSVG = target.tagName.toLowerCase() === "svg", measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"), amount = 100, toPixels = unit === "px", toPercent = unit === "%", px, parent, cache, isSVG;
    if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {
      return curValue;
    }
    curUnit !== "px" && !toPixels && (curValue = _convertToUnit2(target, property, value, "px"));
    isSVG = target.getCTM && _isSVG(target);
    if ((toPercent || curUnit === "%") && (_transformProps[property] || ~property.indexOf("adius"))) {
      px = isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty];
      return _round(toPercent ? curValue / px * amount : curValue / 100 * px);
    }
    style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
    parent = ~property.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;
    if (isSVG) {
      parent = (target.ownerSVGElement || {}).parentNode;
    }
    if (!parent || parent === _doc2 || !parent.appendChild) {
      parent = _doc2.body;
    }
    cache = parent._gsap;
    if (cache && toPercent && cache.width && horizontal && cache.time === _ticker.time && !cache.uncache) {
      return _round(curValue / cache.width * amount);
    } else {
      (toPercent || curUnit === "%") && !_nonStandardLayouts[_getComputedProperty(parent, "display")] && (style.position = _getComputedProperty(target, "position"));
      parent === target && (style.position = "static");
      parent.appendChild(_tempDiv);
      px = _tempDiv[measureProperty];
      parent.removeChild(_tempDiv);
      style.position = "absolute";
      if (horizontal && toPercent) {
        cache = _getCache(parent);
        cache.time = _ticker.time;
        cache.width = parent[measureProperty];
      }
    }
    return _round(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
  };
  var _get = function _get2(target, property, unit, uncache) {
    var value;
    _pluginInitted || _initCore();
    if (property in _propertyAliases && property !== "transform") {
      property = _propertyAliases[property];
      if (~property.indexOf(",")) {
        property = property.split(",")[0];
      }
    }
    if (_transformProps[property] && property !== "transform") {
      value = _parseTransform(target, uncache);
      value = property !== "transformOrigin" ? value[property] : value.svg ? value.origin : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
    } else {
      value = target.style[property];
      if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) {
        value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || _getProperty(target, property) || (property === "opacity" ? 1 : 0);
      }
    }
    return unit && !~(value + "").trim().indexOf(" ") ? _convertToUnit(target, property, value, unit) + unit : value;
  };
  var _tweenComplexCSSString = function _tweenComplexCSSString2(target, prop, start, end) {
    if (!start || start === "none") {
      var p = _checkPropPrefix(prop, target, 1), s2 = p && _getComputedProperty(target, p, 1);
      if (s2 && s2 !== start) {
        prop = p;
        start = s2;
      } else if (prop === "borderColor") {
        start = _getComputedProperty(target, "borderTopColor");
      }
    }
    var pt = new PropTween(this._pt, target.style, prop, 0, 1, _renderComplexString), index = 0, matchIndex = 0, a, result, startValues, startNum, color2, startValue, endValue, endNum, chunk, endUnit, startUnit, endValues;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";
    if (end === "auto") {
      target.style[prop] = end;
      end = _getComputedProperty(target, prop) || end;
      target.style[prop] = start;
    }
    a = [start, end];
    _colorStringFilter(a);
    start = a[0];
    end = a[1];
    startValues = start.match(_numWithUnitExp) || [];
    endValues = end.match(_numWithUnitExp) || [];
    if (endValues.length) {
      while (result = _numWithUnitExp.exec(end)) {
        endValue = result[0];
        chunk = end.substring(index, result.index);
        if (color2) {
          color2 = (color2 + 1) % 5;
        } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
          color2 = 1;
        }
        if (endValue !== (startValue = startValues[matchIndex++] || "")) {
          startNum = parseFloat(startValue) || 0;
          startUnit = startValue.substr((startNum + "").length);
          endValue.charAt(1) === "=" && (endValue = _parseRelative(startNum, endValue) + startUnit);
          endNum = parseFloat(endValue);
          endUnit = endValue.substr((endNum + "").length);
          index = _numWithUnitExp.lastIndex - endUnit.length;
          if (!endUnit) {
            endUnit = endUnit || _config.units[prop] || startUnit;
            if (index === end.length) {
              end += endUnit;
              pt.e += endUnit;
            }
          }
          if (startUnit !== endUnit) {
            startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
          }
          pt._pt = {
            _next: pt._pt,
            p: chunk || matchIndex === 1 ? chunk : ",",
            //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.
            s: startNum,
            c: endNum - startNum,
            m: color2 && color2 < 4 || prop === "zIndex" ? Math.round : 0
          };
        }
      }
      pt.c = index < end.length ? end.substring(index, end.length) : "";
    } else {
      pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
    }
    _relExp.test(end) && (pt.e = 0);
    this._pt = pt;
    return pt;
  };
  var _keywordToPercent = {
    top: "0%",
    bottom: "100%",
    left: "0%",
    right: "100%",
    center: "50%"
  };
  var _convertKeywordsToPercentages = function _convertKeywordsToPercentages2(value) {
    var split = value.split(" "), x = split[0], y = split[1] || "50%";
    if (x === "top" || x === "bottom" || y === "left" || y === "right") {
      value = x;
      x = y;
      y = value;
    }
    split[0] = _keywordToPercent[x] || x;
    split[1] = _keywordToPercent[y] || y;
    return split.join(" ");
  };
  var _renderClearProps = function _renderClearProps2(ratio, data) {
    if (data.tween && data.tween._time === data.tween._dur) {
      var target = data.t, style = target.style, props = data.u, cache = target._gsap, prop, clearTransforms, i2;
      if (props === "all" || props === true) {
        style.cssText = "";
        clearTransforms = 1;
      } else {
        props = props.split(",");
        i2 = props.length;
        while (--i2 > -1) {
          prop = props[i2];
          if (_transformProps[prop]) {
            clearTransforms = 1;
            prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
          }
          _removeProperty(target, prop);
        }
      }
      if (clearTransforms) {
        _removeProperty(target, _transformProp);
        if (cache) {
          cache.svg && target.removeAttribute("transform");
          _parseTransform(target, 1);
          cache.uncache = 1;
          _removeIndependentTransforms(style);
        }
      }
    }
  };
  var _specialProps = {
    clearProps: function clearProps(plugin, target, property, endValue, tween) {
      if (tween.data !== "isFromStart") {
        var pt = plugin._pt = new PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);
        pt.u = endValue;
        pt.pr = -10;
        pt.tween = tween;
        plugin._props.push(property);
        return 1;
      }
    }
    /* className feature (about 0.4kb gzipped).
    , className(plugin, target, property, endValue, tween) {
    	let _renderClassName = (ratio, data) => {
    			data.css.render(ratio, data.css);
    			if (!ratio || ratio === 1) {
    				let inline = data.rmv,
    					target = data.t,
    					p;
    				target.setAttribute("class", ratio ? data.e : data.b);
    				for (p in inline) {
    					_removeProperty(target, p);
    				}
    			}
    		},
    		_getAllStyles = (target) => {
    			let styles = {},
    				computed = getComputedStyle(target),
    				p;
    			for (p in computed) {
    				if (isNaN(p) && p !== "cssText" && p !== "length") {
    					styles[p] = computed[p];
    				}
    			}
    			_setDefaults(styles, _parseTransform(target, 1));
    			return styles;
    		},
    		startClassList = target.getAttribute("class"),
    		style = target.style,
    		cssText = style.cssText,
    		cache = target._gsap,
    		classPT = cache.classPT,
    		inlineToRemoveAtEnd = {},
    		data = {t:target, plugin:plugin, rmv:inlineToRemoveAtEnd, b:startClassList, e:(endValue.charAt(1) !== "=") ? endValue : startClassList.replace(new RegExp("(?:\\s|^)" + endValue.substr(2) + "(?![\\w-])"), "") + ((endValue.charAt(0) === "+") ? " " + endValue.substr(2) : "")},
    		changingVars = {},
    		startVars = _getAllStyles(target),
    		transformRelated = /(transform|perspective)/i,
    		endVars, p;
    	if (classPT) {
    		classPT.r(1, classPT.d);
    		_removeLinkedListItem(classPT.d.plugin, classPT, "_pt");
    	}
    	target.setAttribute("class", data.e);
    	endVars = _getAllStyles(target, true);
    	target.setAttribute("class", startClassList);
    	for (p in endVars) {
    		if (endVars[p] !== startVars[p] && !transformRelated.test(p)) {
    			changingVars[p] = endVars[p];
    			if (!style[p] && style[p] !== "0") {
    				inlineToRemoveAtEnd[p] = 1;
    			}
    		}
    	}
    	cache.classPT = plugin._pt = new PropTween(plugin._pt, target, "className", 0, 0, _renderClassName, data, 0, -11);
    	if (style.cssText !== cssText) { //only apply if things change. Otherwise, in cases like a background-image that's pulled dynamically, it could cause a refresh. See https://greensock.com/forums/topic/20368-possible-gsap-bug-switching-classnames-in-chrome/.
    		style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).
    	}
    	_parseTransform(target, true); //to clear the caching of transforms
    	data.css = new gsap.plugins.css();
    	data.css.init(target, changingVars, tween);
    	plugin._props.push(...data.css._props);
    	return 1;
    }
    */
  };
  var _identity2DMatrix = [1, 0, 0, 1, 0, 0];
  var _rotationalProperties = {};
  var _isNullTransform = function _isNullTransform2(value) {
    return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
  };
  var _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray2(target) {
    var matrixString = _getComputedProperty(target, _transformProp);
    return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_numExp).map(_round);
  };
  var _getMatrix = function _getMatrix2(target, force2D) {
    var cache = target._gsap || _getCache(target), style = target.style, matrix = _getComputedTransformMatrixAsArray(target), parent, nextSibling, temp, addedToDOM;
    if (cache.svg && target.getAttribute("transform")) {
      temp = target.transform.baseVal.consolidate().matrix;
      matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
      return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
    } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
      temp = style.display;
      style.display = "block";
      parent = target.parentNode;
      if (!parent || !target.offsetParent) {
        addedToDOM = 1;
        nextSibling = target.nextElementSibling;
        _docElement.appendChild(target);
      }
      matrix = _getComputedTransformMatrixAsArray(target);
      temp ? style.display = temp : _removeProperty(target, "display");
      if (addedToDOM) {
        nextSibling ? parent.insertBefore(target, nextSibling) : parent ? parent.appendChild(target) : _docElement.removeChild(target);
      }
    }
    return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
  };
  var _applySVGOrigin = function _applySVGOrigin2(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
    var cache = target._gsap, matrix = matrixArray || _getMatrix(target, true), xOriginOld = cache.xOrigin || 0, yOriginOld = cache.yOrigin || 0, xOffsetOld = cache.xOffset || 0, yOffsetOld = cache.yOffset || 0, a = matrix[0], b = matrix[1], c = matrix[2], d = matrix[3], tx = matrix[4], ty = matrix[5], originSplit = origin.split(" "), xOrigin = parseFloat(originSplit[0]) || 0, yOrigin = parseFloat(originSplit[1]) || 0, bounds, determinant, x, y;
    if (!originIsAbsolute) {
      bounds = _getBBox(target);
      xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
      yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin);
    } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
      x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
      y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
      xOrigin = x;
      yOrigin = y;
    }
    if (smooth || smooth !== false && cache.smooth) {
      tx = xOrigin - xOriginOld;
      ty = yOrigin - yOriginOld;
      cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
      cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
    } else {
      cache.xOffset = cache.yOffset = 0;
    }
    cache.xOrigin = xOrigin;
    cache.yOrigin = yOrigin;
    cache.smooth = !!smooth;
    cache.origin = origin;
    cache.originIsAbsolute = !!originIsAbsolute;
    target.style[_transformOriginProp] = "0px 0px";
    if (pluginToAddPropTweensTo) {
      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);
      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);
      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);
      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
    }
    target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
  };
  var _parseTransform = function _parseTransform2(target, uncache) {
    var cache = target._gsap || new GSCache(target);
    if ("x" in cache && !uncache && !cache.uncache) {
      return cache;
    }
    var style = target.style, invertedScaleX = cache.scaleX < 0, px = "px", deg = "deg", cs = getComputedStyle(target), origin = _getComputedProperty(target, _transformOriginProp) || "0", x, y, z, scaleX, scaleY, rotation, rotationX, rotationY, skewX, skewY, perspective, xOrigin, yOrigin, matrix, angle, cos, sin, a, b, c, d, a12, a22, t1, t2, t3, a13, a23, a33, a42, a43, a32;
    x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
    scaleX = scaleY = 1;
    cache.svg = !!(target.getCTM && _isSVG(target));
    if (cs.translate) {
      if (cs.translate !== "none" || cs.scale !== "none" || cs.rotate !== "none") {
        style[_transformProp] = (cs.translate !== "none" ? "translate3d(" + (cs.translate + " 0 0").split(" ").slice(0, 3).join(", ") + ") " : "") + (cs.rotate !== "none" ? "rotate(" + cs.rotate + ") " : "") + (cs.scale !== "none" ? "scale(" + cs.scale.split(" ").join(",") + ") " : "") + (cs[_transformProp] !== "none" ? cs[_transformProp] : "");
      }
      style.scale = style.rotate = style.translate = "none";
    }
    matrix = _getMatrix(target, cache.svg);
    if (cache.svg) {
      if (cache.uncache) {
        t2 = target.getBBox();
        origin = cache.xOrigin - t2.x + "px " + (cache.yOrigin - t2.y) + "px";
        t1 = "";
      } else {
        t1 = !uncache && target.getAttribute("data-svg-origin");
      }
      _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
    }
    xOrigin = cache.xOrigin || 0;
    yOrigin = cache.yOrigin || 0;
    if (matrix !== _identity2DMatrix) {
      a = matrix[0];
      b = matrix[1];
      c = matrix[2];
      d = matrix[3];
      x = a12 = matrix[4];
      y = a22 = matrix[5];
      if (matrix.length === 6) {
        scaleX = Math.sqrt(a * a + b * b);
        scaleY = Math.sqrt(d * d + c * c);
        rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0;
        skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
        skewX && (scaleY *= Math.abs(Math.cos(skewX * _DEG2RAD)));
        if (cache.svg) {
          x -= xOrigin - (xOrigin * a + yOrigin * c);
          y -= yOrigin - (xOrigin * b + yOrigin * d);
        }
      } else {
        a32 = matrix[6];
        a42 = matrix[7];
        a13 = matrix[8];
        a23 = matrix[9];
        a33 = matrix[10];
        a43 = matrix[11];
        x = matrix[12];
        y = matrix[13];
        z = matrix[14];
        angle = _atan2(a32, a33);
        rotationX = angle * _RAD2DEG;
        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a12 * cos + a13 * sin;
          t2 = a22 * cos + a23 * sin;
          t3 = a32 * cos + a33 * sin;
          a13 = a12 * -sin + a13 * cos;
          a23 = a22 * -sin + a23 * cos;
          a33 = a32 * -sin + a33 * cos;
          a43 = a42 * -sin + a43 * cos;
          a12 = t1;
          a22 = t2;
          a32 = t3;
        }
        angle = _atan2(-c, a33);
        rotationY = angle * _RAD2DEG;
        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a * cos - a13 * sin;
          t2 = b * cos - a23 * sin;
          t3 = c * cos - a33 * sin;
          a43 = d * sin + a43 * cos;
          a = t1;
          b = t2;
          c = t3;
        }
        angle = _atan2(b, a);
        rotation = angle * _RAD2DEG;
        if (angle) {
          cos = Math.cos(angle);
          sin = Math.sin(angle);
          t1 = a * cos + b * sin;
          t2 = a12 * cos + a22 * sin;
          b = b * cos - a * sin;
          a22 = a22 * cos - a12 * sin;
          a = t1;
          a12 = t2;
        }
        if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
          rotationX = rotation = 0;
          rotationY = 180 - rotationY;
        }
        scaleX = _round(Math.sqrt(a * a + b * b + c * c));
        scaleY = _round(Math.sqrt(a22 * a22 + a32 * a32));
        angle = _atan2(a12, a22);
        skewX = Math.abs(angle) > 2e-4 ? angle * _RAD2DEG : 0;
        perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
      }
      if (cache.svg) {
        t1 = target.getAttribute("transform");
        cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
        t1 && target.setAttribute("transform", t1);
      }
    }
    if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
      if (invertedScaleX) {
        scaleX *= -1;
        skewX += rotation <= 0 ? 180 : -180;
        rotation += rotation <= 0 ? 180 : -180;
      } else {
        scaleY *= -1;
        skewX += skewX <= 0 ? 180 : -180;
      }
    }
    uncache = uncache || cache.uncache;
    cache.x = x - ((cache.xPercent = x && (!uncache && cache.xPercent || (Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0))) ? target.offsetWidth * cache.xPercent / 100 : 0) + px;
    cache.y = y - ((cache.yPercent = y && (!uncache && cache.yPercent || (Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0))) ? target.offsetHeight * cache.yPercent / 100 : 0) + px;
    cache.z = z + px;
    cache.scaleX = _round(scaleX);
    cache.scaleY = _round(scaleY);
    cache.rotation = _round(rotation) + deg;
    cache.rotationX = _round(rotationX) + deg;
    cache.rotationY = _round(rotationY) + deg;
    cache.skewX = skewX + deg;
    cache.skewY = skewY + deg;
    cache.transformPerspective = perspective + px;
    if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || 0) {
      style[_transformOriginProp] = _firstTwoOnly(origin);
    }
    cache.xOffset = cache.yOffset = 0;
    cache.force3D = _config.force3D;
    cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
    cache.uncache = 0;
    return cache;
  };
  var _firstTwoOnly = function _firstTwoOnly2(value) {
    return (value = value.split(" "))[0] + " " + value[1];
  };
  var _addPxTranslate = function _addPxTranslate2(target, start, value) {
    var unit = getUnit(start);
    return _round(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit))) + unit;
  };
  var _renderNon3DTransforms = function _renderNon3DTransforms2(ratio, cache) {
    cache.z = "0px";
    cache.rotationY = cache.rotationX = "0deg";
    cache.force3D = 0;
    _renderCSSTransforms(ratio, cache);
  };
  var _zeroDeg = "0deg";
  var _zeroPx = "0px";
  var _endParenthesis = ") ";
  var _renderCSSTransforms = function _renderCSSTransforms2(ratio, cache) {
    var _ref = cache || this, xPercent = _ref.xPercent, yPercent = _ref.yPercent, x = _ref.x, y = _ref.y, z = _ref.z, rotation = _ref.rotation, rotationY = _ref.rotationY, rotationX = _ref.rotationX, skewX = _ref.skewX, skewY = _ref.skewY, scaleX = _ref.scaleX, scaleY = _ref.scaleY, transformPerspective = _ref.transformPerspective, force3D = _ref.force3D, target = _ref.target, zOrigin = _ref.zOrigin, transforms = "", use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true;
    if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
      var angle = parseFloat(rotationY) * _DEG2RAD, a13 = Math.sin(angle), a33 = Math.cos(angle), cos;
      angle = parseFloat(rotationX) * _DEG2RAD;
      cos = Math.cos(angle);
      x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
      y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
      z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
    }
    if (transformPerspective !== _zeroPx) {
      transforms += "perspective(" + transformPerspective + _endParenthesis;
    }
    if (xPercent || yPercent) {
      transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
    }
    if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {
      transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
    }
    if (rotation !== _zeroDeg) {
      transforms += "rotate(" + rotation + _endParenthesis;
    }
    if (rotationY !== _zeroDeg) {
      transforms += "rotateY(" + rotationY + _endParenthesis;
    }
    if (rotationX !== _zeroDeg) {
      transforms += "rotateX(" + rotationX + _endParenthesis;
    }
    if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
      transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
    }
    if (scaleX !== 1 || scaleY !== 1) {
      transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
    }
    target.style[_transformProp] = transforms || "translate(0, 0)";
  };
  var _renderSVGTransforms = function _renderSVGTransforms2(ratio, cache) {
    var _ref2 = cache || this, xPercent = _ref2.xPercent, yPercent = _ref2.yPercent, x = _ref2.x, y = _ref2.y, rotation = _ref2.rotation, skewX = _ref2.skewX, skewY = _ref2.skewY, scaleX = _ref2.scaleX, scaleY = _ref2.scaleY, target = _ref2.target, xOrigin = _ref2.xOrigin, yOrigin = _ref2.yOrigin, xOffset = _ref2.xOffset, yOffset = _ref2.yOffset, forceCSS = _ref2.forceCSS, tx = parseFloat(x), ty = parseFloat(y), a11, a21, a12, a22, temp;
    rotation = parseFloat(rotation);
    skewX = parseFloat(skewX);
    skewY = parseFloat(skewY);
    if (skewY) {
      skewY = parseFloat(skewY);
      skewX += skewY;
      rotation += skewY;
    }
    if (rotation || skewX) {
      rotation *= _DEG2RAD;
      skewX *= _DEG2RAD;
      a11 = Math.cos(rotation) * scaleX;
      a21 = Math.sin(rotation) * scaleX;
      a12 = Math.sin(rotation - skewX) * -scaleY;
      a22 = Math.cos(rotation - skewX) * scaleY;
      if (skewX) {
        skewY *= _DEG2RAD;
        temp = Math.tan(skewX - skewY);
        temp = Math.sqrt(1 + temp * temp);
        a12 *= temp;
        a22 *= temp;
        if (skewY) {
          temp = Math.tan(skewY);
          temp = Math.sqrt(1 + temp * temp);
          a11 *= temp;
          a21 *= temp;
        }
      }
      a11 = _round(a11);
      a21 = _round(a21);
      a12 = _round(a12);
      a22 = _round(a22);
    } else {
      a11 = scaleX;
      a22 = scaleY;
      a21 = a12 = 0;
    }
    if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
      tx = _convertToUnit(target, "x", x, "px");
      ty = _convertToUnit(target, "y", y, "px");
    }
    if (xOrigin || yOrigin || xOffset || yOffset) {
      tx = _round(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
      ty = _round(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
    }
    if (xPercent || yPercent) {
      temp = target.getBBox();
      tx = _round(tx + xPercent / 100 * temp.width);
      ty = _round(ty + yPercent / 100 * temp.height);
    }
    temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
    target.setAttribute("transform", temp);
    forceCSS && (target.style[_transformProp] = temp);
  };
  var _addRotationalPropTween = function _addRotationalPropTween2(plugin, target, property, startNum, endValue) {
    var cap = 360, isString = _isString(endValue), endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1), change = endNum - startNum, finalValue = startNum + change + "deg", direction, pt;
    if (isString) {
      direction = endValue.split("_")[1];
      if (direction === "short") {
        change %= cap;
        if (change !== change % (cap / 2)) {
          change += change < 0 ? cap : -cap;
        }
      }
      if (direction === "cw" && change < 0) {
        change = (change + cap * _bigNum2) % cap - ~~(change / cap) * cap;
      } else if (direction === "ccw" && change > 0) {
        change = (change - cap * _bigNum2) % cap - ~~(change / cap) * cap;
      }
    }
    plugin._pt = pt = new PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
    pt.e = finalValue;
    pt.u = "deg";
    plugin._props.push(property);
    return pt;
  };
  var _assign = function _assign2(target, source) {
    for (var p in source) {
      target[p] = source[p];
    }
    return target;
  };
  var _addRawTransformPTs = function _addRawTransformPTs2(plugin, transforms, target) {
    var startCache = _assign({}, target._gsap), exclude = "perspective,force3D,transformOrigin,svgOrigin", style = target.style, endCache, p, startValue, endValue, startNum, endNum, startUnit, endUnit;
    if (startCache.svg) {
      startValue = target.getAttribute("transform");
      target.setAttribute("transform", "");
      style[_transformProp] = transforms;
      endCache = _parseTransform(target, 1);
      _removeProperty(target, _transformProp);
      target.setAttribute("transform", startValue);
    } else {
      startValue = getComputedStyle(target)[_transformProp];
      style[_transformProp] = transforms;
      endCache = _parseTransform(target, 1);
      style[_transformProp] = startValue;
    }
    for (p in _transformProps) {
      startValue = startCache[p];
      endValue = endCache[p];
      if (startValue !== endValue && exclude.indexOf(p) < 0) {
        startUnit = getUnit(startValue);
        endUnit = getUnit(endValue);
        startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
        endNum = parseFloat(endValue);
        plugin._pt = new PropTween(plugin._pt, endCache, p, startNum, endNum - startNum, _renderCSSProp);
        plugin._pt.u = endUnit || 0;
        plugin._props.push(p);
      }
    }
    _assign(endCache, startCache);
  };
  _forEachName("padding,margin,Width,Radius", function(name, index) {
    var t2 = "Top", r2 = "Right", b = "Bottom", l = "Left", props = (index < 3 ? [t2, r2, b, l] : [t2 + l, t2 + r2, b + r2, b + l]).map(function(side) {
      return index < 2 ? name + side : "border" + side + name;
    });
    _specialProps[index > 1 ? "border" + name : name] = function(plugin, target, property, endValue, tween) {
      var a, vars;
      if (arguments.length < 4) {
        a = props.map(function(prop) {
          return _get(plugin, prop, property);
        });
        vars = a.join(" ");
        return vars.split(a[0]).length === 5 ? a[0] : vars;
      }
      a = (endValue + "").split(" ");
      vars = {};
      props.forEach(function(prop, i2) {
        return vars[prop] = a[i2] = a[i2] || a[(i2 - 1) / 2 | 0];
      });
      plugin.init(target, vars, tween);
    };
  });
  var CSSPlugin = {
    name: "css",
    register: _initCore,
    targetTest: function targetTest(target) {
      return target.style && target.nodeType;
    },
    init: function init3(target, vars, tween, index, targets) {
      var props = this._props, style = target.style, startAt = tween.vars.startAt, startValue, endValue, endNum, startNum, type, specialProp, p, startUnit, endUnit, relative, isTransformRelated, transformPropTween, cache, smooth, hasPriority, inlineProps;
      _pluginInitted || _initCore();
      this.styles = this.styles || _getStyleSaver(target);
      inlineProps = this.styles.props;
      this.tween = tween;
      for (p in vars) {
        if (p === "autoRound") {
          continue;
        }
        endValue = vars[p];
        if (_plugins[p] && _checkPlugin(p, vars, tween, index, target, targets)) {
          continue;
        }
        type = typeof endValue;
        specialProp = _specialProps[p];
        if (type === "function") {
          endValue = endValue.call(tween, index, target, targets);
          type = typeof endValue;
        }
        if (type === "string" && ~endValue.indexOf("random(")) {
          endValue = _replaceRandom(endValue);
        }
        if (specialProp) {
          specialProp(this, target, p, endValue, tween) && (hasPriority = 1);
        } else if (p.substr(0, 2) === "--") {
          startValue = (getComputedStyle(target).getPropertyValue(p) + "").trim();
          endValue += "";
          _colorExp.lastIndex = 0;
          if (!_colorExp.test(startValue)) {
            startUnit = getUnit(startValue);
            endUnit = getUnit(endValue);
          }
          endUnit ? startUnit !== endUnit && (startValue = _convertToUnit(target, p, startValue, endUnit) + endUnit) : startUnit && (endValue += startUnit);
          this.add(style, "setProperty", startValue, endValue, index, targets, 0, 0, p);
          props.push(p);
          inlineProps.push(p, 0, style[p]);
        } else if (type !== "undefined") {
          if (startAt && p in startAt) {
            startValue = typeof startAt[p] === "function" ? startAt[p].call(tween, index, target, targets) : startAt[p];
            _isString(startValue) && ~startValue.indexOf("random(") && (startValue = _replaceRandom(startValue));
            getUnit(startValue + "") || (startValue += _config.units[p] || getUnit(_get(target, p)) || "");
            (startValue + "").charAt(1) === "=" && (startValue = _get(target, p));
          } else {
            startValue = _get(target, p);
          }
          startNum = parseFloat(startValue);
          relative = type === "string" && endValue.charAt(1) === "=" && endValue.substr(0, 2);
          relative && (endValue = endValue.substr(2));
          endNum = parseFloat(endValue);
          if (p in _propertyAliases) {
            if (p === "autoAlpha") {
              if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
                startNum = 0;
              }
              inlineProps.push("visibility", 0, style.visibility);
              _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
            }
            if (p !== "scale" && p !== "transform") {
              p = _propertyAliases[p];
              ~p.indexOf(",") && (p = p.split(",")[0]);
            }
          }
          isTransformRelated = p in _transformProps;
          if (isTransformRelated) {
            this.styles.save(p);
            if (!transformPropTween) {
              cache = target._gsap;
              cache.renderTransform && !vars.parseTransform || _parseTransform(target, vars.parseTransform);
              smooth = vars.smoothOrigin !== false && cache.smooth;
              transformPropTween = this._pt = new PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1);
              transformPropTween.dep = 1;
            }
            if (p === "scale") {
              this._pt = new PropTween(this._pt, cache, "scaleY", cache.scaleY, (relative ? _parseRelative(cache.scaleY, relative + endNum) : endNum) - cache.scaleY || 0, _renderCSSProp);
              this._pt.u = 0;
              props.push("scaleY", p);
              p += "X";
            } else if (p === "transformOrigin") {
              inlineProps.push(_transformOriginProp, 0, style[_transformOriginProp]);
              endValue = _convertKeywordsToPercentages(endValue);
              if (cache.svg) {
                _applySVGOrigin(target, endValue, 0, smooth, 0, this);
              } else {
                endUnit = parseFloat(endValue.split(" ")[2]) || 0;
                endUnit !== cache.zOrigin && _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);
                _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
              }
              continue;
            } else if (p === "svgOrigin") {
              _applySVGOrigin(target, endValue, 1, smooth, 0, this);
              continue;
            } else if (p in _rotationalProperties) {
              _addRotationalPropTween(this, cache, p, startNum, relative ? _parseRelative(startNum, relative + endValue) : endValue);
              continue;
            } else if (p === "smoothOrigin") {
              _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);
              continue;
            } else if (p === "force3D") {
              cache[p] = endValue;
              continue;
            } else if (p === "transform") {
              _addRawTransformPTs(this, endValue, target);
              continue;
            }
          } else if (!(p in style)) {
            p = _checkPropPrefix(p) || p;
          }
          if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
            startUnit = (startValue + "").substr((startNum + "").length);
            endNum || (endNum = 0);
            endUnit = getUnit(endValue) || (p in _config.units ? _config.units[p] : startUnit);
            startUnit !== endUnit && (startNum = _convertToUnit(target, p, startValue, endUnit));
            this._pt = new PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, (relative ? _parseRelative(startNum, relative + endNum) : endNum) - startNum, !isTransformRelated && (endUnit === "px" || p === "zIndex") && vars.autoRound !== false ? _renderRoundedCSSProp : _renderCSSProp);
            this._pt.u = endUnit || 0;
            if (startUnit !== endUnit && endUnit !== "%") {
              this._pt.b = startValue;
              this._pt.r = _renderCSSPropWithBeginning;
            }
          } else if (!(p in style)) {
            if (p in target) {
              this.add(target, p, startValue || target[p], relative ? relative + endValue : endValue, index, targets);
            } else if (p !== "parseTransform") {
              _missingPlugin(p, endValue);
              continue;
            }
          } else {
            _tweenComplexCSSString.call(this, target, p, startValue, relative ? relative + endValue : endValue);
          }
          isTransformRelated || (p in style ? inlineProps.push(p, 0, style[p]) : inlineProps.push(p, 1, startValue || target[p]));
          props.push(p);
        }
      }
      hasPriority && _sortPropTweensByPriority(this);
    },
    render: function render2(ratio, data) {
      if (data.tween._time || !_reverting2()) {
        var pt = data._pt;
        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }
      } else {
        data.styles.revert();
      }
    },
    get: _get,
    aliases: _propertyAliases,
    getSetter: function getSetter(target, property, plugin) {
      var p = _propertyAliases[property];
      p && p.indexOf(",") < 0 && (property = p);
      return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !_isUndefined(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : _getSetter(target, property);
    },
    core: {
      _removeProperty,
      _getMatrix
    }
  };
  gsap.utils.checkPrefix = _checkPropPrefix;
  gsap.core.getStyleSaver = _getStyleSaver;
  (function(positionAndScale, rotation, others, aliases) {
    var all = _forEachName(positionAndScale + "," + rotation + "," + others, function(name) {
      _transformProps[name] = 1;
    });
    _forEachName(rotation, function(name) {
      _config.units[name] = "deg";
      _rotationalProperties[name] = 1;
    });
    _propertyAliases[all[13]] = positionAndScale + "," + rotation;
    _forEachName(aliases, function(name) {
      var split = name.split(":");
      _propertyAliases[split[1]] = all[split[0]];
    });
  })("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");
  _forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function(name) {
    _config.units[name] = "px";
  });
  gsap.registerPlugin(CSSPlugin);

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/index.js
  var gsapWithCSS = gsap.registerPlugin(CSSPlugin) || gsap;
  var TweenMaxWithCSS = gsapWithCSS.core.Tween;

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/Flip.js
  init_live_reload();

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/utils/matrix.js
  init_live_reload();
  var _doc3;
  var _win3;
  var _docElement2;
  var _body;
  var _divContainer;
  var _svgContainer;
  var _identityMatrix;
  var _gEl;
  var _transformProp2 = "transform";
  var _transformOriginProp2 = _transformProp2 + "Origin";
  var _hasOffsetBug;
  var _setDoc = function _setDoc2(element) {
    var doc = element.ownerDocument || element;
    if (!(_transformProp2 in element.style) && "msTransform" in element.style) {
      _transformProp2 = "msTransform";
      _transformOriginProp2 = _transformProp2 + "Origin";
    }
    while (doc.parentNode && (doc = doc.parentNode)) {
    }
    _win3 = window;
    _identityMatrix = new Matrix2D();
    if (doc) {
      _doc3 = doc;
      _docElement2 = doc.documentElement;
      _body = doc.body;
      _gEl = _doc3.createElementNS("http://www.w3.org/2000/svg", "g");
      _gEl.style.transform = "none";
      var d1 = doc.createElement("div"), d2 = doc.createElement("div");
      _body.appendChild(d1);
      d1.appendChild(d2);
      d1.style.position = "static";
      d1.style[_transformProp2] = "translate3d(0,0,1px)";
      _hasOffsetBug = d2.offsetParent !== d1;
      _body.removeChild(d1);
    }
    return doc;
  };
  var _forceNonZeroScale = function _forceNonZeroScale2(e3) {
    var a, cache;
    while (e3 && e3 !== _body) {
      cache = e3._gsap;
      cache && cache.uncache && cache.get(e3, "x");
      if (cache && !cache.scaleX && !cache.scaleY && cache.renderTransform) {
        cache.scaleX = cache.scaleY = 1e-4;
        cache.renderTransform(1, cache);
        a ? a.push(cache) : a = [cache];
      }
      e3 = e3.parentNode;
    }
    return a;
  };
  var _svgTemps = [];
  var _divTemps = [];
  var _getDocScrollTop = function _getDocScrollTop2() {
    return _win3.pageYOffset || _doc3.scrollTop || _docElement2.scrollTop || _body.scrollTop || 0;
  };
  var _getDocScrollLeft = function _getDocScrollLeft2() {
    return _win3.pageXOffset || _doc3.scrollLeft || _docElement2.scrollLeft || _body.scrollLeft || 0;
  };
  var _svgOwner = function _svgOwner2(element) {
    return element.ownerSVGElement || ((element.tagName + "").toLowerCase() === "svg" ? element : null);
  };
  var _isFixed = function _isFixed2(element) {
    if (_win3.getComputedStyle(element).position === "fixed") {
      return true;
    }
    element = element.parentNode;
    if (element && element.nodeType === 1) {
      return _isFixed2(element);
    }
  };
  var _createSibling = function _createSibling2(element, i2) {
    if (element.parentNode && (_doc3 || _setDoc(element))) {
      var svg = _svgOwner(element), ns = svg ? svg.getAttribute("xmlns") || "http://www.w3.org/2000/svg" : "http://www.w3.org/1999/xhtml", type = svg ? i2 ? "rect" : "g" : "div", x = i2 !== 2 ? 0 : 100, y = i2 === 3 ? 100 : 0, css = "position:absolute;display:block;pointer-events:none;margin:0;padding:0;", e3 = _doc3.createElementNS ? _doc3.createElementNS(ns.replace(/^https/, "http"), type) : _doc3.createElement(type);
      if (i2) {
        if (!svg) {
          if (!_divContainer) {
            _divContainer = _createSibling2(element);
            _divContainer.style.cssText = css;
          }
          e3.style.cssText = css + "width:0.1px;height:0.1px;top:" + y + "px;left:" + x + "px";
          _divContainer.appendChild(e3);
        } else {
          _svgContainer || (_svgContainer = _createSibling2(element));
          e3.setAttribute("width", 0.01);
          e3.setAttribute("height", 0.01);
          e3.setAttribute("transform", "translate(" + x + "," + y + ")");
          _svgContainer.appendChild(e3);
        }
      }
      return e3;
    }
    throw "Need document and parent.";
  };
  var _consolidate = function _consolidate2(m) {
    var c = new Matrix2D(), i2 = 0;
    for (; i2 < m.numberOfItems; i2++) {
      c.multiply(m.getItem(i2).matrix);
    }
    return c;
  };
  var _getCTM = function _getCTM2(svg) {
    var m = svg.getCTM(), transform;
    if (!m) {
      transform = svg.style[_transformProp2];
      svg.style[_transformProp2] = "none";
      svg.appendChild(_gEl);
      m = _gEl.getCTM();
      svg.removeChild(_gEl);
      transform ? svg.style[_transformProp2] = transform : svg.style.removeProperty(_transformProp2.replace(/([A-Z])/g, "-$1").toLowerCase());
    }
    return m || _identityMatrix.clone();
  };
  var _placeSiblings = function _placeSiblings2(element, adjustGOffset) {
    var svg = _svgOwner(element), isRootSVG = element === svg, siblings = svg ? _svgTemps : _divTemps, parent = element.parentNode, container, m, b, x, y, cs;
    if (element === _win3) {
      return element;
    }
    siblings.length || siblings.push(_createSibling(element, 1), _createSibling(element, 2), _createSibling(element, 3));
    container = svg ? _svgContainer : _divContainer;
    if (svg) {
      if (isRootSVG) {
        b = _getCTM(element);
        x = -b.e / b.a;
        y = -b.f / b.d;
        m = _identityMatrix;
      } else if (element.getBBox) {
        b = element.getBBox();
        m = element.transform ? element.transform.baseVal : {};
        m = !m.numberOfItems ? _identityMatrix : m.numberOfItems > 1 ? _consolidate(m) : m.getItem(0).matrix;
        x = m.a * b.x + m.c * b.y;
        y = m.b * b.x + m.d * b.y;
      } else {
        m = new Matrix2D();
        x = y = 0;
      }
      if (adjustGOffset && element.tagName.toLowerCase() === "g") {
        x = y = 0;
      }
      (isRootSVG ? svg : parent).appendChild(container);
      container.setAttribute("transform", "matrix(" + m.a + "," + m.b + "," + m.c + "," + m.d + "," + (m.e + x) + "," + (m.f + y) + ")");
    } else {
      x = y = 0;
      if (_hasOffsetBug) {
        m = element.offsetParent;
        b = element;
        while (b && (b = b.parentNode) && b !== m && b.parentNode) {
          if ((_win3.getComputedStyle(b)[_transformProp2] + "").length > 4) {
            x = b.offsetLeft;
            y = b.offsetTop;
            b = 0;
          }
        }
      }
      cs = _win3.getComputedStyle(element);
      if (cs.position !== "absolute" && cs.position !== "fixed") {
        m = element.offsetParent;
        while (parent && parent !== m) {
          x += parent.scrollLeft || 0;
          y += parent.scrollTop || 0;
          parent = parent.parentNode;
        }
      }
      b = container.style;
      b.top = element.offsetTop - y + "px";
      b.left = element.offsetLeft - x + "px";
      b[_transformProp2] = cs[_transformProp2];
      b[_transformOriginProp2] = cs[_transformOriginProp2];
      b.position = cs.position === "fixed" ? "fixed" : "absolute";
      element.parentNode.appendChild(container);
    }
    return container;
  };
  var _setMatrix = function _setMatrix2(m, a, b, c, d, e3, f) {
    m.a = a;
    m.b = b;
    m.c = c;
    m.d = d;
    m.e = e3;
    m.f = f;
    return m;
  };
  var Matrix2D = /* @__PURE__ */ function() {
    function Matrix2D2(a, b, c, d, e3, f) {
      if (a === void 0) {
        a = 1;
      }
      if (b === void 0) {
        b = 0;
      }
      if (c === void 0) {
        c = 0;
      }
      if (d === void 0) {
        d = 1;
      }
      if (e3 === void 0) {
        e3 = 0;
      }
      if (f === void 0) {
        f = 0;
      }
      _setMatrix(this, a, b, c, d, e3, f);
    }
    var _proto = Matrix2D2.prototype;
    _proto.inverse = function inverse() {
      var a = this.a, b = this.b, c = this.c, d = this.d, e3 = this.e, f = this.f, determinant = a * d - b * c || 1e-10;
      return _setMatrix(this, d / determinant, -b / determinant, -c / determinant, a / determinant, (c * f - d * e3) / determinant, -(a * f - b * e3) / determinant);
    };
    _proto.multiply = function multiply(matrix) {
      var a = this.a, b = this.b, c = this.c, d = this.d, e3 = this.e, f = this.f, a2 = matrix.a, b2 = matrix.c, c2 = matrix.b, d2 = matrix.d, e22 = matrix.e, f2 = matrix.f;
      return _setMatrix(this, a2 * a + c2 * c, a2 * b + c2 * d, b2 * a + d2 * c, b2 * b + d2 * d, e3 + e22 * a + f2 * c, f + e22 * b + f2 * d);
    };
    _proto.clone = function clone() {
      return new Matrix2D2(this.a, this.b, this.c, this.d, this.e, this.f);
    };
    _proto.equals = function equals(matrix) {
      var a = this.a, b = this.b, c = this.c, d = this.d, e3 = this.e, f = this.f;
      return a === matrix.a && b === matrix.b && c === matrix.c && d === matrix.d && e3 === matrix.e && f === matrix.f;
    };
    _proto.apply = function apply(point, decoratee) {
      if (decoratee === void 0) {
        decoratee = {};
      }
      var x = point.x, y = point.y, a = this.a, b = this.b, c = this.c, d = this.d, e3 = this.e, f = this.f;
      decoratee.x = x * a + y * c + e3 || 0;
      decoratee.y = x * b + y * d + f || 0;
      return decoratee;
    };
    return Matrix2D2;
  }();
  function getGlobalMatrix(element, inverse, adjustGOffset, includeScrollInFixed) {
    if (!element || !element.parentNode || (_doc3 || _setDoc(element)).documentElement === element) {
      return new Matrix2D();
    }
    var zeroScales = _forceNonZeroScale(element), svg = _svgOwner(element), temps = svg ? _svgTemps : _divTemps, container = _placeSiblings(element, adjustGOffset), b1 = temps[0].getBoundingClientRect(), b2 = temps[1].getBoundingClientRect(), b3 = temps[2].getBoundingClientRect(), parent = container.parentNode, isFixed = !includeScrollInFixed && _isFixed(element), m = new Matrix2D((b2.left - b1.left) / 100, (b2.top - b1.top) / 100, (b3.left - b1.left) / 100, (b3.top - b1.top) / 100, b1.left + (isFixed ? 0 : _getDocScrollLeft()), b1.top + (isFixed ? 0 : _getDocScrollTop()));
    parent.removeChild(container);
    if (zeroScales) {
      b1 = zeroScales.length;
      while (b1--) {
        b2 = zeroScales[b1];
        b2.scaleX = b2.scaleY = 0;
        b2.renderTransform(1, b2);
      }
    }
    return inverse ? m.inverse() : m;
  }

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/Flip.js
  var _id = 1;
  var _toArray;
  var gsap2;
  var _batch;
  var _batchAction;
  var _body2;
  var _closestTenth;
  var _getStyleSaver3;
  var _forEachBatch = function _forEachBatch2(batch, name) {
    return batch.actions.forEach(function(a) {
      return a.vars[name] && a.vars[name](a);
    });
  };
  var _batchLookup = {};
  var _RAD2DEG2 = 180 / Math.PI;
  var _DEG2RAD2 = Math.PI / 180;
  var _emptyObj = {};
  var _dashedNameLookup = {};
  var _memoizedRemoveProps = {};
  var _listToArray = function _listToArray2(list) {
    return typeof list === "string" ? list.split(" ").join("").split(",") : list;
  };
  var _callbacks = _listToArray("onStart,onUpdate,onComplete,onReverseComplete,onInterrupt");
  var _removeProps = _listToArray("transform,transformOrigin,width,height,position,top,left,opacity,zIndex,maxWidth,maxHeight,minWidth,minHeight");
  var _getEl = function _getEl2(target) {
    return _toArray(target)[0] || console.warn("Element not found:", target);
  };
  var _round3 = function _round4(value) {
    return Math.round(value * 1e4) / 1e4 || 0;
  };
  var _toggleClass = function _toggleClass2(targets, className, action) {
    return targets.forEach(function(el) {
      return el.classList[action](className);
    });
  };
  var _reserved = {
    zIndex: 1,
    kill: 1,
    simple: 1,
    spin: 1,
    clearProps: 1,
    targets: 1,
    toggleClass: 1,
    onComplete: 1,
    onUpdate: 1,
    onInterrupt: 1,
    onStart: 1,
    delay: 1,
    repeat: 1,
    repeatDelay: 1,
    yoyo: 1,
    scale: 1,
    fade: 1,
    absolute: 1,
    props: 1,
    onEnter: 1,
    onLeave: 1,
    custom: 1,
    paused: 1,
    nested: 1,
    prune: 1,
    absoluteOnLeave: 1
  };
  var _fitReserved = {
    zIndex: 1,
    simple: 1,
    clearProps: 1,
    scale: 1,
    absolute: 1,
    fitChild: 1,
    getVars: 1,
    props: 1
  };
  var _camelToDashed = function _camelToDashed2(p) {
    return p.replace(/([A-Z])/g, "-$1").toLowerCase();
  };
  var _copy = function _copy2(obj, exclude) {
    var result = {}, p;
    for (p in obj) {
      exclude[p] || (result[p] = obj[p]);
    }
    return result;
  };
  var _memoizedProps = {};
  var _memoizeProps = function _memoizeProps2(props) {
    var p = _memoizedProps[props] = _listToArray(props);
    _memoizedRemoveProps[props] = p.concat(_removeProps);
    return p;
  };
  var _getInverseGlobalMatrix = function _getInverseGlobalMatrix2(el) {
    var cache = el._gsap || gsap2.core.getCache(el);
    if (cache.gmCache === gsap2.ticker.frame) {
      return cache.gMatrix;
    }
    cache.gmCache = gsap2.ticker.frame;
    return cache.gMatrix = getGlobalMatrix(el, true, false, true);
  };
  var _getDOMDepth = function _getDOMDepth2(el, invert, level) {
    if (level === void 0) {
      level = 0;
    }
    var parent = el.parentNode, inc = 1e3 * Math.pow(10, level) * (invert ? -1 : 1), l = invert ? -inc * 900 : 0;
    while (el) {
      l += inc;
      el = el.previousSibling;
    }
    return parent ? l + _getDOMDepth2(parent, invert, level + 1) : l;
  };
  var _orderByDOMDepth = function _orderByDOMDepth2(comps, invert, isElStates) {
    comps.forEach(function(comp) {
      return comp.d = _getDOMDepth(isElStates ? comp.element : comp.t, invert);
    });
    comps.sort(function(c1, c2) {
      return c1.d - c2.d;
    });
    return comps;
  };
  var _recordInlineStyles = function _recordInlineStyles2(elState, props) {
    var style = elState.element.style, a = elState.css = elState.css || [], i2 = props.length, p, v;
    while (i2--) {
      p = props[i2];
      v = style[p] || style.getPropertyValue(p);
      a.push(v ? p : _dashedNameLookup[p] || (_dashedNameLookup[p] = _camelToDashed(p)), v);
    }
    return style;
  };
  var _applyInlineStyles = function _applyInlineStyles2(state) {
    var css = state.css, style = state.element.style, i2 = 0;
    state.cache.uncache = 1;
    for (; i2 < css.length; i2 += 2) {
      css[i2 + 1] ? style[css[i2]] = css[i2 + 1] : style.removeProperty(css[i2]);
    }
    if (!css[css.indexOf("transform") + 1] && style.translate) {
      style.removeProperty("translate");
      style.removeProperty("scale");
      style.removeProperty("rotate");
    }
  };
  var _setFinalStates = function _setFinalStates2(comps, onlyTransforms) {
    comps.forEach(function(c) {
      return c.a.cache.uncache = 1;
    });
    onlyTransforms || comps.finalStates.forEach(_applyInlineStyles);
  };
  var _absoluteProps = "paddingTop,paddingRight,paddingBottom,paddingLeft,gridArea,transition".split(",");
  var _makeAbsolute = function _makeAbsolute2(elState, fallbackNode, ignoreBatch) {
    var element = elState.element, width2 = elState.width, height2 = elState.height, uncache = elState.uncache, getProp = elState.getProp, style = element.style, i2 = 4, result, displayIsNone, cs;
    typeof fallbackNode !== "object" && (fallbackNode = elState);
    if (_batch && ignoreBatch !== 1) {
      _batch._abs.push({
        t: element,
        b: elState,
        a: elState,
        sd: 0
      });
      _batch._final.push(function() {
        return (elState.cache.uncache = 1) && _applyInlineStyles(elState);
      });
      return element;
    }
    displayIsNone = getProp("display") === "none";
    if (!elState.isVisible || displayIsNone) {
      displayIsNone && (_recordInlineStyles(elState, ["display"]).display = fallbackNode.display);
      elState.matrix = fallbackNode.matrix;
      elState.width = width2 = elState.width || fallbackNode.width;
      elState.height = height2 = elState.height || fallbackNode.height;
    }
    _recordInlineStyles(elState, _absoluteProps);
    cs = window.getComputedStyle(element);
    while (i2--) {
      style[_absoluteProps[i2]] = cs[_absoluteProps[i2]];
    }
    style.gridArea = "1 / 1 / 1 / 1";
    style.transition = "none";
    style.position = "absolute";
    style.width = width2 + "px";
    style.height = height2 + "px";
    style.top || (style.top = "0px");
    style.left || (style.left = "0px");
    if (uncache) {
      result = new ElementState(element);
    } else {
      result = _copy(elState, _emptyObj);
      result.position = "absolute";
      if (elState.simple) {
        var bounds = element.getBoundingClientRect();
        result.matrix = new Matrix2D(1, 0, 0, 1, bounds.left + _getDocScrollLeft(), bounds.top + _getDocScrollTop());
      } else {
        result.matrix = getGlobalMatrix(element, false, false, true);
      }
    }
    result = _fit(result, elState, true);
    elState.x = _closestTenth(result.x, 0.01);
    elState.y = _closestTenth(result.y, 0.01);
    return element;
  };
  var _filterComps = function _filterComps2(comps, targets) {
    if (targets !== true) {
      targets = _toArray(targets);
      comps = comps.filter(function(c) {
        if (targets.indexOf((c.sd < 0 ? c.b : c.a).element) !== -1) {
          return true;
        } else {
          c.t._gsap.renderTransform(1);
          if (c.b.isVisible) {
            c.t.style.width = c.b.width + "px";
            c.t.style.height = c.b.height + "px";
          }
        }
      });
    }
    return comps;
  };
  var _makeCompsAbsolute = function _makeCompsAbsolute2(comps) {
    return _orderByDOMDepth(comps, true).forEach(function(c) {
      return (c.a.isVisible || c.b.isVisible) && _makeAbsolute(c.sd < 0 ? c.b : c.a, c.b, 1);
    });
  };
  var _findElStateInState = function _findElStateInState2(state, other) {
    return other && state.idLookup[_parseElementState(other).id] || state.elementStates[0];
  };
  var _parseElementState = function _parseElementState2(elOrNode, props, simple, other) {
    return elOrNode instanceof ElementState ? elOrNode : elOrNode instanceof FlipState ? _findElStateInState(elOrNode, other) : new ElementState(typeof elOrNode === "string" ? _getEl(elOrNode) || console.warn(elOrNode + " not found") : elOrNode, props, simple);
  };
  var _recordProps = function _recordProps2(elState, props) {
    var getProp = gsap2.getProperty(elState.element, null, "native"), obj = elState.props = {}, i2 = props.length;
    while (i2--) {
      obj[props[i2]] = (getProp(props[i2]) + "").trim();
    }
    obj.zIndex && (obj.zIndex = parseFloat(obj.zIndex) || 0);
    return elState;
  };
  var _applyProps = function _applyProps2(element, props) {
    var style = element.style || element, p;
    for (p in props) {
      style[p] = props[p];
    }
  };
  var _getID = function _getID2(el) {
    var id = el.getAttribute("data-flip-id");
    id || el.setAttribute("data-flip-id", id = "auto-" + _id++);
    return id;
  };
  var _elementsFromElementStates = function _elementsFromElementStates2(elStates) {
    return elStates.map(function(elState) {
      return elState.element;
    });
  };
  var _handleCallback = function _handleCallback2(callback, elStates, tl) {
    return callback && elStates.length && tl.add(callback(_elementsFromElementStates(elStates), tl, new FlipState(elStates, 0, true)), 0);
  };
  var _fit = function _fit2(fromState, toState, scale, applyProps, fitChild, vars) {
    var element = fromState.element, cache = fromState.cache, parent = fromState.parent, x = fromState.x, y = fromState.y, width2 = toState.width, height2 = toState.height, scaleX = toState.scaleX, scaleY = toState.scaleY, rotation = toState.rotation, bounds = toState.bounds, styles = vars && _getStyleSaver3 && _getStyleSaver3(element, "transform"), dimensionState = fromState, _toState$matrix = toState.matrix, e3 = _toState$matrix.e, f = _toState$matrix.f, deep = fromState.bounds.width !== bounds.width || fromState.bounds.height !== bounds.height || fromState.scaleX !== scaleX || fromState.scaleY !== scaleY || fromState.rotation !== rotation, simple = !deep && fromState.simple && toState.simple && !fitChild, skewX, fromPoint, toPoint, getProp, parentMatrix, matrix, bbox;
    if (simple || !parent) {
      scaleX = scaleY = 1;
      rotation = skewX = 0;
    } else {
      parentMatrix = _getInverseGlobalMatrix(parent);
      matrix = parentMatrix.clone().multiply(toState.ctm ? toState.matrix.clone().multiply(toState.ctm) : toState.matrix);
      rotation = _round3(Math.atan2(matrix.b, matrix.a) * _RAD2DEG2);
      skewX = _round3(Math.atan2(matrix.c, matrix.d) * _RAD2DEG2 + rotation) % 360;
      scaleX = Math.sqrt(Math.pow(matrix.a, 2) + Math.pow(matrix.b, 2));
      scaleY = Math.sqrt(Math.pow(matrix.c, 2) + Math.pow(matrix.d, 2)) * Math.cos(skewX * _DEG2RAD2);
      if (fitChild) {
        fitChild = _toArray(fitChild)[0];
        getProp = gsap2.getProperty(fitChild);
        bbox = fitChild.getBBox && typeof fitChild.getBBox === "function" && fitChild.getBBox();
        dimensionState = {
          scaleX: getProp("scaleX"),
          scaleY: getProp("scaleY"),
          width: bbox ? bbox.width : Math.ceil(parseFloat(getProp("width", "px"))),
          height: bbox ? bbox.height : parseFloat(getProp("height", "px"))
        };
      }
      cache.rotation = rotation + "deg";
      cache.skewX = skewX + "deg";
    }
    if (scale) {
      scaleX *= width2 === dimensionState.width || !dimensionState.width ? 1 : width2 / dimensionState.width;
      scaleY *= height2 === dimensionState.height || !dimensionState.height ? 1 : height2 / dimensionState.height;
      cache.scaleX = scaleX;
      cache.scaleY = scaleY;
    } else {
      width2 = _closestTenth(width2 * scaleX / dimensionState.scaleX, 0);
      height2 = _closestTenth(height2 * scaleY / dimensionState.scaleY, 0);
      element.style.width = width2 + "px";
      element.style.height = height2 + "px";
    }
    applyProps && _applyProps(element, toState.props);
    if (simple || !parent) {
      x += e3 - fromState.matrix.e;
      y += f - fromState.matrix.f;
    } else if (deep || parent !== toState.parent) {
      cache.renderTransform(1, cache);
      matrix = getGlobalMatrix(fitChild || element, false, false, true);
      fromPoint = parentMatrix.apply({
        x: matrix.e,
        y: matrix.f
      });
      toPoint = parentMatrix.apply({
        x: e3,
        y: f
      });
      x += toPoint.x - fromPoint.x;
      y += toPoint.y - fromPoint.y;
    } else {
      parentMatrix.e = parentMatrix.f = 0;
      toPoint = parentMatrix.apply({
        x: e3 - fromState.matrix.e,
        y: f - fromState.matrix.f
      });
      x += toPoint.x;
      y += toPoint.y;
    }
    x = _closestTenth(x, 0.02);
    y = _closestTenth(y, 0.02);
    if (vars && !(vars instanceof ElementState)) {
      styles && styles.revert();
    } else {
      cache.x = x + "px";
      cache.y = y + "px";
      cache.renderTransform(1, cache);
    }
    if (vars) {
      vars.x = x;
      vars.y = y;
      vars.rotation = rotation;
      vars.skewX = skewX;
      if (scale) {
        vars.scaleX = scaleX;
        vars.scaleY = scaleY;
      } else {
        vars.width = width2;
        vars.height = height2;
      }
    }
    return vars || cache;
  };
  var _parseState = function _parseState2(targetsOrState, vars) {
    return targetsOrState instanceof FlipState ? targetsOrState : new FlipState(targetsOrState, vars);
  };
  var _getChangingElState = function _getChangingElState2(toState, fromState, id) {
    var to1 = toState.idLookup[id], to2 = toState.alt[id];
    return to2.isVisible && (!(fromState.getElementState(to2.element) || to2).isVisible || !to1.isVisible) ? to2 : to1;
  };
  var _bodyMetrics = [];
  var _bodyProps = "width,height,overflowX,overflowY".split(",");
  var _bodyLocked;
  var _lockBodyScroll = function _lockBodyScroll2(lock) {
    if (lock !== _bodyLocked) {
      var s2 = _body2.style, w = _body2.clientWidth === window.outerWidth, h = _body2.clientHeight === window.outerHeight, i2 = 4;
      if (lock && (w || h)) {
        while (i2--) {
          _bodyMetrics[i2] = s2[_bodyProps[i2]];
        }
        if (w) {
          s2.width = _body2.clientWidth + "px";
          s2.overflowY = "hidden";
        }
        if (h) {
          s2.height = _body2.clientHeight + "px";
          s2.overflowX = "hidden";
        }
        _bodyLocked = lock;
      } else if (_bodyLocked) {
        while (i2--) {
          _bodyMetrics[i2] ? s2[_bodyProps[i2]] = _bodyMetrics[i2] : s2.removeProperty(_camelToDashed(_bodyProps[i2]));
        }
        _bodyLocked = lock;
      }
    }
  };
  var _fromTo = function _fromTo2(fromState, toState, vars, relative) {
    fromState instanceof FlipState && toState instanceof FlipState || console.warn("Not a valid state object.");
    vars = vars || {};
    var _vars = vars, clearProps2 = _vars.clearProps, onEnter = _vars.onEnter, onLeave = _vars.onLeave, absolute = _vars.absolute, absoluteOnLeave = _vars.absoluteOnLeave, custom = _vars.custom, delay = _vars.delay, paused = _vars.paused, repeat = _vars.repeat, repeatDelay = _vars.repeatDelay, yoyo = _vars.yoyo, toggleClass = _vars.toggleClass, nested = _vars.nested, _zIndex = _vars.zIndex, scale = _vars.scale, fade = _vars.fade, stagger = _vars.stagger, spin = _vars.spin, prune = _vars.prune, props = ("props" in vars ? vars : fromState).props, tweenVars = _copy(vars, _reserved), animation = gsap2.timeline({
      delay,
      paused,
      repeat,
      repeatDelay,
      yoyo,
      data: "isFlip"
    }), remainingProps = tweenVars, entering = [], leaving = [], comps = [], swapOutTargets = [], spinNum = spin === true ? 1 : spin || 0, spinFunc = typeof spin === "function" ? spin : function() {
      return spinNum;
    }, interrupted = fromState.interrupted || toState.interrupted, addFunc = animation[relative !== 1 ? "to" : "from"], v, p, endTime, i2, el, comp, state, targets, finalStates, fromNode, toNode, run, a, b;
    for (p in toState.idLookup) {
      toNode = !toState.alt[p] ? toState.idLookup[p] : _getChangingElState(toState, fromState, p);
      el = toNode.element;
      fromNode = fromState.idLookup[p];
      fromState.alt[p] && el === fromNode.element && (fromState.alt[p].isVisible || !toNode.isVisible) && (fromNode = fromState.alt[p]);
      if (fromNode) {
        comp = {
          t: el,
          b: fromNode,
          a: toNode,
          sd: fromNode.element === el ? 0 : toNode.isVisible ? 1 : -1
        };
        comps.push(comp);
        if (comp.sd) {
          if (comp.sd < 0) {
            comp.b = toNode;
            comp.a = fromNode;
          }
          interrupted && _recordInlineStyles(comp.b, props ? _memoizedRemoveProps[props] : _removeProps);
          fade && comps.push(comp.swap = {
            t: fromNode.element,
            b: comp.b,
            a: comp.a,
            sd: -comp.sd,
            swap: comp
          });
        }
        el._flip = fromNode.element._flip = _batch ? _batch.timeline : animation;
      } else if (toNode.isVisible) {
        comps.push({
          t: el,
          b: _copy(toNode, {
            isVisible: 1
          }),
          a: toNode,
          sd: 0,
          entering: 1
        });
        el._flip = _batch ? _batch.timeline : animation;
      }
    }
    props && (_memoizedProps[props] || _memoizeProps(props)).forEach(function(p2) {
      return tweenVars[p2] = function(i3) {
        return comps[i3].a.props[p2];
      };
    });
    comps.finalStates = finalStates = [];
    run = function run2() {
      _orderByDOMDepth(comps);
      _lockBodyScroll(true);
      for (i2 = 0; i2 < comps.length; i2++) {
        comp = comps[i2];
        a = comp.a;
        b = comp.b;
        if (prune && !a.isDifferent(b) && !comp.entering) {
          comps.splice(i2--, 1);
        } else {
          el = comp.t;
          nested && !(comp.sd < 0) && i2 && (a.matrix = getGlobalMatrix(el, false, false, true));
          if (b.isVisible && a.isVisible) {
            if (comp.sd < 0) {
              state = new ElementState(el, props, fromState.simple);
              _fit(state, a, scale, 0, 0, state);
              state.matrix = getGlobalMatrix(el, false, false, true);
              state.css = comp.b.css;
              comp.a = a = state;
              fade && (el.style.opacity = interrupted ? b.opacity : a.opacity);
              stagger && swapOutTargets.push(el);
            } else if (comp.sd > 0 && fade) {
              el.style.opacity = interrupted ? a.opacity - b.opacity : "0";
            }
            _fit(a, b, scale, props);
          } else if (b.isVisible !== a.isVisible) {
            if (!b.isVisible) {
              a.isVisible && entering.push(a);
              comps.splice(i2--, 1);
            } else if (!a.isVisible) {
              b.css = a.css;
              leaving.push(b);
              comps.splice(i2--, 1);
              absolute && nested && _fit(a, b, scale, props);
            }
          }
          if (!scale) {
            el.style.maxWidth = Math.max(a.width, b.width) + "px";
            el.style.maxHeight = Math.max(a.height, b.height) + "px";
            el.style.minWidth = Math.min(a.width, b.width) + "px";
            el.style.minHeight = Math.min(a.height, b.height) + "px";
          }
          nested && toggleClass && el.classList.add(toggleClass);
        }
        finalStates.push(a);
      }
      var classTargets;
      if (toggleClass) {
        classTargets = finalStates.map(function(s2) {
          return s2.element;
        });
        nested && classTargets.forEach(function(e3) {
          return e3.classList.remove(toggleClass);
        });
      }
      _lockBodyScroll(false);
      if (scale) {
        tweenVars.scaleX = function(i3) {
          return comps[i3].a.scaleX;
        };
        tweenVars.scaleY = function(i3) {
          return comps[i3].a.scaleY;
        };
      } else {
        tweenVars.width = function(i3) {
          return comps[i3].a.width + "px";
        };
        tweenVars.height = function(i3) {
          return comps[i3].a.height + "px";
        };
        tweenVars.autoRound = vars.autoRound || false;
      }
      tweenVars.x = function(i3) {
        return comps[i3].a.x + "px";
      };
      tweenVars.y = function(i3) {
        return comps[i3].a.y + "px";
      };
      tweenVars.rotation = function(i3) {
        return comps[i3].a.rotation + (spin ? spinFunc(i3, targets[i3], targets) * 360 : 0);
      };
      tweenVars.skewX = function(i3) {
        return comps[i3].a.skewX;
      };
      targets = comps.map(function(c) {
        return c.t;
      });
      if (_zIndex || _zIndex === 0) {
        tweenVars.modifiers = {
          zIndex: function zIndex() {
            return _zIndex;
          }
        };
        tweenVars.zIndex = _zIndex;
        tweenVars.immediateRender = vars.immediateRender !== false;
      }
      fade && (tweenVars.opacity = function(i3) {
        return comps[i3].sd < 0 ? 0 : comps[i3].sd > 0 ? comps[i3].a.opacity : "+=0";
      });
      if (swapOutTargets.length) {
        stagger = gsap2.utils.distribute(stagger);
        var dummyArray = targets.slice(swapOutTargets.length);
        tweenVars.stagger = function(i3, el2) {
          return stagger(~swapOutTargets.indexOf(el2) ? targets.indexOf(comps[i3].swap.t) : i3, el2, dummyArray);
        };
      }
      _callbacks.forEach(function(name) {
        return vars[name] && animation.eventCallback(name, vars[name], vars[name + "Params"]);
      });
      if (custom && targets.length) {
        remainingProps = _copy(tweenVars, _reserved);
        if ("scale" in custom) {
          custom.scaleX = custom.scaleY = custom.scale;
          delete custom.scale;
        }
        for (p in custom) {
          v = _copy(custom[p], _fitReserved);
          v[p] = tweenVars[p];
          !("duration" in v) && "duration" in tweenVars && (v.duration = tweenVars.duration);
          v.stagger = tweenVars.stagger;
          addFunc.call(animation, targets, v, 0);
          delete remainingProps[p];
        }
      }
      if (targets.length || leaving.length || entering.length) {
        toggleClass && animation.add(function() {
          return _toggleClass(classTargets, toggleClass, animation._zTime < 0 ? "remove" : "add");
        }, 0) && !paused && _toggleClass(classTargets, toggleClass, "add");
        targets.length && addFunc.call(animation, targets, remainingProps, 0);
      }
      _handleCallback(onEnter, entering, animation);
      _handleCallback(onLeave, leaving, animation);
      var batchTl = _batch && _batch.timeline;
      if (batchTl) {
        batchTl.add(animation, 0);
        _batch._final.push(function() {
          return _setFinalStates(comps, !clearProps2);
        });
      }
      endTime = animation.duration();
      animation.call(function() {
        var forward = animation.time() >= endTime;
        forward && !batchTl && _setFinalStates(comps, !clearProps2);
        toggleClass && _toggleClass(classTargets, toggleClass, forward ? "remove" : "add");
      });
    };
    absoluteOnLeave && (absolute = comps.filter(function(comp2) {
      return !comp2.sd && !comp2.a.isVisible && comp2.b.isVisible;
    }).map(function(comp2) {
      return comp2.a.element;
    }));
    if (_batch) {
      var _batch$_abs;
      absolute && (_batch$_abs = _batch._abs).push.apply(_batch$_abs, _filterComps(comps, absolute));
      _batch._run.push(run);
    } else {
      absolute && _makeCompsAbsolute(_filterComps(comps, absolute));
      run();
    }
    var anim = _batch ? _batch.timeline : animation;
    anim.revert = function() {
      return _killFlip(anim, 1, 1);
    };
    return anim;
  };
  var _interrupt3 = function _interrupt4(tl) {
    tl.vars.onInterrupt && tl.vars.onInterrupt.apply(tl, tl.vars.onInterruptParams || []);
    tl.getChildren(true, false, true).forEach(_interrupt4);
  };
  var _killFlip = function _killFlip2(tl, action, force) {
    if (tl && tl.progress() < 1 && (!tl.paused() || force)) {
      if (action) {
        _interrupt3(tl);
        action < 2 && tl.progress(1);
        tl.kill();
      }
      return true;
    }
  };
  var _createLookup = function _createLookup2(state) {
    var lookup = state.idLookup = {}, alt = state.alt = {}, elStates = state.elementStates, i2 = elStates.length, elState;
    while (i2--) {
      elState = elStates[i2];
      lookup[elState.id] ? alt[elState.id] = elState : lookup[elState.id] = elState;
    }
  };
  var FlipState = /* @__PURE__ */ function() {
    function FlipState2(targets, vars, targetsAreElementStates) {
      this.props = vars && vars.props;
      this.simple = !!(vars && vars.simple);
      if (targetsAreElementStates) {
        this.targets = _elementsFromElementStates(targets);
        this.elementStates = targets;
        _createLookup(this);
      } else {
        this.targets = _toArray(targets);
        var soft = vars && (vars.kill === false || vars.batch && !vars.kill);
        _batch && !soft && _batch._kill.push(this);
        this.update(soft || !!_batch);
      }
    }
    var _proto = FlipState2.prototype;
    _proto.update = function update2(soft) {
      var _this = this;
      this.elementStates = this.targets.map(function(el) {
        return new ElementState(el, _this.props, _this.simple);
      });
      _createLookup(this);
      this.interrupt(soft);
      this.recordInlineStyles();
      return this;
    };
    _proto.clear = function clear() {
      this.targets.length = this.elementStates.length = 0;
      _createLookup(this);
      return this;
    };
    _proto.fit = function fit(state, scale, nested) {
      var elStatesInOrder = _orderByDOMDepth(this.elementStates.slice(0), false, true), toElStates = (state || this).idLookup, i2 = 0, fromNode, toNode;
      for (; i2 < elStatesInOrder.length; i2++) {
        fromNode = elStatesInOrder[i2];
        nested && (fromNode.matrix = getGlobalMatrix(fromNode.element, false, false, true));
        toNode = toElStates[fromNode.id];
        toNode && _fit(fromNode, toNode, scale, true, 0, fromNode);
        fromNode.matrix = getGlobalMatrix(fromNode.element, false, false, true);
      }
      return this;
    };
    _proto.getProperty = function getProperty2(element, property) {
      var es = this.getElementState(element) || _emptyObj;
      return (property in es ? es : es.props || _emptyObj)[property];
    };
    _proto.add = function add(state) {
      var i2 = state.targets.length, lookup = this.idLookup, alt = this.alt, index, es, es2;
      while (i2--) {
        es = state.elementStates[i2];
        es2 = lookup[es.id];
        if (es2 && (es.element === es2.element || alt[es.id] && alt[es.id].element === es.element)) {
          index = this.elementStates.indexOf(es.element === es2.element ? es2 : alt[es.id]);
          this.targets.splice(index, 1, state.targets[i2]);
          this.elementStates.splice(index, 1, es);
        } else {
          this.targets.push(state.targets[i2]);
          this.elementStates.push(es);
        }
      }
      state.interrupted && (this.interrupted = true);
      state.simple || (this.simple = false);
      _createLookup(this);
      return this;
    };
    _proto.compare = function compare(state) {
      var l1 = state.idLookup, l2 = this.idLookup, unchanged = [], changed = [], enter = [], leave = [], targets = [], a1 = state.alt, a2 = this.alt, place = function place2(s12, s22, el2) {
        return (s12.isVisible !== s22.isVisible ? s12.isVisible ? enter : leave : s12.isVisible ? changed : unchanged).push(el2) && targets.push(el2);
      }, placeIfDoesNotExist = function placeIfDoesNotExist2(s12, s22, el2) {
        return targets.indexOf(el2) < 0 && place(s12, s22, el2);
      }, s1, s2, p, el, s1Alt, s2Alt, c1, c2;
      for (p in l1) {
        s1Alt = a1[p];
        s2Alt = a2[p];
        s1 = !s1Alt ? l1[p] : _getChangingElState(state, this, p);
        el = s1.element;
        s2 = l2[p];
        if (s2Alt) {
          c2 = s2.isVisible || !s2Alt.isVisible && el === s2.element ? s2 : s2Alt;
          c1 = s1Alt && !s1.isVisible && !s1Alt.isVisible && c2.element === s1Alt.element ? s1Alt : s1;
          if (c1.isVisible && c2.isVisible && c1.element !== c2.element) {
            (c1.isDifferent(c2) ? changed : unchanged).push(c1.element, c2.element);
            targets.push(c1.element, c2.element);
          } else {
            place(c1, c2, c1.element);
          }
          s1Alt && c1.element === s1Alt.element && (s1Alt = l1[p]);
          placeIfDoesNotExist(c1.element !== s2.element && s1Alt ? s1Alt : c1, s2, s2.element);
          placeIfDoesNotExist(s1Alt && s1Alt.element === s2Alt.element ? s1Alt : c1, s2Alt, s2Alt.element);
          s1Alt && placeIfDoesNotExist(s1Alt, s2Alt.element === s1Alt.element ? s2Alt : s2, s1Alt.element);
        } else {
          !s2 ? enter.push(el) : !s2.isDifferent(s1) ? unchanged.push(el) : place(s1, s2, el);
          s1Alt && placeIfDoesNotExist(s1Alt, s2, s1Alt.element);
        }
      }
      for (p in l2) {
        if (!l1[p]) {
          leave.push(l2[p].element);
          a2[p] && leave.push(a2[p].element);
        }
      }
      return {
        changed,
        unchanged,
        enter,
        leave
      };
    };
    _proto.recordInlineStyles = function recordInlineStyles() {
      var props = _memoizedRemoveProps[this.props] || _removeProps, i2 = this.elementStates.length;
      while (i2--) {
        _recordInlineStyles(this.elementStates[i2], props);
      }
    };
    _proto.interrupt = function interrupt(soft) {
      var _this2 = this;
      var timelines = [];
      this.targets.forEach(function(t2) {
        var tl = t2._flip, foundInProgress = _killFlip(tl, soft ? 0 : 1);
        soft && foundInProgress && timelines.indexOf(tl) < 0 && tl.add(function() {
          return _this2.updateVisibility();
        });
        foundInProgress && timelines.push(tl);
      });
      !soft && timelines.length && this.updateVisibility();
      this.interrupted || (this.interrupted = !!timelines.length);
    };
    _proto.updateVisibility = function updateVisibility() {
      this.elementStates.forEach(function(es) {
        var b = es.element.getBoundingClientRect();
        es.isVisible = !!(b.width || b.height || b.top || b.left);
        es.uncache = 1;
      });
    };
    _proto.getElementState = function getElementState(element) {
      return this.elementStates[this.targets.indexOf(_getEl(element))];
    };
    _proto.makeAbsolute = function makeAbsolute() {
      return _orderByDOMDepth(this.elementStates.slice(0), true, true).map(_makeAbsolute);
    };
    return FlipState2;
  }();
  var ElementState = /* @__PURE__ */ function() {
    function ElementState2(element, props, simple) {
      this.element = element;
      this.update(props, simple);
    }
    var _proto2 = ElementState2.prototype;
    _proto2.isDifferent = function isDifferent(state) {
      var b1 = this.bounds, b2 = state.bounds;
      return b1.top !== b2.top || b1.left !== b2.left || b1.width !== b2.width || b1.height !== b2.height || !this.matrix.equals(state.matrix) || this.opacity !== state.opacity || this.props && state.props && JSON.stringify(this.props) !== JSON.stringify(state.props);
    };
    _proto2.update = function update2(props, simple) {
      var self2 = this, element = self2.element, getProp = gsap2.getProperty(element), cache = gsap2.core.getCache(element), bounds = element.getBoundingClientRect(), bbox = element.getBBox && typeof element.getBBox === "function" && element.nodeName.toLowerCase() !== "svg" && element.getBBox(), m = simple ? new Matrix2D(1, 0, 0, 1, bounds.left + _getDocScrollLeft(), bounds.top + _getDocScrollTop()) : getGlobalMatrix(element, false, false, true);
      self2.getProp = getProp;
      self2.element = element;
      self2.id = _getID(element);
      self2.matrix = m;
      self2.cache = cache;
      self2.bounds = bounds;
      self2.isVisible = !!(bounds.width || bounds.height || bounds.left || bounds.top);
      self2.display = getProp("display");
      self2.position = getProp("position");
      self2.parent = element.parentNode;
      self2.x = getProp("x");
      self2.y = getProp("y");
      self2.scaleX = cache.scaleX;
      self2.scaleY = cache.scaleY;
      self2.rotation = getProp("rotation");
      self2.skewX = getProp("skewX");
      self2.opacity = getProp("opacity");
      self2.width = bbox ? bbox.width : _closestTenth(getProp("width", "px"), 0.04);
      self2.height = bbox ? bbox.height : _closestTenth(getProp("height", "px"), 0.04);
      props && _recordProps(self2, _memoizedProps[props] || _memoizeProps(props));
      self2.ctm = element.getCTM && element.nodeName.toLowerCase() === "svg" && _getCTM(element).inverse();
      self2.simple = simple || _round3(m.a) === 1 && !_round3(m.b) && !_round3(m.c) && _round3(m.d) === 1;
      self2.uncache = 0;
    };
    return ElementState2;
  }();
  var FlipAction = /* @__PURE__ */ function() {
    function FlipAction2(vars, batch) {
      this.vars = vars;
      this.batch = batch;
      this.states = [];
      this.timeline = batch.timeline;
    }
    var _proto3 = FlipAction2.prototype;
    _proto3.getStateById = function getStateById(id) {
      var i2 = this.states.length;
      while (i2--) {
        if (this.states[i2].idLookup[id]) {
          return this.states[i2];
        }
      }
    };
    _proto3.kill = function kill() {
      this.batch.remove(this);
    };
    return FlipAction2;
  }();
  var FlipBatch = /* @__PURE__ */ function() {
    function FlipBatch2(id) {
      this.id = id;
      this.actions = [];
      this._kill = [];
      this._final = [];
      this._abs = [];
      this._run = [];
      this.data = {};
      this.state = new FlipState();
      this.timeline = gsap2.timeline();
    }
    var _proto4 = FlipBatch2.prototype;
    _proto4.add = function add(config3) {
      var result = this.actions.filter(function(action) {
        return action.vars === config3;
      });
      if (result.length) {
        return result[0];
      }
      result = new FlipAction(typeof config3 === "function" ? {
        animate: config3
      } : config3, this);
      this.actions.push(result);
      return result;
    };
    _proto4.remove = function remove(action) {
      var i2 = this.actions.indexOf(action);
      i2 >= 0 && this.actions.splice(i2, 1);
      return this;
    };
    _proto4.getState = function getState(merge) {
      var _this3 = this;
      var prevBatch = _batch, prevAction = _batchAction;
      _batch = this;
      this.state.clear();
      this._kill.length = 0;
      this.actions.forEach(function(action) {
        if (action.vars.getState) {
          action.states.length = 0;
          _batchAction = action;
          action.state = action.vars.getState(action);
        }
        merge && action.states.forEach(function(s2) {
          return _this3.state.add(s2);
        });
      });
      _batchAction = prevAction;
      _batch = prevBatch;
      this.killConflicts();
      return this;
    };
    _proto4.animate = function animate() {
      var _this4 = this;
      var prevBatch = _batch, tl = this.timeline, i2 = this.actions.length, finalStates, endTime;
      _batch = this;
      tl.clear();
      this._abs.length = this._final.length = this._run.length = 0;
      this.actions.forEach(function(a) {
        a.vars.animate && a.vars.animate(a);
        var onEnter = a.vars.onEnter, onLeave = a.vars.onLeave, targets = a.targets, s2, result;
        if (targets && targets.length && (onEnter || onLeave)) {
          s2 = new FlipState();
          a.states.forEach(function(state) {
            return s2.add(state);
          });
          result = s2.compare(Flip.getState(targets));
          result.enter.length && onEnter && onEnter(result.enter);
          result.leave.length && onLeave && onLeave(result.leave);
        }
      });
      _makeCompsAbsolute(this._abs);
      this._run.forEach(function(f) {
        return f();
      });
      endTime = tl.duration();
      finalStates = this._final.slice(0);
      tl.add(function() {
        if (endTime <= tl.time()) {
          finalStates.forEach(function(f) {
            return f();
          });
          _forEachBatch(_this4, "onComplete");
        }
      });
      _batch = prevBatch;
      while (i2--) {
        this.actions[i2].vars.once && this.actions[i2].kill();
      }
      _forEachBatch(this, "onStart");
      tl.restart();
      return this;
    };
    _proto4.loadState = function loadState(done) {
      done || (done = function done2() {
        return 0;
      });
      var queue = [];
      this.actions.forEach(function(c) {
        if (c.vars.loadState) {
          var i2, f = function f2(targets) {
            targets && (c.targets = targets);
            i2 = queue.indexOf(f2);
            if (~i2) {
              queue.splice(i2, 1);
              queue.length || done();
            }
          };
          queue.push(f);
          c.vars.loadState(f);
        }
      });
      queue.length || done();
      return this;
    };
    _proto4.setState = function setState() {
      this.actions.forEach(function(c) {
        return c.targets = c.vars.setState && c.vars.setState(c);
      });
      return this;
    };
    _proto4.killConflicts = function killConflicts(soft) {
      this.state.interrupt(soft);
      this._kill.forEach(function(state) {
        return state.interrupt(soft);
      });
      return this;
    };
    _proto4.run = function run(skipGetState, merge) {
      var _this5 = this;
      if (this !== _batch) {
        skipGetState || this.getState(merge);
        this.loadState(function() {
          if (!_this5._killed) {
            _this5.setState();
            _this5.animate();
          }
        });
      }
      return this;
    };
    _proto4.clear = function clear(stateOnly) {
      this.state.clear();
      stateOnly || (this.actions.length = 0);
    };
    _proto4.getStateById = function getStateById(id) {
      var i2 = this.actions.length, s2;
      while (i2--) {
        s2 = this.actions[i2].getStateById(id);
        if (s2) {
          return s2;
        }
      }
      return this.state.idLookup[id] && this.state;
    };
    _proto4.kill = function kill() {
      this._killed = 1;
      this.clear();
      delete _batchLookup[this.id];
    };
    return FlipBatch2;
  }();
  var Flip = /* @__PURE__ */ function() {
    function Flip2() {
    }
    Flip2.getState = function getState(targets, vars) {
      var state = _parseState(targets, vars);
      _batchAction && _batchAction.states.push(state);
      vars && vars.batch && Flip2.batch(vars.batch).state.add(state);
      return state;
    };
    Flip2.from = function from(state, vars) {
      vars = vars || {};
      "clearProps" in vars || (vars.clearProps = true);
      return _fromTo(state, _parseState(vars.targets || state.targets, {
        props: vars.props || state.props,
        simple: vars.simple,
        kill: !!vars.kill
      }), vars, -1);
    };
    Flip2.to = function to(state, vars) {
      return _fromTo(state, _parseState(vars.targets || state.targets, {
        props: vars.props || state.props,
        simple: vars.simple,
        kill: !!vars.kill
      }), vars, 1);
    };
    Flip2.fromTo = function fromTo(fromState, toState, vars) {
      return _fromTo(fromState, toState, vars);
    };
    Flip2.fit = function fit(fromEl, toEl, vars) {
      var v = vars ? _copy(vars, _fitReserved) : {}, _ref = vars || v, absolute = _ref.absolute, scale = _ref.scale, getVars = _ref.getVars, props = _ref.props, runBackwards = _ref.runBackwards, onComplete = _ref.onComplete, simple = _ref.simple, fitChild = vars && vars.fitChild && _getEl(vars.fitChild), before = _parseElementState(toEl, props, simple, fromEl), after = _parseElementState(fromEl, 0, simple, before), inlineProps = props ? _memoizedRemoveProps[props] : _removeProps;
      props && _applyProps(v, before.props);
      if (runBackwards) {
        _recordInlineStyles(after, inlineProps);
        "immediateRender" in v || (v.immediateRender = true);
        v.onComplete = function() {
          _applyInlineStyles(after);
          onComplete && onComplete.apply(this, arguments);
        };
      }
      absolute && _makeAbsolute(after, before);
      v = _fit(after, before, scale || fitChild, props, fitChild, v.duration || getVars ? v : 0);
      return getVars ? v : v.duration ? gsap2.to(after.element, v) : null;
    };
    Flip2.makeAbsolute = function makeAbsolute(targetsOrStates, vars) {
      return (targetsOrStates instanceof FlipState ? targetsOrStates : new FlipState(targetsOrStates, vars)).makeAbsolute();
    };
    Flip2.batch = function batch(id) {
      id || (id = "default");
      return _batchLookup[id] || (_batchLookup[id] = new FlipBatch(id));
    };
    Flip2.killFlipsOf = function killFlipsOf(targets, complete) {
      (targets instanceof FlipState ? targets.targets : _toArray(targets)).forEach(function(t2) {
        return t2 && _killFlip(t2._flip, complete !== false ? 1 : 2);
      });
    };
    Flip2.isFlipping = function isFlipping(target) {
      var f = Flip2.getByTarget(target);
      return !!f && f.isActive();
    };
    Flip2.getByTarget = function getByTarget(target) {
      return (_getEl(target) || _emptyObj)._flip;
    };
    Flip2.getElementState = function getElementState(target, props) {
      return new ElementState(_getEl(target), props);
    };
    Flip2.convertCoordinates = function convertCoordinates(fromElement, toElement, point) {
      var m = getGlobalMatrix(toElement, true, true).multiply(getGlobalMatrix(fromElement));
      return point ? m.apply(point) : m;
    };
    Flip2.register = function register(core) {
      _body2 = typeof document !== "undefined" && document.body;
      if (_body2) {
        gsap2 = core;
        _setDoc(_body2);
        _toArray = gsap2.utils.toArray;
        _getStyleSaver3 = gsap2.core.getStyleSaver;
        var snap3 = gsap2.utils.snap(0.1);
        _closestTenth = function _closestTenth2(value, add) {
          return snap3(parseFloat(value) + add);
        };
      }
    };
    return Flip2;
  }();
  Flip.version = "3.12.2";
  typeof window !== "undefined" && window.gsap && window.gsap.registerPlugin(Flip);

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/ScrollTrigger.js
  init_live_reload();

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/Observer.js
  init_live_reload();
  function _defineProperties(target, props) {
    for (var i2 = 0; i2 < props.length; i2++) {
      var descriptor = props[i2];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps)
      _defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      _defineProperties(Constructor, staticProps);
    return Constructor;
  }
  var gsap3;
  var _coreInitted2;
  var _clamp3;
  var _win4;
  var _doc4;
  var _docEl;
  var _body3;
  var _isTouch;
  var _pointerType;
  var ScrollTrigger;
  var _root;
  var _normalizer;
  var _eventTypes;
  var _context2;
  var _getGSAP = function _getGSAP2() {
    return gsap3 || typeof window !== "undefined" && (gsap3 = window.gsap) && gsap3.registerPlugin && gsap3;
  };
  var _startup = 1;
  var _observers = [];
  var _scrollers = [];
  var _proxies = [];
  var _getTime = Date.now;
  var _bridge = function _bridge2(name, value) {
    return value;
  };
  var _integrate = function _integrate2() {
    var core = ScrollTrigger.core, data = core.bridge || {}, scrollers = core._scrollers, proxies = core._proxies;
    scrollers.push.apply(scrollers, _scrollers);
    proxies.push.apply(proxies, _proxies);
    _scrollers = scrollers;
    _proxies = proxies;
    _bridge = function _bridge3(name, value) {
      return data[name](value);
    };
  };
  var _getProxyProp = function _getProxyProp2(element, property) {
    return ~_proxies.indexOf(element) && _proxies[_proxies.indexOf(element) + 1][property];
  };
  var _isViewport = function _isViewport2(el) {
    return !!~_root.indexOf(el);
  };
  var _addListener = function _addListener2(element, type, func, nonPassive, capture) {
    return element.addEventListener(type, func, {
      passive: !nonPassive,
      capture: !!capture
    });
  };
  var _removeListener = function _removeListener2(element, type, func, capture) {
    return element.removeEventListener(type, func, !!capture);
  };
  var _scrollLeft = "scrollLeft";
  var _scrollTop = "scrollTop";
  var _onScroll = function _onScroll2() {
    return _normalizer && _normalizer.isPressed || _scrollers.cache++;
  };
  var _scrollCacheFunc = function _scrollCacheFunc2(f, doNotCache) {
    var cachingFunc = function cachingFunc2(value) {
      if (value || value === 0) {
        _startup && (_win4.history.scrollRestoration = "manual");
        var isNormalizing = _normalizer && _normalizer.isPressed;
        value = cachingFunc2.v = Math.round(value) || (_normalizer && _normalizer.iOS ? 1 : 0);
        f(value);
        cachingFunc2.cacheID = _scrollers.cache;
        isNormalizing && _bridge("ss", value);
      } else if (doNotCache || _scrollers.cache !== cachingFunc2.cacheID || _bridge("ref")) {
        cachingFunc2.cacheID = _scrollers.cache;
        cachingFunc2.v = f();
      }
      return cachingFunc2.v + cachingFunc2.offset;
    };
    cachingFunc.offset = 0;
    return f && cachingFunc;
  };
  var _horizontal = {
    s: _scrollLeft,
    p: "left",
    p2: "Left",
    os: "right",
    os2: "Right",
    d: "width",
    d2: "Width",
    a: "x",
    sc: _scrollCacheFunc(function(value) {
      return arguments.length ? _win4.scrollTo(value, _vertical.sc()) : _win4.pageXOffset || _doc4[_scrollLeft] || _docEl[_scrollLeft] || _body3[_scrollLeft] || 0;
    })
  };
  var _vertical = {
    s: _scrollTop,
    p: "top",
    p2: "Top",
    os: "bottom",
    os2: "Bottom",
    d: "height",
    d2: "Height",
    a: "y",
    op: _horizontal,
    sc: _scrollCacheFunc(function(value) {
      return arguments.length ? _win4.scrollTo(_horizontal.sc(), value) : _win4.pageYOffset || _doc4[_scrollTop] || _docEl[_scrollTop] || _body3[_scrollTop] || 0;
    })
  };
  var _getTarget = function _getTarget2(t2, self2) {
    return (self2 && self2._ctx && self2._ctx.selector || gsap3.utils.toArray)(t2)[0] || (typeof t2 === "string" && gsap3.config().nullTargetWarn !== false ? console.warn("Element not found:", t2) : null);
  };
  var _getScrollFunc = function _getScrollFunc2(element, _ref) {
    var s2 = _ref.s, sc = _ref.sc;
    _isViewport(element) && (element = _doc4.scrollingElement || _docEl);
    var i2 = _scrollers.indexOf(element), offset = sc === _vertical.sc ? 1 : 2;
    !~i2 && (i2 = _scrollers.push(element) - 1);
    _scrollers[i2 + offset] || _addListener(element, "scroll", _onScroll);
    var prev = _scrollers[i2 + offset], func = prev || (_scrollers[i2 + offset] = _scrollCacheFunc(_getProxyProp(element, s2), true) || (_isViewport(element) ? sc : _scrollCacheFunc(function(value) {
      return arguments.length ? element[s2] = value : element[s2];
    })));
    func.target = element;
    prev || (func.smooth = gsap3.getProperty(element, "scrollBehavior") === "smooth");
    return func;
  };
  var _getVelocityProp = function _getVelocityProp2(value, minTimeRefresh, useDelta) {
    var v1 = value, v2 = value, t1 = _getTime(), t2 = t1, min = minTimeRefresh || 50, dropToZeroTime = Math.max(500, min * 3), update2 = function update3(value2, force) {
      var t3 = _getTime();
      if (force || t3 - t1 > min) {
        v2 = v1;
        v1 = value2;
        t2 = t1;
        t1 = t3;
      } else if (useDelta) {
        v1 += value2;
      } else {
        v1 = v2 + (value2 - v2) / (t3 - t2) * (t1 - t2);
      }
    }, reset = function reset2() {
      v2 = v1 = useDelta ? 0 : v1;
      t2 = t1 = 0;
    }, getVelocity = function getVelocity2(latestValue) {
      var tOld = t2, vOld = v2, t3 = _getTime();
      (latestValue || latestValue === 0) && latestValue !== v1 && update2(latestValue);
      return t1 === t2 || t3 - t2 > dropToZeroTime ? 0 : (v1 + (useDelta ? vOld : -vOld)) / ((useDelta ? t3 : t1) - tOld) * 1e3;
    };
    return {
      update: update2,
      reset,
      getVelocity
    };
  };
  var _getEvent = function _getEvent2(e3, preventDefault) {
    preventDefault && !e3._gsapAllow && e3.preventDefault();
    return e3.changedTouches ? e3.changedTouches[0] : e3;
  };
  var _getAbsoluteMax = function _getAbsoluteMax2(a) {
    var max2 = Math.max.apply(Math, a), min = Math.min.apply(Math, a);
    return Math.abs(max2) >= Math.abs(min) ? max2 : min;
  };
  var _setScrollTrigger = function _setScrollTrigger2() {
    ScrollTrigger = gsap3.core.globals().ScrollTrigger;
    ScrollTrigger && ScrollTrigger.core && _integrate();
  };
  var _initCore3 = function _initCore4(core) {
    gsap3 = core || _getGSAP();
    if (gsap3 && typeof document !== "undefined" && document.body) {
      _win4 = window;
      _doc4 = document;
      _docEl = _doc4.documentElement;
      _body3 = _doc4.body;
      _root = [_win4, _doc4, _docEl, _body3];
      _clamp3 = gsap3.utils.clamp;
      _context2 = gsap3.core.context || function() {
      };
      _pointerType = "onpointerenter" in _body3 ? "pointer" : "mouse";
      _isTouch = Observer.isTouch = _win4.matchMedia && _win4.matchMedia("(hover: none), (pointer: coarse)").matches ? 1 : "ontouchstart" in _win4 || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 ? 2 : 0;
      _eventTypes = Observer.eventTypes = ("ontouchstart" in _docEl ? "touchstart,touchmove,touchcancel,touchend" : !("onpointerdown" in _docEl) ? "mousedown,mousemove,mouseup,mouseup" : "pointerdown,pointermove,pointercancel,pointerup").split(",");
      setTimeout(function() {
        return _startup = 0;
      }, 500);
      _setScrollTrigger();
      _coreInitted2 = 1;
    }
    return _coreInitted2;
  };
  _horizontal.op = _vertical;
  _scrollers.cache = 0;
  var Observer = /* @__PURE__ */ function() {
    function Observer3(vars) {
      this.init(vars);
    }
    var _proto = Observer3.prototype;
    _proto.init = function init4(vars) {
      _coreInitted2 || _initCore3(gsap3) || console.warn("Please gsap.registerPlugin(Observer)");
      ScrollTrigger || _setScrollTrigger();
      var tolerance = vars.tolerance, dragMinimum = vars.dragMinimum, type = vars.type, target = vars.target, lineHeight = vars.lineHeight, debounce = vars.debounce, preventDefault = vars.preventDefault, onStop = vars.onStop, onStopDelay = vars.onStopDelay, ignore = vars.ignore, wheelSpeed = vars.wheelSpeed, event2 = vars.event, onDragStart = vars.onDragStart, onDragEnd = vars.onDragEnd, onDrag = vars.onDrag, onPress = vars.onPress, onRelease = vars.onRelease, onRight = vars.onRight, onLeft = vars.onLeft, onUp = vars.onUp, onDown = vars.onDown, onChangeX = vars.onChangeX, onChangeY = vars.onChangeY, onChange = vars.onChange, onToggleX = vars.onToggleX, onToggleY = vars.onToggleY, onHover = vars.onHover, onHoverEnd = vars.onHoverEnd, onMove = vars.onMove, ignoreCheck = vars.ignoreCheck, isNormalizer = vars.isNormalizer, onGestureStart = vars.onGestureStart, onGestureEnd = vars.onGestureEnd, onWheel = vars.onWheel, onEnable = vars.onEnable, onDisable = vars.onDisable, onClick2 = vars.onClick, scrollSpeed = vars.scrollSpeed, capture = vars.capture, allowClicks = vars.allowClicks, lockAxis = vars.lockAxis, onLockAxis = vars.onLockAxis;
      this.target = target = _getTarget(target) || _docEl;
      this.vars = vars;
      ignore && (ignore = gsap3.utils.toArray(ignore));
      tolerance = tolerance || 1e-9;
      dragMinimum = dragMinimum || 0;
      wheelSpeed = wheelSpeed || 1;
      scrollSpeed = scrollSpeed || 1;
      type = type || "wheel,touch,pointer";
      debounce = debounce !== false;
      lineHeight || (lineHeight = parseFloat(_win4.getComputedStyle(_body3).lineHeight) || 22);
      var id, onStopDelayedCall, dragged, moved, wheeled, locked, axis, self2 = this, prevDeltaX = 0, prevDeltaY = 0, scrollFuncX = _getScrollFunc(target, _horizontal), scrollFuncY = _getScrollFunc(target, _vertical), scrollX = scrollFuncX(), scrollY = scrollFuncY(), limitToTouch = ~type.indexOf("touch") && !~type.indexOf("pointer") && _eventTypes[0] === "pointerdown", isViewport = _isViewport(target), ownerDoc = target.ownerDocument || _doc4, deltaX = [0, 0, 0], deltaY = [0, 0, 0], onClickTime = 0, clickCapture = function clickCapture2() {
        return onClickTime = _getTime();
      }, _ignoreCheck = function _ignoreCheck2(e3, isPointerOrTouch) {
        return (self2.event = e3) && ignore && ~ignore.indexOf(e3.target) || isPointerOrTouch && limitToTouch && e3.pointerType !== "touch" || ignoreCheck && ignoreCheck(e3, isPointerOrTouch);
      }, onStopFunc = function onStopFunc2() {
        self2._vx.reset();
        self2._vy.reset();
        onStopDelayedCall.pause();
        onStop && onStop(self2);
      }, update2 = function update3() {
        var dx = self2.deltaX = _getAbsoluteMax(deltaX), dy = self2.deltaY = _getAbsoluteMax(deltaY), changedX = Math.abs(dx) >= tolerance, changedY = Math.abs(dy) >= tolerance;
        onChange && (changedX || changedY) && onChange(self2, dx, dy, deltaX, deltaY);
        if (changedX) {
          onRight && self2.deltaX > 0 && onRight(self2);
          onLeft && self2.deltaX < 0 && onLeft(self2);
          onChangeX && onChangeX(self2);
          onToggleX && self2.deltaX < 0 !== prevDeltaX < 0 && onToggleX(self2);
          prevDeltaX = self2.deltaX;
          deltaX[0] = deltaX[1] = deltaX[2] = 0;
        }
        if (changedY) {
          onDown && self2.deltaY > 0 && onDown(self2);
          onUp && self2.deltaY < 0 && onUp(self2);
          onChangeY && onChangeY(self2);
          onToggleY && self2.deltaY < 0 !== prevDeltaY < 0 && onToggleY(self2);
          prevDeltaY = self2.deltaY;
          deltaY[0] = deltaY[1] = deltaY[2] = 0;
        }
        if (moved || dragged) {
          onMove && onMove(self2);
          if (dragged) {
            onDrag(self2);
            dragged = false;
          }
          moved = false;
        }
        locked && !(locked = false) && onLockAxis && onLockAxis(self2);
        if (wheeled) {
          onWheel(self2);
          wheeled = false;
        }
        id = 0;
      }, onDelta = function onDelta2(x, y, index) {
        deltaX[index] += x;
        deltaY[index] += y;
        self2._vx.update(x);
        self2._vy.update(y);
        debounce ? id || (id = requestAnimationFrame(update2)) : update2();
      }, onTouchOrPointerDelta = function onTouchOrPointerDelta2(x, y) {
        if (lockAxis && !axis) {
          self2.axis = axis = Math.abs(x) > Math.abs(y) ? "x" : "y";
          locked = true;
        }
        if (axis !== "y") {
          deltaX[2] += x;
          self2._vx.update(x, true);
        }
        if (axis !== "x") {
          deltaY[2] += y;
          self2._vy.update(y, true);
        }
        debounce ? id || (id = requestAnimationFrame(update2)) : update2();
      }, _onDrag = function _onDrag2(e3) {
        if (_ignoreCheck(e3, 1)) {
          return;
        }
        e3 = _getEvent(e3, preventDefault);
        var x = e3.clientX, y = e3.clientY, dx = x - self2.x, dy = y - self2.y, isDragging = self2.isDragging;
        self2.x = x;
        self2.y = y;
        if (isDragging || Math.abs(self2.startX - x) >= dragMinimum || Math.abs(self2.startY - y) >= dragMinimum) {
          onDrag && (dragged = true);
          isDragging || (self2.isDragging = true);
          onTouchOrPointerDelta(dx, dy);
          isDragging || onDragStart && onDragStart(self2);
        }
      }, _onPress = self2.onPress = function(e3) {
        if (_ignoreCheck(e3, 1) || e3 && e3.button) {
          return;
        }
        self2.axis = axis = null;
        onStopDelayedCall.pause();
        self2.isPressed = true;
        e3 = _getEvent(e3);
        prevDeltaX = prevDeltaY = 0;
        self2.startX = self2.x = e3.clientX;
        self2.startY = self2.y = e3.clientY;
        self2._vx.reset();
        self2._vy.reset();
        _addListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, preventDefault, true);
        self2.deltaX = self2.deltaY = 0;
        onPress && onPress(self2);
      }, _onRelease = self2.onRelease = function(e3) {
        if (_ignoreCheck(e3, 1)) {
          return;
        }
        _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);
        var isTrackingDrag = !isNaN(self2.y - self2.startY), wasDragging = self2.isDragging && (Math.abs(self2.x - self2.startX) > 3 || Math.abs(self2.y - self2.startY) > 3), eventData = _getEvent(e3);
        if (!wasDragging && isTrackingDrag) {
          self2._vx.reset();
          self2._vy.reset();
          if (preventDefault && allowClicks) {
            gsap3.delayedCall(0.08, function() {
              if (_getTime() - onClickTime > 300 && !e3.defaultPrevented) {
                if (e3.target.click) {
                  e3.target.click();
                } else if (ownerDoc.createEvent) {
                  var syntheticEvent = ownerDoc.createEvent("MouseEvents");
                  syntheticEvent.initMouseEvent("click", true, true, _win4, 1, eventData.screenX, eventData.screenY, eventData.clientX, eventData.clientY, false, false, false, false, 0, null);
                  e3.target.dispatchEvent(syntheticEvent);
                }
              }
            });
          }
        }
        self2.isDragging = self2.isGesturing = self2.isPressed = false;
        onStop && !isNormalizer && onStopDelayedCall.restart(true);
        onDragEnd && wasDragging && onDragEnd(self2);
        onRelease && onRelease(self2, wasDragging);
      }, _onGestureStart = function _onGestureStart2(e3) {
        return e3.touches && e3.touches.length > 1 && (self2.isGesturing = true) && onGestureStart(e3, self2.isDragging);
      }, _onGestureEnd = function _onGestureEnd2() {
        return (self2.isGesturing = false) || onGestureEnd(self2);
      }, onScroll2 = function onScroll3(e3) {
        if (_ignoreCheck(e3)) {
          return;
        }
        var x = scrollFuncX(), y = scrollFuncY();
        onDelta((x - scrollX) * scrollSpeed, (y - scrollY) * scrollSpeed, 1);
        scrollX = x;
        scrollY = y;
        onStop && onStopDelayedCall.restart(true);
      }, _onWheel = function _onWheel2(e3) {
        if (_ignoreCheck(e3)) {
          return;
        }
        e3 = _getEvent(e3, preventDefault);
        onWheel && (wheeled = true);
        var multiplier = (e3.deltaMode === 1 ? lineHeight : e3.deltaMode === 2 ? _win4.innerHeight : 1) * wheelSpeed;
        onDelta(e3.deltaX * multiplier, e3.deltaY * multiplier, 0);
        onStop && !isNormalizer && onStopDelayedCall.restart(true);
      }, _onMove = function _onMove2(e3) {
        if (_ignoreCheck(e3)) {
          return;
        }
        var x = e3.clientX, y = e3.clientY, dx = x - self2.x, dy = y - self2.y;
        self2.x = x;
        self2.y = y;
        moved = true;
        (dx || dy) && onTouchOrPointerDelta(dx, dy);
      }, _onHover = function _onHover2(e3) {
        self2.event = e3;
        onHover(self2);
      }, _onHoverEnd = function _onHoverEnd2(e3) {
        self2.event = e3;
        onHoverEnd(self2);
      }, _onClick = function _onClick2(e3) {
        return _ignoreCheck(e3) || _getEvent(e3, preventDefault) && onClick2(self2);
      };
      onStopDelayedCall = self2._dc = gsap3.delayedCall(onStopDelay || 0.25, onStopFunc).pause();
      self2.deltaX = self2.deltaY = 0;
      self2._vx = _getVelocityProp(0, 50, true);
      self2._vy = _getVelocityProp(0, 50, true);
      self2.scrollX = scrollFuncX;
      self2.scrollY = scrollFuncY;
      self2.isDragging = self2.isGesturing = self2.isPressed = false;
      _context2(this);
      self2.enable = function(e3) {
        if (!self2.isEnabled) {
          _addListener(isViewport ? ownerDoc : target, "scroll", _onScroll);
          type.indexOf("scroll") >= 0 && _addListener(isViewport ? ownerDoc : target, "scroll", onScroll2, preventDefault, capture);
          type.indexOf("wheel") >= 0 && _addListener(target, "wheel", _onWheel, preventDefault, capture);
          if (type.indexOf("touch") >= 0 && _isTouch || type.indexOf("pointer") >= 0) {
            _addListener(target, _eventTypes[0], _onPress, preventDefault, capture);
            _addListener(ownerDoc, _eventTypes[2], _onRelease);
            _addListener(ownerDoc, _eventTypes[3], _onRelease);
            allowClicks && _addListener(target, "click", clickCapture, false, true);
            onClick2 && _addListener(target, "click", _onClick);
            onGestureStart && _addListener(ownerDoc, "gesturestart", _onGestureStart);
            onGestureEnd && _addListener(ownerDoc, "gestureend", _onGestureEnd);
            onHover && _addListener(target, _pointerType + "enter", _onHover);
            onHoverEnd && _addListener(target, _pointerType + "leave", _onHoverEnd);
            onMove && _addListener(target, _pointerType + "move", _onMove);
          }
          self2.isEnabled = true;
          e3 && e3.type && _onPress(e3);
          onEnable && onEnable(self2);
        }
        return self2;
      };
      self2.disable = function() {
        if (self2.isEnabled) {
          _observers.filter(function(o2) {
            return o2 !== self2 && _isViewport(o2.target);
          }).length || _removeListener(isViewport ? ownerDoc : target, "scroll", _onScroll);
          if (self2.isPressed) {
            self2._vx.reset();
            self2._vy.reset();
            _removeListener(isNormalizer ? target : ownerDoc, _eventTypes[1], _onDrag, true);
          }
          _removeListener(isViewport ? ownerDoc : target, "scroll", onScroll2, capture);
          _removeListener(target, "wheel", _onWheel, capture);
          _removeListener(target, _eventTypes[0], _onPress, capture);
          _removeListener(ownerDoc, _eventTypes[2], _onRelease);
          _removeListener(ownerDoc, _eventTypes[3], _onRelease);
          _removeListener(target, "click", clickCapture, true);
          _removeListener(target, "click", _onClick);
          _removeListener(ownerDoc, "gesturestart", _onGestureStart);
          _removeListener(ownerDoc, "gestureend", _onGestureEnd);
          _removeListener(target, _pointerType + "enter", _onHover);
          _removeListener(target, _pointerType + "leave", _onHoverEnd);
          _removeListener(target, _pointerType + "move", _onMove);
          self2.isEnabled = self2.isPressed = self2.isDragging = false;
          onDisable && onDisable(self2);
        }
      };
      self2.kill = self2.revert = function() {
        self2.disable();
        var i2 = _observers.indexOf(self2);
        i2 >= 0 && _observers.splice(i2, 1);
        _normalizer === self2 && (_normalizer = 0);
      };
      _observers.push(self2);
      isNormalizer && _isViewport(target) && (_normalizer = self2);
      self2.enable(event2);
    };
    _createClass(Observer3, [{
      key: "velocityX",
      get: function get() {
        return this._vx.getVelocity();
      }
    }, {
      key: "velocityY",
      get: function get() {
        return this._vy.getVelocity();
      }
    }]);
    return Observer3;
  }();
  Observer.version = "3.12.2";
  Observer.create = function(vars) {
    return new Observer(vars);
  };
  Observer.register = _initCore3;
  Observer.getAll = function() {
    return _observers.slice();
  };
  Observer.getById = function(id) {
    return _observers.filter(function(o2) {
      return o2.vars.id === id;
    })[0];
  };
  _getGSAP() && gsap3.registerPlugin(Observer);

  // node_modules/.pnpm/gsap@3.12.2/node_modules/gsap/ScrollTrigger.js
  var gsap4;
  var _coreInitted3;
  var _win5;
  var _doc5;
  var _docEl2;
  var _body4;
  var _root2;
  var _resizeDelay;
  var _toArray2;
  var _clamp4;
  var _time2;
  var _syncInterval;
  var _refreshing;
  var _pointerIsDown;
  var _transformProp3;
  var _i;
  var _prevWidth;
  var _prevHeight;
  var _autoRefresh;
  var _sort;
  var _suppressOverwrites2;
  var _ignoreResize;
  var _normalizer2;
  var _ignoreMobileResize;
  var _baseScreenHeight;
  var _baseScreenWidth;
  var _fixIOSBug;
  var _context3;
  var _scrollRestoration;
  var _div100vh;
  var _100vh;
  var _limitCallbacks;
  var _startup2 = 1;
  var _getTime2 = Date.now;
  var _time1 = _getTime2();
  var _lastScrollTime = 0;
  var _enabled = 0;
  var _parseClamp = function _parseClamp2(value, type, self2) {
    var clamp3 = _isString3(value) && (value.substr(0, 6) === "clamp(" || value.indexOf("max") > -1);
    self2["_" + type + "Clamp"] = clamp3;
    return clamp3 ? value.substr(6, value.length - 7) : value;
  };
  var _keepClamp = function _keepClamp2(value, clamp3) {
    return clamp3 && (!_isString3(value) || value.substr(0, 6) !== "clamp(") ? "clamp(" + value + ")" : value;
  };
  var _rafBugFix = function _rafBugFix2() {
    return _enabled && requestAnimationFrame(_rafBugFix2);
  };
  var _pointerDownHandler = function _pointerDownHandler2() {
    return _pointerIsDown = 1;
  };
  var _pointerUpHandler = function _pointerUpHandler2() {
    return _pointerIsDown = 0;
  };
  var _passThrough3 = function _passThrough4(v) {
    return v;
  };
  var _round5 = function _round6(value) {
    return Math.round(value * 1e5) / 1e5 || 0;
  };
  var _windowExists5 = function _windowExists6() {
    return typeof window !== "undefined";
  };
  var _getGSAP3 = function _getGSAP4() {
    return gsap4 || _windowExists5() && (gsap4 = window.gsap) && gsap4.registerPlugin && gsap4;
  };
  var _isViewport3 = function _isViewport4(e3) {
    return !!~_root2.indexOf(e3);
  };
  var _getViewportDimension = function _getViewportDimension2(dimensionProperty) {
    return (dimensionProperty === "Height" ? _100vh : _win5["inner" + dimensionProperty]) || _docEl2["client" + dimensionProperty] || _body4["client" + dimensionProperty];
  };
  var _getBoundsFunc = function _getBoundsFunc2(element) {
    return _getProxyProp(element, "getBoundingClientRect") || (_isViewport3(element) ? function() {
      _winOffsets.width = _win5.innerWidth;
      _winOffsets.height = _100vh;
      return _winOffsets;
    } : function() {
      return _getBounds(element);
    });
  };
  var _getSizeFunc = function _getSizeFunc2(scroller, isViewport, _ref) {
    var d = _ref.d, d2 = _ref.d2, a = _ref.a;
    return (a = _getProxyProp(scroller, "getBoundingClientRect")) ? function() {
      return a()[d];
    } : function() {
      return (isViewport ? _getViewportDimension(d2) : scroller["client" + d2]) || 0;
    };
  };
  var _getOffsetsFunc = function _getOffsetsFunc2(element, isViewport) {
    return !isViewport || ~_proxies.indexOf(element) ? _getBoundsFunc(element) : function() {
      return _winOffsets;
    };
  };
  var _maxScroll = function _maxScroll2(element, _ref2) {
    var s2 = _ref2.s, d2 = _ref2.d2, d = _ref2.d, a = _ref2.a;
    return Math.max(0, (s2 = "scroll" + d2) && (a = _getProxyProp(element, s2)) ? a() - _getBoundsFunc(element)()[d] : _isViewport3(element) ? (_docEl2[s2] || _body4[s2]) - _getViewportDimension(d2) : element[s2] - element["offset" + d2]);
  };
  var _iterateAutoRefresh = function _iterateAutoRefresh2(func, events2) {
    for (var i2 = 0; i2 < _autoRefresh.length; i2 += 3) {
      (!events2 || ~events2.indexOf(_autoRefresh[i2 + 1])) && func(_autoRefresh[i2], _autoRefresh[i2 + 1], _autoRefresh[i2 + 2]);
    }
  };
  var _isString3 = function _isString4(value) {
    return typeof value === "string";
  };
  var _isFunction3 = function _isFunction4(value) {
    return typeof value === "function";
  };
  var _isNumber3 = function _isNumber4(value) {
    return typeof value === "number";
  };
  var _isObject3 = function _isObject4(value) {
    return typeof value === "object";
  };
  var _endAnimation = function _endAnimation2(animation, reversed, pause) {
    return animation && animation.progress(reversed ? 0 : 1) && pause && animation.pause();
  };
  var _callback3 = function _callback4(self2, func) {
    if (self2.enabled) {
      var result = func(self2);
      result && result.totalTime && (self2.callbackAnimation = result);
    }
  };
  var _abs = Math.abs;
  var _left = "left";
  var _top = "top";
  var _right = "right";
  var _bottom = "bottom";
  var _width = "width";
  var _height = "height";
  var _Right = "Right";
  var _Left = "Left";
  var _Top = "Top";
  var _Bottom = "Bottom";
  var _padding = "padding";
  var _margin = "margin";
  var _Width = "Width";
  var _Height = "Height";
  var _px = "px";
  var _getComputedStyle = function _getComputedStyle2(element) {
    return _win5.getComputedStyle(element);
  };
  var _makePositionable = function _makePositionable2(element) {
    var position = _getComputedStyle(element).position;
    element.style.position = position === "absolute" || position === "fixed" ? position : "relative";
  };
  var _setDefaults3 = function _setDefaults4(obj, defaults3) {
    for (var p in defaults3) {
      p in obj || (obj[p] = defaults3[p]);
    }
    return obj;
  };
  var _getBounds = function _getBounds2(element, withoutTransforms) {
    var tween = withoutTransforms && _getComputedStyle(element)[_transformProp3] !== "matrix(1, 0, 0, 1, 0, 0)" && gsap4.to(element, {
      x: 0,
      y: 0,
      xPercent: 0,
      yPercent: 0,
      rotation: 0,
      rotationX: 0,
      rotationY: 0,
      scale: 1,
      skewX: 0,
      skewY: 0
    }).progress(1), bounds = element.getBoundingClientRect();
    tween && tween.progress(0).kill();
    return bounds;
  };
  var _getSize = function _getSize2(element, _ref3) {
    var d2 = _ref3.d2;
    return element["offset" + d2] || element["client" + d2] || 0;
  };
  var _getLabelRatioArray = function _getLabelRatioArray2(timeline2) {
    var a = [], labels = timeline2.labels, duration = timeline2.duration(), p;
    for (p in labels) {
      a.push(labels[p] / duration);
    }
    return a;
  };
  var _getClosestLabel = function _getClosestLabel2(animation) {
    return function(value) {
      return gsap4.utils.snap(_getLabelRatioArray(animation), value);
    };
  };
  var _snapDirectional = function _snapDirectional2(snapIncrementOrArray) {
    var snap3 = gsap4.utils.snap(snapIncrementOrArray), a = Array.isArray(snapIncrementOrArray) && snapIncrementOrArray.slice(0).sort(function(a2, b) {
      return a2 - b;
    });
    return a ? function(value, direction, threshold) {
      if (threshold === void 0) {
        threshold = 1e-3;
      }
      var i2;
      if (!direction) {
        return snap3(value);
      }
      if (direction > 0) {
        value -= threshold;
        for (i2 = 0; i2 < a.length; i2++) {
          if (a[i2] >= value) {
            return a[i2];
          }
        }
        return a[i2 - 1];
      } else {
        i2 = a.length;
        value += threshold;
        while (i2--) {
          if (a[i2] <= value) {
            return a[i2];
          }
        }
      }
      return a[0];
    } : function(value, direction, threshold) {
      if (threshold === void 0) {
        threshold = 1e-3;
      }
      var snapped = snap3(value);
      return !direction || Math.abs(snapped - value) < threshold || snapped - value < 0 === direction < 0 ? snapped : snap3(direction < 0 ? value - snapIncrementOrArray : value + snapIncrementOrArray);
    };
  };
  var _getLabelAtDirection = function _getLabelAtDirection2(timeline2) {
    return function(value, st) {
      return _snapDirectional(_getLabelRatioArray(timeline2))(value, st.direction);
    };
  };
  var _multiListener = function _multiListener2(func, element, types, callback) {
    return types.split(",").forEach(function(type) {
      return func(element, type, callback);
    });
  };
  var _addListener3 = function _addListener4(element, type, func, nonPassive, capture) {
    return element.addEventListener(type, func, {
      passive: !nonPassive,
      capture: !!capture
    });
  };
  var _removeListener3 = function _removeListener4(element, type, func, capture) {
    return element.removeEventListener(type, func, !!capture);
  };
  var _wheelListener = function _wheelListener2(func, el, scrollFunc) {
    scrollFunc = scrollFunc && scrollFunc.wheelHandler;
    if (scrollFunc) {
      func(el, "wheel", scrollFunc);
      func(el, "touchmove", scrollFunc);
    }
  };
  var _markerDefaults = {
    startColor: "green",
    endColor: "red",
    indent: 0,
    fontSize: "16px",
    fontWeight: "normal"
  };
  var _defaults2 = {
    toggleActions: "play",
    anticipatePin: 0
  };
  var _keywords = {
    top: 0,
    left: 0,
    center: 0.5,
    bottom: 1,
    right: 1
  };
  var _offsetToPx = function _offsetToPx2(value, size) {
    if (_isString3(value)) {
      var eqIndex = value.indexOf("="), relative = ~eqIndex ? +(value.charAt(eqIndex - 1) + 1) * parseFloat(value.substr(eqIndex + 1)) : 0;
      if (~eqIndex) {
        value.indexOf("%") > eqIndex && (relative *= size / 100);
        value = value.substr(0, eqIndex - 1);
      }
      value = relative + (value in _keywords ? _keywords[value] * size : ~value.indexOf("%") ? parseFloat(value) * size / 100 : parseFloat(value) || 0);
    }
    return value;
  };
  var _createMarker = function _createMarker2(type, name, container, direction, _ref4, offset, matchWidthEl, containerAnimation) {
    var startColor = _ref4.startColor, endColor = _ref4.endColor, fontSize = _ref4.fontSize, indent = _ref4.indent, fontWeight = _ref4.fontWeight;
    var e3 = _doc5.createElement("div"), useFixedPosition = _isViewport3(container) || _getProxyProp(container, "pinType") === "fixed", isScroller = type.indexOf("scroller") !== -1, parent = useFixedPosition ? _body4 : container, isStart = type.indexOf("start") !== -1, color2 = isStart ? startColor : endColor, css = "border-color:" + color2 + ";font-size:" + fontSize + ";color:" + color2 + ";font-weight:" + fontWeight + ";pointer-events:none;white-space:nowrap;font-family:sans-serif,Arial;z-index:1000;padding:4px 8px;border-width:0;border-style:solid;";
    css += "position:" + ((isScroller || containerAnimation) && useFixedPosition ? "fixed;" : "absolute;");
    (isScroller || containerAnimation || !useFixedPosition) && (css += (direction === _vertical ? _right : _bottom) + ":" + (offset + parseFloat(indent)) + "px;");
    matchWidthEl && (css += "box-sizing:border-box;text-align:left;width:" + matchWidthEl.offsetWidth + "px;");
    e3._isStart = isStart;
    e3.setAttribute("class", "gsap-marker-" + type + (name ? " marker-" + name : ""));
    e3.style.cssText = css;
    e3.innerText = name || name === 0 ? type + "-" + name : type;
    parent.children[0] ? parent.insertBefore(e3, parent.children[0]) : parent.appendChild(e3);
    e3._offset = e3["offset" + direction.op.d2];
    _positionMarker(e3, 0, direction, isStart);
    return e3;
  };
  var _positionMarker = function _positionMarker2(marker, start, direction, flipped) {
    var vars = {
      display: "block"
    }, side = direction[flipped ? "os2" : "p2"], oppositeSide = direction[flipped ? "p2" : "os2"];
    marker._isFlipped = flipped;
    vars[direction.a + "Percent"] = flipped ? -100 : 0;
    vars[direction.a] = flipped ? "1px" : 0;
    vars["border" + side + _Width] = 1;
    vars["border" + oppositeSide + _Width] = 0;
    vars[direction.p] = start + "px";
    gsap4.set(marker, vars);
  };
  var _triggers = [];
  var _ids = {};
  var _rafID;
  var _sync = function _sync2() {
    return _getTime2() - _lastScrollTime > 34 && (_rafID || (_rafID = requestAnimationFrame(_updateAll)));
  };
  var _onScroll3 = function _onScroll4() {
    if (!_normalizer2 || !_normalizer2.isPressed || _normalizer2.startX > _body4.clientWidth) {
      _scrollers.cache++;
      if (_normalizer2) {
        _rafID || (_rafID = requestAnimationFrame(_updateAll));
      } else {
        _updateAll();
      }
      _lastScrollTime || _dispatch3("scrollStart");
      _lastScrollTime = _getTime2();
    }
  };
  var _setBaseDimensions = function _setBaseDimensions2() {
    _baseScreenWidth = _win5.innerWidth;
    _baseScreenHeight = _win5.innerHeight;
  };
  var _onResize = function _onResize2() {
    _scrollers.cache++;
    !_refreshing && !_ignoreResize && !_doc5.fullscreenElement && !_doc5.webkitFullscreenElement && (!_ignoreMobileResize || _baseScreenWidth !== _win5.innerWidth || Math.abs(_win5.innerHeight - _baseScreenHeight) > _win5.innerHeight * 0.25) && _resizeDelay.restart(true);
  };
  var _listeners2 = {};
  var _emptyArray2 = [];
  var _softRefresh = function _softRefresh2() {
    return _removeListener3(ScrollTrigger2, "scrollEnd", _softRefresh2) || _refreshAll(true);
  };
  var _dispatch3 = function _dispatch4(type) {
    return _listeners2[type] && _listeners2[type].map(function(f) {
      return f();
    }) || _emptyArray2;
  };
  var _savedStyles = [];
  var _revertRecorded = function _revertRecorded2(media) {
    for (var i2 = 0; i2 < _savedStyles.length; i2 += 5) {
      if (!media || _savedStyles[i2 + 4] && _savedStyles[i2 + 4].query === media) {
        _savedStyles[i2].style.cssText = _savedStyles[i2 + 1];
        _savedStyles[i2].getBBox && _savedStyles[i2].setAttribute("transform", _savedStyles[i2 + 2] || "");
        _savedStyles[i2 + 3].uncache = 1;
      }
    }
  };
  var _revertAll = function _revertAll2(kill, media) {
    var trigger;
    for (_i = 0; _i < _triggers.length; _i++) {
      trigger = _triggers[_i];
      if (trigger && (!media || trigger._ctx === media)) {
        if (kill) {
          trigger.kill(1);
        } else {
          trigger.revert(true, true);
        }
      }
    }
    media && _revertRecorded(media);
    media || _dispatch3("revert");
  };
  var _clearScrollMemory = function _clearScrollMemory2(scrollRestoration, force) {
    _scrollers.cache++;
    (force || !_refreshingAll) && _scrollers.forEach(function(obj) {
      return _isFunction3(obj) && obj.cacheID++ && (obj.rec = 0);
    });
    _isString3(scrollRestoration) && (_win5.history.scrollRestoration = _scrollRestoration = scrollRestoration);
  };
  var _refreshingAll;
  var _refreshID = 0;
  var _queueRefreshID;
  var _queueRefreshAll = function _queueRefreshAll2() {
    if (_queueRefreshID !== _refreshID) {
      var id = _queueRefreshID = _refreshID;
      requestAnimationFrame(function() {
        return id === _refreshID && _refreshAll(true);
      });
    }
  };
  var _refresh100vh = function _refresh100vh2() {
    _body4.appendChild(_div100vh);
    _100vh = _div100vh.offsetHeight || _win5.innerHeight;
    _body4.removeChild(_div100vh);
  };
  var _refreshAll = function _refreshAll2(force, skipRevert) {
    if (_lastScrollTime && !force) {
      _addListener3(ScrollTrigger2, "scrollEnd", _softRefresh);
      return;
    }
    _refresh100vh();
    _refreshingAll = ScrollTrigger2.isRefreshing = true;
    _scrollers.forEach(function(obj) {
      return _isFunction3(obj) && ++obj.cacheID && (obj.rec = obj());
    });
    var refreshInits = _dispatch3("refreshInit");
    _sort && ScrollTrigger2.sort();
    skipRevert || _revertAll();
    _scrollers.forEach(function(obj) {
      if (_isFunction3(obj)) {
        obj.smooth && (obj.target.style.scrollBehavior = "auto");
        obj(0);
      }
    });
    _triggers.slice(0).forEach(function(t2) {
      return t2.refresh();
    });
    _triggers.forEach(function(t2, i2) {
      if (t2._subPinOffset && t2.pin) {
        var prop = t2.vars.horizontal ? "offsetWidth" : "offsetHeight", original = t2.pin[prop];
        t2.revert(true, 1);
        t2.adjustPinSpacing(t2.pin[prop] - original);
        t2.refresh();
      }
    });
    _triggers.forEach(function(t2) {
      var max2 = _maxScroll(t2.scroller, t2._dir);
      (t2.vars.end === "max" || t2._endClamp && t2.end > max2) && t2.setPositions(t2.start, Math.max(t2.start + 1, max2), true);
    });
    refreshInits.forEach(function(result) {
      return result && result.render && result.render(-1);
    });
    _scrollers.forEach(function(obj) {
      if (_isFunction3(obj)) {
        obj.smooth && requestAnimationFrame(function() {
          return obj.target.style.scrollBehavior = "smooth";
        });
        obj.rec && obj(obj.rec);
      }
    });
    _clearScrollMemory(_scrollRestoration, 1);
    _resizeDelay.pause();
    _refreshID++;
    _refreshingAll = 2;
    _updateAll(2);
    _triggers.forEach(function(t2) {
      return _isFunction3(t2.vars.onRefresh) && t2.vars.onRefresh(t2);
    });
    _refreshingAll = ScrollTrigger2.isRefreshing = false;
    _dispatch3("refresh");
  };
  var _lastScroll = 0;
  var _direction = 1;
  var _primary;
  var _updateAll = function _updateAll2(force) {
    if (!_refreshingAll || force === 2) {
      ScrollTrigger2.isUpdating = true;
      _primary && _primary.update(0);
      var l = _triggers.length, time = _getTime2(), recordVelocity = time - _time1 >= 50, scroll = l && _triggers[0].scroll();
      _direction = _lastScroll > scroll ? -1 : 1;
      _refreshingAll || (_lastScroll = scroll);
      if (recordVelocity) {
        if (_lastScrollTime && !_pointerIsDown && time - _lastScrollTime > 200) {
          _lastScrollTime = 0;
          _dispatch3("scrollEnd");
        }
        _time2 = _time1;
        _time1 = time;
      }
      if (_direction < 0) {
        _i = l;
        while (_i-- > 0) {
          _triggers[_i] && _triggers[_i].update(0, recordVelocity);
        }
        _direction = 1;
      } else {
        for (_i = 0; _i < l; _i++) {
          _triggers[_i] && _triggers[_i].update(0, recordVelocity);
        }
      }
      ScrollTrigger2.isUpdating = false;
    }
    _rafID = 0;
  };
  var _propNamesToCopy = [_left, _top, _bottom, _right, _margin + _Bottom, _margin + _Right, _margin + _Top, _margin + _Left, "display", "flexShrink", "float", "zIndex", "gridColumnStart", "gridColumnEnd", "gridRowStart", "gridRowEnd", "gridArea", "justifySelf", "alignSelf", "placeSelf", "order"];
  var _stateProps = _propNamesToCopy.concat([_width, _height, "boxSizing", "max" + _Width, "max" + _Height, "position", _margin, _padding, _padding + _Top, _padding + _Right, _padding + _Bottom, _padding + _Left]);
  var _swapPinOut = function _swapPinOut2(pin, spacer, state) {
    _setState(state);
    var cache = pin._gsap;
    if (cache.spacerIsNative) {
      _setState(cache.spacerState);
    } else if (pin._gsap.swappedIn) {
      var parent = spacer.parentNode;
      if (parent) {
        parent.insertBefore(pin, spacer);
        parent.removeChild(spacer);
      }
    }
    pin._gsap.swappedIn = false;
  };
  var _swapPinIn = function _swapPinIn2(pin, spacer, cs, spacerState) {
    if (!pin._gsap.swappedIn) {
      var i2 = _propNamesToCopy.length, spacerStyle = spacer.style, pinStyle = pin.style, p;
      while (i2--) {
        p = _propNamesToCopy[i2];
        spacerStyle[p] = cs[p];
      }
      spacerStyle.position = cs.position === "absolute" ? "absolute" : "relative";
      cs.display === "inline" && (spacerStyle.display = "inline-block");
      pinStyle[_bottom] = pinStyle[_right] = "auto";
      spacerStyle.flexBasis = cs.flexBasis || "auto";
      spacerStyle.overflow = "visible";
      spacerStyle.boxSizing = "border-box";
      spacerStyle[_width] = _getSize(pin, _horizontal) + _px;
      spacerStyle[_height] = _getSize(pin, _vertical) + _px;
      spacerStyle[_padding] = pinStyle[_margin] = pinStyle[_top] = pinStyle[_left] = "0";
      _setState(spacerState);
      pinStyle[_width] = pinStyle["max" + _Width] = cs[_width];
      pinStyle[_height] = pinStyle["max" + _Height] = cs[_height];
      pinStyle[_padding] = cs[_padding];
      if (pin.parentNode !== spacer) {
        pin.parentNode.insertBefore(spacer, pin);
        spacer.appendChild(pin);
      }
      pin._gsap.swappedIn = true;
    }
  };
  var _capsExp2 = /([A-Z])/g;
  var _setState = function _setState2(state) {
    if (state) {
      var style = state.t.style, l = state.length, i2 = 0, p, value;
      (state.t._gsap || gsap4.core.getCache(state.t)).uncache = 1;
      for (; i2 < l; i2 += 2) {
        value = state[i2 + 1];
        p = state[i2];
        if (value) {
          style[p] = value;
        } else if (style[p]) {
          style.removeProperty(p.replace(_capsExp2, "-$1").toLowerCase());
        }
      }
    }
  };
  var _getState = function _getState2(element) {
    var l = _stateProps.length, style = element.style, state = [], i2 = 0;
    for (; i2 < l; i2++) {
      state.push(_stateProps[i2], style[_stateProps[i2]]);
    }
    state.t = element;
    return state;
  };
  var _copyState = function _copyState2(state, override, omitOffsets) {
    var result = [], l = state.length, i2 = omitOffsets ? 8 : 0, p;
    for (; i2 < l; i2 += 2) {
      p = state[i2];
      result.push(p, p in override ? override[p] : state[i2 + 1]);
    }
    result.t = state.t;
    return result;
  };
  var _winOffsets = {
    left: 0,
    top: 0
  };
  var _parsePosition3 = function _parsePosition4(value, trigger, scrollerSize, direction, scroll, marker, markerScroller, self2, scrollerBounds, borderWidth, useFixedPosition, scrollerMax, containerAnimation, clampZeroProp) {
    _isFunction3(value) && (value = value(self2));
    if (_isString3(value) && value.substr(0, 3) === "max") {
      value = scrollerMax + (value.charAt(4) === "=" ? _offsetToPx("0" + value.substr(3), scrollerSize) : 0);
    }
    var time = containerAnimation ? containerAnimation.time() : 0, p1, p2, element;
    containerAnimation && containerAnimation.seek(0);
    isNaN(value) || (value = +value);
    if (!_isNumber3(value)) {
      _isFunction3(trigger) && (trigger = trigger(self2));
      var offsets = (value || "0").split(" "), bounds, localOffset, globalOffset, display;
      element = _getTarget(trigger, self2) || _body4;
      bounds = _getBounds(element) || {};
      if ((!bounds || !bounds.left && !bounds.top) && _getComputedStyle(element).display === "none") {
        display = element.style.display;
        element.style.display = "block";
        bounds = _getBounds(element);
        display ? element.style.display = display : element.style.removeProperty("display");
      }
      localOffset = _offsetToPx(offsets[0], bounds[direction.d]);
      globalOffset = _offsetToPx(offsets[1] || "0", scrollerSize);
      value = bounds[direction.p] - scrollerBounds[direction.p] - borderWidth + localOffset + scroll - globalOffset;
      markerScroller && _positionMarker(markerScroller, globalOffset, direction, scrollerSize - globalOffset < 20 || markerScroller._isStart && globalOffset > 20);
      scrollerSize -= scrollerSize - globalOffset;
    } else {
      containerAnimation && (value = gsap4.utils.mapRange(containerAnimation.scrollTrigger.start, containerAnimation.scrollTrigger.end, 0, scrollerMax, value));
      markerScroller && _positionMarker(markerScroller, scrollerSize, direction, true);
    }
    if (clampZeroProp) {
      self2[clampZeroProp] = value || -1e-3;
      value < 0 && (value = 0);
    }
    if (marker) {
      var position = value + scrollerSize, isStart = marker._isStart;
      p1 = "scroll" + direction.d2;
      _positionMarker(marker, position, direction, isStart && position > 20 || !isStart && (useFixedPosition ? Math.max(_body4[p1], _docEl2[p1]) : marker.parentNode[p1]) <= position + 1);
      if (useFixedPosition) {
        scrollerBounds = _getBounds(markerScroller);
        useFixedPosition && (marker.style[direction.op.p] = scrollerBounds[direction.op.p] - direction.op.m - marker._offset + _px);
      }
    }
    if (containerAnimation && element) {
      p1 = _getBounds(element);
      containerAnimation.seek(scrollerMax);
      p2 = _getBounds(element);
      containerAnimation._caScrollDist = p1[direction.p] - p2[direction.p];
      value = value / containerAnimation._caScrollDist * scrollerMax;
    }
    containerAnimation && containerAnimation.seek(time);
    return containerAnimation ? value : Math.round(value);
  };
  var _prefixExp = /(webkit|moz|length|cssText|inset)/i;
  var _reparent = function _reparent2(element, parent, top, left) {
    if (element.parentNode !== parent) {
      var style = element.style, p, cs;
      if (parent === _body4) {
        element._stOrig = style.cssText;
        cs = _getComputedStyle(element);
        for (p in cs) {
          if (!+p && !_prefixExp.test(p) && cs[p] && typeof style[p] === "string" && p !== "0") {
            style[p] = cs[p];
          }
        }
        style.top = top;
        style.left = left;
      } else {
        style.cssText = element._stOrig;
      }
      gsap4.core.getCache(element).uncache = 1;
      parent.appendChild(element);
    }
  };
  var _interruptionTracker = function _interruptionTracker2(getValueFunc, initialValue, onInterrupt) {
    var last1 = initialValue, last2 = last1;
    return function(value) {
      var current = Math.round(getValueFunc());
      if (current !== last1 && current !== last2 && Math.abs(current - last1) > 3 && Math.abs(current - last2) > 3) {
        value = current;
        onInterrupt && onInterrupt();
      }
      last2 = last1;
      last1 = value;
      return value;
    };
  };
  var _shiftMarker = function _shiftMarker2(marker, direction, value) {
    var vars = {};
    vars[direction.p] = "+=" + value;
    gsap4.set(marker, vars);
  };
  var _getTweenCreator = function _getTweenCreator2(scroller, direction) {
    var getScroll = _getScrollFunc(scroller, direction), prop = "_scroll" + direction.p2, getTween = function getTween2(scrollTo, vars, initialValue, change1, change2) {
      var tween = getTween2.tween, onComplete = vars.onComplete, modifiers = {};
      initialValue = initialValue || getScroll();
      var checkForInterruption = _interruptionTracker(getScroll, initialValue, function() {
        tween.kill();
        getTween2.tween = 0;
      });
      change2 = change1 && change2 || 0;
      change1 = change1 || scrollTo - initialValue;
      tween && tween.kill();
      vars[prop] = scrollTo;
      vars.modifiers = modifiers;
      modifiers[prop] = function() {
        return checkForInterruption(initialValue + change1 * tween.ratio + change2 * tween.ratio * tween.ratio);
      };
      vars.onUpdate = function() {
        _scrollers.cache++;
        _updateAll();
      };
      vars.onComplete = function() {
        getTween2.tween = 0;
        onComplete && onComplete.call(tween);
      };
      tween = getTween2.tween = gsap4.to(scroller, vars);
      return tween;
    };
    scroller[prop] = getScroll;
    getScroll.wheelHandler = function() {
      return getTween.tween && getTween.tween.kill() && (getTween.tween = 0);
    };
    _addListener3(scroller, "wheel", getScroll.wheelHandler);
    ScrollTrigger2.isTouch && _addListener3(scroller, "touchmove", getScroll.wheelHandler);
    return getTween;
  };
  var ScrollTrigger2 = /* @__PURE__ */ function() {
    function ScrollTrigger3(vars, animation) {
      _coreInitted3 || ScrollTrigger3.register(gsap4) || console.warn("Please gsap.registerPlugin(ScrollTrigger)");
      _context3(this);
      this.init(vars, animation);
    }
    var _proto = ScrollTrigger3.prototype;
    _proto.init = function init4(vars, animation) {
      this.progress = this.start = 0;
      this.vars && this.kill(true, true);
      if (!_enabled) {
        this.update = this.refresh = this.kill = _passThrough3;
        return;
      }
      vars = _setDefaults3(_isString3(vars) || _isNumber3(vars) || vars.nodeType ? {
        trigger: vars
      } : vars, _defaults2);
      var _vars = vars, onUpdate = _vars.onUpdate, toggleClass = _vars.toggleClass, id = _vars.id, onToggle = _vars.onToggle, onRefresh = _vars.onRefresh, scrub = _vars.scrub, trigger = _vars.trigger, pin = _vars.pin, pinSpacing = _vars.pinSpacing, invalidateOnRefresh = _vars.invalidateOnRefresh, anticipatePin = _vars.anticipatePin, onScrubComplete = _vars.onScrubComplete, onSnapComplete = _vars.onSnapComplete, once = _vars.once, snap3 = _vars.snap, pinReparent = _vars.pinReparent, pinSpacer = _vars.pinSpacer, containerAnimation = _vars.containerAnimation, fastScrollEnd = _vars.fastScrollEnd, preventOverlaps = _vars.preventOverlaps, direction = vars.horizontal || vars.containerAnimation && vars.horizontal !== false ? _horizontal : _vertical, isToggle = !scrub && scrub !== 0, scroller = _getTarget(vars.scroller || _win5), scrollerCache = gsap4.core.getCache(scroller), isViewport = _isViewport3(scroller), useFixedPosition = ("pinType" in vars ? vars.pinType : _getProxyProp(scroller, "pinType") || isViewport && "fixed") === "fixed", callbacks = [vars.onEnter, vars.onLeave, vars.onEnterBack, vars.onLeaveBack], toggleActions = isToggle && vars.toggleActions.split(" "), markers = "markers" in vars ? vars.markers : _defaults2.markers, borderWidth = isViewport ? 0 : parseFloat(_getComputedStyle(scroller)["border" + direction.p2 + _Width]) || 0, self2 = this, onRefreshInit = vars.onRefreshInit && function() {
        return vars.onRefreshInit(self2);
      }, getScrollerSize = _getSizeFunc(scroller, isViewport, direction), getScrollerOffsets = _getOffsetsFunc(scroller, isViewport), lastSnap = 0, lastRefresh = 0, prevProgress = 0, scrollFunc = _getScrollFunc(scroller, direction), tweenTo, pinCache, snapFunc, scroll1, scroll2, start, end, markerStart, markerEnd, markerStartTrigger, markerEndTrigger, markerVars, executingOnRefresh, change, pinOriginalState, pinActiveState, pinState, spacer, offset, pinGetter, pinSetter, pinStart, pinChange, spacingStart, spacerState, markerStartSetter, pinMoves, markerEndSetter, cs, snap1, snap22, scrubTween, scrubSmooth, snapDurClamp, snapDelayedCall, prevScroll, prevAnimProgress, caMarkerSetter, customRevertReturn;
      self2._startClamp = self2._endClamp = false;
      self2._dir = direction;
      anticipatePin *= 45;
      self2.scroller = scroller;
      self2.scroll = containerAnimation ? containerAnimation.time.bind(containerAnimation) : scrollFunc;
      scroll1 = scrollFunc();
      self2.vars = vars;
      animation = animation || vars.animation;
      if ("refreshPriority" in vars) {
        _sort = 1;
        vars.refreshPriority === -9999 && (_primary = self2);
      }
      scrollerCache.tweenScroll = scrollerCache.tweenScroll || {
        top: _getTweenCreator(scroller, _vertical),
        left: _getTweenCreator(scroller, _horizontal)
      };
      self2.tweenTo = tweenTo = scrollerCache.tweenScroll[direction.p];
      self2.scrubDuration = function(value) {
        scrubSmooth = _isNumber3(value) && value;
        if (!scrubSmooth) {
          scrubTween && scrubTween.progress(1).kill();
          scrubTween = 0;
        } else {
          scrubTween ? scrubTween.duration(value) : scrubTween = gsap4.to(animation, {
            ease: "expo",
            totalProgress: "+=0",
            duration: scrubSmooth,
            paused: true,
            onComplete: function onComplete() {
              return onScrubComplete && onScrubComplete(self2);
            }
          });
        }
      };
      if (animation) {
        animation.vars.lazy = false;
        animation._initted && !self2.isReverted || animation.vars.immediateRender !== false && vars.immediateRender !== false && animation.duration() && animation.render(0, true, true);
        self2.animation = animation.pause();
        animation.scrollTrigger = self2;
        self2.scrubDuration(scrub);
        snap1 = 0;
        id || (id = animation.vars.id);
      }
      if (snap3) {
        if (!_isObject3(snap3) || snap3.push) {
          snap3 = {
            snapTo: snap3
          };
        }
        "scrollBehavior" in _body4.style && gsap4.set(isViewport ? [_body4, _docEl2] : scroller, {
          scrollBehavior: "auto"
        });
        _scrollers.forEach(function(o2) {
          return _isFunction3(o2) && o2.target === (isViewport ? _doc5.scrollingElement || _docEl2 : scroller) && (o2.smooth = false);
        });
        snapFunc = _isFunction3(snap3.snapTo) ? snap3.snapTo : snap3.snapTo === "labels" ? _getClosestLabel(animation) : snap3.snapTo === "labelsDirectional" ? _getLabelAtDirection(animation) : snap3.directional !== false ? function(value, st) {
          return _snapDirectional(snap3.snapTo)(value, _getTime2() - lastRefresh < 500 ? 0 : st.direction);
        } : gsap4.utils.snap(snap3.snapTo);
        snapDurClamp = snap3.duration || {
          min: 0.1,
          max: 2
        };
        snapDurClamp = _isObject3(snapDurClamp) ? _clamp4(snapDurClamp.min, snapDurClamp.max) : _clamp4(snapDurClamp, snapDurClamp);
        snapDelayedCall = gsap4.delayedCall(snap3.delay || scrubSmooth / 2 || 0.1, function() {
          var scroll = scrollFunc(), refreshedRecently = _getTime2() - lastRefresh < 500, tween = tweenTo.tween;
          if ((refreshedRecently || Math.abs(self2.getVelocity()) < 10) && !tween && !_pointerIsDown && lastSnap !== scroll) {
            var progress = (scroll - start) / change, totalProgress = animation && !isToggle ? animation.totalProgress() : progress, velocity = refreshedRecently ? 0 : (totalProgress - snap22) / (_getTime2() - _time2) * 1e3 || 0, change1 = gsap4.utils.clamp(-progress, 1 - progress, _abs(velocity / 2) * velocity / 0.185), naturalEnd = progress + (snap3.inertia === false ? 0 : change1), endValue = _clamp4(0, 1, snapFunc(naturalEnd, self2)), endScroll = Math.round(start + endValue * change), _snap = snap3, onStart = _snap.onStart, _onInterrupt = _snap.onInterrupt, _onComplete = _snap.onComplete;
            if (scroll <= end && scroll >= start && endScroll !== scroll) {
              if (tween && !tween._initted && tween.data <= _abs(endScroll - scroll)) {
                return;
              }
              if (snap3.inertia === false) {
                change1 = endValue - progress;
              }
              tweenTo(endScroll, {
                duration: snapDurClamp(_abs(Math.max(_abs(naturalEnd - totalProgress), _abs(endValue - totalProgress)) * 0.185 / velocity / 0.05 || 0)),
                ease: snap3.ease || "power3",
                data: _abs(endScroll - scroll),
                // record the distance so that if another snap tween occurs (conflict) we can prioritize the closest snap.
                onInterrupt: function onInterrupt() {
                  return snapDelayedCall.restart(true) && _onInterrupt && _onInterrupt(self2);
                },
                onComplete: function onComplete() {
                  self2.update();
                  lastSnap = scrollFunc();
                  snap1 = snap22 = animation && !isToggle ? animation.totalProgress() : self2.progress;
                  onSnapComplete && onSnapComplete(self2);
                  _onComplete && _onComplete(self2);
                }
              }, scroll, change1 * change, endScroll - scroll - change1 * change);
              onStart && onStart(self2, tweenTo.tween);
            }
          } else if (self2.isActive && lastSnap !== scroll) {
            snapDelayedCall.restart(true);
          }
        }).pause();
      }
      id && (_ids[id] = self2);
      trigger = self2.trigger = _getTarget(trigger || pin !== true && pin);
      customRevertReturn = trigger && trigger._gsap && trigger._gsap.stRevert;
      customRevertReturn && (customRevertReturn = customRevertReturn(self2));
      pin = pin === true ? trigger : _getTarget(pin);
      _isString3(toggleClass) && (toggleClass = {
        targets: trigger,
        className: toggleClass
      });
      if (pin) {
        pinSpacing === false || pinSpacing === _margin || (pinSpacing = !pinSpacing && pin.parentNode && pin.parentNode.style && _getComputedStyle(pin.parentNode).display === "flex" ? false : _padding);
        self2.pin = pin;
        pinCache = gsap4.core.getCache(pin);
        if (!pinCache.spacer) {
          if (pinSpacer) {
            pinSpacer = _getTarget(pinSpacer);
            pinSpacer && !pinSpacer.nodeType && (pinSpacer = pinSpacer.current || pinSpacer.nativeElement);
            pinCache.spacerIsNative = !!pinSpacer;
            pinSpacer && (pinCache.spacerState = _getState(pinSpacer));
          }
          pinCache.spacer = spacer = pinSpacer || _doc5.createElement("div");
          spacer.classList.add("pin-spacer");
          id && spacer.classList.add("pin-spacer-" + id);
          pinCache.pinState = pinOriginalState = _getState(pin);
        } else {
          pinOriginalState = pinCache.pinState;
        }
        vars.force3D !== false && gsap4.set(pin, {
          force3D: true
        });
        self2.spacer = spacer = pinCache.spacer;
        cs = _getComputedStyle(pin);
        spacingStart = cs[pinSpacing + direction.os2];
        pinGetter = gsap4.getProperty(pin);
        pinSetter = gsap4.quickSetter(pin, direction.a, _px);
        _swapPinIn(pin, spacer, cs);
        pinState = _getState(pin);
      }
      if (markers) {
        markerVars = _isObject3(markers) ? _setDefaults3(markers, _markerDefaults) : _markerDefaults;
        markerStartTrigger = _createMarker("scroller-start", id, scroller, direction, markerVars, 0);
        markerEndTrigger = _createMarker("scroller-end", id, scroller, direction, markerVars, 0, markerStartTrigger);
        offset = markerStartTrigger["offset" + direction.op.d2];
        var content = _getTarget(_getProxyProp(scroller, "content") || scroller);
        markerStart = this.markerStart = _createMarker("start", id, content, direction, markerVars, offset, 0, containerAnimation);
        markerEnd = this.markerEnd = _createMarker("end", id, content, direction, markerVars, offset, 0, containerAnimation);
        containerAnimation && (caMarkerSetter = gsap4.quickSetter([markerStart, markerEnd], direction.a, _px));
        if (!useFixedPosition && !(_proxies.length && _getProxyProp(scroller, "fixedMarkers") === true)) {
          _makePositionable(isViewport ? _body4 : scroller);
          gsap4.set([markerStartTrigger, markerEndTrigger], {
            force3D: true
          });
          markerStartSetter = gsap4.quickSetter(markerStartTrigger, direction.a, _px);
          markerEndSetter = gsap4.quickSetter(markerEndTrigger, direction.a, _px);
        }
      }
      if (containerAnimation) {
        var oldOnUpdate = containerAnimation.vars.onUpdate, oldParams = containerAnimation.vars.onUpdateParams;
        containerAnimation.eventCallback("onUpdate", function() {
          self2.update(0, 0, 1);
          oldOnUpdate && oldOnUpdate.apply(containerAnimation, oldParams || []);
        });
      }
      self2.previous = function() {
        return _triggers[_triggers.indexOf(self2) - 1];
      };
      self2.next = function() {
        return _triggers[_triggers.indexOf(self2) + 1];
      };
      self2.revert = function(revert, temp) {
        if (!temp) {
          return self2.kill(true);
        }
        var r2 = revert !== false || !self2.enabled, prevRefreshing = _refreshing;
        if (r2 !== self2.isReverted) {
          if (r2) {
            prevScroll = Math.max(scrollFunc(), self2.scroll.rec || 0);
            prevProgress = self2.progress;
            prevAnimProgress = animation && animation.progress();
          }
          markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function(m) {
            return m.style.display = r2 ? "none" : "block";
          });
          if (r2) {
            _refreshing = self2;
            self2.update(r2);
          }
          if (pin && (!pinReparent || !self2.isActive)) {
            if (r2) {
              _swapPinOut(pin, spacer, pinOriginalState);
            } else {
              _swapPinIn(pin, spacer, _getComputedStyle(pin), spacerState);
            }
          }
          r2 || self2.update(r2);
          _refreshing = prevRefreshing;
          self2.isReverted = r2;
        }
      };
      self2.refresh = function(soft, force, position, pinOffset) {
        if ((_refreshing || !self2.enabled) && !force) {
          return;
        }
        if (pin && soft && _lastScrollTime) {
          _addListener3(ScrollTrigger3, "scrollEnd", _softRefresh);
          return;
        }
        !_refreshingAll && onRefreshInit && onRefreshInit(self2);
        _refreshing = self2;
        if (tweenTo.tween && !position) {
          tweenTo.tween.kill();
          tweenTo.tween = 0;
        }
        scrubTween && scrubTween.pause();
        invalidateOnRefresh && animation && animation.revert({
          kill: false
        }).invalidate();
        self2.isReverted || self2.revert(true, true);
        self2._subPinOffset = false;
        var size = getScrollerSize(), scrollerBounds = getScrollerOffsets(), max2 = containerAnimation ? containerAnimation.duration() : _maxScroll(scroller, direction), isFirstRefresh = change <= 0.01, offset2 = 0, otherPinOffset = pinOffset || 0, parsedEnd = _isObject3(position) ? position.end : vars.end, parsedEndTrigger = vars.endTrigger || trigger, parsedStart = _isObject3(position) ? position.start : vars.start || (vars.start === 0 || !trigger ? 0 : pin ? "0 0" : "0 100%"), pinnedContainer = self2.pinnedContainer = vars.pinnedContainer && _getTarget(vars.pinnedContainer, self2), triggerIndex = trigger && Math.max(0, _triggers.indexOf(self2)) || 0, i2 = triggerIndex, cs2, bounds, scroll, isVertical, override, curTrigger, curPin, oppositeScroll, initted, revertedPins, forcedOverflow, markerStartOffset, markerEndOffset;
        if (markers && _isObject3(position)) {
          markerStartOffset = gsap4.getProperty(markerStartTrigger, direction.p);
          markerEndOffset = gsap4.getProperty(markerEndTrigger, direction.p);
        }
        while (i2--) {
          curTrigger = _triggers[i2];
          curTrigger.end || curTrigger.refresh(0, 1) || (_refreshing = self2);
          curPin = curTrigger.pin;
          if (curPin && (curPin === trigger || curPin === pin || curPin === pinnedContainer) && !curTrigger.isReverted) {
            revertedPins || (revertedPins = []);
            revertedPins.unshift(curTrigger);
            curTrigger.revert(true, true);
          }
          if (curTrigger !== _triggers[i2]) {
            triggerIndex--;
            i2--;
          }
        }
        _isFunction3(parsedStart) && (parsedStart = parsedStart(self2));
        parsedStart = _parseClamp(parsedStart, "start", self2);
        start = _parsePosition3(parsedStart, trigger, size, direction, scrollFunc(), markerStart, markerStartTrigger, self2, scrollerBounds, borderWidth, useFixedPosition, max2, containerAnimation, self2._startClamp && "_startClamp") || (pin ? -1e-3 : 0);
        _isFunction3(parsedEnd) && (parsedEnd = parsedEnd(self2));
        if (_isString3(parsedEnd) && !parsedEnd.indexOf("+=")) {
          if (~parsedEnd.indexOf(" ")) {
            parsedEnd = (_isString3(parsedStart) ? parsedStart.split(" ")[0] : "") + parsedEnd;
          } else {
            offset2 = _offsetToPx(parsedEnd.substr(2), size);
            parsedEnd = _isString3(parsedStart) ? parsedStart : (containerAnimation ? gsap4.utils.mapRange(0, containerAnimation.duration(), containerAnimation.scrollTrigger.start, containerAnimation.scrollTrigger.end, start) : start) + offset2;
            parsedEndTrigger = trigger;
          }
        }
        parsedEnd = _parseClamp(parsedEnd, "end", self2);
        end = Math.max(start, _parsePosition3(parsedEnd || (parsedEndTrigger ? "100% 0" : max2), parsedEndTrigger, size, direction, scrollFunc() + offset2, markerEnd, markerEndTrigger, self2, scrollerBounds, borderWidth, useFixedPosition, max2, containerAnimation, self2._endClamp && "_endClamp")) || -1e-3;
        offset2 = 0;
        i2 = triggerIndex;
        while (i2--) {
          curTrigger = _triggers[i2];
          curPin = curTrigger.pin;
          if (curPin && curTrigger.start - curTrigger._pinPush <= start && !containerAnimation && curTrigger.end > 0) {
            cs2 = curTrigger.end - (self2._startClamp ? Math.max(0, curTrigger.start) : curTrigger.start);
            if ((curPin === trigger && curTrigger.start - curTrigger._pinPush < start || curPin === pinnedContainer) && isNaN(parsedStart)) {
              offset2 += cs2 * (1 - curTrigger.progress);
            }
            curPin === pin && (otherPinOffset += cs2);
          }
        }
        start += offset2;
        end += offset2;
        self2._startClamp && (self2._startClamp += offset2);
        if (self2._endClamp && !_refreshingAll) {
          self2._endClamp = end || -1e-3;
          end = Math.min(end, _maxScroll(scroller, direction));
        }
        change = end - start || (start -= 0.01) && 1e-3;
        if (isFirstRefresh) {
          prevProgress = gsap4.utils.clamp(0, 1, gsap4.utils.normalize(start, end, prevScroll));
        }
        self2._pinPush = otherPinOffset;
        if (markerStart && offset2) {
          cs2 = {};
          cs2[direction.a] = "+=" + offset2;
          pinnedContainer && (cs2[direction.p] = "-=" + scrollFunc());
          gsap4.set([markerStart, markerEnd], cs2);
        }
        if (pin) {
          cs2 = _getComputedStyle(pin);
          isVertical = direction === _vertical;
          scroll = scrollFunc();
          pinStart = parseFloat(pinGetter(direction.a)) + otherPinOffset;
          if (!max2 && end > 1) {
            forcedOverflow = (isViewport ? _doc5.scrollingElement || _docEl2 : scroller).style;
            forcedOverflow = {
              style: forcedOverflow,
              value: forcedOverflow["overflow" + direction.a.toUpperCase()]
            };
            if (isViewport && _getComputedStyle(_body4)["overflow" + direction.a.toUpperCase()] !== "scroll") {
              forcedOverflow.style["overflow" + direction.a.toUpperCase()] = "scroll";
            }
          }
          _swapPinIn(pin, spacer, cs2);
          pinState = _getState(pin);
          bounds = _getBounds(pin, true);
          oppositeScroll = useFixedPosition && _getScrollFunc(scroller, isVertical ? _horizontal : _vertical)();
          if (pinSpacing) {
            spacerState = [pinSpacing + direction.os2, change + otherPinOffset + _px];
            spacerState.t = spacer;
            i2 = pinSpacing === _padding ? _getSize(pin, direction) + change + otherPinOffset : 0;
            i2 && spacerState.push(direction.d, i2 + _px);
            _setState(spacerState);
            if (pinnedContainer) {
              _triggers.forEach(function(t2) {
                if (t2.pin === pinnedContainer && t2.vars.pinSpacing !== false) {
                  t2._subPinOffset = true;
                }
              });
            }
            useFixedPosition && scrollFunc(prevScroll);
          }
          if (useFixedPosition) {
            override = {
              top: bounds.top + (isVertical ? scroll - start : oppositeScroll) + _px,
              left: bounds.left + (isVertical ? oppositeScroll : scroll - start) + _px,
              boxSizing: "border-box",
              position: "fixed"
            };
            override[_width] = override["max" + _Width] = Math.ceil(bounds.width) + _px;
            override[_height] = override["max" + _Height] = Math.ceil(bounds.height) + _px;
            override[_margin] = override[_margin + _Top] = override[_margin + _Right] = override[_margin + _Bottom] = override[_margin + _Left] = "0";
            override[_padding] = cs2[_padding];
            override[_padding + _Top] = cs2[_padding + _Top];
            override[_padding + _Right] = cs2[_padding + _Right];
            override[_padding + _Bottom] = cs2[_padding + _Bottom];
            override[_padding + _Left] = cs2[_padding + _Left];
            pinActiveState = _copyState(pinOriginalState, override, pinReparent);
            _refreshingAll && scrollFunc(0);
          }
          if (animation) {
            initted = animation._initted;
            _suppressOverwrites2(1);
            animation.render(animation.duration(), true, true);
            pinChange = pinGetter(direction.a) - pinStart + change + otherPinOffset;
            pinMoves = Math.abs(change - pinChange) > 1;
            useFixedPosition && pinMoves && pinActiveState.splice(pinActiveState.length - 2, 2);
            animation.render(0, true, true);
            initted || animation.invalidate(true);
            animation.parent || animation.totalTime(animation.totalTime());
            _suppressOverwrites2(0);
          } else {
            pinChange = change;
          }
          forcedOverflow && (forcedOverflow.value ? forcedOverflow.style["overflow" + direction.a.toUpperCase()] = forcedOverflow.value : forcedOverflow.style.removeProperty("overflow-" + direction.a));
        } else if (trigger && scrollFunc() && !containerAnimation) {
          bounds = trigger.parentNode;
          while (bounds && bounds !== _body4) {
            if (bounds._pinOffset) {
              start -= bounds._pinOffset;
              end -= bounds._pinOffset;
            }
            bounds = bounds.parentNode;
          }
        }
        revertedPins && revertedPins.forEach(function(t2) {
          return t2.revert(false, true);
        });
        self2.start = start;
        self2.end = end;
        scroll1 = scroll2 = _refreshingAll ? prevScroll : scrollFunc();
        if (!containerAnimation && !_refreshingAll) {
          scroll1 < prevScroll && scrollFunc(prevScroll);
          self2.scroll.rec = 0;
        }
        self2.revert(false, true);
        lastRefresh = _getTime2();
        if (snapDelayedCall) {
          lastSnap = -1;
          snapDelayedCall.restart(true);
        }
        _refreshing = 0;
        animation && isToggle && (animation._initted || prevAnimProgress) && animation.progress() !== prevAnimProgress && animation.progress(prevAnimProgress || 0, true).render(animation.time(), true, true);
        if (isFirstRefresh || prevProgress !== self2.progress || containerAnimation) {
          animation && !isToggle && animation.totalProgress(containerAnimation && start < -1e-3 && !prevProgress ? gsap4.utils.normalize(start, end, 0) : prevProgress, true);
          self2.progress = isFirstRefresh || (scroll1 - start) / change === prevProgress ? 0 : prevProgress;
        }
        pin && pinSpacing && (spacer._pinOffset = Math.round(self2.progress * pinChange));
        scrubTween && scrubTween.invalidate();
        if (!isNaN(markerStartOffset)) {
          markerStartOffset -= gsap4.getProperty(markerStartTrigger, direction.p);
          markerEndOffset -= gsap4.getProperty(markerEndTrigger, direction.p);
          _shiftMarker(markerStartTrigger, direction, markerStartOffset);
          _shiftMarker(markerStart, direction, markerStartOffset - (pinOffset || 0));
          _shiftMarker(markerEndTrigger, direction, markerEndOffset);
          _shiftMarker(markerEnd, direction, markerEndOffset - (pinOffset || 0));
        }
        isFirstRefresh && !_refreshingAll && self2.update();
        if (onRefresh && !_refreshingAll && !executingOnRefresh) {
          executingOnRefresh = true;
          onRefresh(self2);
          executingOnRefresh = false;
        }
      };
      self2.getVelocity = function() {
        return (scrollFunc() - scroll2) / (_getTime2() - _time2) * 1e3 || 0;
      };
      self2.endAnimation = function() {
        _endAnimation(self2.callbackAnimation);
        if (animation) {
          scrubTween ? scrubTween.progress(1) : !animation.paused() ? _endAnimation(animation, animation.reversed()) : isToggle || _endAnimation(animation, self2.direction < 0, 1);
        }
      };
      self2.labelToScroll = function(label) {
        return animation && animation.labels && (start || self2.refresh() || start) + animation.labels[label] / animation.duration() * change || 0;
      };
      self2.getTrailing = function(name) {
        var i2 = _triggers.indexOf(self2), a = self2.direction > 0 ? _triggers.slice(0, i2).reverse() : _triggers.slice(i2 + 1);
        return (_isString3(name) ? a.filter(function(t2) {
          return t2.vars.preventOverlaps === name;
        }) : a).filter(function(t2) {
          return self2.direction > 0 ? t2.end <= start : t2.start >= end;
        });
      };
      self2.update = function(reset, recordVelocity, forceFake) {
        if (containerAnimation && !forceFake && !reset) {
          return;
        }
        var scroll = _refreshingAll === true ? prevScroll : self2.scroll(), p = reset ? 0 : (scroll - start) / change, clipped = p < 0 ? 0 : p > 1 ? 1 : p || 0, prevProgress2 = self2.progress, isActive, wasActive, toggleState, action, stateChanged, toggled, isAtMax, isTakingAction;
        if (recordVelocity) {
          scroll2 = scroll1;
          scroll1 = containerAnimation ? scrollFunc() : scroll;
          if (snap3) {
            snap22 = snap1;
            snap1 = animation && !isToggle ? animation.totalProgress() : clipped;
          }
        }
        anticipatePin && !clipped && pin && !_refreshing && !_startup2 && _lastScrollTime && start < scroll + (scroll - scroll2) / (_getTime2() - _time2) * anticipatePin && (clipped = 1e-4);
        if (clipped !== prevProgress2 && self2.enabled) {
          isActive = self2.isActive = !!clipped && clipped < 1;
          wasActive = !!prevProgress2 && prevProgress2 < 1;
          toggled = isActive !== wasActive;
          stateChanged = toggled || !!clipped !== !!prevProgress2;
          self2.direction = clipped > prevProgress2 ? 1 : -1;
          self2.progress = clipped;
          if (stateChanged && !_refreshing) {
            toggleState = clipped && !prevProgress2 ? 0 : clipped === 1 ? 1 : prevProgress2 === 1 ? 2 : 3;
            if (isToggle) {
              action = !toggled && toggleActions[toggleState + 1] !== "none" && toggleActions[toggleState + 1] || toggleActions[toggleState];
              isTakingAction = animation && (action === "complete" || action === "reset" || action in animation);
            }
          }
          preventOverlaps && (toggled || isTakingAction) && (isTakingAction || scrub || !animation) && (_isFunction3(preventOverlaps) ? preventOverlaps(self2) : self2.getTrailing(preventOverlaps).forEach(function(t2) {
            return t2.endAnimation();
          }));
          if (!isToggle) {
            if (scrubTween && !_refreshing && !_startup2) {
              scrubTween._dp._time - scrubTween._start !== scrubTween._time && scrubTween.render(scrubTween._dp._time - scrubTween._start);
              if (scrubTween.resetTo) {
                scrubTween.resetTo("totalProgress", clipped, animation._tTime / animation._tDur);
              } else {
                scrubTween.vars.totalProgress = clipped;
                scrubTween.invalidate().restart();
              }
            } else if (animation) {
              animation.totalProgress(clipped, !!(_refreshing && (lastRefresh || reset)));
            }
          }
          if (pin) {
            reset && pinSpacing && (spacer.style[pinSpacing + direction.os2] = spacingStart);
            if (!useFixedPosition) {
              pinSetter(_round5(pinStart + pinChange * clipped));
            } else if (stateChanged) {
              isAtMax = !reset && clipped > prevProgress2 && end + 1 > scroll && scroll + 1 >= _maxScroll(scroller, direction);
              if (pinReparent) {
                if (!reset && (isActive || isAtMax)) {
                  var bounds = _getBounds(pin, true), _offset = scroll - start;
                  _reparent(pin, _body4, bounds.top + (direction === _vertical ? _offset : 0) + _px, bounds.left + (direction === _vertical ? 0 : _offset) + _px);
                } else {
                  _reparent(pin, spacer);
                }
              }
              _setState(isActive || isAtMax ? pinActiveState : pinState);
              pinMoves && clipped < 1 && isActive || pinSetter(pinStart + (clipped === 1 && !isAtMax ? pinChange : 0));
            }
          }
          snap3 && !tweenTo.tween && !_refreshing && !_startup2 && snapDelayedCall.restart(true);
          toggleClass && (toggled || once && clipped && (clipped < 1 || !_limitCallbacks)) && _toArray2(toggleClass.targets).forEach(function(el) {
            return el.classList[isActive || once ? "add" : "remove"](toggleClass.className);
          });
          onUpdate && !isToggle && !reset && onUpdate(self2);
          if (stateChanged && !_refreshing) {
            if (isToggle) {
              if (isTakingAction) {
                if (action === "complete") {
                  animation.pause().totalProgress(1);
                } else if (action === "reset") {
                  animation.restart(true).pause();
                } else if (action === "restart") {
                  animation.restart(true);
                } else {
                  animation[action]();
                }
              }
              onUpdate && onUpdate(self2);
            }
            if (toggled || !_limitCallbacks) {
              onToggle && toggled && _callback3(self2, onToggle);
              callbacks[toggleState] && _callback3(self2, callbacks[toggleState]);
              once && (clipped === 1 ? self2.kill(false, 1) : callbacks[toggleState] = 0);
              if (!toggled) {
                toggleState = clipped === 1 ? 1 : 3;
                callbacks[toggleState] && _callback3(self2, callbacks[toggleState]);
              }
            }
            if (fastScrollEnd && !isActive && Math.abs(self2.getVelocity()) > (_isNumber3(fastScrollEnd) ? fastScrollEnd : 2500)) {
              _endAnimation(self2.callbackAnimation);
              scrubTween ? scrubTween.progress(1) : _endAnimation(animation, action === "reverse" ? 1 : !clipped, 1);
            }
          } else if (isToggle && onUpdate && !_refreshing) {
            onUpdate(self2);
          }
        }
        if (markerEndSetter) {
          var n2 = containerAnimation ? scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0) : scroll;
          markerStartSetter(n2 + (markerStartTrigger._isFlipped ? 1 : 0));
          markerEndSetter(n2);
        }
        caMarkerSetter && caMarkerSetter(-scroll / containerAnimation.duration() * (containerAnimation._caScrollDist || 0));
      };
      self2.enable = function(reset, refresh) {
        if (!self2.enabled) {
          self2.enabled = true;
          _addListener3(scroller, "resize", _onResize);
          isViewport || _addListener3(scroller, "scroll", _onScroll3);
          onRefreshInit && _addListener3(ScrollTrigger3, "refreshInit", onRefreshInit);
          if (reset !== false) {
            self2.progress = prevProgress = 0;
            scroll1 = scroll2 = lastSnap = scrollFunc();
          }
          refresh !== false && self2.refresh();
        }
      };
      self2.getTween = function(snap4) {
        return snap4 && tweenTo ? tweenTo.tween : scrubTween;
      };
      self2.setPositions = function(newStart, newEnd, keepClamp, pinOffset) {
        if (containerAnimation) {
          var st = containerAnimation.scrollTrigger, duration = containerAnimation.duration(), _change = st.end - st.start;
          newStart = st.start + _change * newStart / duration;
          newEnd = st.start + _change * newEnd / duration;
        }
        self2.refresh(false, false, {
          start: _keepClamp(newStart, keepClamp && !!self2._startClamp),
          end: _keepClamp(newEnd, keepClamp && !!self2._endClamp)
        }, pinOffset);
        self2.update();
      };
      self2.adjustPinSpacing = function(amount) {
        if (spacerState && amount) {
          var i2 = spacerState.indexOf(direction.d) + 1;
          spacerState[i2] = parseFloat(spacerState[i2]) + amount + _px;
          spacerState[1] = parseFloat(spacerState[1]) + amount + _px;
          _setState(spacerState);
        }
      };
      self2.disable = function(reset, allowAnimation) {
        if (self2.enabled) {
          reset !== false && self2.revert(true, true);
          self2.enabled = self2.isActive = false;
          allowAnimation || scrubTween && scrubTween.pause();
          prevScroll = 0;
          pinCache && (pinCache.uncache = 1);
          onRefreshInit && _removeListener3(ScrollTrigger3, "refreshInit", onRefreshInit);
          if (snapDelayedCall) {
            snapDelayedCall.pause();
            tweenTo.tween && tweenTo.tween.kill() && (tweenTo.tween = 0);
          }
          if (!isViewport) {
            var i2 = _triggers.length;
            while (i2--) {
              if (_triggers[i2].scroller === scroller && _triggers[i2] !== self2) {
                return;
              }
            }
            _removeListener3(scroller, "resize", _onResize);
            isViewport || _removeListener3(scroller, "scroll", _onScroll3);
          }
        }
      };
      self2.kill = function(revert, allowAnimation) {
        self2.disable(revert, allowAnimation);
        scrubTween && !allowAnimation && scrubTween.kill();
        id && delete _ids[id];
        var i2 = _triggers.indexOf(self2);
        i2 >= 0 && _triggers.splice(i2, 1);
        i2 === _i && _direction > 0 && _i--;
        i2 = 0;
        _triggers.forEach(function(t2) {
          return t2.scroller === self2.scroller && (i2 = 1);
        });
        i2 || _refreshingAll || (self2.scroll.rec = 0);
        if (animation) {
          animation.scrollTrigger = null;
          revert && animation.revert({
            kill: false
          });
          allowAnimation || animation.kill();
        }
        markerStart && [markerStart, markerEnd, markerStartTrigger, markerEndTrigger].forEach(function(m) {
          return m.parentNode && m.parentNode.removeChild(m);
        });
        _primary === self2 && (_primary = 0);
        if (pin) {
          pinCache && (pinCache.uncache = 1);
          i2 = 0;
          _triggers.forEach(function(t2) {
            return t2.pin === pin && i2++;
          });
          i2 || (pinCache.spacer = 0);
        }
        vars.onKill && vars.onKill(self2);
      };
      _triggers.push(self2);
      self2.enable(false, false);
      customRevertReturn && customRevertReturn(self2);
      if (animation && animation.add && !change) {
        var updateFunc = self2.update;
        self2.update = function() {
          self2.update = updateFunc;
          start || end || self2.refresh();
        };
        gsap4.delayedCall(0.01, self2.update);
        change = 0.01;
        start = end = 0;
      } else {
        self2.refresh();
      }
      pin && _queueRefreshAll();
    };
    ScrollTrigger3.register = function register(core) {
      if (!_coreInitted3) {
        gsap4 = core || _getGSAP3();
        _windowExists5() && window.document && ScrollTrigger3.enable();
        _coreInitted3 = _enabled;
      }
      return _coreInitted3;
    };
    ScrollTrigger3.defaults = function defaults3(config3) {
      if (config3) {
        for (var p in config3) {
          _defaults2[p] = config3[p];
        }
      }
      return _defaults2;
    };
    ScrollTrigger3.disable = function disable(reset, kill) {
      _enabled = 0;
      _triggers.forEach(function(trigger) {
        return trigger[kill ? "kill" : "disable"](reset);
      });
      _removeListener3(_win5, "wheel", _onScroll3);
      _removeListener3(_doc5, "scroll", _onScroll3);
      clearInterval(_syncInterval);
      _removeListener3(_doc5, "touchcancel", _passThrough3);
      _removeListener3(_body4, "touchstart", _passThrough3);
      _multiListener(_removeListener3, _doc5, "pointerdown,touchstart,mousedown", _pointerDownHandler);
      _multiListener(_removeListener3, _doc5, "pointerup,touchend,mouseup", _pointerUpHandler);
      _resizeDelay.kill();
      _iterateAutoRefresh(_removeListener3);
      for (var i2 = 0; i2 < _scrollers.length; i2 += 3) {
        _wheelListener(_removeListener3, _scrollers[i2], _scrollers[i2 + 1]);
        _wheelListener(_removeListener3, _scrollers[i2], _scrollers[i2 + 2]);
      }
    };
    ScrollTrigger3.enable = function enable() {
      _win5 = window;
      _doc5 = document;
      _docEl2 = _doc5.documentElement;
      _body4 = _doc5.body;
      if (gsap4) {
        _toArray2 = gsap4.utils.toArray;
        _clamp4 = gsap4.utils.clamp;
        _context3 = gsap4.core.context || _passThrough3;
        _suppressOverwrites2 = gsap4.core.suppressOverwrites || _passThrough3;
        _scrollRestoration = _win5.history.scrollRestoration || "auto";
        _lastScroll = _win5.pageYOffset;
        gsap4.core.globals("ScrollTrigger", ScrollTrigger3);
        if (_body4) {
          _enabled = 1;
          _div100vh = document.createElement("div");
          _div100vh.style.height = "100vh";
          _div100vh.style.position = "absolute";
          _refresh100vh();
          _rafBugFix();
          Observer.register(gsap4);
          ScrollTrigger3.isTouch = Observer.isTouch;
          _fixIOSBug = Observer.isTouch && /(iPad|iPhone|iPod|Mac)/g.test(navigator.userAgent);
          _addListener3(_win5, "wheel", _onScroll3);
          _root2 = [_win5, _doc5, _docEl2, _body4];
          if (gsap4.matchMedia) {
            ScrollTrigger3.matchMedia = function(vars) {
              var mm = gsap4.matchMedia(), p;
              for (p in vars) {
                mm.add(p, vars[p]);
              }
              return mm;
            };
            gsap4.addEventListener("matchMediaInit", function() {
              return _revertAll();
            });
            gsap4.addEventListener("matchMediaRevert", function() {
              return _revertRecorded();
            });
            gsap4.addEventListener("matchMedia", function() {
              _refreshAll(0, 1);
              _dispatch3("matchMedia");
            });
            gsap4.matchMedia("(orientation: portrait)", function() {
              _setBaseDimensions();
              return _setBaseDimensions;
            });
          } else {
            console.warn("Requires GSAP 3.11.0 or later");
          }
          _setBaseDimensions();
          _addListener3(_doc5, "scroll", _onScroll3);
          var bodyStyle = _body4.style, border = bodyStyle.borderTopStyle, AnimationProto = gsap4.core.Animation.prototype, bounds, i2;
          AnimationProto.revert || Object.defineProperty(AnimationProto, "revert", {
            value: function value() {
              return this.time(-0.01, true);
            }
          });
          bodyStyle.borderTopStyle = "solid";
          bounds = _getBounds(_body4);
          _vertical.m = Math.round(bounds.top + _vertical.sc()) || 0;
          _horizontal.m = Math.round(bounds.left + _horizontal.sc()) || 0;
          border ? bodyStyle.borderTopStyle = border : bodyStyle.removeProperty("border-top-style");
          _syncInterval = setInterval(_sync, 250);
          gsap4.delayedCall(0.5, function() {
            return _startup2 = 0;
          });
          _addListener3(_doc5, "touchcancel", _passThrough3);
          _addListener3(_body4, "touchstart", _passThrough3);
          _multiListener(_addListener3, _doc5, "pointerdown,touchstart,mousedown", _pointerDownHandler);
          _multiListener(_addListener3, _doc5, "pointerup,touchend,mouseup", _pointerUpHandler);
          _transformProp3 = gsap4.utils.checkPrefix("transform");
          _stateProps.push(_transformProp3);
          _coreInitted3 = _getTime2();
          _resizeDelay = gsap4.delayedCall(0.2, _refreshAll).pause();
          _autoRefresh = [_doc5, "visibilitychange", function() {
            var w = _win5.innerWidth, h = _win5.innerHeight;
            if (_doc5.hidden) {
              _prevWidth = w;
              _prevHeight = h;
            } else if (_prevWidth !== w || _prevHeight !== h) {
              _onResize();
            }
          }, _doc5, "DOMContentLoaded", _refreshAll, _win5, "load", _refreshAll, _win5, "resize", _onResize];
          _iterateAutoRefresh(_addListener3);
          _triggers.forEach(function(trigger) {
            return trigger.enable(0, 1);
          });
          for (i2 = 0; i2 < _scrollers.length; i2 += 3) {
            _wheelListener(_removeListener3, _scrollers[i2], _scrollers[i2 + 1]);
            _wheelListener(_removeListener3, _scrollers[i2], _scrollers[i2 + 2]);
          }
        }
      }
    };
    ScrollTrigger3.config = function config3(vars) {
      "limitCallbacks" in vars && (_limitCallbacks = !!vars.limitCallbacks);
      var ms = vars.syncInterval;
      ms && clearInterval(_syncInterval) || (_syncInterval = ms) && setInterval(_sync, ms);
      "ignoreMobileResize" in vars && (_ignoreMobileResize = ScrollTrigger3.isTouch === 1 && vars.ignoreMobileResize);
      if ("autoRefreshEvents" in vars) {
        _iterateAutoRefresh(_removeListener3) || _iterateAutoRefresh(_addListener3, vars.autoRefreshEvents || "none");
        _ignoreResize = (vars.autoRefreshEvents + "").indexOf("resize") === -1;
      }
    };
    ScrollTrigger3.scrollerProxy = function scrollerProxy(target, vars) {
      var t2 = _getTarget(target), i2 = _scrollers.indexOf(t2), isViewport = _isViewport3(t2);
      if (~i2) {
        _scrollers.splice(i2, isViewport ? 6 : 2);
      }
      if (vars) {
        isViewport ? _proxies.unshift(_win5, vars, _body4, vars, _docEl2, vars) : _proxies.unshift(t2, vars);
      }
    };
    ScrollTrigger3.clearMatchMedia = function clearMatchMedia(query) {
      _triggers.forEach(function(t2) {
        return t2._ctx && t2._ctx.query === query && t2._ctx.kill(true, true);
      });
    };
    ScrollTrigger3.isInViewport = function isInViewport(element, ratio, horizontal) {
      var bounds = (_isString3(element) ? _getTarget(element) : element).getBoundingClientRect(), offset = bounds[horizontal ? _width : _height] * ratio || 0;
      return horizontal ? bounds.right - offset > 0 && bounds.left + offset < _win5.innerWidth : bounds.bottom - offset > 0 && bounds.top + offset < _win5.innerHeight;
    };
    ScrollTrigger3.positionInViewport = function positionInViewport(element, referencePoint, horizontal) {
      _isString3(element) && (element = _getTarget(element));
      var bounds = element.getBoundingClientRect(), size = bounds[horizontal ? _width : _height], offset = referencePoint == null ? size / 2 : referencePoint in _keywords ? _keywords[referencePoint] * size : ~referencePoint.indexOf("%") ? parseFloat(referencePoint) * size / 100 : parseFloat(referencePoint) || 0;
      return horizontal ? (bounds.left + offset) / _win5.innerWidth : (bounds.top + offset) / _win5.innerHeight;
    };
    ScrollTrigger3.killAll = function killAll(allowListeners) {
      _triggers.slice(0).forEach(function(t2) {
        return t2.vars.id !== "ScrollSmoother" && t2.kill();
      });
      if (allowListeners !== true) {
        var listeners = _listeners2.killAll || [];
        _listeners2 = {};
        listeners.forEach(function(f) {
          return f();
        });
      }
    };
    return ScrollTrigger3;
  }();
  ScrollTrigger2.version = "3.12.2";
  ScrollTrigger2.saveStyles = function(targets) {
    return targets ? _toArray2(targets).forEach(function(target) {
      if (target && target.style) {
        var i2 = _savedStyles.indexOf(target);
        i2 >= 0 && _savedStyles.splice(i2, 5);
        _savedStyles.push(target, target.style.cssText, target.getBBox && target.getAttribute("transform"), gsap4.core.getCache(target), _context3());
      }
    }) : _savedStyles;
  };
  ScrollTrigger2.revert = function(soft, media) {
    return _revertAll(!soft, media);
  };
  ScrollTrigger2.create = function(vars, animation) {
    return new ScrollTrigger2(vars, animation);
  };
  ScrollTrigger2.refresh = function(safe) {
    return safe ? _onResize() : (_coreInitted3 || ScrollTrigger2.register()) && _refreshAll(true);
  };
  ScrollTrigger2.update = function(force) {
    return ++_scrollers.cache && _updateAll(force === true ? 2 : 0);
  };
  ScrollTrigger2.clearScrollMemory = _clearScrollMemory;
  ScrollTrigger2.maxScroll = function(element, horizontal) {
    return _maxScroll(element, horizontal ? _horizontal : _vertical);
  };
  ScrollTrigger2.getScrollFunc = function(element, horizontal) {
    return _getScrollFunc(_getTarget(element), horizontal ? _horizontal : _vertical);
  };
  ScrollTrigger2.getById = function(id) {
    return _ids[id];
  };
  ScrollTrigger2.getAll = function() {
    return _triggers.filter(function(t2) {
      return t2.vars.id !== "ScrollSmoother";
    });
  };
  ScrollTrigger2.isScrolling = function() {
    return !!_lastScrollTime;
  };
  ScrollTrigger2.snapDirectional = _snapDirectional;
  ScrollTrigger2.addEventListener = function(type, callback) {
    var a = _listeners2[type] || (_listeners2[type] = []);
    ~a.indexOf(callback) || a.push(callback);
  };
  ScrollTrigger2.removeEventListener = function(type, callback) {
    var a = _listeners2[type], i2 = a && a.indexOf(callback);
    i2 >= 0 && a.splice(i2, 1);
  };
  ScrollTrigger2.batch = function(targets, vars) {
    var result = [], varsCopy = {}, interval = vars.interval || 0.016, batchMax = vars.batchMax || 1e9, proxyCallback = function proxyCallback2(type, callback) {
      var elements = [], triggers = [], delay = gsap4.delayedCall(interval, function() {
        callback(elements, triggers);
        elements = [];
        triggers = [];
      }).pause();
      return function(self2) {
        elements.length || delay.restart(true);
        elements.push(self2.trigger);
        triggers.push(self2);
        batchMax <= elements.length && delay.progress(1);
      };
    }, p;
    for (p in vars) {
      varsCopy[p] = p.substr(0, 2) === "on" && _isFunction3(vars[p]) && p !== "onRefreshInit" ? proxyCallback(p, vars[p]) : vars[p];
    }
    if (_isFunction3(batchMax)) {
      batchMax = batchMax();
      _addListener3(ScrollTrigger2, "refresh", function() {
        return batchMax = vars.batchMax();
      });
    }
    _toArray2(targets).forEach(function(target) {
      var config3 = {};
      for (p in varsCopy) {
        config3[p] = varsCopy[p];
      }
      config3.trigger = target;
      result.push(ScrollTrigger2.create(config3));
    });
    return result;
  };
  var _clampScrollAndGetDurationMultiplier = function _clampScrollAndGetDurationMultiplier2(scrollFunc, current, end, max2) {
    current > max2 ? scrollFunc(max2) : current < 0 && scrollFunc(0);
    return end > max2 ? (max2 - current) / (end - current) : end < 0 ? current / (current - end) : 1;
  };
  var _allowNativePanning = function _allowNativePanning2(target, direction) {
    if (direction === true) {
      target.style.removeProperty("touch-action");
    } else {
      target.style.touchAction = direction === true ? "auto" : direction ? "pan-" + direction + (Observer.isTouch ? " pinch-zoom" : "") : "none";
    }
    target === _docEl2 && _allowNativePanning2(_body4, direction);
  };
  var _overflow = {
    auto: 1,
    scroll: 1
  };
  var _nestedScroll = function _nestedScroll2(_ref5) {
    var event2 = _ref5.event, target = _ref5.target, axis = _ref5.axis;
    var node = (event2.changedTouches ? event2.changedTouches[0] : event2).target, cache = node._gsap || gsap4.core.getCache(node), time = _getTime2(), cs;
    if (!cache._isScrollT || time - cache._isScrollT > 2e3) {
      while (node && node !== _body4 && (node.scrollHeight <= node.clientHeight && node.scrollWidth <= node.clientWidth || !(_overflow[(cs = _getComputedStyle(node)).overflowY] || _overflow[cs.overflowX]))) {
        node = node.parentNode;
      }
      cache._isScroll = node && node !== target && !_isViewport3(node) && (_overflow[(cs = _getComputedStyle(node)).overflowY] || _overflow[cs.overflowX]);
      cache._isScrollT = time;
    }
    if (cache._isScroll || axis === "x") {
      event2.stopPropagation();
      event2._gsapAllow = true;
    }
  };
  var _inputObserver = function _inputObserver2(target, type, inputs, nested) {
    return Observer.create({
      target,
      capture: true,
      debounce: false,
      lockAxis: true,
      type,
      onWheel: nested = nested && _nestedScroll,
      onPress: nested,
      onDrag: nested,
      onScroll: nested,
      onEnable: function onEnable() {
        return inputs && _addListener3(_doc5, Observer.eventTypes[0], _captureInputs, false, true);
      },
      onDisable: function onDisable() {
        return _removeListener3(_doc5, Observer.eventTypes[0], _captureInputs, true);
      }
    });
  };
  var _inputExp = /(input|label|select|textarea)/i;
  var _inputIsFocused;
  var _captureInputs = function _captureInputs2(e3) {
    var isInput = _inputExp.test(e3.target.tagName);
    if (isInput || _inputIsFocused) {
      e3._gsapAllow = true;
      _inputIsFocused = isInput;
    }
  };
  var _getScrollNormalizer = function _getScrollNormalizer2(vars) {
    _isObject3(vars) || (vars = {});
    vars.preventDefault = vars.isNormalizer = vars.allowClicks = true;
    vars.type || (vars.type = "wheel,touch");
    vars.debounce = !!vars.debounce;
    vars.id = vars.id || "normalizer";
    var _vars2 = vars, normalizeScrollX = _vars2.normalizeScrollX, momentum = _vars2.momentum, allowNestedScroll = _vars2.allowNestedScroll, onRelease = _vars2.onRelease, self2, maxY, target = _getTarget(vars.target) || _docEl2, smoother = gsap4.core.globals().ScrollSmoother, smootherInstance = smoother && smoother.get(), content = _fixIOSBug && (vars.content && _getTarget(vars.content) || smootherInstance && vars.content !== false && !smootherInstance.smooth() && smootherInstance.content()), scrollFuncY = _getScrollFunc(target, _vertical), scrollFuncX = _getScrollFunc(target, _horizontal), scale = 1, initialScale = (Observer.isTouch && _win5.visualViewport ? _win5.visualViewport.scale * _win5.visualViewport.width : _win5.outerWidth) / _win5.innerWidth, wheelRefresh = 0, resolveMomentumDuration = _isFunction3(momentum) ? function() {
      return momentum(self2);
    } : function() {
      return momentum || 2.8;
    }, lastRefreshID, skipTouchMove, inputObserver = _inputObserver(target, vars.type, true, allowNestedScroll), resumeTouchMove = function resumeTouchMove2() {
      return skipTouchMove = false;
    }, scrollClampX = _passThrough3, scrollClampY = _passThrough3, updateClamps = function updateClamps2() {
      maxY = _maxScroll(target, _vertical);
      scrollClampY = _clamp4(_fixIOSBug ? 1 : 0, maxY);
      normalizeScrollX && (scrollClampX = _clamp4(0, _maxScroll(target, _horizontal)));
      lastRefreshID = _refreshID;
    }, removeContentOffset = function removeContentOffset2() {
      content._gsap.y = _round5(parseFloat(content._gsap.y) + scrollFuncY.offset) + "px";
      content.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + parseFloat(content._gsap.y) + ", 0, 1)";
      scrollFuncY.offset = scrollFuncY.cacheID = 0;
    }, ignoreDrag = function ignoreDrag2() {
      if (skipTouchMove) {
        requestAnimationFrame(resumeTouchMove);
        var offset = _round5(self2.deltaY / 2), scroll = scrollClampY(scrollFuncY.v - offset);
        if (content && scroll !== scrollFuncY.v + scrollFuncY.offset) {
          scrollFuncY.offset = scroll - scrollFuncY.v;
          var y = _round5((parseFloat(content && content._gsap.y) || 0) - scrollFuncY.offset);
          content.style.transform = "matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, " + y + ", 0, 1)";
          content._gsap.y = y + "px";
          scrollFuncY.cacheID = _scrollers.cache;
          _updateAll();
        }
        return true;
      }
      scrollFuncY.offset && removeContentOffset();
      skipTouchMove = true;
    }, tween, startScrollX, startScrollY, onStopDelayedCall, onResize2 = function onResize3() {
      updateClamps();
      if (tween.isActive() && tween.vars.scrollY > maxY) {
        scrollFuncY() > maxY ? tween.progress(1) && scrollFuncY(maxY) : tween.resetTo("scrollY", maxY);
      }
    };
    content && gsap4.set(content, {
      y: "+=0"
    });
    vars.ignoreCheck = function(e3) {
      return _fixIOSBug && e3.type === "touchmove" && ignoreDrag(e3) || scale > 1.05 && e3.type !== "touchstart" || self2.isGesturing || e3.touches && e3.touches.length > 1;
    };
    vars.onPress = function() {
      skipTouchMove = false;
      var prevScale = scale;
      scale = _round5((_win5.visualViewport && _win5.visualViewport.scale || 1) / initialScale);
      tween.pause();
      prevScale !== scale && _allowNativePanning(target, scale > 1.01 ? true : normalizeScrollX ? false : "x");
      startScrollX = scrollFuncX();
      startScrollY = scrollFuncY();
      updateClamps();
      lastRefreshID = _refreshID;
    };
    vars.onRelease = vars.onGestureStart = function(self3, wasDragging) {
      scrollFuncY.offset && removeContentOffset();
      if (!wasDragging) {
        onStopDelayedCall.restart(true);
      } else {
        _scrollers.cache++;
        var dur = resolveMomentumDuration(), currentScroll, endScroll;
        if (normalizeScrollX) {
          currentScroll = scrollFuncX();
          endScroll = currentScroll + dur * 0.05 * -self3.velocityX / 0.227;
          dur *= _clampScrollAndGetDurationMultiplier(scrollFuncX, currentScroll, endScroll, _maxScroll(target, _horizontal));
          tween.vars.scrollX = scrollClampX(endScroll);
        }
        currentScroll = scrollFuncY();
        endScroll = currentScroll + dur * 0.05 * -self3.velocityY / 0.227;
        dur *= _clampScrollAndGetDurationMultiplier(scrollFuncY, currentScroll, endScroll, _maxScroll(target, _vertical));
        tween.vars.scrollY = scrollClampY(endScroll);
        tween.invalidate().duration(dur).play(0.01);
        if (_fixIOSBug && tween.vars.scrollY >= maxY || currentScroll >= maxY - 1) {
          gsap4.to({}, {
            onUpdate: onResize2,
            duration: dur
          });
        }
      }
      onRelease && onRelease(self3);
    };
    vars.onWheel = function() {
      tween._ts && tween.pause();
      if (_getTime2() - wheelRefresh > 1e3) {
        lastRefreshID = 0;
        wheelRefresh = _getTime2();
      }
    };
    vars.onChange = function(self3, dx, dy, xArray, yArray) {
      _refreshID !== lastRefreshID && updateClamps();
      dx && normalizeScrollX && scrollFuncX(scrollClampX(xArray[2] === dx ? startScrollX + (self3.startX - self3.x) : scrollFuncX() + dx - xArray[1]));
      if (dy) {
        scrollFuncY.offset && removeContentOffset();
        var isTouch = yArray[2] === dy, y = isTouch ? startScrollY + self3.startY - self3.y : scrollFuncY() + dy - yArray[1], yClamped = scrollClampY(y);
        isTouch && y !== yClamped && (startScrollY += yClamped - y);
        scrollFuncY(yClamped);
      }
      (dy || dx) && _updateAll();
    };
    vars.onEnable = function() {
      _allowNativePanning(target, normalizeScrollX ? false : "x");
      ScrollTrigger2.addEventListener("refresh", onResize2);
      _addListener3(_win5, "resize", onResize2);
      if (scrollFuncY.smooth) {
        scrollFuncY.target.style.scrollBehavior = "auto";
        scrollFuncY.smooth = scrollFuncX.smooth = false;
      }
      inputObserver.enable();
    };
    vars.onDisable = function() {
      _allowNativePanning(target, true);
      _removeListener3(_win5, "resize", onResize2);
      ScrollTrigger2.removeEventListener("refresh", onResize2);
      inputObserver.kill();
    };
    vars.lockAxis = vars.lockAxis !== false;
    self2 = new Observer(vars);
    self2.iOS = _fixIOSBug;
    _fixIOSBug && !scrollFuncY() && scrollFuncY(1);
    _fixIOSBug && gsap4.ticker.add(_passThrough3);
    onStopDelayedCall = self2._dc;
    tween = gsap4.to(self2, {
      ease: "power4",
      paused: true,
      scrollX: normalizeScrollX ? "+=0.1" : "+=0",
      scrollY: "+=0.1",
      modifiers: {
        scrollY: _interruptionTracker(scrollFuncY, scrollFuncY(), function() {
          return tween.pause();
        })
      },
      onUpdate: _updateAll,
      onComplete: onStopDelayedCall.vars.onComplete
    });
    return self2;
  };
  ScrollTrigger2.sort = function(func) {
    return _triggers.sort(func || function(a, b) {
      return (a.vars.refreshPriority || 0) * -1e6 + a.start - (b.start + (b.vars.refreshPriority || 0) * -1e6);
    });
  };
  ScrollTrigger2.observe = function(vars) {
    return new Observer(vars);
  };
  ScrollTrigger2.normalizeScroll = function(vars) {
    if (typeof vars === "undefined") {
      return _normalizer2;
    }
    if (vars === true && _normalizer2) {
      return _normalizer2.enable();
    }
    if (vars === false) {
      return _normalizer2 && _normalizer2.kill();
    }
    var normalizer = vars instanceof Observer ? vars : _getScrollNormalizer(vars);
    _normalizer2 && _normalizer2.target === normalizer.target && _normalizer2.kill();
    _isViewport3(normalizer.target) && (_normalizer2 = normalizer);
    return normalizer;
  };
  ScrollTrigger2.core = {
    // smaller file size way to leverage in ScrollSmoother and Observer
    _getVelocityProp,
    _inputObserver,
    _scrollers,
    _proxies,
    bridge: {
      // when normalizeScroll sets the scroll position (ss = setScroll)
      ss: function ss() {
        _lastScrollTime || _dispatch3("scrollStart");
        _lastScrollTime = _getTime2();
      },
      // a way to get the _refreshing value in Observer
      ref: function ref() {
        return _refreshing;
      }
    }
  };
  _getGSAP3() && gsap4.registerPlugin(ScrollTrigger2);

  // src/index.ts
  var import_jquery5 = __toESM(require_jquery(), 1);

  // src/utils/components/bg-effect.js
  init_live_reload();
  var p5 = __toESM(require_p5_min(), 1);
  var addBgEffect = () => {
    const CELL_SIZE = 25;
    const COLOR_R = 226;
    const COLOR_G = 45;
    const COLOR_B = 54;
    const STARTING_ALPHA = 20;
    const BACKGROUND_COLOR = 240;
    const PROB_OF_NEIGHBOR = 0.4;
    const AMT_FADE_PER_FRAME = 5;
    let colorWithAlpha;
    let numRows;
    let numCols;
    let currentRow = -2;
    let currentCol = -2;
    let allNeighbors = [];
    function setup() {
      let cnv = createCanvas(windowWidth, windowHeight);
      cnv.style("position", "fixed");
      cnv.style("inset", 0);
      cnv.style("z-index", -1);
      cnv.style("opacity", 0.5);
      colorWithAlpha = color(COLOR_R, COLOR_G, COLOR_B, STARTING_ALPHA);
      noFill();
      stroke(colorWithAlpha);
      strokeWeight(1);
      numRows = Math.ceil(windowHeight / CELL_SIZE);
      numCols = Math.ceil(windowWidth / CELL_SIZE);
    }
    function draw() {
      background(color(BACKGROUND_COLOR, BACKGROUND_COLOR, BACKGROUND_COLOR));
      let row = floor(mouseY / CELL_SIZE);
      let col = floor(mouseX / CELL_SIZE);
      if (row !== currentRow || col !== currentCol) {
        currentRow = row;
        currentCol = col;
        allNeighbors.push(...getRandomNeighbors(row, col));
      }
      let x = col * CELL_SIZE;
      let y = row * CELL_SIZE;
      stroke(colorWithAlpha);
      rect(x, y, CELL_SIZE * 2, CELL_SIZE);
      for (let neighbor of allNeighbors) {
        let neighborX = neighbor.col * CELL_SIZE;
        let neighborY = neighbor.row * CELL_SIZE;
        neighbor.opacity = max(0, neighbor.opacity - AMT_FADE_PER_FRAME);
        stroke(COLOR_R, COLOR_G, COLOR_B, neighbor.opacity);
        rect(neighborX, neighborY, CELL_SIZE * 2, CELL_SIZE);
      }
      allNeighbors = allNeighbors.filter((neighbor) => neighbor.opacity > 0);
    }
    function getRandomNeighbors(row, col) {
      let neighbors = [];
      for (let dRow = -1; dRow <= 1; dRow++) {
        for (let dCol = -1; dCol <= 1; dCol++) {
          let neighborRow = row + dRow;
          let neighborCol = col + dCol;
          let isCurrentCell = dRow === 0 && dCol === 0;
          let isInBounds = neighborRow >= 0 && neighborRow < numRows && neighborCol >= 0 && neighborCol < numCols;
          if (!isCurrentCell && isInBounds && Math.random() < PROB_OF_NEIGHBOR) {
            neighbors.push({
              row: neighborRow,
              col: neighborCol,
              opacity: 200
              // Initial opacity of the neighbor
            });
          }
        }
      }
      return neighbors;
    }
    function windowResized() {
      resizeCanvas(windowWidth, windowHeight);
      numRows = Math.ceil(windowHeight / CELL_SIZE);
      numCols = Math.ceil(windowWidth / CELL_SIZE);
    }
  };

  // src/utils/components/image-hover.js
  init_live_reload();
  var addImgHoverEffect = () => {
    const addHoverEffect = (imgParent) => {
      const mm = gsapWithCSS.matchMedia();
      mm.add("(min-width:768px)", () => {
        gsapWithCSS.utils.toArray(imgParent).forEach((imgWrapper) => {
          const notchSize = "1.5vw";
          gsapWithCSS.defaults({ ease: "power4.easeinout", duration: 0.4 });
          const img = imgWrapper.querySelector("img");
          if (img) {
            const animation = gsapWithCSS.fromTo(
              img,
              { scale: 1.1, y: "0" },
              {
                scale: 1.2,
                y: "2%",
                paused: true,
                duration: 0.4
              }
            );
            img.addEventListener("mouseover", () => animation.play());
            img.addEventListener("mouseout", () => animation.reverse());
            const animation2 = gsapWithCSS.fromTo(
              imgWrapper,
              {
                clipPath: `clip-path: 
              polygon(
                0%0px,
                0px 0%,
                calc(100% - 0) 0%,
                100% 0px,
                100% calc(100% - 0px),
                calc(100% - 0px) 100%,
                0px 100%,
                0% calc(100% - 0px)
                )`
              },
              {
                paused: true,
                clipPath: `polygon(
                      0% ${notchSize},
                      ${notchSize} 0%,
                      calc(100% - ${notchSize}) 0%,
                      100% ${notchSize},
                      100% calc(100% - ${notchSize}),
                      calc(100% - ${notchSize}) 100%,
                      ${notchSize} 100%,
                      0% calc(100% - ${notchSize}))`
              }
            );
            imgWrapper.addEventListener("mouseover", () => animation2.play());
            imgWrapper.addEventListener("mouseout", () => animation2.reverse().duration(0.2));
          }
        });
      });
    };
    addHoverEffect(".slider-projects_img-height");
    addHoverEffect(".member_img-parent");
  };

  // src/utils/components/matter.js
  init_live_reload();
  var import_matter_js = __toESM(require_matter(), 1);
  var matterContact = () => {
    const initSimulation = () => {
      const matterContainer2 = document.querySelector(".tag-canvas");
      const THICCNESS = 60;
      var { Engine } = import_matter_js.default, { Render } = import_matter_js.default, { Runner } = import_matter_js.default, { Bodies } = import_matter_js.default, { Composite } = import_matter_js.default;
      var engine = Engine.create();
      var render3 = Render.create({
        element: matterContainer2,
        engine,
        options: {
          width: matterContainer2.clientWidth,
          height: matterContainer2.clientHeight,
          background: "transparent",
          wireframes: false,
          showAngleIndicator: false
        }
      });
      var block1 = Bodies.rectangle(matterContainer2.clientWidth / 2 - 59, 90, 214, 57, {
        render: {
          sprite: {
            texture: "https://uploads-ssl.webflow.com/640b9baf90971bf154eeb7ca/652d927714bfac3023f282b5_block-betrouwbaar.svg",
            xScale: 1,
            yScale: 1
          }
        }
      });
      var block2 = Bodies.rectangle(matterContainer2.clientWidth / 2 + 32, 146, 157, 58, {
        render: {
          sprite: {
            texture: "https://uploads-ssl.webflow.com/640b9baf90971bf154eeb7ca/652d9277b6164502aeda19ca_block-bouwen.svg",
            xScale: 1,
            yScale: 1
          }
        }
      });
      var block3 = Bodies.rectangle(matterContainer2.clientWidth / 2 - 3, 200, 252, 57, {
        render: {
          sprite: {
            texture: "https://uploads-ssl.webflow.com/640b9baf90971bf154eeb7ca/652d92773f05c2c1b3efb926_block-verunning.svg",
            xScale: 1,
            yScale: 1
          }
        }
      });
      var block4 = Bodies.rectangle(matterContainer2.clientWidth / 2 - 49, 25, 261, 57, {
        render: {
          sprite: {
            texture: "https://uploads-ssl.webflow.com/640b9baf90971bf154eeb7ca/652d9277ebe0705c54019e6f_block-toekomst_bouwen.svg",
            xScale: 1,
            yScale: 1
          }
        }
      });
      var block5 = Bodies.rectangle(matterContainer2.clientWidth / 2, 0, 160, 57, {
        render: {
          sprite: {
            texture: "https://uploads-ssl.webflow.com/640b9baf90971bf154eeb7ca/652d927725b0f751f589a215_block-flexibel.svg",
            xScale: 1,
            yScale: 1
          }
        }
      });
      var ground = Bodies.rectangle(
        matterContainer2.clientWidth / 2,
        matterContainer2.clientHeight + THICCNESS / 2,
        27184,
        THICCNESS,
        { isStatic: true }
      );
      let leftWall = Bodies.rectangle(
        0 - THICCNESS / 2,
        matterContainer2.clientHeight / 2,
        THICCNESS,
        matterContainer2.clientHeight * 5,
        {
          isStatic: true
        }
      );
      let rightWall = Bodies.rectangle(
        matterContainer2.clientWidth + THICCNESS / 2,
        matterContainer2.clientHeight / 2,
        THICCNESS,
        matterContainer2.clientHeight * 5,
        { isStatic: true }
      );
      Composite.add(engine.world, [ground, leftWall, rightWall]);
      let mouse = import_matter_js.default.Mouse.create(render3.canvas);
      let mouseConstraint = import_matter_js.default.MouseConstraint.create(engine, {
        mouse,
        constraint: {
          stiffness: 0.2,
          render: {
            visible: false
          }
        }
      });
      Composite.add(engine.world, mouseConstraint);
      Composite.add(engine.world, [block1, block2, block3, block4, block5]);
      mouseConstraint.mouse.element.removeEventListener(
        "mousewheel",
        mouseConstraint.mouse.mousewheel
      );
      mouseConstraint.mouse.element.removeEventListener(
        "DOMMouseScroll",
        mouseConstraint.mouse.mousewheel
      );
      Render.run(render3);
      var runner = Runner.create();
      Runner.run(runner, engine);
      function handleResize(matterContainer3) {
        render3.canvas.width = matterContainer3.clientWidth;
        render3.canvas.height = matterContainer3.clientHeight;
        import_matter_js.default.Body.setPosition(
          ground,
          import_matter_js.default.Vector.create(
            matterContainer3.clientWidth / 2,
            matterContainer3.clientHeight + THICCNESS / 2
          )
        );
        import_matter_js.default.Body.setPosition(
          rightWall,
          import_matter_js.default.Vector.create(
            matterContainer3.clientWidth + THICCNESS / 2,
            matterContainer3.clientHeight / 2
          )
        );
      }
      window.addEventListener("resize", () => handleResize(matterContainer2));
    };
    const matterContainer = document.querySelector(".tag-canvas");
    var observer = new IntersectionObserver(
      (entries, observer2) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            initSimulation();
            observer2.disconnect();
          }
        });
      },
      {
        rootMargin: "200px",
        threshold: 0.5
      }
    );
    matterContainer && observer.observe(matterContainer);
  };

  // src/utils/components/navigation.ts
  init_live_reload();
  var updateCurrentNavLink = (currentPageUrl, resetState) => {
    const mm = gsapWithCSS.matchMedia();
    const navLinks = document.querySelectorAll(".nav-link");
    const currentNavLink = document.querySelector(".nav-link.w--current");
    const currentLinkImg = document.querySelector(".nav-current_img");
    mm.add("(min-width: 768px)", () => {
      navLinks.forEach((link) => {
        link.classList.remove("w--current");
      });
      currentNavLink?.appendChild(currentLinkImg);
      navLinks.forEach((link) => {
        const nextNavLinkUrl = link.getAttribute("href");
        if (nextNavLinkUrl === currentPageUrl) {
          link.classList.add("w--current");
          const state = Flip.getState(currentLinkImg);
          const activeLink = document.querySelector(".nav-link.w--current");
          activeLink?.appendChild(currentLinkImg);
          Flip.from(state, {
            duration: 0.7,
            ease: "elastic.out(0.3, 0.2)"
          });
          link.appendChild(currentLinkImg);
        }
        link.addEventListener("click", (e3) => {
          navLinks.forEach((link2) => {
            link2.classList.remove("w--current");
          });
          e3.currentTarget.classList.add("w--current");
        });
        link.addEventListener("mouseenter", (e3) => {
          const state = Flip.getState(currentLinkImg);
          e3.currentTarget.appendChild(currentLinkImg);
          Flip.from(state, {
            duration: 1,
            ease: "elastic.out(0.3, 0.2)"
          });
        });
        link.addEventListener("mouseleave", (e3) => {
          const state = Flip.getState(currentLinkImg);
          const activeLink = document.querySelector(".nav-link.w--current");
          activeLink?.appendChild(currentLinkImg);
          Flip.from(state, {
            duration: 0.7,
            ease: "elastic.out(0.3, 0.2)"
          });
        });
      });
    });
  };

  // src/utils/components/projects-slider.js
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/swiper.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/swiper-core.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/ssr-window.esm.mjs
  init_live_reload();
  function isObject(obj) {
    return obj !== null && typeof obj === "object" && "constructor" in obj && obj.constructor === Object;
  }
  function extend(target, src) {
    if (target === void 0) {
      target = {};
    }
    if (src === void 0) {
      src = {};
    }
    Object.keys(src).forEach((key) => {
      if (typeof target[key] === "undefined")
        target[key] = src[key];
      else if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {
        extend(target[key], src[key]);
      }
    });
  }
  var ssrDocument = {
    body: {},
    addEventListener() {
    },
    removeEventListener() {
    },
    activeElement: {
      blur() {
      },
      nodeName: ""
    },
    querySelector() {
      return null;
    },
    querySelectorAll() {
      return [];
    },
    getElementById() {
      return null;
    },
    createEvent() {
      return {
        initEvent() {
        }
      };
    },
    createElement() {
      return {
        children: [],
        childNodes: [],
        style: {},
        setAttribute() {
        },
        getElementsByTagName() {
          return [];
        }
      };
    },
    createElementNS() {
      return {};
    },
    importNode() {
      return null;
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: ""
    }
  };
  function getDocument() {
    const doc = typeof document !== "undefined" ? document : {};
    extend(doc, ssrDocument);
    return doc;
  }
  var ssrWindow = {
    document: ssrDocument,
    navigator: {
      userAgent: ""
    },
    location: {
      hash: "",
      host: "",
      hostname: "",
      href: "",
      origin: "",
      pathname: "",
      protocol: "",
      search: ""
    },
    history: {
      replaceState() {
      },
      pushState() {
      },
      go() {
      },
      back() {
      }
    },
    CustomEvent: function CustomEvent() {
      return this;
    },
    addEventListener() {
    },
    removeEventListener() {
    },
    getComputedStyle() {
      return {
        getPropertyValue() {
          return "";
        }
      };
    },
    Image() {
    },
    Date() {
    },
    screen: {},
    setTimeout() {
    },
    clearTimeout() {
    },
    matchMedia() {
      return {};
    },
    requestAnimationFrame(callback) {
      if (typeof setTimeout === "undefined") {
        callback();
        return null;
      }
      return setTimeout(callback, 0);
    },
    cancelAnimationFrame(id) {
      if (typeof setTimeout === "undefined") {
        return;
      }
      clearTimeout(id);
    }
  };
  function getWindow() {
    const win = typeof window !== "undefined" ? window : {};
    extend(win, ssrWindow);
    return win;
  }

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/utils.mjs
  init_live_reload();
  function deleteProps(obj) {
    const object = obj;
    Object.keys(object).forEach((key) => {
      try {
        object[key] = null;
      } catch (e3) {
      }
      try {
        delete object[key];
      } catch (e3) {
      }
    });
  }
  function nextTick(callback, delay) {
    if (delay === void 0) {
      delay = 0;
    }
    return setTimeout(callback, delay);
  }
  function now() {
    return Date.now();
  }
  function getComputedStyle2(el) {
    const window2 = getWindow();
    let style;
    if (window2.getComputedStyle) {
      style = window2.getComputedStyle(el, null);
    }
    if (!style && el.currentStyle) {
      style = el.currentStyle;
    }
    if (!style) {
      style = el.style;
    }
    return style;
  }
  function getTranslate(el, axis) {
    if (axis === void 0) {
      axis = "x";
    }
    const window2 = getWindow();
    let matrix;
    let curTransform;
    let transformMatrix;
    const curStyle = getComputedStyle2(el);
    if (window2.WebKitCSSMatrix) {
      curTransform = curStyle.transform || curStyle.webkitTransform;
      if (curTransform.split(",").length > 6) {
        curTransform = curTransform.split(", ").map((a) => a.replace(",", ".")).join(", ");
      }
      transformMatrix = new window2.WebKitCSSMatrix(curTransform === "none" ? "" : curTransform);
    } else {
      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue("transform").replace("translate(", "matrix(1, 0, 0, 1,");
      matrix = transformMatrix.toString().split(",");
    }
    if (axis === "x") {
      if (window2.WebKitCSSMatrix)
        curTransform = transformMatrix.m41;
      else if (matrix.length === 16)
        curTransform = parseFloat(matrix[12]);
      else
        curTransform = parseFloat(matrix[4]);
    }
    if (axis === "y") {
      if (window2.WebKitCSSMatrix)
        curTransform = transformMatrix.m42;
      else if (matrix.length === 16)
        curTransform = parseFloat(matrix[13]);
      else
        curTransform = parseFloat(matrix[5]);
    }
    return curTransform || 0;
  }
  function isObject2(o2) {
    return typeof o2 === "object" && o2 !== null && o2.constructor && Object.prototype.toString.call(o2).slice(8, -1) === "Object";
  }
  function isNode(node) {
    if (typeof window !== "undefined" && typeof window.HTMLElement !== "undefined") {
      return node instanceof HTMLElement;
    }
    return node && (node.nodeType === 1 || node.nodeType === 11);
  }
  function extend2() {
    const to = Object(arguments.length <= 0 ? void 0 : arguments[0]);
    const noExtend = ["__proto__", "constructor", "prototype"];
    for (let i2 = 1; i2 < arguments.length; i2 += 1) {
      const nextSource = i2 < 0 || arguments.length <= i2 ? void 0 : arguments[i2];
      if (nextSource !== void 0 && nextSource !== null && !isNode(nextSource)) {
        const keysArray = Object.keys(Object(nextSource)).filter((key) => noExtend.indexOf(key) < 0);
        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
          const nextKey = keysArray[nextIndex];
          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
          if (desc !== void 0 && desc.enumerable) {
            if (isObject2(to[nextKey]) && isObject2(nextSource[nextKey])) {
              if (nextSource[nextKey].__swiper__) {
                to[nextKey] = nextSource[nextKey];
              } else {
                extend2(to[nextKey], nextSource[nextKey]);
              }
            } else if (!isObject2(to[nextKey]) && isObject2(nextSource[nextKey])) {
              to[nextKey] = {};
              if (nextSource[nextKey].__swiper__) {
                to[nextKey] = nextSource[nextKey];
              } else {
                extend2(to[nextKey], nextSource[nextKey]);
              }
            } else {
              to[nextKey] = nextSource[nextKey];
            }
          }
        }
      }
    }
    return to;
  }
  function setCSSProperty(el, varName, varValue) {
    el.style.setProperty(varName, varValue);
  }
  function animateCSSModeScroll(_ref) {
    let {
      swiper,
      targetPosition,
      side
    } = _ref;
    const window2 = getWindow();
    const startPosition = -swiper.translate;
    let startTime = null;
    let time;
    const duration = swiper.params.speed;
    swiper.wrapperEl.style.scrollSnapType = "none";
    window2.cancelAnimationFrame(swiper.cssModeFrameID);
    const dir = targetPosition > startPosition ? "next" : "prev";
    const isOutOfBound = (current, target) => {
      return dir === "next" && current >= target || dir === "prev" && current <= target;
    };
    const animate = () => {
      time = (/* @__PURE__ */ new Date()).getTime();
      if (startTime === null) {
        startTime = time;
      }
      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);
      const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;
      let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);
      if (isOutOfBound(currentPosition, targetPosition)) {
        currentPosition = targetPosition;
      }
      swiper.wrapperEl.scrollTo({
        [side]: currentPosition
      });
      if (isOutOfBound(currentPosition, targetPosition)) {
        swiper.wrapperEl.style.overflow = "hidden";
        swiper.wrapperEl.style.scrollSnapType = "";
        setTimeout(() => {
          swiper.wrapperEl.style.overflow = "";
          swiper.wrapperEl.scrollTo({
            [side]: currentPosition
          });
        });
        window2.cancelAnimationFrame(swiper.cssModeFrameID);
        return;
      }
      swiper.cssModeFrameID = window2.requestAnimationFrame(animate);
    };
    animate();
  }
  function elementChildren(element, selector3) {
    if (selector3 === void 0) {
      selector3 = "";
    }
    return [...element.children].filter((el) => el.matches(selector3));
  }
  function createElement(tag, classes2) {
    if (classes2 === void 0) {
      classes2 = [];
    }
    const el = document.createElement(tag);
    el.classList.add(...Array.isArray(classes2) ? classes2 : [classes2]);
    return el;
  }
  function elementPrevAll(el, selector3) {
    const prevEls = [];
    while (el.previousElementSibling) {
      const prev = el.previousElementSibling;
      if (selector3) {
        if (prev.matches(selector3))
          prevEls.push(prev);
      } else
        prevEls.push(prev);
      el = prev;
    }
    return prevEls;
  }
  function elementNextAll(el, selector3) {
    const nextEls = [];
    while (el.nextElementSibling) {
      const next = el.nextElementSibling;
      if (selector3) {
        if (next.matches(selector3))
          nextEls.push(next);
      } else
        nextEls.push(next);
      el = next;
    }
    return nextEls;
  }
  function elementStyle(el, prop) {
    const window2 = getWindow();
    return window2.getComputedStyle(el, null).getPropertyValue(prop);
  }
  function elementIndex(el) {
    let child = el;
    let i2;
    if (child) {
      i2 = 0;
      while ((child = child.previousSibling) !== null) {
        if (child.nodeType === 1)
          i2 += 1;
      }
      return i2;
    }
    return void 0;
  }
  function elementParents(el, selector3) {
    const parents = [];
    let parent = el.parentElement;
    while (parent) {
      if (selector3) {
        if (parent.matches(selector3))
          parents.push(parent);
      } else {
        parents.push(parent);
      }
      parent = parent.parentElement;
    }
    return parents;
  }
  function elementOuterSize(el, size, includeMargins) {
    const window2 = getWindow();
    if (includeMargins) {
      return el[size === "width" ? "offsetWidth" : "offsetHeight"] + parseFloat(window2.getComputedStyle(el, null).getPropertyValue(size === "width" ? "margin-right" : "margin-top")) + parseFloat(window2.getComputedStyle(el, null).getPropertyValue(size === "width" ? "margin-left" : "margin-bottom"));
    }
    return el.offsetWidth;
  }

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/swiper-core.mjs
  var support;
  function calcSupport() {
    const window2 = getWindow();
    const document2 = getDocument();
    return {
      smoothScroll: document2.documentElement && document2.documentElement.style && "scrollBehavior" in document2.documentElement.style,
      touch: !!("ontouchstart" in window2 || window2.DocumentTouch && document2 instanceof window2.DocumentTouch)
    };
  }
  function getSupport() {
    if (!support) {
      support = calcSupport();
    }
    return support;
  }
  var deviceCached;
  function calcDevice(_temp) {
    let {
      userAgent
    } = _temp === void 0 ? {} : _temp;
    const support2 = getSupport();
    const window2 = getWindow();
    const platform = window2.navigator.platform;
    const ua = userAgent || window2.navigator.userAgent;
    const device = {
      ios: false,
      android: false
    };
    const screenWidth = window2.screen.width;
    const screenHeight = window2.screen.height;
    const android = ua.match(/(Android);?[\s\/]+([\d.]+)?/);
    let ipad = ua.match(/(iPad).*OS\s([\d_]+)/);
    const ipod = ua.match(/(iPod)(.*OS\s([\d_]+))?/);
    const iphone = !ipad && ua.match(/(iPhone\sOS|iOS)\s([\d_]+)/);
    const windows = platform === "Win32";
    let macos = platform === "MacIntel";
    const iPadScreens = ["1024x1366", "1366x1024", "834x1194", "1194x834", "834x1112", "1112x834", "768x1024", "1024x768", "820x1180", "1180x820", "810x1080", "1080x810"];
    if (!ipad && macos && support2.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {
      ipad = ua.match(/(Version)\/([\d.]+)/);
      if (!ipad)
        ipad = [0, 1, "13_0_0"];
      macos = false;
    }
    if (android && !windows) {
      device.os = "android";
      device.android = true;
    }
    if (ipad || iphone || ipod) {
      device.os = "ios";
      device.ios = true;
    }
    return device;
  }
  function getDevice(overrides) {
    if (overrides === void 0) {
      overrides = {};
    }
    if (!deviceCached) {
      deviceCached = calcDevice(overrides);
    }
    return deviceCached;
  }
  var browser;
  function calcBrowser() {
    const window2 = getWindow();
    let needPerspectiveFix = false;
    function isSafari() {
      const ua = window2.navigator.userAgent.toLowerCase();
      return ua.indexOf("safari") >= 0 && ua.indexOf("chrome") < 0 && ua.indexOf("android") < 0;
    }
    if (isSafari()) {
      const ua = String(window2.navigator.userAgent);
      if (ua.includes("Version/")) {
        const [major, minor] = ua.split("Version/")[1].split(" ")[0].split(".").map((num) => Number(num));
        needPerspectiveFix = major < 16 || major === 16 && minor < 2;
      }
    }
    return {
      isSafari: needPerspectiveFix || isSafari(),
      needPerspectiveFix,
      isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window2.navigator.userAgent)
    };
  }
  function getBrowser() {
    if (!browser) {
      browser = calcBrowser();
    }
    return browser;
  }
  function Resize(_ref) {
    let {
      swiper,
      on,
      emit
    } = _ref;
    const window2 = getWindow();
    let observer = null;
    let animationFrame = null;
    const resizeHandler = () => {
      if (!swiper || swiper.destroyed || !swiper.initialized)
        return;
      emit("beforeResize");
      emit("resize");
    };
    const createObserver = () => {
      if (!swiper || swiper.destroyed || !swiper.initialized)
        return;
      observer = new ResizeObserver((entries) => {
        animationFrame = window2.requestAnimationFrame(() => {
          const {
            width: width2,
            height: height2
          } = swiper;
          let newWidth = width2;
          let newHeight = height2;
          entries.forEach((_ref2) => {
            let {
              contentBoxSize,
              contentRect,
              target
            } = _ref2;
            if (target && target !== swiper.el)
              return;
            newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;
            newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;
          });
          if (newWidth !== width2 || newHeight !== height2) {
            resizeHandler();
          }
        });
      });
      observer.observe(swiper.el);
    };
    const removeObserver = () => {
      if (animationFrame) {
        window2.cancelAnimationFrame(animationFrame);
      }
      if (observer && observer.unobserve && swiper.el) {
        observer.unobserve(swiper.el);
        observer = null;
      }
    };
    const orientationChangeHandler = () => {
      if (!swiper || swiper.destroyed || !swiper.initialized)
        return;
      emit("orientationchange");
    };
    on("init", () => {
      if (swiper.params.resizeObserver && typeof window2.ResizeObserver !== "undefined") {
        createObserver();
        return;
      }
      window2.addEventListener("resize", resizeHandler);
      window2.addEventListener("orientationchange", orientationChangeHandler);
    });
    on("destroy", () => {
      removeObserver();
      window2.removeEventListener("resize", resizeHandler);
      window2.removeEventListener("orientationchange", orientationChangeHandler);
    });
  }
  function Observer2(_ref) {
    let {
      swiper,
      extendParams,
      on,
      emit
    } = _ref;
    const observers = [];
    const window2 = getWindow();
    const attach = function(target, options) {
      if (options === void 0) {
        options = {};
      }
      const ObserverFunc = window2.MutationObserver || window2.WebkitMutationObserver;
      const observer = new ObserverFunc((mutations) => {
        if (swiper.__preventObserver__)
          return;
        if (mutations.length === 1) {
          emit("observerUpdate", mutations[0]);
          return;
        }
        const observerUpdate = function observerUpdate2() {
          emit("observerUpdate", mutations[0]);
        };
        if (window2.requestAnimationFrame) {
          window2.requestAnimationFrame(observerUpdate);
        } else {
          window2.setTimeout(observerUpdate, 0);
        }
      });
      observer.observe(target, {
        attributes: typeof options.attributes === "undefined" ? true : options.attributes,
        childList: typeof options.childList === "undefined" ? true : options.childList,
        characterData: typeof options.characterData === "undefined" ? true : options.characterData
      });
      observers.push(observer);
    };
    const init4 = () => {
      if (!swiper.params.observer)
        return;
      if (swiper.params.observeParents) {
        const containerParents = elementParents(swiper.hostEl);
        for (let i2 = 0; i2 < containerParents.length; i2 += 1) {
          attach(containerParents[i2]);
        }
      }
      attach(swiper.hostEl, {
        childList: swiper.params.observeSlideChildren
      });
      attach(swiper.wrapperEl, {
        attributes: false
      });
    };
    const destroy = () => {
      observers.forEach((observer) => {
        observer.disconnect();
      });
      observers.splice(0, observers.length);
    };
    extendParams({
      observer: false,
      observeParents: false,
      observeSlideChildren: false
    });
    on("init", init4);
    on("destroy", destroy);
  }
  var eventsEmitter = {
    on(events2, handler, priority) {
      const self2 = this;
      if (!self2.eventsListeners || self2.destroyed)
        return self2;
      if (typeof handler !== "function")
        return self2;
      const method = priority ? "unshift" : "push";
      events2.split(" ").forEach((event2) => {
        if (!self2.eventsListeners[event2])
          self2.eventsListeners[event2] = [];
        self2.eventsListeners[event2][method](handler);
      });
      return self2;
    },
    once(events2, handler, priority) {
      const self2 = this;
      if (!self2.eventsListeners || self2.destroyed)
        return self2;
      if (typeof handler !== "function")
        return self2;
      function onceHandler() {
        self2.off(events2, onceHandler);
        if (onceHandler.__emitterProxy) {
          delete onceHandler.__emitterProxy;
        }
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        handler.apply(self2, args);
      }
      onceHandler.__emitterProxy = handler;
      return self2.on(events2, onceHandler, priority);
    },
    onAny(handler, priority) {
      const self2 = this;
      if (!self2.eventsListeners || self2.destroyed)
        return self2;
      if (typeof handler !== "function")
        return self2;
      const method = priority ? "unshift" : "push";
      if (self2.eventsAnyListeners.indexOf(handler) < 0) {
        self2.eventsAnyListeners[method](handler);
      }
      return self2;
    },
    offAny(handler) {
      const self2 = this;
      if (!self2.eventsListeners || self2.destroyed)
        return self2;
      if (!self2.eventsAnyListeners)
        return self2;
      const index = self2.eventsAnyListeners.indexOf(handler);
      if (index >= 0) {
        self2.eventsAnyListeners.splice(index, 1);
      }
      return self2;
    },
    off(events2, handler) {
      const self2 = this;
      if (!self2.eventsListeners || self2.destroyed)
        return self2;
      if (!self2.eventsListeners)
        return self2;
      events2.split(" ").forEach((event2) => {
        if (typeof handler === "undefined") {
          self2.eventsListeners[event2] = [];
        } else if (self2.eventsListeners[event2]) {
          self2.eventsListeners[event2].forEach((eventHandler, index) => {
            if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {
              self2.eventsListeners[event2].splice(index, 1);
            }
          });
        }
      });
      return self2;
    },
    emit() {
      const self2 = this;
      if (!self2.eventsListeners || self2.destroyed)
        return self2;
      if (!self2.eventsListeners)
        return self2;
      let events2;
      let data;
      let context3;
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      if (typeof args[0] === "string" || Array.isArray(args[0])) {
        events2 = args[0];
        data = args.slice(1, args.length);
        context3 = self2;
      } else {
        events2 = args[0].events;
        data = args[0].data;
        context3 = args[0].context || self2;
      }
      data.unshift(context3);
      const eventsArray = Array.isArray(events2) ? events2 : events2.split(" ");
      eventsArray.forEach((event2) => {
        if (self2.eventsAnyListeners && self2.eventsAnyListeners.length) {
          self2.eventsAnyListeners.forEach((eventHandler) => {
            eventHandler.apply(context3, [event2, ...data]);
          });
        }
        if (self2.eventsListeners && self2.eventsListeners[event2]) {
          self2.eventsListeners[event2].forEach((eventHandler) => {
            eventHandler.apply(context3, data);
          });
        }
      });
      return self2;
    }
  };
  function updateSize() {
    const swiper = this;
    let width2;
    let height2;
    const el = swiper.el;
    if (typeof swiper.params.width !== "undefined" && swiper.params.width !== null) {
      width2 = swiper.params.width;
    } else {
      width2 = el.clientWidth;
    }
    if (typeof swiper.params.height !== "undefined" && swiper.params.height !== null) {
      height2 = swiper.params.height;
    } else {
      height2 = el.clientHeight;
    }
    if (width2 === 0 && swiper.isHorizontal() || height2 === 0 && swiper.isVertical()) {
      return;
    }
    width2 = width2 - parseInt(elementStyle(el, "padding-left") || 0, 10) - parseInt(elementStyle(el, "padding-right") || 0, 10);
    height2 = height2 - parseInt(elementStyle(el, "padding-top") || 0, 10) - parseInt(elementStyle(el, "padding-bottom") || 0, 10);
    if (Number.isNaN(width2))
      width2 = 0;
    if (Number.isNaN(height2))
      height2 = 0;
    Object.assign(swiper, {
      width: width2,
      height: height2,
      size: swiper.isHorizontal() ? width2 : height2
    });
  }
  function updateSlides() {
    const swiper = this;
    function getDirectionLabel(property) {
      if (swiper.isHorizontal()) {
        return property;
      }
      return {
        "width": "height",
        "margin-top": "margin-left",
        "margin-bottom ": "margin-right",
        "margin-left": "margin-top",
        "margin-right": "margin-bottom",
        "padding-left": "padding-top",
        "padding-right": "padding-bottom",
        "marginRight": "marginBottom"
      }[property];
    }
    function getDirectionPropertyValue(node, label) {
      return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);
    }
    const params = swiper.params;
    const {
      wrapperEl,
      slidesEl,
      size: swiperSize,
      rtlTranslate: rtl,
      wrongRTL
    } = swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;
    const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);
    const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;
    let snapGrid = [];
    const slidesGrid = [];
    const slidesSizesGrid = [];
    let offsetBefore = params.slidesOffsetBefore;
    if (typeof offsetBefore === "function") {
      offsetBefore = params.slidesOffsetBefore.call(swiper);
    }
    let offsetAfter = params.slidesOffsetAfter;
    if (typeof offsetAfter === "function") {
      offsetAfter = params.slidesOffsetAfter.call(swiper);
    }
    const previousSnapGridLength = swiper.snapGrid.length;
    const previousSlidesGridLength = swiper.slidesGrid.length;
    let spaceBetween = params.spaceBetween;
    let slidePosition = -offsetBefore;
    let prevSlideSize = 0;
    let index = 0;
    if (typeof swiperSize === "undefined") {
      return;
    }
    if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) {
      spaceBetween = parseFloat(spaceBetween.replace("%", "")) / 100 * swiperSize;
    } else if (typeof spaceBetween === "string") {
      spaceBetween = parseFloat(spaceBetween);
    }
    swiper.virtualSize = -spaceBetween;
    slides.forEach((slideEl) => {
      if (rtl) {
        slideEl.style.marginLeft = "";
      } else {
        slideEl.style.marginRight = "";
      }
      slideEl.style.marginBottom = "";
      slideEl.style.marginTop = "";
    });
    if (params.centeredSlides && params.cssMode) {
      setCSSProperty(wrapperEl, "--swiper-centered-offset-before", "");
      setCSSProperty(wrapperEl, "--swiper-centered-offset-after", "");
    }
    const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;
    if (gridEnabled) {
      swiper.grid.initSlides(slidesLength);
    }
    let slideSize;
    const shouldResetSlideSize = params.slidesPerView === "auto" && params.breakpoints && Object.keys(params.breakpoints).filter((key) => {
      return typeof params.breakpoints[key].slidesPerView !== "undefined";
    }).length > 0;
    for (let i2 = 0; i2 < slidesLength; i2 += 1) {
      slideSize = 0;
      let slide2;
      if (slides[i2])
        slide2 = slides[i2];
      if (gridEnabled) {
        swiper.grid.updateSlide(i2, slide2, slidesLength, getDirectionLabel);
      }
      if (slides[i2] && elementStyle(slide2, "display") === "none")
        continue;
      if (params.slidesPerView === "auto") {
        if (shouldResetSlideSize) {
          slides[i2].style[getDirectionLabel("width")] = ``;
        }
        const slideStyles = getComputedStyle(slide2);
        const currentTransform = slide2.style.transform;
        const currentWebKitTransform = slide2.style.webkitTransform;
        if (currentTransform) {
          slide2.style.transform = "none";
        }
        if (currentWebKitTransform) {
          slide2.style.webkitTransform = "none";
        }
        if (params.roundLengths) {
          slideSize = swiper.isHorizontal() ? elementOuterSize(slide2, "width", true) : elementOuterSize(slide2, "height", true);
        } else {
          const width2 = getDirectionPropertyValue(slideStyles, "width");
          const paddingLeft = getDirectionPropertyValue(slideStyles, "padding-left");
          const paddingRight = getDirectionPropertyValue(slideStyles, "padding-right");
          const marginLeft = getDirectionPropertyValue(slideStyles, "margin-left");
          const marginRight = getDirectionPropertyValue(slideStyles, "margin-right");
          const boxSizing = slideStyles.getPropertyValue("box-sizing");
          if (boxSizing && boxSizing === "border-box") {
            slideSize = width2 + marginLeft + marginRight;
          } else {
            const {
              clientWidth,
              offsetWidth
            } = slide2;
            slideSize = width2 + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);
          }
        }
        if (currentTransform) {
          slide2.style.transform = currentTransform;
        }
        if (currentWebKitTransform) {
          slide2.style.webkitTransform = currentWebKitTransform;
        }
        if (params.roundLengths)
          slideSize = Math.floor(slideSize);
      } else {
        slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;
        if (params.roundLengths)
          slideSize = Math.floor(slideSize);
        if (slides[i2]) {
          slides[i2].style[getDirectionLabel("width")] = `${slideSize}px`;
        }
      }
      if (slides[i2]) {
        slides[i2].swiperSlideSize = slideSize;
      }
      slidesSizesGrid.push(slideSize);
      if (params.centeredSlides) {
        slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;
        if (prevSlideSize === 0 && i2 !== 0)
          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
        if (i2 === 0)
          slidePosition = slidePosition - swiperSize / 2 - spaceBetween;
        if (Math.abs(slidePosition) < 1 / 1e3)
          slidePosition = 0;
        if (params.roundLengths)
          slidePosition = Math.floor(slidePosition);
        if (index % params.slidesPerGroup === 0)
          snapGrid.push(slidePosition);
        slidesGrid.push(slidePosition);
      } else {
        if (params.roundLengths)
          slidePosition = Math.floor(slidePosition);
        if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0)
          snapGrid.push(slidePosition);
        slidesGrid.push(slidePosition);
        slidePosition = slidePosition + slideSize + spaceBetween;
      }
      swiper.virtualSize += slideSize + spaceBetween;
      prevSlideSize = slideSize;
      index += 1;
    }
    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;
    if (rtl && wrongRTL && (params.effect === "slide" || params.effect === "coverflow")) {
      wrapperEl.style.width = `${swiper.virtualSize + spaceBetween}px`;
    }
    if (params.setWrapperSize) {
      wrapperEl.style[getDirectionLabel("width")] = `${swiper.virtualSize + spaceBetween}px`;
    }
    if (gridEnabled) {
      swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);
    }
    if (!params.centeredSlides) {
      const newSlidesGrid = [];
      for (let i2 = 0; i2 < snapGrid.length; i2 += 1) {
        let slidesGridItem = snapGrid[i2];
        if (params.roundLengths)
          slidesGridItem = Math.floor(slidesGridItem);
        if (snapGrid[i2] <= swiper.virtualSize - swiperSize) {
          newSlidesGrid.push(slidesGridItem);
        }
      }
      snapGrid = newSlidesGrid;
      if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {
        snapGrid.push(swiper.virtualSize - swiperSize);
      }
    }
    if (isVirtual && params.loop) {
      const size = slidesSizesGrid[0] + spaceBetween;
      if (params.slidesPerGroup > 1) {
        const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);
        const groupSize = size * params.slidesPerGroup;
        for (let i2 = 0; i2 < groups; i2 += 1) {
          snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);
        }
      }
      for (let i2 = 0; i2 < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i2 += 1) {
        if (params.slidesPerGroup === 1) {
          snapGrid.push(snapGrid[snapGrid.length - 1] + size);
        }
        slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);
        swiper.virtualSize += size;
      }
    }
    if (snapGrid.length === 0)
      snapGrid = [0];
    if (spaceBetween !== 0) {
      const key = swiper.isHorizontal() && rtl ? "marginLeft" : getDirectionLabel("marginRight");
      slides.filter((_, slideIndex) => {
        if (!params.cssMode || params.loop)
          return true;
        if (slideIndex === slides.length - 1) {
          return false;
        }
        return true;
      }).forEach((slideEl) => {
        slideEl.style[key] = `${spaceBetween}px`;
      });
    }
    if (params.centeredSlides && params.centeredSlidesBounds) {
      let allSlidesSize = 0;
      slidesSizesGrid.forEach((slideSizeValue) => {
        allSlidesSize += slideSizeValue + (spaceBetween || 0);
      });
      allSlidesSize -= spaceBetween;
      const maxSnap = allSlidesSize - swiperSize;
      snapGrid = snapGrid.map((snap3) => {
        if (snap3 <= 0)
          return -offsetBefore;
        if (snap3 > maxSnap)
          return maxSnap + offsetAfter;
        return snap3;
      });
    }
    if (params.centerInsufficientSlides) {
      let allSlidesSize = 0;
      slidesSizesGrid.forEach((slideSizeValue) => {
        allSlidesSize += slideSizeValue + (spaceBetween || 0);
      });
      allSlidesSize -= spaceBetween;
      if (allSlidesSize < swiperSize) {
        const allSlidesOffset = (swiperSize - allSlidesSize) / 2;
        snapGrid.forEach((snap3, snapIndex) => {
          snapGrid[snapIndex] = snap3 - allSlidesOffset;
        });
        slidesGrid.forEach((snap3, snapIndex) => {
          slidesGrid[snapIndex] = snap3 + allSlidesOffset;
        });
      }
    }
    Object.assign(swiper, {
      slides,
      snapGrid,
      slidesGrid,
      slidesSizesGrid
    });
    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {
      setCSSProperty(wrapperEl, "--swiper-centered-offset-before", `${-snapGrid[0]}px`);
      setCSSProperty(wrapperEl, "--swiper-centered-offset-after", `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);
      const addToSnapGrid = -swiper.snapGrid[0];
      const addToSlidesGrid = -swiper.slidesGrid[0];
      swiper.snapGrid = swiper.snapGrid.map((v) => v + addToSnapGrid);
      swiper.slidesGrid = swiper.slidesGrid.map((v) => v + addToSlidesGrid);
    }
    if (slidesLength !== previousSlidesLength) {
      swiper.emit("slidesLengthChange");
    }
    if (snapGrid.length !== previousSnapGridLength) {
      if (swiper.params.watchOverflow)
        swiper.checkOverflow();
      swiper.emit("snapGridLengthChange");
    }
    if (slidesGrid.length !== previousSlidesGridLength) {
      swiper.emit("slidesGridLengthChange");
    }
    if (params.watchSlidesProgress) {
      swiper.updateSlidesOffset();
    }
    if (!isVirtual && !params.cssMode && (params.effect === "slide" || params.effect === "fade")) {
      const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;
      const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);
      if (slidesLength <= params.maxBackfaceHiddenSlides) {
        if (!hasClassBackfaceClassAdded)
          swiper.el.classList.add(backFaceHiddenClass);
      } else if (hasClassBackfaceClassAdded) {
        swiper.el.classList.remove(backFaceHiddenClass);
      }
    }
  }
  function updateAutoHeight(speed) {
    const swiper = this;
    const activeSlides = [];
    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
    let newHeight = 0;
    let i2;
    if (typeof speed === "number") {
      swiper.setTransition(speed);
    } else if (speed === true) {
      swiper.setTransition(swiper.params.speed);
    }
    const getSlideByIndex = (index) => {
      if (isVirtual) {
        return swiper.slides[swiper.getSlideIndexByData(index)];
      }
      return swiper.slides[index];
    };
    if (swiper.params.slidesPerView !== "auto" && swiper.params.slidesPerView > 1) {
      if (swiper.params.centeredSlides) {
        (swiper.visibleSlides || []).forEach((slide2) => {
          activeSlides.push(slide2);
        });
      } else {
        for (i2 = 0; i2 < Math.ceil(swiper.params.slidesPerView); i2 += 1) {
          const index = swiper.activeIndex + i2;
          if (index > swiper.slides.length && !isVirtual)
            break;
          activeSlides.push(getSlideByIndex(index));
        }
      }
    } else {
      activeSlides.push(getSlideByIndex(swiper.activeIndex));
    }
    for (i2 = 0; i2 < activeSlides.length; i2 += 1) {
      if (typeof activeSlides[i2] !== "undefined") {
        const height2 = activeSlides[i2].offsetHeight;
        newHeight = height2 > newHeight ? height2 : newHeight;
      }
    }
    if (newHeight || newHeight === 0)
      swiper.wrapperEl.style.height = `${newHeight}px`;
  }
  function updateSlidesOffset() {
    const swiper = this;
    const slides = swiper.slides;
    const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;
    for (let i2 = 0; i2 < slides.length; i2 += 1) {
      slides[i2].swiperSlideOffset = (swiper.isHorizontal() ? slides[i2].offsetLeft : slides[i2].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();
    }
  }
  function updateSlidesProgress(translate2) {
    if (translate2 === void 0) {
      translate2 = this && this.translate || 0;
    }
    const swiper = this;
    const params = swiper.params;
    const {
      slides,
      rtlTranslate: rtl,
      snapGrid
    } = swiper;
    if (slides.length === 0)
      return;
    if (typeof slides[0].swiperSlideOffset === "undefined")
      swiper.updateSlidesOffset();
    let offsetCenter = -translate2;
    if (rtl)
      offsetCenter = translate2;
    slides.forEach((slideEl) => {
      slideEl.classList.remove(params.slideVisibleClass);
    });
    swiper.visibleSlidesIndexes = [];
    swiper.visibleSlides = [];
    let spaceBetween = params.spaceBetween;
    if (typeof spaceBetween === "string" && spaceBetween.indexOf("%") >= 0) {
      spaceBetween = parseFloat(spaceBetween.replace("%", "")) / 100 * swiper.size;
    } else if (typeof spaceBetween === "string") {
      spaceBetween = parseFloat(spaceBetween);
    }
    for (let i2 = 0; i2 < slides.length; i2 += 1) {
      const slide2 = slides[i2];
      let slideOffset = slide2.swiperSlideOffset;
      if (params.cssMode && params.centeredSlides) {
        slideOffset -= slides[0].swiperSlideOffset;
      }
      const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide2.swiperSlideSize + spaceBetween);
      const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide2.swiperSlideSize + spaceBetween);
      const slideBefore = -(offsetCenter - slideOffset);
      const slideAfter = slideBefore + swiper.slidesSizesGrid[i2];
      const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;
      if (isVisible) {
        swiper.visibleSlides.push(slide2);
        swiper.visibleSlidesIndexes.push(i2);
        slides[i2].classList.add(params.slideVisibleClass);
      }
      slide2.progress = rtl ? -slideProgress : slideProgress;
      slide2.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;
    }
  }
  function updateProgress(translate2) {
    const swiper = this;
    if (typeof translate2 === "undefined") {
      const multiplier = swiper.rtlTranslate ? -1 : 1;
      translate2 = swiper && swiper.translate && swiper.translate * multiplier || 0;
    }
    const params = swiper.params;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    let {
      progress,
      isBeginning,
      isEnd,
      progressLoop
    } = swiper;
    const wasBeginning = isBeginning;
    const wasEnd = isEnd;
    if (translatesDiff === 0) {
      progress = 0;
      isBeginning = true;
      isEnd = true;
    } else {
      progress = (translate2 - swiper.minTranslate()) / translatesDiff;
      const isBeginningRounded = Math.abs(translate2 - swiper.minTranslate()) < 1;
      const isEndRounded = Math.abs(translate2 - swiper.maxTranslate()) < 1;
      isBeginning = isBeginningRounded || progress <= 0;
      isEnd = isEndRounded || progress >= 1;
      if (isBeginningRounded)
        progress = 0;
      if (isEndRounded)
        progress = 1;
    }
    if (params.loop) {
      const firstSlideIndex = swiper.getSlideIndexByData(0);
      const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);
      const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];
      const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];
      const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];
      const translateAbs = Math.abs(translate2);
      if (translateAbs >= firstSlideTranslate) {
        progressLoop = (translateAbs - firstSlideTranslate) / translateMax;
      } else {
        progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;
      }
      if (progressLoop > 1)
        progressLoop -= 1;
    }
    Object.assign(swiper, {
      progress,
      progressLoop,
      isBeginning,
      isEnd
    });
    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight)
      swiper.updateSlidesProgress(translate2);
    if (isBeginning && !wasBeginning) {
      swiper.emit("reachBeginning toEdge");
    }
    if (isEnd && !wasEnd) {
      swiper.emit("reachEnd toEdge");
    }
    if (wasBeginning && !isBeginning || wasEnd && !isEnd) {
      swiper.emit("fromEdge");
    }
    swiper.emit("progress", progress);
  }
  function updateSlidesClasses() {
    const swiper = this;
    const {
      slides,
      params,
      slidesEl,
      activeIndex
    } = swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    const getFilteredSlide = (selector3) => {
      return elementChildren(slidesEl, `.${params.slideClass}${selector3}, swiper-slide${selector3}`)[0];
    };
    slides.forEach((slideEl) => {
      slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);
    });
    let activeSlide;
    if (isVirtual) {
      if (params.loop) {
        let slideIndex = activeIndex - swiper.virtual.slidesBefore;
        if (slideIndex < 0)
          slideIndex = swiper.virtual.slides.length + slideIndex;
        if (slideIndex >= swiper.virtual.slides.length)
          slideIndex -= swiper.virtual.slides.length;
        activeSlide = getFilteredSlide(`[data-swiper-slide-index="${slideIndex}"]`);
      } else {
        activeSlide = getFilteredSlide(`[data-swiper-slide-index="${activeIndex}"]`);
      }
    } else {
      activeSlide = slides[activeIndex];
    }
    if (activeSlide) {
      activeSlide.classList.add(params.slideActiveClass);
      let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];
      if (params.loop && !nextSlide) {
        nextSlide = slides[0];
      }
      if (nextSlide) {
        nextSlide.classList.add(params.slideNextClass);
      }
      let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];
      if (params.loop && !prevSlide === 0) {
        prevSlide = slides[slides.length - 1];
      }
      if (prevSlide) {
        prevSlide.classList.add(params.slidePrevClass);
      }
    }
    swiper.emitSlidesClasses();
  }
  var processLazyPreloader = (swiper, imageEl) => {
    if (!swiper || swiper.destroyed || !swiper.params)
      return;
    const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;
    const slideEl = imageEl.closest(slideSelector());
    if (slideEl) {
      let lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);
      if (!lazyEl && swiper.isElement) {
        if (slideEl.shadowRoot) {
          lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);
        } else {
          requestAnimationFrame(() => {
            if (slideEl.shadowRoot) {
              lazyEl = slideEl.shadowRoot.querySelector(`.${swiper.params.lazyPreloaderClass}`);
              if (lazyEl)
                lazyEl.remove();
            }
          });
        }
      }
      if (lazyEl)
        lazyEl.remove();
    }
  };
  var unlazy = (swiper, index) => {
    if (!swiper.slides[index])
      return;
    const imageEl = swiper.slides[index].querySelector('[loading="lazy"]');
    if (imageEl)
      imageEl.removeAttribute("loading");
  };
  var preload = (swiper) => {
    if (!swiper || swiper.destroyed || !swiper.params)
      return;
    let amount = swiper.params.lazyPreloadPrevNext;
    const len = swiper.slides.length;
    if (!len || !amount || amount < 0)
      return;
    amount = Math.min(amount, len);
    const slidesPerView = swiper.params.slidesPerView === "auto" ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);
    const activeIndex = swiper.activeIndex;
    if (swiper.params.grid && swiper.params.grid.rows > 1) {
      const activeColumn = activeIndex;
      const preloadColumns = [activeColumn - amount];
      preloadColumns.push(...Array.from({
        length: amount
      }).map((_, i2) => {
        return activeColumn + slidesPerView + i2;
      }));
      swiper.slides.forEach((slideEl, i2) => {
        if (preloadColumns.includes(slideEl.column))
          unlazy(swiper, i2);
      });
      return;
    }
    const slideIndexLastInView = activeIndex + slidesPerView - 1;
    if (swiper.params.rewind || swiper.params.loop) {
      for (let i2 = activeIndex - amount; i2 <= slideIndexLastInView + amount; i2 += 1) {
        const realIndex = (i2 % len + len) % len;
        if (realIndex < activeIndex || realIndex > slideIndexLastInView)
          unlazy(swiper, realIndex);
      }
    } else {
      for (let i2 = Math.max(activeIndex - amount, 0); i2 <= Math.min(slideIndexLastInView + amount, len - 1); i2 += 1) {
        if (i2 !== activeIndex && (i2 > slideIndexLastInView || i2 < activeIndex)) {
          unlazy(swiper, i2);
        }
      }
    }
  };
  function getActiveIndexByTranslate(swiper) {
    const {
      slidesGrid,
      params
    } = swiper;
    const translate2 = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
    let activeIndex;
    for (let i2 = 0; i2 < slidesGrid.length; i2 += 1) {
      if (typeof slidesGrid[i2 + 1] !== "undefined") {
        if (translate2 >= slidesGrid[i2] && translate2 < slidesGrid[i2 + 1] - (slidesGrid[i2 + 1] - slidesGrid[i2]) / 2) {
          activeIndex = i2;
        } else if (translate2 >= slidesGrid[i2] && translate2 < slidesGrid[i2 + 1]) {
          activeIndex = i2 + 1;
        }
      } else if (translate2 >= slidesGrid[i2]) {
        activeIndex = i2;
      }
    }
    if (params.normalizeSlideIndex) {
      if (activeIndex < 0 || typeof activeIndex === "undefined")
        activeIndex = 0;
    }
    return activeIndex;
  }
  function updateActiveIndex(newActiveIndex) {
    const swiper = this;
    const translate2 = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
    const {
      snapGrid,
      params,
      activeIndex: previousIndex,
      realIndex: previousRealIndex,
      snapIndex: previousSnapIndex
    } = swiper;
    let activeIndex = newActiveIndex;
    let snapIndex;
    const getVirtualRealIndex = (aIndex) => {
      let realIndex2 = aIndex - swiper.virtual.slidesBefore;
      if (realIndex2 < 0) {
        realIndex2 = swiper.virtual.slides.length + realIndex2;
      }
      if (realIndex2 >= swiper.virtual.slides.length) {
        realIndex2 -= swiper.virtual.slides.length;
      }
      return realIndex2;
    };
    if (typeof activeIndex === "undefined") {
      activeIndex = getActiveIndexByTranslate(swiper);
    }
    if (snapGrid.indexOf(translate2) >= 0) {
      snapIndex = snapGrid.indexOf(translate2);
    } else {
      const skip = Math.min(params.slidesPerGroupSkip, activeIndex);
      snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);
    }
    if (snapIndex >= snapGrid.length)
      snapIndex = snapGrid.length - 1;
    if (activeIndex === previousIndex) {
      if (snapIndex !== previousSnapIndex) {
        swiper.snapIndex = snapIndex;
        swiper.emit("snapIndexChange");
      }
      if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {
        swiper.realIndex = getVirtualRealIndex(activeIndex);
      }
      return;
    }
    let realIndex;
    if (swiper.virtual && params.virtual.enabled && params.loop) {
      realIndex = getVirtualRealIndex(activeIndex);
    } else if (swiper.slides[activeIndex]) {
      realIndex = parseInt(swiper.slides[activeIndex].getAttribute("data-swiper-slide-index") || activeIndex, 10);
    } else {
      realIndex = activeIndex;
    }
    Object.assign(swiper, {
      previousSnapIndex,
      snapIndex,
      previousRealIndex,
      realIndex,
      previousIndex,
      activeIndex
    });
    if (swiper.initialized) {
      preload(swiper);
    }
    swiper.emit("activeIndexChange");
    swiper.emit("snapIndexChange");
    if (swiper.initialized || swiper.params.runCallbacksOnInit) {
      if (previousRealIndex !== realIndex) {
        swiper.emit("realIndexChange");
      }
      swiper.emit("slideChange");
    }
  }
  function updateClickedSlide(el, path) {
    const swiper = this;
    const params = swiper.params;
    let slide2 = el.closest(`.${params.slideClass}, swiper-slide`);
    if (!slide2 && swiper.isElement && path && path.length > 1 && path.includes(el)) {
      [...path.slice(path.indexOf(el) + 1, path.length)].forEach((pathEl) => {
        if (!slide2 && pathEl.matches && pathEl.matches(`.${params.slideClass}, swiper-slide`)) {
          slide2 = pathEl;
        }
      });
    }
    let slideFound = false;
    let slideIndex;
    if (slide2) {
      for (let i2 = 0; i2 < swiper.slides.length; i2 += 1) {
        if (swiper.slides[i2] === slide2) {
          slideFound = true;
          slideIndex = i2;
          break;
        }
      }
    }
    if (slide2 && slideFound) {
      swiper.clickedSlide = slide2;
      if (swiper.virtual && swiper.params.virtual.enabled) {
        swiper.clickedIndex = parseInt(slide2.getAttribute("data-swiper-slide-index"), 10);
      } else {
        swiper.clickedIndex = slideIndex;
      }
    } else {
      swiper.clickedSlide = void 0;
      swiper.clickedIndex = void 0;
      return;
    }
    if (params.slideToClickedSlide && swiper.clickedIndex !== void 0 && swiper.clickedIndex !== swiper.activeIndex) {
      swiper.slideToClickedSlide();
    }
  }
  var update = {
    updateSize,
    updateSlides,
    updateAutoHeight,
    updateSlidesOffset,
    updateSlidesProgress,
    updateProgress,
    updateSlidesClasses,
    updateActiveIndex,
    updateClickedSlide
  };
  function getSwiperTranslate(axis) {
    if (axis === void 0) {
      axis = this.isHorizontal() ? "x" : "y";
    }
    const swiper = this;
    const {
      params,
      rtlTranslate: rtl,
      translate: translate2,
      wrapperEl
    } = swiper;
    if (params.virtualTranslate) {
      return rtl ? -translate2 : translate2;
    }
    if (params.cssMode) {
      return translate2;
    }
    let currentTranslate = getTranslate(wrapperEl, axis);
    currentTranslate += swiper.cssOverflowAdjustment();
    if (rtl)
      currentTranslate = -currentTranslate;
    return currentTranslate || 0;
  }
  function setTranslate(translate2, byController) {
    const swiper = this;
    const {
      rtlTranslate: rtl,
      params,
      wrapperEl,
      progress
    } = swiper;
    let x = 0;
    let y = 0;
    const z = 0;
    if (swiper.isHorizontal()) {
      x = rtl ? -translate2 : translate2;
    } else {
      y = translate2;
    }
    if (params.roundLengths) {
      x = Math.floor(x);
      y = Math.floor(y);
    }
    swiper.previousTranslate = swiper.translate;
    swiper.translate = swiper.isHorizontal() ? x : y;
    if (params.cssMode) {
      wrapperEl[swiper.isHorizontal() ? "scrollLeft" : "scrollTop"] = swiper.isHorizontal() ? -x : -y;
    } else if (!params.virtualTranslate) {
      if (swiper.isHorizontal()) {
        x -= swiper.cssOverflowAdjustment();
      } else {
        y -= swiper.cssOverflowAdjustment();
      }
      wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;
    }
    let newProgress;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    if (translatesDiff === 0) {
      newProgress = 0;
    } else {
      newProgress = (translate2 - swiper.minTranslate()) / translatesDiff;
    }
    if (newProgress !== progress) {
      swiper.updateProgress(translate2);
    }
    swiper.emit("setTranslate", swiper.translate, byController);
  }
  function minTranslate() {
    return -this.snapGrid[0];
  }
  function maxTranslate() {
    return -this.snapGrid[this.snapGrid.length - 1];
  }
  function translateTo(translate2, speed, runCallbacks, translateBounds, internal) {
    if (translate2 === void 0) {
      translate2 = 0;
    }
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (translateBounds === void 0) {
      translateBounds = true;
    }
    const swiper = this;
    const {
      params,
      wrapperEl
    } = swiper;
    if (swiper.animating && params.preventInteractionOnTransition) {
      return false;
    }
    const minTranslate2 = swiper.minTranslate();
    const maxTranslate2 = swiper.maxTranslate();
    let newTranslate;
    if (translateBounds && translate2 > minTranslate2)
      newTranslate = minTranslate2;
    else if (translateBounds && translate2 < maxTranslate2)
      newTranslate = maxTranslate2;
    else
      newTranslate = translate2;
    swiper.updateProgress(newTranslate);
    if (params.cssMode) {
      const isH = swiper.isHorizontal();
      if (speed === 0) {
        wrapperEl[isH ? "scrollLeft" : "scrollTop"] = -newTranslate;
      } else {
        if (!swiper.support.smoothScroll) {
          animateCSSModeScroll({
            swiper,
            targetPosition: -newTranslate,
            side: isH ? "left" : "top"
          });
          return true;
        }
        wrapperEl.scrollTo({
          [isH ? "left" : "top"]: -newTranslate,
          behavior: "smooth"
        });
      }
      return true;
    }
    if (speed === 0) {
      swiper.setTransition(0);
      swiper.setTranslate(newTranslate);
      if (runCallbacks) {
        swiper.emit("beforeTransitionStart", speed, internal);
        swiper.emit("transitionEnd");
      }
    } else {
      swiper.setTransition(speed);
      swiper.setTranslate(newTranslate);
      if (runCallbacks) {
        swiper.emit("beforeTransitionStart", speed, internal);
        swiper.emit("transitionStart");
      }
      if (!swiper.animating) {
        swiper.animating = true;
        if (!swiper.onTranslateToWrapperTransitionEnd) {
          swiper.onTranslateToWrapperTransitionEnd = function transitionEnd2(e3) {
            if (!swiper || swiper.destroyed)
              return;
            if (e3.target !== this)
              return;
            swiper.wrapperEl.removeEventListener("transitionend", swiper.onTranslateToWrapperTransitionEnd);
            swiper.onTranslateToWrapperTransitionEnd = null;
            delete swiper.onTranslateToWrapperTransitionEnd;
            if (runCallbacks) {
              swiper.emit("transitionEnd");
            }
          };
        }
        swiper.wrapperEl.addEventListener("transitionend", swiper.onTranslateToWrapperTransitionEnd);
      }
    }
    return true;
  }
  var translate = {
    getTranslate: getSwiperTranslate,
    setTranslate,
    minTranslate,
    maxTranslate,
    translateTo
  };
  function setTransition(duration, byController) {
    const swiper = this;
    if (!swiper.params.cssMode) {
      swiper.wrapperEl.style.transitionDuration = `${duration}ms`;
      swiper.wrapperEl.style.transitionDelay = duration === 0 ? `0ms` : "";
    }
    swiper.emit("setTransition", duration, byController);
  }
  function transitionEmit(_ref) {
    let {
      swiper,
      runCallbacks,
      direction,
      step
    } = _ref;
    const {
      activeIndex,
      previousIndex
    } = swiper;
    let dir = direction;
    if (!dir) {
      if (activeIndex > previousIndex)
        dir = "next";
      else if (activeIndex < previousIndex)
        dir = "prev";
      else
        dir = "reset";
    }
    swiper.emit(`transition${step}`);
    if (runCallbacks && activeIndex !== previousIndex) {
      if (dir === "reset") {
        swiper.emit(`slideResetTransition${step}`);
        return;
      }
      swiper.emit(`slideChangeTransition${step}`);
      if (dir === "next") {
        swiper.emit(`slideNextTransition${step}`);
      } else {
        swiper.emit(`slidePrevTransition${step}`);
      }
    }
  }
  function transitionStart(runCallbacks, direction) {
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const {
      params
    } = swiper;
    if (params.cssMode)
      return;
    if (params.autoHeight) {
      swiper.updateAutoHeight();
    }
    transitionEmit({
      swiper,
      runCallbacks,
      direction,
      step: "Start"
    });
  }
  function transitionEnd(runCallbacks, direction) {
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const {
      params
    } = swiper;
    swiper.animating = false;
    if (params.cssMode)
      return;
    swiper.setTransition(0);
    transitionEmit({
      swiper,
      runCallbacks,
      direction,
      step: "End"
    });
  }
  var transition = {
    setTransition,
    transitionStart,
    transitionEnd
  };
  function slideTo(index, speed, runCallbacks, internal, initial) {
    if (index === void 0) {
      index = 0;
    }
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (typeof index === "string") {
      index = parseInt(index, 10);
    }
    const swiper = this;
    let slideIndex = index;
    if (slideIndex < 0)
      slideIndex = 0;
    const {
      params,
      snapGrid,
      slidesGrid,
      previousIndex,
      activeIndex,
      rtlTranslate: rtl,
      wrapperEl,
      enabled
    } = swiper;
    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {
      return false;
    }
    const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);
    let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);
    if (snapIndex >= snapGrid.length)
      snapIndex = snapGrid.length - 1;
    const translate2 = -snapGrid[snapIndex];
    if (params.normalizeSlideIndex) {
      for (let i2 = 0; i2 < slidesGrid.length; i2 += 1) {
        const normalizedTranslate = -Math.floor(translate2 * 100);
        const normalizedGrid = Math.floor(slidesGrid[i2] * 100);
        const normalizedGridNext = Math.floor(slidesGrid[i2 + 1] * 100);
        if (typeof slidesGrid[i2 + 1] !== "undefined") {
          if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {
            slideIndex = i2;
          } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {
            slideIndex = i2 + 1;
          }
        } else if (normalizedTranslate >= normalizedGrid) {
          slideIndex = i2;
        }
      }
    }
    if (swiper.initialized && slideIndex !== activeIndex) {
      if (!swiper.allowSlideNext && (rtl ? translate2 > swiper.translate && translate2 > swiper.minTranslate() : translate2 < swiper.translate && translate2 < swiper.minTranslate())) {
        return false;
      }
      if (!swiper.allowSlidePrev && translate2 > swiper.translate && translate2 > swiper.maxTranslate()) {
        if ((activeIndex || 0) !== slideIndex) {
          return false;
        }
      }
    }
    if (slideIndex !== (previousIndex || 0) && runCallbacks) {
      swiper.emit("beforeSlideChangeStart");
    }
    swiper.updateProgress(translate2);
    let direction;
    if (slideIndex > activeIndex)
      direction = "next";
    else if (slideIndex < activeIndex)
      direction = "prev";
    else
      direction = "reset";
    if (rtl && -translate2 === swiper.translate || !rtl && translate2 === swiper.translate) {
      swiper.updateActiveIndex(slideIndex);
      if (params.autoHeight) {
        swiper.updateAutoHeight();
      }
      swiper.updateSlidesClasses();
      if (params.effect !== "slide") {
        swiper.setTranslate(translate2);
      }
      if (direction !== "reset") {
        swiper.transitionStart(runCallbacks, direction);
        swiper.transitionEnd(runCallbacks, direction);
      }
      return false;
    }
    if (params.cssMode) {
      const isH = swiper.isHorizontal();
      const t2 = rtl ? translate2 : -translate2;
      if (speed === 0) {
        const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
        if (isVirtual) {
          swiper.wrapperEl.style.scrollSnapType = "none";
          swiper._immediateVirtual = true;
        }
        if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {
          swiper._cssModeVirtualInitialSet = true;
          requestAnimationFrame(() => {
            wrapperEl[isH ? "scrollLeft" : "scrollTop"] = t2;
          });
        } else {
          wrapperEl[isH ? "scrollLeft" : "scrollTop"] = t2;
        }
        if (isVirtual) {
          requestAnimationFrame(() => {
            swiper.wrapperEl.style.scrollSnapType = "";
            swiper._immediateVirtual = false;
          });
        }
      } else {
        if (!swiper.support.smoothScroll) {
          animateCSSModeScroll({
            swiper,
            targetPosition: t2,
            side: isH ? "left" : "top"
          });
          return true;
        }
        wrapperEl.scrollTo({
          [isH ? "left" : "top"]: t2,
          behavior: "smooth"
        });
      }
      return true;
    }
    swiper.setTransition(speed);
    swiper.setTranslate(translate2);
    swiper.updateActiveIndex(slideIndex);
    swiper.updateSlidesClasses();
    swiper.emit("beforeTransitionStart", speed, internal);
    swiper.transitionStart(runCallbacks, direction);
    if (speed === 0) {
      swiper.transitionEnd(runCallbacks, direction);
    } else if (!swiper.animating) {
      swiper.animating = true;
      if (!swiper.onSlideToWrapperTransitionEnd) {
        swiper.onSlideToWrapperTransitionEnd = function transitionEnd2(e3) {
          if (!swiper || swiper.destroyed)
            return;
          if (e3.target !== this)
            return;
          swiper.wrapperEl.removeEventListener("transitionend", swiper.onSlideToWrapperTransitionEnd);
          swiper.onSlideToWrapperTransitionEnd = null;
          delete swiper.onSlideToWrapperTransitionEnd;
          swiper.transitionEnd(runCallbacks, direction);
        };
      }
      swiper.wrapperEl.addEventListener("transitionend", swiper.onSlideToWrapperTransitionEnd);
    }
    return true;
  }
  function slideToLoop(index, speed, runCallbacks, internal) {
    if (index === void 0) {
      index = 0;
    }
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (typeof index === "string") {
      const indexAsNumber = parseInt(index, 10);
      index = indexAsNumber;
    }
    const swiper = this;
    let newIndex = index;
    if (swiper.params.loop) {
      if (swiper.virtual && swiper.params.virtual.enabled) {
        newIndex = newIndex + swiper.virtual.slidesBefore;
      } else {
        newIndex = swiper.getSlideIndexByData(newIndex);
      }
    }
    return swiper.slideTo(newIndex, speed, runCallbacks, internal);
  }
  function slideNext(speed, runCallbacks, internal) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const {
      enabled,
      params,
      animating
    } = swiper;
    if (!enabled)
      return swiper;
    let perGroup = params.slidesPerGroup;
    if (params.slidesPerView === "auto" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {
      perGroup = Math.max(swiper.slidesPerViewDynamic("current", true), 1);
    }
    const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    if (params.loop) {
      if (animating && !isVirtual && params.loopPreventsSliding)
        return false;
      swiper.loopFix({
        direction: "next"
      });
      swiper._clientLeft = swiper.wrapperEl.clientLeft;
      if (swiper.activeIndex === swiper.slides.length - 1 && params.cssMode) {
        requestAnimationFrame(() => {
          swiper.slideTo(swiper.activeIndex + increment);
        });
        return true;
      }
    }
    if (params.rewind && swiper.isEnd) {
      return swiper.slideTo(0, speed, runCallbacks, internal);
    }
    return swiper.slideTo(swiper.activeIndex + increment);
  }
  function slidePrev(speed, runCallbacks, internal) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    const {
      params,
      snapGrid,
      slidesGrid,
      rtlTranslate,
      enabled,
      animating
    } = swiper;
    if (!enabled)
      return swiper;
    const isVirtual = swiper.virtual && params.virtual.enabled;
    if (params.loop) {
      if (animating && !isVirtual && params.loopPreventsSliding)
        return false;
      swiper.loopFix({
        direction: "prev"
      });
      swiper._clientLeft = swiper.wrapperEl.clientLeft;
    }
    const translate2 = rtlTranslate ? swiper.translate : -swiper.translate;
    function normalize3(val) {
      if (val < 0)
        return -Math.floor(Math.abs(val));
      return Math.floor(val);
    }
    const normalizedTranslate = normalize3(translate2);
    const normalizedSnapGrid = snapGrid.map((val) => normalize3(val));
    let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];
    if (typeof prevSnap === "undefined" && params.cssMode) {
      let prevSnapIndex;
      snapGrid.forEach((snap3, snapIndex) => {
        if (normalizedTranslate >= snap3) {
          prevSnapIndex = snapIndex;
        }
      });
      if (typeof prevSnapIndex !== "undefined") {
        prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];
      }
    }
    let prevIndex = 0;
    if (typeof prevSnap !== "undefined") {
      prevIndex = slidesGrid.indexOf(prevSnap);
      if (prevIndex < 0)
        prevIndex = swiper.activeIndex - 1;
      if (params.slidesPerView === "auto" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {
        prevIndex = prevIndex - swiper.slidesPerViewDynamic("previous", true) + 1;
        prevIndex = Math.max(prevIndex, 0);
      }
    }
    if (params.rewind && swiper.isBeginning) {
      const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;
      return swiper.slideTo(lastIndex, speed, runCallbacks, internal);
    } else if (params.loop && swiper.activeIndex === 0 && params.cssMode) {
      requestAnimationFrame(() => {
        swiper.slideTo(prevIndex, speed, runCallbacks, internal);
      });
      return true;
    }
    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);
  }
  function slideReset(speed, runCallbacks, internal) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    const swiper = this;
    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);
  }
  function slideToClosest(speed, runCallbacks, internal, threshold) {
    if (speed === void 0) {
      speed = this.params.speed;
    }
    if (runCallbacks === void 0) {
      runCallbacks = true;
    }
    if (threshold === void 0) {
      threshold = 0.5;
    }
    const swiper = this;
    let index = swiper.activeIndex;
    const skip = Math.min(swiper.params.slidesPerGroupSkip, index);
    const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);
    const translate2 = swiper.rtlTranslate ? swiper.translate : -swiper.translate;
    if (translate2 >= swiper.snapGrid[snapIndex]) {
      const currentSnap = swiper.snapGrid[snapIndex];
      const nextSnap = swiper.snapGrid[snapIndex + 1];
      if (translate2 - currentSnap > (nextSnap - currentSnap) * threshold) {
        index += swiper.params.slidesPerGroup;
      }
    } else {
      const prevSnap = swiper.snapGrid[snapIndex - 1];
      const currentSnap = swiper.snapGrid[snapIndex];
      if (translate2 - prevSnap <= (currentSnap - prevSnap) * threshold) {
        index -= swiper.params.slidesPerGroup;
      }
    }
    index = Math.max(index, 0);
    index = Math.min(index, swiper.slidesGrid.length - 1);
    return swiper.slideTo(index, speed, runCallbacks, internal);
  }
  function slideToClickedSlide() {
    const swiper = this;
    const {
      params,
      slidesEl
    } = swiper;
    const slidesPerView = params.slidesPerView === "auto" ? swiper.slidesPerViewDynamic() : params.slidesPerView;
    let slideToIndex = swiper.clickedIndex;
    let realIndex;
    const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;
    if (params.loop) {
      if (swiper.animating)
        return;
      realIndex = parseInt(swiper.clickedSlide.getAttribute("data-swiper-slide-index"), 10);
      if (params.centeredSlides) {
        if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {
          swiper.loopFix();
          slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index="${realIndex}"]`)[0]);
          nextTick(() => {
            swiper.slideTo(slideToIndex);
          });
        } else {
          swiper.slideTo(slideToIndex);
        }
      } else if (slideToIndex > swiper.slides.length - slidesPerView) {
        swiper.loopFix();
        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index="${realIndex}"]`)[0]);
        nextTick(() => {
          swiper.slideTo(slideToIndex);
        });
      } else {
        swiper.slideTo(slideToIndex);
      }
    } else {
      swiper.slideTo(slideToIndex);
    }
  }
  var slide = {
    slideTo,
    slideToLoop,
    slideNext,
    slidePrev,
    slideReset,
    slideToClosest,
    slideToClickedSlide
  };
  function loopCreate(slideRealIndex) {
    const swiper = this;
    const {
      params,
      slidesEl
    } = swiper;
    if (!params.loop || swiper.virtual && swiper.params.virtual.enabled)
      return;
    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);
    slides.forEach((el, index) => {
      el.setAttribute("data-swiper-slide-index", index);
    });
    swiper.loopFix({
      slideRealIndex,
      direction: params.centeredSlides ? void 0 : "next"
    });
  }
  function loopFix(_temp) {
    let {
      slideRealIndex,
      slideTo: slideTo2 = true,
      direction,
      setTranslate: setTranslate2,
      activeSlideIndex,
      byController,
      byMousewheel
    } = _temp === void 0 ? {} : _temp;
    const swiper = this;
    if (!swiper.params.loop)
      return;
    swiper.emit("beforeLoopFix");
    const {
      slides,
      allowSlidePrev,
      allowSlideNext,
      slidesEl,
      params
    } = swiper;
    swiper.allowSlidePrev = true;
    swiper.allowSlideNext = true;
    if (swiper.virtual && params.virtual.enabled) {
      if (slideTo2) {
        if (!params.centeredSlides && swiper.snapIndex === 0) {
          swiper.slideTo(swiper.virtual.slides.length, 0, false, true);
        } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {
          swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);
        } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {
          swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);
        }
      }
      swiper.allowSlidePrev = allowSlidePrev;
      swiper.allowSlideNext = allowSlideNext;
      swiper.emit("loopFix");
      return;
    }
    const slidesPerView = params.slidesPerView === "auto" ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));
    let loopedSlides = params.loopedSlides || slidesPerView;
    if (loopedSlides % params.slidesPerGroup !== 0) {
      loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;
    }
    swiper.loopedSlides = loopedSlides;
    const prependSlidesIndexes = [];
    const appendSlidesIndexes = [];
    let activeIndex = swiper.activeIndex;
    if (typeof activeSlideIndex === "undefined") {
      activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter((el) => el.classList.contains(params.slideActiveClass))[0]);
    } else {
      activeIndex = activeSlideIndex;
    }
    const isNext = direction === "next" || !direction;
    const isPrev = direction === "prev" || !direction;
    let slidesPrepended = 0;
    let slidesAppended = 0;
    if (activeSlideIndex < loopedSlides) {
      slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);
      for (let i2 = 0; i2 < loopedSlides - activeSlideIndex; i2 += 1) {
        const index = i2 - Math.floor(i2 / slides.length) * slides.length;
        prependSlidesIndexes.push(slides.length - index - 1);
      }
    } else if (activeSlideIndex > swiper.slides.length - loopedSlides * 2) {
      slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);
      for (let i2 = 0; i2 < slidesAppended; i2 += 1) {
        const index = i2 - Math.floor(i2 / slides.length) * slides.length;
        appendSlidesIndexes.push(index);
      }
    }
    if (isPrev) {
      prependSlidesIndexes.forEach((index) => {
        swiper.slides[index].swiperLoopMoveDOM = true;
        slidesEl.prepend(swiper.slides[index]);
        swiper.slides[index].swiperLoopMoveDOM = false;
      });
    }
    if (isNext) {
      appendSlidesIndexes.forEach((index) => {
        swiper.slides[index].swiperLoopMoveDOM = true;
        slidesEl.append(swiper.slides[index]);
        swiper.slides[index].swiperLoopMoveDOM = false;
      });
    }
    swiper.recalcSlides();
    if (params.slidesPerView === "auto") {
      swiper.updateSlides();
    }
    if (params.watchSlidesProgress) {
      swiper.updateSlidesOffset();
    }
    if (slideTo2) {
      if (prependSlidesIndexes.length > 0 && isPrev) {
        if (typeof slideRealIndex === "undefined") {
          const currentSlideTranslate = swiper.slidesGrid[activeIndex];
          const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];
          const diff = newSlideTranslate - currentSlideTranslate;
          if (byMousewheel) {
            swiper.setTranslate(swiper.translate - diff);
          } else {
            swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);
            if (setTranslate2) {
              swiper.touches[swiper.isHorizontal() ? "startX" : "startY"] += diff;
              swiper.touchEventsData.currentTranslate = swiper.translate;
            }
          }
        } else {
          if (setTranslate2) {
            swiper.slideToLoop(slideRealIndex, 0, false, true);
            swiper.touchEventsData.currentTranslate = swiper.translate;
          }
        }
      } else if (appendSlidesIndexes.length > 0 && isNext) {
        if (typeof slideRealIndex === "undefined") {
          const currentSlideTranslate = swiper.slidesGrid[activeIndex];
          const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];
          const diff = newSlideTranslate - currentSlideTranslate;
          if (byMousewheel) {
            swiper.setTranslate(swiper.translate - diff);
          } else {
            swiper.slideTo(activeIndex - slidesAppended, 0, false, true);
            if (setTranslate2) {
              swiper.touches[swiper.isHorizontal() ? "startX" : "startY"] += diff;
              swiper.touchEventsData.currentTranslate = swiper.translate;
            }
          }
        } else {
          swiper.slideToLoop(slideRealIndex, 0, false, true);
        }
      }
    }
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
    if (swiper.controller && swiper.controller.control && !byController) {
      const loopParams = {
        slideRealIndex,
        direction,
        setTranslate: setTranslate2,
        activeSlideIndex,
        byController: true
      };
      if (Array.isArray(swiper.controller.control)) {
        swiper.controller.control.forEach((c) => {
          if (!c.destroyed && c.params.loop)
            c.loopFix({
              ...loopParams,
              slideTo: c.params.slidesPerView === params.slidesPerView ? slideTo2 : false
            });
        });
      } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {
        swiper.controller.control.loopFix({
          ...loopParams,
          slideTo: swiper.controller.control.params.slidesPerView === params.slidesPerView ? slideTo2 : false
        });
      }
    }
    swiper.emit("loopFix");
  }
  function loopDestroy() {
    const swiper = this;
    const {
      params,
      slidesEl
    } = swiper;
    if (!params.loop || swiper.virtual && swiper.params.virtual.enabled)
      return;
    swiper.recalcSlides();
    const newSlidesOrder = [];
    swiper.slides.forEach((slideEl) => {
      const index = typeof slideEl.swiperSlideIndex === "undefined" ? slideEl.getAttribute("data-swiper-slide-index") * 1 : slideEl.swiperSlideIndex;
      newSlidesOrder[index] = slideEl;
    });
    swiper.slides.forEach((slideEl) => {
      slideEl.removeAttribute("data-swiper-slide-index");
    });
    newSlidesOrder.forEach((slideEl) => {
      slidesEl.append(slideEl);
    });
    swiper.recalcSlides();
    swiper.slideTo(swiper.realIndex, 0);
  }
  var loop = {
    loopCreate,
    loopFix,
    loopDestroy
  };
  function setGrabCursor(moving) {
    const swiper = this;
    if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode)
      return;
    const el = swiper.params.touchEventsTarget === "container" ? swiper.el : swiper.wrapperEl;
    if (swiper.isElement) {
      swiper.__preventObserver__ = true;
    }
    el.style.cursor = "move";
    el.style.cursor = moving ? "grabbing" : "grab";
    if (swiper.isElement) {
      requestAnimationFrame(() => {
        swiper.__preventObserver__ = false;
      });
    }
  }
  function unsetGrabCursor() {
    const swiper = this;
    if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {
      return;
    }
    if (swiper.isElement) {
      swiper.__preventObserver__ = true;
    }
    swiper[swiper.params.touchEventsTarget === "container" ? "el" : "wrapperEl"].style.cursor = "";
    if (swiper.isElement) {
      requestAnimationFrame(() => {
        swiper.__preventObserver__ = false;
      });
    }
  }
  var grabCursor = {
    setGrabCursor,
    unsetGrabCursor
  };
  function closestElement(selector3, base) {
    if (base === void 0) {
      base = this;
    }
    function __closestFrom(el) {
      if (!el || el === getDocument() || el === getWindow())
        return null;
      if (el.assignedSlot)
        el = el.assignedSlot;
      const found = el.closest(selector3);
      if (!found && !el.getRootNode) {
        return null;
      }
      return found || __closestFrom(el.getRootNode().host);
    }
    return __closestFrom(base);
  }
  function onTouchStart(event2) {
    const swiper = this;
    const document2 = getDocument();
    const window2 = getWindow();
    const data = swiper.touchEventsData;
    data.evCache.push(event2);
    const {
      params,
      touches,
      enabled
    } = swiper;
    if (!enabled)
      return;
    if (!params.simulateTouch && event2.pointerType === "mouse")
      return;
    if (swiper.animating && params.preventInteractionOnTransition) {
      return;
    }
    if (!swiper.animating && params.cssMode && params.loop) {
      swiper.loopFix();
    }
    let e3 = event2;
    if (e3.originalEvent)
      e3 = e3.originalEvent;
    let targetEl = e3.target;
    if (params.touchEventsTarget === "wrapper") {
      if (!swiper.wrapperEl.contains(targetEl))
        return;
    }
    if ("which" in e3 && e3.which === 3)
      return;
    if ("button" in e3 && e3.button > 0)
      return;
    if (data.isTouched && data.isMoved)
      return;
    const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== "";
    const eventPath = event2.composedPath ? event2.composedPath() : event2.path;
    if (swipingClassHasValue && e3.target && e3.target.shadowRoot && eventPath) {
      targetEl = eventPath[0];
    }
    const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;
    const isTargetShadow = !!(e3.target && e3.target.shadowRoot);
    if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {
      swiper.allowClick = true;
      return;
    }
    if (params.swipeHandler) {
      if (!targetEl.closest(params.swipeHandler))
        return;
    }
    touches.currentX = e3.pageX;
    touches.currentY = e3.pageY;
    const startX = touches.currentX;
    const startY = touches.currentY;
    const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;
    const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;
    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window2.innerWidth - edgeSwipeThreshold)) {
      if (edgeSwipeDetection === "prevent") {
        event2.preventDefault();
      } else {
        return;
      }
    }
    Object.assign(data, {
      isTouched: true,
      isMoved: false,
      allowTouchCallbacks: true,
      isScrolling: void 0,
      startMoving: void 0
    });
    touches.startX = startX;
    touches.startY = startY;
    data.touchStartTime = now();
    swiper.allowClick = true;
    swiper.updateSize();
    swiper.swipeDirection = void 0;
    if (params.threshold > 0)
      data.allowThresholdMove = false;
    let preventDefault = true;
    if (targetEl.matches(data.focusableElements)) {
      preventDefault = false;
      if (targetEl.nodeName === "SELECT") {
        data.isTouched = false;
      }
    }
    if (document2.activeElement && document2.activeElement.matches(data.focusableElements) && document2.activeElement !== targetEl) {
      document2.activeElement.blur();
    }
    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;
    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {
      e3.preventDefault();
    }
    if (params.freeMode && params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {
      swiper.freeMode.onTouchStart();
    }
    swiper.emit("touchStart", e3);
  }
  function onTouchMove(event2) {
    const document2 = getDocument();
    const swiper = this;
    const data = swiper.touchEventsData;
    const {
      params,
      touches,
      rtlTranslate: rtl,
      enabled
    } = swiper;
    if (!enabled)
      return;
    if (!params.simulateTouch && event2.pointerType === "mouse")
      return;
    let e3 = event2;
    if (e3.originalEvent)
      e3 = e3.originalEvent;
    if (!data.isTouched) {
      if (data.startMoving && data.isScrolling) {
        swiper.emit("touchMoveOpposite", e3);
      }
      return;
    }
    const pointerIndex = data.evCache.findIndex((cachedEv) => cachedEv.pointerId === e3.pointerId);
    if (pointerIndex >= 0)
      data.evCache[pointerIndex] = e3;
    const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e3;
    const pageX = targetTouch.pageX;
    const pageY = targetTouch.pageY;
    if (e3.preventedByNestedSwiper) {
      touches.startX = pageX;
      touches.startY = pageY;
      return;
    }
    if (!swiper.allowTouchMove) {
      if (!e3.target.matches(data.focusableElements)) {
        swiper.allowClick = false;
      }
      if (data.isTouched) {
        Object.assign(touches, {
          startX: pageX,
          startY: pageY,
          prevX: swiper.touches.currentX,
          prevY: swiper.touches.currentY,
          currentX: pageX,
          currentY: pageY
        });
        data.touchStartTime = now();
      }
      return;
    }
    if (params.touchReleaseOnEdges && !params.loop) {
      if (swiper.isVertical()) {
        if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {
          data.isTouched = false;
          data.isMoved = false;
          return;
        }
      } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {
        return;
      }
    }
    if (document2.activeElement) {
      if (e3.target === document2.activeElement && e3.target.matches(data.focusableElements)) {
        data.isMoved = true;
        swiper.allowClick = false;
        return;
      }
    }
    if (data.allowTouchCallbacks) {
      swiper.emit("touchMove", e3);
    }
    if (e3.targetTouches && e3.targetTouches.length > 1)
      return;
    touches.currentX = pageX;
    touches.currentY = pageY;
    const diffX = touches.currentX - touches.startX;
    const diffY = touches.currentY - touches.startY;
    if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold)
      return;
    if (typeof data.isScrolling === "undefined") {
      let touchAngle;
      if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {
        data.isScrolling = false;
      } else {
        if (diffX * diffX + diffY * diffY >= 25) {
          touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;
          data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;
        }
      }
    }
    if (data.isScrolling) {
      swiper.emit("touchMoveOpposite", e3);
    }
    if (typeof data.startMoving === "undefined") {
      if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {
        data.startMoving = true;
      }
    }
    if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {
      data.isTouched = false;
      return;
    }
    if (!data.startMoving) {
      return;
    }
    swiper.allowClick = false;
    if (!params.cssMode && e3.cancelable) {
      e3.preventDefault();
    }
    if (params.touchMoveStopPropagation && !params.nested) {
      e3.stopPropagation();
    }
    let diff = swiper.isHorizontal() ? diffX : diffY;
    let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;
    if (params.oneWayMovement) {
      diff = Math.abs(diff) * (rtl ? 1 : -1);
      touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);
    }
    touches.diff = diff;
    diff *= params.touchRatio;
    if (rtl) {
      diff = -diff;
      touchesDiff = -touchesDiff;
    }
    const prevTouchesDirection = swiper.touchesDirection;
    swiper.swipeDirection = diff > 0 ? "prev" : "next";
    swiper.touchesDirection = touchesDiff > 0 ? "prev" : "next";
    const isLoop = swiper.params.loop && !params.cssMode;
    const allowLoopFix = swiper.swipeDirection === "next" && swiper.allowSlideNext || swiper.swipeDirection === "prev" && swiper.allowSlidePrev;
    if (!data.isMoved) {
      if (isLoop && allowLoopFix) {
        swiper.loopFix({
          direction: swiper.swipeDirection
        });
      }
      data.startTranslate = swiper.getTranslate();
      swiper.setTransition(0);
      if (swiper.animating) {
        const evt = new window.CustomEvent("transitionend", {
          bubbles: true,
          cancelable: true
        });
        swiper.wrapperEl.dispatchEvent(evt);
      }
      data.allowMomentumBounce = false;
      if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
        swiper.setGrabCursor(true);
      }
      swiper.emit("sliderFirstMove", e3);
    }
    let loopFixed;
    if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && allowLoopFix && Math.abs(diff) >= 1) {
      swiper.loopFix({
        direction: swiper.swipeDirection,
        setTranslate: true
      });
      loopFixed = true;
    }
    swiper.emit("sliderMove", e3);
    data.isMoved = true;
    data.currentTranslate = diff + data.startTranslate;
    let disableParentSwiper = true;
    let resistanceRatio = params.resistanceRatio;
    if (params.touchReleaseOnEdges) {
      resistanceRatio = 0;
    }
    if (diff > 0) {
      if (isLoop && allowLoopFix && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {
        swiper.loopFix({
          direction: "prev",
          setTranslate: true,
          activeSlideIndex: 0
        });
      }
      if (data.currentTranslate > swiper.minTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) {
          data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;
        }
      }
    } else if (diff < 0) {
      if (isLoop && allowLoopFix && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {
        swiper.loopFix({
          direction: "next",
          setTranslate: true,
          activeSlideIndex: swiper.slides.length - (params.slidesPerView === "auto" ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))
        });
      }
      if (data.currentTranslate < swiper.maxTranslate()) {
        disableParentSwiper = false;
        if (params.resistance) {
          data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;
        }
      }
    }
    if (disableParentSwiper) {
      e3.preventedByNestedSwiper = true;
    }
    if (!swiper.allowSlideNext && swiper.swipeDirection === "next" && data.currentTranslate < data.startTranslate) {
      data.currentTranslate = data.startTranslate;
    }
    if (!swiper.allowSlidePrev && swiper.swipeDirection === "prev" && data.currentTranslate > data.startTranslate) {
      data.currentTranslate = data.startTranslate;
    }
    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {
      data.currentTranslate = data.startTranslate;
    }
    if (params.threshold > 0) {
      if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {
        if (!data.allowThresholdMove) {
          data.allowThresholdMove = true;
          touches.startX = touches.currentX;
          touches.startY = touches.currentY;
          data.currentTranslate = data.startTranslate;
          touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;
          return;
        }
      } else {
        data.currentTranslate = data.startTranslate;
        return;
      }
    }
    if (!params.followFinger || params.cssMode)
      return;
    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }
    if (params.freeMode && params.freeMode.enabled && swiper.freeMode) {
      swiper.freeMode.onTouchMove();
    }
    swiper.updateProgress(data.currentTranslate);
    swiper.setTranslate(data.currentTranslate);
  }
  function onTouchEnd(event2) {
    const swiper = this;
    const data = swiper.touchEventsData;
    const pointerIndex = data.evCache.findIndex((cachedEv) => cachedEv.pointerId === event2.pointerId);
    if (pointerIndex >= 0) {
      data.evCache.splice(pointerIndex, 1);
    }
    if (["pointercancel", "pointerout", "pointerleave", "contextmenu"].includes(event2.type)) {
      const proceed = ["pointercancel", "contextmenu"].includes(event2.type) && (swiper.browser.isSafari || swiper.browser.isWebView);
      if (!proceed) {
        return;
      }
    }
    const {
      params,
      touches,
      rtlTranslate: rtl,
      slidesGrid,
      enabled
    } = swiper;
    if (!enabled)
      return;
    if (!params.simulateTouch && event2.pointerType === "mouse")
      return;
    let e3 = event2;
    if (e3.originalEvent)
      e3 = e3.originalEvent;
    if (data.allowTouchCallbacks) {
      swiper.emit("touchEnd", e3);
    }
    data.allowTouchCallbacks = false;
    if (!data.isTouched) {
      if (data.isMoved && params.grabCursor) {
        swiper.setGrabCursor(false);
      }
      data.isMoved = false;
      data.startMoving = false;
      return;
    }
    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {
      swiper.setGrabCursor(false);
    }
    const touchEndTime = now();
    const timeDiff = touchEndTime - data.touchStartTime;
    if (swiper.allowClick) {
      const pathTree = e3.path || e3.composedPath && e3.composedPath();
      swiper.updateClickedSlide(pathTree && pathTree[0] || e3.target, pathTree);
      swiper.emit("tap click", e3);
      if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {
        swiper.emit("doubleTap doubleClick", e3);
      }
    }
    data.lastClickTime = now();
    nextTick(() => {
      if (!swiper.destroyed)
        swiper.allowClick = true;
    });
    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {
      data.isTouched = false;
      data.isMoved = false;
      data.startMoving = false;
      return;
    }
    data.isTouched = false;
    data.isMoved = false;
    data.startMoving = false;
    let currentPos;
    if (params.followFinger) {
      currentPos = rtl ? swiper.translate : -swiper.translate;
    } else {
      currentPos = -data.currentTranslate;
    }
    if (params.cssMode) {
      return;
    }
    if (params.freeMode && params.freeMode.enabled) {
      swiper.freeMode.onTouchEnd({
        currentPos
      });
      return;
    }
    let stopIndex = 0;
    let groupSize = swiper.slidesSizesGrid[0];
    for (let i2 = 0; i2 < slidesGrid.length; i2 += i2 < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {
      const increment2 = i2 < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
      if (typeof slidesGrid[i2 + increment2] !== "undefined") {
        if (currentPos >= slidesGrid[i2] && currentPos < slidesGrid[i2 + increment2]) {
          stopIndex = i2;
          groupSize = slidesGrid[i2 + increment2] - slidesGrid[i2];
        }
      } else if (currentPos >= slidesGrid[i2]) {
        stopIndex = i2;
        groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];
      }
    }
    let rewindFirstIndex = null;
    let rewindLastIndex = null;
    if (params.rewind) {
      if (swiper.isBeginning) {
        rewindLastIndex = params.virtual && params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;
      } else if (swiper.isEnd) {
        rewindFirstIndex = 0;
      }
    }
    const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;
    const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;
    if (timeDiff > params.longSwipesMs) {
      if (!params.longSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }
      if (swiper.swipeDirection === "next") {
        if (ratio >= params.longSwipesRatio)
          swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);
        else
          swiper.slideTo(stopIndex);
      }
      if (swiper.swipeDirection === "prev") {
        if (ratio > 1 - params.longSwipesRatio) {
          swiper.slideTo(stopIndex + increment);
        } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {
          swiper.slideTo(rewindLastIndex);
        } else {
          swiper.slideTo(stopIndex);
        }
      }
    } else {
      if (!params.shortSwipes) {
        swiper.slideTo(swiper.activeIndex);
        return;
      }
      const isNavButtonTarget = swiper.navigation && (e3.target === swiper.navigation.nextEl || e3.target === swiper.navigation.prevEl);
      if (!isNavButtonTarget) {
        if (swiper.swipeDirection === "next") {
          swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);
        }
        if (swiper.swipeDirection === "prev") {
          swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);
        }
      } else if (e3.target === swiper.navigation.nextEl) {
        swiper.slideTo(stopIndex + increment);
      } else {
        swiper.slideTo(stopIndex);
      }
    }
  }
  function onResize() {
    const swiper = this;
    const {
      params,
      el
    } = swiper;
    if (el && el.offsetWidth === 0)
      return;
    if (params.breakpoints) {
      swiper.setBreakpoint();
    }
    const {
      allowSlideNext,
      allowSlidePrev,
      snapGrid
    } = swiper;
    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;
    swiper.allowSlideNext = true;
    swiper.allowSlidePrev = true;
    swiper.updateSize();
    swiper.updateSlides();
    swiper.updateSlidesClasses();
    const isVirtualLoop = isVirtual && params.loop;
    if ((params.slidesPerView === "auto" || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {
      swiper.slideTo(swiper.slides.length - 1, 0, false, true);
    } else {
      if (swiper.params.loop && !isVirtual) {
        swiper.slideToLoop(swiper.realIndex, 0, false, true);
      } else {
        swiper.slideTo(swiper.activeIndex, 0, false, true);
      }
    }
    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {
      clearTimeout(swiper.autoplay.resizeTimeout);
      swiper.autoplay.resizeTimeout = setTimeout(() => {
        if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {
          swiper.autoplay.resume();
        }
      }, 500);
    }
    swiper.allowSlidePrev = allowSlidePrev;
    swiper.allowSlideNext = allowSlideNext;
    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {
      swiper.checkOverflow();
    }
  }
  function onClick(e3) {
    const swiper = this;
    if (!swiper.enabled)
      return;
    if (!swiper.allowClick) {
      if (swiper.params.preventClicks)
        e3.preventDefault();
      if (swiper.params.preventClicksPropagation && swiper.animating) {
        e3.stopPropagation();
        e3.stopImmediatePropagation();
      }
    }
  }
  function onScroll() {
    const swiper = this;
    const {
      wrapperEl,
      rtlTranslate,
      enabled
    } = swiper;
    if (!enabled)
      return;
    swiper.previousTranslate = swiper.translate;
    if (swiper.isHorizontal()) {
      swiper.translate = -wrapperEl.scrollLeft;
    } else {
      swiper.translate = -wrapperEl.scrollTop;
    }
    if (swiper.translate === 0)
      swiper.translate = 0;
    swiper.updateActiveIndex();
    swiper.updateSlidesClasses();
    let newProgress;
    const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();
    if (translatesDiff === 0) {
      newProgress = 0;
    } else {
      newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;
    }
    if (newProgress !== swiper.progress) {
      swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);
    }
    swiper.emit("setTranslate", swiper.translate, false);
  }
  function onLoad(e3) {
    const swiper = this;
    processLazyPreloader(swiper, e3.target);
    if (swiper.params.cssMode || swiper.params.slidesPerView !== "auto" && !swiper.params.autoHeight) {
      return;
    }
    swiper.update();
  }
  var dummyEventAttached = false;
  function dummyEventListener() {
  }
  var events = (swiper, method) => {
    const document2 = getDocument();
    const {
      params,
      el,
      wrapperEl,
      device
    } = swiper;
    const capture = !!params.nested;
    const domMethod = method === "on" ? "addEventListener" : "removeEventListener";
    const swiperMethod = method;
    el[domMethod]("pointerdown", swiper.onTouchStart, {
      passive: false
    });
    document2[domMethod]("pointermove", swiper.onTouchMove, {
      passive: false,
      capture
    });
    document2[domMethod]("pointerup", swiper.onTouchEnd, {
      passive: true
    });
    document2[domMethod]("pointercancel", swiper.onTouchEnd, {
      passive: true
    });
    document2[domMethod]("pointerout", swiper.onTouchEnd, {
      passive: true
    });
    document2[domMethod]("pointerleave", swiper.onTouchEnd, {
      passive: true
    });
    document2[domMethod]("contextmenu", swiper.onTouchEnd, {
      passive: true
    });
    if (params.preventClicks || params.preventClicksPropagation) {
      el[domMethod]("click", swiper.onClick, true);
    }
    if (params.cssMode) {
      wrapperEl[domMethod]("scroll", swiper.onScroll);
    }
    if (params.updateOnWindowResize) {
      swiper[swiperMethod](device.ios || device.android ? "resize orientationchange observerUpdate" : "resize observerUpdate", onResize, true);
    } else {
      swiper[swiperMethod]("observerUpdate", onResize, true);
    }
    el[domMethod]("load", swiper.onLoad, {
      capture: true
    });
  };
  function attachEvents() {
    const swiper = this;
    const document2 = getDocument();
    const {
      params
    } = swiper;
    swiper.onTouchStart = onTouchStart.bind(swiper);
    swiper.onTouchMove = onTouchMove.bind(swiper);
    swiper.onTouchEnd = onTouchEnd.bind(swiper);
    if (params.cssMode) {
      swiper.onScroll = onScroll.bind(swiper);
    }
    swiper.onClick = onClick.bind(swiper);
    swiper.onLoad = onLoad.bind(swiper);
    if (!dummyEventAttached) {
      document2.addEventListener("touchstart", dummyEventListener);
      dummyEventAttached = true;
    }
    events(swiper, "on");
  }
  function detachEvents() {
    const swiper = this;
    events(swiper, "off");
  }
  var events$1 = {
    attachEvents,
    detachEvents
  };
  var isGridEnabled = (swiper, params) => {
    return swiper.grid && params.grid && params.grid.rows > 1;
  };
  function setBreakpoint() {
    const swiper = this;
    const {
      realIndex,
      initialized,
      params,
      el
    } = swiper;
    const breakpoints2 = params.breakpoints;
    if (!breakpoints2 || breakpoints2 && Object.keys(breakpoints2).length === 0)
      return;
    const breakpoint = swiper.getBreakpoint(breakpoints2, swiper.params.breakpointsBase, swiper.el);
    if (!breakpoint || swiper.currentBreakpoint === breakpoint)
      return;
    const breakpointOnlyParams = breakpoint in breakpoints2 ? breakpoints2[breakpoint] : void 0;
    const breakpointParams = breakpointOnlyParams || swiper.originalParams;
    const wasMultiRow = isGridEnabled(swiper, params);
    const isMultiRow = isGridEnabled(swiper, breakpointParams);
    const wasEnabled = params.enabled;
    if (wasMultiRow && !isMultiRow) {
      el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);
      swiper.emitContainerClasses();
    } else if (!wasMultiRow && isMultiRow) {
      el.classList.add(`${params.containerModifierClass}grid`);
      if (breakpointParams.grid.fill && breakpointParams.grid.fill === "column" || !breakpointParams.grid.fill && params.grid.fill === "column") {
        el.classList.add(`${params.containerModifierClass}grid-column`);
      }
      swiper.emitContainerClasses();
    }
    ["navigation", "pagination", "scrollbar"].forEach((prop) => {
      if (typeof breakpointParams[prop] === "undefined")
        return;
      const wasModuleEnabled = params[prop] && params[prop].enabled;
      const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;
      if (wasModuleEnabled && !isModuleEnabled) {
        swiper[prop].disable();
      }
      if (!wasModuleEnabled && isModuleEnabled) {
        swiper[prop].enable();
      }
    });
    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;
    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);
    const wasLoop = params.loop;
    if (directionChanged && initialized) {
      swiper.changeDirection();
    }
    extend2(swiper.params, breakpointParams);
    const isEnabled = swiper.params.enabled;
    const hasLoop = swiper.params.loop;
    Object.assign(swiper, {
      allowTouchMove: swiper.params.allowTouchMove,
      allowSlideNext: swiper.params.allowSlideNext,
      allowSlidePrev: swiper.params.allowSlidePrev
    });
    if (wasEnabled && !isEnabled) {
      swiper.disable();
    } else if (!wasEnabled && isEnabled) {
      swiper.enable();
    }
    swiper.currentBreakpoint = breakpoint;
    swiper.emit("_beforeBreakpoint", breakpointParams);
    if (initialized) {
      if (needsReLoop) {
        swiper.loopDestroy();
        swiper.loopCreate(realIndex);
        swiper.updateSlides();
      } else if (!wasLoop && hasLoop) {
        swiper.loopCreate(realIndex);
        swiper.updateSlides();
      } else if (wasLoop && !hasLoop) {
        swiper.loopDestroy();
      }
    }
    swiper.emit("breakpoint", breakpointParams);
  }
  function getBreakpoint(breakpoints2, base, containerEl) {
    if (base === void 0) {
      base = "window";
    }
    if (!breakpoints2 || base === "container" && !containerEl)
      return void 0;
    let breakpoint = false;
    const window2 = getWindow();
    const currentHeight = base === "window" ? window2.innerHeight : containerEl.clientHeight;
    const points = Object.keys(breakpoints2).map((point) => {
      if (typeof point === "string" && point.indexOf("@") === 0) {
        const minRatio = parseFloat(point.substr(1));
        const value = currentHeight * minRatio;
        return {
          value,
          point
        };
      }
      return {
        value: point,
        point
      };
    });
    points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));
    for (let i2 = 0; i2 < points.length; i2 += 1) {
      const {
        point,
        value
      } = points[i2];
      if (base === "window") {
        if (window2.matchMedia(`(min-width: ${value}px)`).matches) {
          breakpoint = point;
        }
      } else if (value <= containerEl.clientWidth) {
        breakpoint = point;
      }
    }
    return breakpoint || "max";
  }
  var breakpoints = {
    setBreakpoint,
    getBreakpoint
  };
  function prepareClasses(entries, prefix) {
    const resultClasses = [];
    entries.forEach((item) => {
      if (typeof item === "object") {
        Object.keys(item).forEach((classNames) => {
          if (item[classNames]) {
            resultClasses.push(prefix + classNames);
          }
        });
      } else if (typeof item === "string") {
        resultClasses.push(prefix + item);
      }
    });
    return resultClasses;
  }
  function addClasses() {
    const swiper = this;
    const {
      classNames,
      params,
      rtl,
      el,
      device
    } = swiper;
    const suffixes = prepareClasses(["initialized", params.direction, {
      "free-mode": swiper.params.freeMode && params.freeMode.enabled
    }, {
      "autoheight": params.autoHeight
    }, {
      "rtl": rtl
    }, {
      "grid": params.grid && params.grid.rows > 1
    }, {
      "grid-column": params.grid && params.grid.rows > 1 && params.grid.fill === "column"
    }, {
      "android": device.android
    }, {
      "ios": device.ios
    }, {
      "css-mode": params.cssMode
    }, {
      "centered": params.cssMode && params.centeredSlides
    }, {
      "watch-progress": params.watchSlidesProgress
    }], params.containerModifierClass);
    classNames.push(...suffixes);
    el.classList.add(...classNames);
    swiper.emitContainerClasses();
  }
  function removeClasses() {
    const swiper = this;
    const {
      el,
      classNames
    } = swiper;
    el.classList.remove(...classNames);
    swiper.emitContainerClasses();
  }
  var classes = {
    addClasses,
    removeClasses
  };
  function checkOverflow() {
    const swiper = this;
    const {
      isLocked: wasLocked,
      params
    } = swiper;
    const {
      slidesOffsetBefore
    } = params;
    if (slidesOffsetBefore) {
      const lastSlideIndex = swiper.slides.length - 1;
      const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;
      swiper.isLocked = swiper.size > lastSlideRightEdge;
    } else {
      swiper.isLocked = swiper.snapGrid.length === 1;
    }
    if (params.allowSlideNext === true) {
      swiper.allowSlideNext = !swiper.isLocked;
    }
    if (params.allowSlidePrev === true) {
      swiper.allowSlidePrev = !swiper.isLocked;
    }
    if (wasLocked && wasLocked !== swiper.isLocked) {
      swiper.isEnd = false;
    }
    if (wasLocked !== swiper.isLocked) {
      swiper.emit(swiper.isLocked ? "lock" : "unlock");
    }
  }
  var checkOverflow$1 = {
    checkOverflow
  };
  var defaults2 = {
    init: true,
    direction: "horizontal",
    oneWayMovement: false,
    touchEventsTarget: "wrapper",
    initialSlide: 0,
    speed: 300,
    cssMode: false,
    updateOnWindowResize: true,
    resizeObserver: true,
    nested: false,
    createElements: false,
    enabled: true,
    focusableElements: "input, select, option, textarea, button, video, label",
    // Overrides
    width: null,
    height: null,
    //
    preventInteractionOnTransition: false,
    // ssr
    userAgent: null,
    url: null,
    // To support iOS's swipe-to-go-back gesture (when being used in-app).
    edgeSwipeDetection: false,
    edgeSwipeThreshold: 20,
    // Autoheight
    autoHeight: false,
    // Set wrapper width
    setWrapperSize: false,
    // Virtual Translate
    virtualTranslate: false,
    // Effects
    effect: "slide",
    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'
    // Breakpoints
    breakpoints: void 0,
    breakpointsBase: "window",
    // Slides grid
    spaceBetween: 0,
    slidesPerView: 1,
    slidesPerGroup: 1,
    slidesPerGroupSkip: 0,
    slidesPerGroupAuto: false,
    centeredSlides: false,
    centeredSlidesBounds: false,
    slidesOffsetBefore: 0,
    // in px
    slidesOffsetAfter: 0,
    // in px
    normalizeSlideIndex: true,
    centerInsufficientSlides: false,
    // Disable swiper and hide navigation when container not overflow
    watchOverflow: true,
    // Round length
    roundLengths: false,
    // Touches
    touchRatio: 1,
    touchAngle: 45,
    simulateTouch: true,
    shortSwipes: true,
    longSwipes: true,
    longSwipesRatio: 0.5,
    longSwipesMs: 300,
    followFinger: true,
    allowTouchMove: true,
    threshold: 5,
    touchMoveStopPropagation: false,
    touchStartPreventDefault: true,
    touchStartForcePreventDefault: false,
    touchReleaseOnEdges: false,
    // Unique Navigation Elements
    uniqueNavElements: true,
    // Resistance
    resistance: true,
    resistanceRatio: 0.85,
    // Progress
    watchSlidesProgress: false,
    // Cursor
    grabCursor: false,
    // Clicks
    preventClicks: true,
    preventClicksPropagation: true,
    slideToClickedSlide: false,
    // loop
    loop: false,
    loopedSlides: null,
    loopPreventsSliding: true,
    // rewind
    rewind: false,
    // Swiping/no swiping
    allowSlidePrev: true,
    allowSlideNext: true,
    swipeHandler: null,
    // '.swipe-handler',
    noSwiping: true,
    noSwipingClass: "swiper-no-swiping",
    noSwipingSelector: null,
    // Passive Listeners
    passiveListeners: true,
    maxBackfaceHiddenSlides: 10,
    // NS
    containerModifierClass: "swiper-",
    // NEW
    slideClass: "swiper-slide",
    slideActiveClass: "swiper-slide-active",
    slideVisibleClass: "swiper-slide-visible",
    slideNextClass: "swiper-slide-next",
    slidePrevClass: "swiper-slide-prev",
    wrapperClass: "swiper-wrapper",
    lazyPreloaderClass: "swiper-lazy-preloader",
    lazyPreloadPrevNext: 0,
    // Callbacks
    runCallbacksOnInit: true,
    // Internals
    _emitClasses: false
  };
  function moduleExtendParams(params, allModulesParams) {
    return function extendParams(obj) {
      if (obj === void 0) {
        obj = {};
      }
      const moduleParamName = Object.keys(obj)[0];
      const moduleParams = obj[moduleParamName];
      if (typeof moduleParams !== "object" || moduleParams === null) {
        extend2(allModulesParams, obj);
        return;
      }
      if (params[moduleParamName] === true) {
        params[moduleParamName] = {
          enabled: true
        };
      }
      if (moduleParamName === "navigation" && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].prevEl && !params[moduleParamName].nextEl) {
        params[moduleParamName].auto = true;
      }
      if (["pagination", "scrollbar"].indexOf(moduleParamName) >= 0 && params[moduleParamName] && params[moduleParamName].enabled && !params[moduleParamName].el) {
        params[moduleParamName].auto = true;
      }
      if (!(moduleParamName in params && "enabled" in moduleParams)) {
        extend2(allModulesParams, obj);
        return;
      }
      if (typeof params[moduleParamName] === "object" && !("enabled" in params[moduleParamName])) {
        params[moduleParamName].enabled = true;
      }
      if (!params[moduleParamName])
        params[moduleParamName] = {
          enabled: false
        };
      extend2(allModulesParams, obj);
    };
  }
  var prototypes = {
    eventsEmitter,
    update,
    translate,
    transition,
    slide,
    loop,
    grabCursor,
    events: events$1,
    breakpoints,
    checkOverflow: checkOverflow$1,
    classes
  };
  var extendedDefaults = {};
  var Swiper = class {
    constructor() {
      let el;
      let params;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === "Object") {
        params = args[0];
      } else {
        [el, params] = args;
      }
      if (!params)
        params = {};
      params = extend2({}, params);
      if (el && !params.el)
        params.el = el;
      const document2 = getDocument();
      if (params.el && typeof params.el === "string" && document2.querySelectorAll(params.el).length > 1) {
        const swipers = [];
        document2.querySelectorAll(params.el).forEach((containerEl) => {
          const newParams = extend2({}, params, {
            el: containerEl
          });
          swipers.push(new Swiper(newParams));
        });
        return swipers;
      }
      const swiper = this;
      swiper.__swiper__ = true;
      swiper.support = getSupport();
      swiper.device = getDevice({
        userAgent: params.userAgent
      });
      swiper.browser = getBrowser();
      swiper.eventsListeners = {};
      swiper.eventsAnyListeners = [];
      swiper.modules = [...swiper.__modules__];
      if (params.modules && Array.isArray(params.modules)) {
        swiper.modules.push(...params.modules);
      }
      const allModulesParams = {};
      swiper.modules.forEach((mod) => {
        mod({
          params,
          swiper,
          extendParams: moduleExtendParams(params, allModulesParams),
          on: swiper.on.bind(swiper),
          once: swiper.once.bind(swiper),
          off: swiper.off.bind(swiper),
          emit: swiper.emit.bind(swiper)
        });
      });
      const swiperParams = extend2({}, defaults2, allModulesParams);
      swiper.params = extend2({}, swiperParams, extendedDefaults, params);
      swiper.originalParams = extend2({}, swiper.params);
      swiper.passedParams = extend2({}, params);
      if (swiper.params && swiper.params.on) {
        Object.keys(swiper.params.on).forEach((eventName) => {
          swiper.on(eventName, swiper.params.on[eventName]);
        });
      }
      if (swiper.params && swiper.params.onAny) {
        swiper.onAny(swiper.params.onAny);
      }
      Object.assign(swiper, {
        enabled: swiper.params.enabled,
        el,
        // Classes
        classNames: [],
        // Slides
        slides: [],
        slidesGrid: [],
        snapGrid: [],
        slidesSizesGrid: [],
        // isDirection
        isHorizontal() {
          return swiper.params.direction === "horizontal";
        },
        isVertical() {
          return swiper.params.direction === "vertical";
        },
        // Indexes
        activeIndex: 0,
        realIndex: 0,
        //
        isBeginning: true,
        isEnd: false,
        // Props
        translate: 0,
        previousTranslate: 0,
        progress: 0,
        velocity: 0,
        animating: false,
        cssOverflowAdjustment() {
          return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;
        },
        // Locks
        allowSlideNext: swiper.params.allowSlideNext,
        allowSlidePrev: swiper.params.allowSlidePrev,
        // Touch Events
        touchEventsData: {
          isTouched: void 0,
          isMoved: void 0,
          allowTouchCallbacks: void 0,
          touchStartTime: void 0,
          isScrolling: void 0,
          currentTranslate: void 0,
          startTranslate: void 0,
          allowThresholdMove: void 0,
          // Form elements to match
          focusableElements: swiper.params.focusableElements,
          // Last click time
          lastClickTime: 0,
          clickTimeout: void 0,
          // Velocities
          velocities: [],
          allowMomentumBounce: void 0,
          startMoving: void 0,
          evCache: []
        },
        // Clicks
        allowClick: true,
        // Touches
        allowTouchMove: swiper.params.allowTouchMove,
        touches: {
          startX: 0,
          startY: 0,
          currentX: 0,
          currentY: 0,
          diff: 0
        },
        // Images
        imagesToLoad: [],
        imagesLoaded: 0
      });
      swiper.emit("_swiper");
      if (swiper.params.init) {
        swiper.init();
      }
      return swiper;
    }
    getSlideIndex(slideEl) {
      const {
        slidesEl,
        params
      } = this;
      const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);
      const firstSlideIndex = elementIndex(slides[0]);
      return elementIndex(slideEl) - firstSlideIndex;
    }
    getSlideIndexByData(index) {
      return this.getSlideIndex(this.slides.filter((slideEl) => slideEl.getAttribute("data-swiper-slide-index") * 1 === index)[0]);
    }
    recalcSlides() {
      const swiper = this;
      const {
        slidesEl,
        params
      } = swiper;
      swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);
    }
    enable() {
      const swiper = this;
      if (swiper.enabled)
        return;
      swiper.enabled = true;
      if (swiper.params.grabCursor) {
        swiper.setGrabCursor();
      }
      swiper.emit("enable");
    }
    disable() {
      const swiper = this;
      if (!swiper.enabled)
        return;
      swiper.enabled = false;
      if (swiper.params.grabCursor) {
        swiper.unsetGrabCursor();
      }
      swiper.emit("disable");
    }
    setProgress(progress, speed) {
      const swiper = this;
      progress = Math.min(Math.max(progress, 0), 1);
      const min = swiper.minTranslate();
      const max2 = swiper.maxTranslate();
      const current = (max2 - min) * progress + min;
      swiper.translateTo(current, typeof speed === "undefined" ? 0 : speed);
      swiper.updateActiveIndex();
      swiper.updateSlidesClasses();
    }
    emitContainerClasses() {
      const swiper = this;
      if (!swiper.params._emitClasses || !swiper.el)
        return;
      const cls = swiper.el.className.split(" ").filter((className) => {
        return className.indexOf("swiper") === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;
      });
      swiper.emit("_containerClasses", cls.join(" "));
    }
    getSlideClasses(slideEl) {
      const swiper = this;
      if (swiper.destroyed)
        return "";
      return slideEl.className.split(" ").filter((className) => {
        return className.indexOf("swiper-slide") === 0 || className.indexOf(swiper.params.slideClass) === 0;
      }).join(" ");
    }
    emitSlidesClasses() {
      const swiper = this;
      if (!swiper.params._emitClasses || !swiper.el)
        return;
      const updates = [];
      swiper.slides.forEach((slideEl) => {
        const classNames = swiper.getSlideClasses(slideEl);
        updates.push({
          slideEl,
          classNames
        });
        swiper.emit("_slideClass", slideEl, classNames);
      });
      swiper.emit("_slideClasses", updates);
    }
    slidesPerViewDynamic(view, exact) {
      if (view === void 0) {
        view = "current";
      }
      if (exact === void 0) {
        exact = false;
      }
      const swiper = this;
      const {
        params,
        slides,
        slidesGrid,
        slidesSizesGrid,
        size: swiperSize,
        activeIndex
      } = swiper;
      let spv = 1;
      if (typeof params.slidesPerView === "number")
        return params.slidesPerView;
      if (params.centeredSlides) {
        let slideSize = slides[activeIndex] ? slides[activeIndex].swiperSlideSize : 0;
        let breakLoop;
        for (let i2 = activeIndex + 1; i2 < slides.length; i2 += 1) {
          if (slides[i2] && !breakLoop) {
            slideSize += slides[i2].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize)
              breakLoop = true;
          }
        }
        for (let i2 = activeIndex - 1; i2 >= 0; i2 -= 1) {
          if (slides[i2] && !breakLoop) {
            slideSize += slides[i2].swiperSlideSize;
            spv += 1;
            if (slideSize > swiperSize)
              breakLoop = true;
          }
        }
      } else {
        if (view === "current") {
          for (let i2 = activeIndex + 1; i2 < slides.length; i2 += 1) {
            const slideInView = exact ? slidesGrid[i2] + slidesSizesGrid[i2] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i2] - slidesGrid[activeIndex] < swiperSize;
            if (slideInView) {
              spv += 1;
            }
          }
        } else {
          for (let i2 = activeIndex - 1; i2 >= 0; i2 -= 1) {
            const slideInView = slidesGrid[activeIndex] - slidesGrid[i2] < swiperSize;
            if (slideInView) {
              spv += 1;
            }
          }
        }
      }
      return spv;
    }
    update() {
      const swiper = this;
      if (!swiper || swiper.destroyed)
        return;
      const {
        snapGrid,
        params
      } = swiper;
      if (params.breakpoints) {
        swiper.setBreakpoint();
      }
      [...swiper.el.querySelectorAll('[loading="lazy"]')].forEach((imageEl) => {
        if (imageEl.complete) {
          processLazyPreloader(swiper, imageEl);
        }
      });
      swiper.updateSize();
      swiper.updateSlides();
      swiper.updateProgress();
      swiper.updateSlidesClasses();
      function setTranslate2() {
        const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;
        const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());
        swiper.setTranslate(newTranslate);
        swiper.updateActiveIndex();
        swiper.updateSlidesClasses();
      }
      let translated;
      if (params.freeMode && params.freeMode.enabled && !params.cssMode) {
        setTranslate2();
        if (params.autoHeight) {
          swiper.updateAutoHeight();
        }
      } else {
        if ((params.slidesPerView === "auto" || params.slidesPerView > 1) && swiper.isEnd && !params.centeredSlides) {
          const slides = swiper.virtual && params.virtual.enabled ? swiper.virtual.slides : swiper.slides;
          translated = swiper.slideTo(slides.length - 1, 0, false, true);
        } else {
          translated = swiper.slideTo(swiper.activeIndex, 0, false, true);
        }
        if (!translated) {
          setTranslate2();
        }
      }
      if (params.watchOverflow && snapGrid !== swiper.snapGrid) {
        swiper.checkOverflow();
      }
      swiper.emit("update");
    }
    changeDirection(newDirection, needUpdate) {
      if (needUpdate === void 0) {
        needUpdate = true;
      }
      const swiper = this;
      const currentDirection = swiper.params.direction;
      if (!newDirection) {
        newDirection = currentDirection === "horizontal" ? "vertical" : "horizontal";
      }
      if (newDirection === currentDirection || newDirection !== "horizontal" && newDirection !== "vertical") {
        return swiper;
      }
      swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);
      swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);
      swiper.emitContainerClasses();
      swiper.params.direction = newDirection;
      swiper.slides.forEach((slideEl) => {
        if (newDirection === "vertical") {
          slideEl.style.width = "";
        } else {
          slideEl.style.height = "";
        }
      });
      swiper.emit("changeDirection");
      if (needUpdate)
        swiper.update();
      return swiper;
    }
    changeLanguageDirection(direction) {
      const swiper = this;
      if (swiper.rtl && direction === "rtl" || !swiper.rtl && direction === "ltr")
        return;
      swiper.rtl = direction === "rtl";
      swiper.rtlTranslate = swiper.params.direction === "horizontal" && swiper.rtl;
      if (swiper.rtl) {
        swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);
        swiper.el.dir = "rtl";
      } else {
        swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);
        swiper.el.dir = "ltr";
      }
      swiper.update();
    }
    mount(element) {
      const swiper = this;
      if (swiper.mounted)
        return true;
      let el = element || swiper.params.el;
      if (typeof el === "string") {
        el = document.querySelector(el);
      }
      if (!el) {
        return false;
      }
      el.swiper = swiper;
      if (el.parentNode && el.parentNode.host && el.parentNode.host.nodeName === "SWIPER-CONTAINER") {
        swiper.isElement = true;
      }
      const getWrapperSelector = () => {
        return `.${(swiper.params.wrapperClass || "").trim().split(" ").join(".")}`;
      };
      const getWrapper = () => {
        if (el && el.shadowRoot && el.shadowRoot.querySelector) {
          const res = el.shadowRoot.querySelector(getWrapperSelector());
          return res;
        }
        return elementChildren(el, getWrapperSelector())[0];
      };
      let wrapperEl = getWrapper();
      if (!wrapperEl && swiper.params.createElements) {
        wrapperEl = createElement("div", swiper.params.wrapperClass);
        el.append(wrapperEl);
        elementChildren(el, `.${swiper.params.slideClass}`).forEach((slideEl) => {
          wrapperEl.append(slideEl);
        });
      }
      Object.assign(swiper, {
        el,
        wrapperEl,
        slidesEl: swiper.isElement && !el.parentNode.host.slideSlots ? el.parentNode.host : wrapperEl,
        hostEl: swiper.isElement ? el.parentNode.host : el,
        mounted: true,
        // RTL
        rtl: el.dir.toLowerCase() === "rtl" || elementStyle(el, "direction") === "rtl",
        rtlTranslate: swiper.params.direction === "horizontal" && (el.dir.toLowerCase() === "rtl" || elementStyle(el, "direction") === "rtl"),
        wrongRTL: elementStyle(wrapperEl, "display") === "-webkit-box"
      });
      return true;
    }
    init(el) {
      const swiper = this;
      if (swiper.initialized)
        return swiper;
      const mounted = swiper.mount(el);
      if (mounted === false)
        return swiper;
      swiper.emit("beforeInit");
      if (swiper.params.breakpoints) {
        swiper.setBreakpoint();
      }
      swiper.addClasses();
      swiper.updateSize();
      swiper.updateSlides();
      if (swiper.params.watchOverflow) {
        swiper.checkOverflow();
      }
      if (swiper.params.grabCursor && swiper.enabled) {
        swiper.setGrabCursor();
      }
      if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {
        swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);
      } else {
        swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);
      }
      if (swiper.params.loop) {
        swiper.loopCreate();
      }
      swiper.attachEvents();
      const lazyElements = [...swiper.el.querySelectorAll('[loading="lazy"]')];
      if (swiper.isElement) {
        lazyElements.push(...swiper.hostEl.querySelectorAll('[loading="lazy"]'));
      }
      lazyElements.forEach((imageEl) => {
        if (imageEl.complete) {
          processLazyPreloader(swiper, imageEl);
        } else {
          imageEl.addEventListener("load", (e3) => {
            processLazyPreloader(swiper, e3.target);
          });
        }
      });
      preload(swiper);
      swiper.initialized = true;
      preload(swiper);
      swiper.emit("init");
      swiper.emit("afterInit");
      return swiper;
    }
    destroy(deleteInstance, cleanStyles) {
      if (deleteInstance === void 0) {
        deleteInstance = true;
      }
      if (cleanStyles === void 0) {
        cleanStyles = true;
      }
      const swiper = this;
      const {
        params,
        el,
        wrapperEl,
        slides
      } = swiper;
      if (typeof swiper.params === "undefined" || swiper.destroyed) {
        return null;
      }
      swiper.emit("beforeDestroy");
      swiper.initialized = false;
      swiper.detachEvents();
      if (params.loop) {
        swiper.loopDestroy();
      }
      if (cleanStyles) {
        swiper.removeClasses();
        el.removeAttribute("style");
        wrapperEl.removeAttribute("style");
        if (slides && slides.length) {
          slides.forEach((slideEl) => {
            slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);
            slideEl.removeAttribute("style");
            slideEl.removeAttribute("data-swiper-slide-index");
          });
        }
      }
      swiper.emit("destroy");
      Object.keys(swiper.eventsListeners).forEach((eventName) => {
        swiper.off(eventName);
      });
      if (deleteInstance !== false) {
        swiper.el.swiper = null;
        deleteProps(swiper);
      }
      swiper.destroyed = true;
      return null;
    }
    static extendDefaults(newDefaults) {
      extend2(extendedDefaults, newDefaults);
    }
    static get extendedDefaults() {
      return extendedDefaults;
    }
    static get defaults() {
      return defaults2;
    }
    static installModule(mod) {
      if (!Swiper.prototype.__modules__)
        Swiper.prototype.__modules__ = [];
      const modules = Swiper.prototype.__modules__;
      if (typeof mod === "function" && modules.indexOf(mod) < 0) {
        modules.push(mod);
      }
    }
    static use(module) {
      if (Array.isArray(module)) {
        module.forEach((m) => Swiper.installModule(m));
        return Swiper;
      }
      Swiper.installModule(module);
      return Swiper;
    }
  };
  Object.keys(prototypes).forEach((prototypeGroup) => {
    Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {
      Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];
    });
  });
  Swiper.use([Resize, Observer2]);

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/index.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/virtual.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/keyboard.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/mousewheel.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/navigation.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/create-element-if-not-defined.mjs
  init_live_reload();
  function createElementIfNotDefined(swiper, originalParams, params, checkProps) {
    if (swiper.params.createElements) {
      Object.keys(checkProps).forEach((key) => {
        if (!params[key] && params.auto === true) {
          let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];
          if (!element) {
            element = createElement("div", checkProps[key]);
            element.className = checkProps[key];
            swiper.el.append(element);
          }
          params[key] = element;
          originalParams[key] = element;
        }
      });
    }
    return params;
  }

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/navigation.mjs
  function Navigation(_ref) {
    let {
      swiper,
      extendParams,
      on,
      emit
    } = _ref;
    extendParams({
      navigation: {
        nextEl: null,
        prevEl: null,
        hideOnClick: false,
        disabledClass: "swiper-button-disabled",
        hiddenClass: "swiper-button-hidden",
        lockClass: "swiper-button-lock",
        navigationDisabledClass: "swiper-navigation-disabled"
      }
    });
    swiper.navigation = {
      nextEl: null,
      prevEl: null
    };
    const makeElementsArray = (el) => (Array.isArray(el) ? el : [el]).filter((e3) => !!e3);
    function getEl(el) {
      let res;
      if (el && typeof el === "string" && swiper.isElement) {
        res = swiper.el.querySelector(el);
        if (res)
          return res;
      }
      if (el) {
        if (typeof el === "string")
          res = [...document.querySelectorAll(el)];
        if (swiper.params.uniqueNavElements && typeof el === "string" && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {
          res = swiper.el.querySelector(el);
        }
      }
      if (el && !res)
        return el;
      return res;
    }
    function toggleEl(el, disabled) {
      const params = swiper.params.navigation;
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        if (subEl) {
          subEl.classList[disabled ? "add" : "remove"](...params.disabledClass.split(" "));
          if (subEl.tagName === "BUTTON")
            subEl.disabled = disabled;
          if (swiper.params.watchOverflow && swiper.enabled) {
            subEl.classList[swiper.isLocked ? "add" : "remove"](params.lockClass);
          }
        }
      });
    }
    function update2() {
      const {
        nextEl,
        prevEl
      } = swiper.navigation;
      if (swiper.params.loop) {
        toggleEl(prevEl, false);
        toggleEl(nextEl, false);
        return;
      }
      toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);
      toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);
    }
    function onPrevClick(e3) {
      e3.preventDefault();
      if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind)
        return;
      swiper.slidePrev();
      emit("navigationPrev");
    }
    function onNextClick(e3) {
      e3.preventDefault();
      if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind)
        return;
      swiper.slideNext();
      emit("navigationNext");
    }
    function init4() {
      const params = swiper.params.navigation;
      swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {
        nextEl: "swiper-button-next",
        prevEl: "swiper-button-prev"
      });
      if (!(params.nextEl || params.prevEl))
        return;
      let nextEl = getEl(params.nextEl);
      let prevEl = getEl(params.prevEl);
      Object.assign(swiper.navigation, {
        nextEl,
        prevEl
      });
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      const initButton = (el, dir) => {
        if (el) {
          el.addEventListener("click", dir === "next" ? onNextClick : onPrevClick);
        }
        if (!swiper.enabled && el) {
          el.classList.add(...params.lockClass.split(" "));
        }
      };
      nextEl.forEach((el) => initButton(el, "next"));
      prevEl.forEach((el) => initButton(el, "prev"));
    }
    function destroy() {
      let {
        nextEl,
        prevEl
      } = swiper.navigation;
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      const destroyButton = (el, dir) => {
        el.removeEventListener("click", dir === "next" ? onNextClick : onPrevClick);
        el.classList.remove(...swiper.params.navigation.disabledClass.split(" "));
      };
      nextEl.forEach((el) => destroyButton(el, "next"));
      prevEl.forEach((el) => destroyButton(el, "prev"));
    }
    on("init", () => {
      if (swiper.params.navigation.enabled === false) {
        disable();
      } else {
        init4();
        update2();
      }
    });
    on("toEdge fromEdge lock unlock", () => {
      update2();
    });
    on("destroy", () => {
      destroy();
    });
    on("enable disable", () => {
      let {
        nextEl,
        prevEl
      } = swiper.navigation;
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      if (swiper.enabled) {
        update2();
        return;
      }
      [...nextEl, ...prevEl].filter((el) => !!el).forEach((el) => el.classList.add(swiper.params.navigation.lockClass));
    });
    on("click", (_s, e3) => {
      let {
        nextEl,
        prevEl
      } = swiper.navigation;
      nextEl = makeElementsArray(nextEl);
      prevEl = makeElementsArray(prevEl);
      const targetEl = e3.target;
      if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {
        if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl)))
          return;
        let isHidden;
        if (nextEl.length) {
          isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);
        } else if (prevEl.length) {
          isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);
        }
        if (isHidden === true) {
          emit("navigationShow");
        } else {
          emit("navigationHide");
        }
        [...nextEl, ...prevEl].filter((el) => !!el).forEach((el) => el.classList.toggle(swiper.params.navigation.hiddenClass));
      }
    });
    const enable = () => {
      swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(" "));
      init4();
      update2();
    };
    const disable = () => {
      swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(" "));
      destroy();
    };
    Object.assign(swiper.navigation, {
      enable,
      disable,
      update: update2,
      init: init4,
      destroy
    });
  }

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/pagination.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/classes-to-selector.mjs
  init_live_reload();
  function classesToSelector(classes2) {
    if (classes2 === void 0) {
      classes2 = "";
    }
    return `.${classes2.trim().replace(/([\.:!+\/])/g, "\\$1").replace(/ /g, ".")}`;
  }

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/pagination.mjs
  function Pagination(_ref) {
    let {
      swiper,
      extendParams,
      on,
      emit
    } = _ref;
    const pfx = "swiper-pagination";
    extendParams({
      pagination: {
        el: null,
        bulletElement: "span",
        clickable: false,
        hideOnClick: false,
        renderBullet: null,
        renderProgressbar: null,
        renderFraction: null,
        renderCustom: null,
        progressbarOpposite: false,
        type: "bullets",
        // 'bullets' or 'progressbar' or 'fraction' or 'custom'
        dynamicBullets: false,
        dynamicMainBullets: 1,
        formatFractionCurrent: (number) => number,
        formatFractionTotal: (number) => number,
        bulletClass: `${pfx}-bullet`,
        bulletActiveClass: `${pfx}-bullet-active`,
        modifierClass: `${pfx}-`,
        currentClass: `${pfx}-current`,
        totalClass: `${pfx}-total`,
        hiddenClass: `${pfx}-hidden`,
        progressbarFillClass: `${pfx}-progressbar-fill`,
        progressbarOppositeClass: `${pfx}-progressbar-opposite`,
        clickableClass: `${pfx}-clickable`,
        lockClass: `${pfx}-lock`,
        horizontalClass: `${pfx}-horizontal`,
        verticalClass: `${pfx}-vertical`,
        paginationDisabledClass: `${pfx}-disabled`
      }
    });
    swiper.pagination = {
      el: null,
      bullets: []
    };
    let bulletSize;
    let dynamicBulletIndex = 0;
    const makeElementsArray = (el) => (Array.isArray(el) ? el : [el]).filter((e3) => !!e3);
    function isPaginationDisabled() {
      return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;
    }
    function setSideBullets(bulletEl, position) {
      const {
        bulletActiveClass
      } = swiper.params.pagination;
      if (!bulletEl)
        return;
      bulletEl = bulletEl[`${position === "prev" ? "previous" : "next"}ElementSibling`];
      if (bulletEl) {
        bulletEl.classList.add(`${bulletActiveClass}-${position}`);
        bulletEl = bulletEl[`${position === "prev" ? "previous" : "next"}ElementSibling`];
        if (bulletEl) {
          bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);
        }
      }
    }
    function onBulletClick(e3) {
      const bulletEl = e3.target.closest(classesToSelector(swiper.params.pagination.bulletClass));
      if (!bulletEl) {
        return;
      }
      e3.preventDefault();
      const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;
      if (swiper.params.loop) {
        if (swiper.realIndex === index)
          return;
        const realIndex = swiper.realIndex;
        const newSlideIndex = swiper.getSlideIndexByData(index);
        const currentSlideIndex = swiper.getSlideIndexByData(swiper.realIndex);
        const loopFix2 = (dir) => {
          const indexBeforeLoopFix = swiper.activeIndex;
          swiper.loopFix({
            direction: dir,
            activeSlideIndex: newSlideIndex,
            slideTo: false
          });
          const indexAfterFix = swiper.activeIndex;
          if (indexBeforeLoopFix === indexAfterFix) {
            swiper.slideToLoop(realIndex, 0, false, true);
          }
        };
        if (newSlideIndex > swiper.slides.length - swiper.loopedSlides) {
          loopFix2(newSlideIndex > currentSlideIndex ? "next" : "prev");
        } else if (swiper.params.centeredSlides) {
          const slidesPerView = swiper.params.slidesPerView === "auto" ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(swiper.params.slidesPerView, 10));
          if (newSlideIndex < Math.floor(slidesPerView / 2)) {
            loopFix2("prev");
          }
        }
        swiper.slideToLoop(index);
      } else {
        swiper.slideTo(index);
      }
    }
    function update2() {
      const rtl = swiper.rtl;
      const params = swiper.params.pagination;
      if (isPaginationDisabled())
        return;
      let el = swiper.pagination.el;
      el = makeElementsArray(el);
      let current;
      let previousIndex;
      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
      const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
      if (swiper.params.loop) {
        previousIndex = swiper.previousRealIndex || 0;
        current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;
      } else if (typeof swiper.snapIndex !== "undefined") {
        current = swiper.snapIndex;
        previousIndex = swiper.previousSnapIndex;
      } else {
        previousIndex = swiper.previousIndex || 0;
        current = swiper.activeIndex || 0;
      }
      if (params.type === "bullets" && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {
        const bullets = swiper.pagination.bullets;
        let firstIndex;
        let lastIndex;
        let midIndex;
        if (params.dynamicBullets) {
          bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? "width" : "height", true);
          el.forEach((subEl) => {
            subEl.style[swiper.isHorizontal() ? "width" : "height"] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;
          });
          if (params.dynamicMainBullets > 1 && previousIndex !== void 0) {
            dynamicBulletIndex += current - (previousIndex || 0);
            if (dynamicBulletIndex > params.dynamicMainBullets - 1) {
              dynamicBulletIndex = params.dynamicMainBullets - 1;
            } else if (dynamicBulletIndex < 0) {
              dynamicBulletIndex = 0;
            }
          }
          firstIndex = Math.max(current - dynamicBulletIndex, 0);
          lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);
          midIndex = (lastIndex + firstIndex) / 2;
        }
        bullets.forEach((bulletEl) => {
          const classesToRemove = [...["", "-next", "-next-next", "-prev", "-prev-prev", "-main"].map((suffix) => `${params.bulletActiveClass}${suffix}`)].map((s2) => typeof s2 === "string" && s2.includes(" ") ? s2.split(" ") : s2).flat();
          bulletEl.classList.remove(...classesToRemove);
        });
        if (el.length > 1) {
          bullets.forEach((bullet) => {
            const bulletIndex = elementIndex(bullet);
            if (bulletIndex === current) {
              bullet.classList.add(...params.bulletActiveClass.split(" "));
            } else if (swiper.isElement) {
              bullet.setAttribute("part", "bullet");
            }
            if (params.dynamicBullets) {
              if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {
                bullet.classList.add(...`${params.bulletActiveClass}-main`.split(" "));
              }
              if (bulletIndex === firstIndex) {
                setSideBullets(bullet, "prev");
              }
              if (bulletIndex === lastIndex) {
                setSideBullets(bullet, "next");
              }
            }
          });
        } else {
          const bullet = bullets[current];
          if (bullet) {
            bullet.classList.add(...params.bulletActiveClass.split(" "));
          }
          if (swiper.isElement) {
            bullets.forEach((bulletEl, bulletIndex) => {
              bulletEl.setAttribute("part", bulletIndex === current ? "bullet-active" : "bullet");
            });
          }
          if (params.dynamicBullets) {
            const firstDisplayedBullet = bullets[firstIndex];
            const lastDisplayedBullet = bullets[lastIndex];
            for (let i2 = firstIndex; i2 <= lastIndex; i2 += 1) {
              if (bullets[i2]) {
                bullets[i2].classList.add(...`${params.bulletActiveClass}-main`.split(" "));
              }
            }
            setSideBullets(firstDisplayedBullet, "prev");
            setSideBullets(lastDisplayedBullet, "next");
          }
        }
        if (params.dynamicBullets) {
          const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);
          const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;
          const offsetProp = rtl ? "right" : "left";
          bullets.forEach((bullet) => {
            bullet.style[swiper.isHorizontal() ? offsetProp : "top"] = `${bulletsOffset}px`;
          });
        }
      }
      el.forEach((subEl, subElIndex) => {
        if (params.type === "fraction") {
          subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach((fractionEl) => {
            fractionEl.textContent = params.formatFractionCurrent(current + 1);
          });
          subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach((totalEl) => {
            totalEl.textContent = params.formatFractionTotal(total);
          });
        }
        if (params.type === "progressbar") {
          let progressbarDirection;
          if (params.progressbarOpposite) {
            progressbarDirection = swiper.isHorizontal() ? "vertical" : "horizontal";
          } else {
            progressbarDirection = swiper.isHorizontal() ? "horizontal" : "vertical";
          }
          const scale = (current + 1) / total;
          let scaleX = 1;
          let scaleY = 1;
          if (progressbarDirection === "horizontal") {
            scaleX = scale;
          } else {
            scaleY = scale;
          }
          subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach((progressEl) => {
            progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;
            progressEl.style.transitionDuration = `${swiper.params.speed}ms`;
          });
        }
        if (params.type === "custom" && params.renderCustom) {
          subEl.innerHTML = params.renderCustom(swiper, current + 1, total);
          if (subElIndex === 0)
            emit("paginationRender", subEl);
        } else {
          if (subElIndex === 0)
            emit("paginationRender", subEl);
          emit("paginationUpdate", subEl);
        }
        if (swiper.params.watchOverflow && swiper.enabled) {
          subEl.classList[swiper.isLocked ? "add" : "remove"](params.lockClass);
        }
      });
    }
    function render3() {
      const params = swiper.params.pagination;
      if (isPaginationDisabled())
        return;
      const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;
      let el = swiper.pagination.el;
      el = makeElementsArray(el);
      let paginationHTML = "";
      if (params.type === "bullets") {
        let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;
        if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {
          numberOfBullets = slidesLength;
        }
        for (let i2 = 0; i2 < numberOfBullets; i2 += 1) {
          if (params.renderBullet) {
            paginationHTML += params.renderBullet.call(swiper, i2, params.bulletClass);
          } else {
            paginationHTML += `<${params.bulletElement} ${swiper.isElement ? 'part="bullet"' : ""} class="${params.bulletClass}"></${params.bulletElement}>`;
          }
        }
      }
      if (params.type === "fraction") {
        if (params.renderFraction) {
          paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);
        } else {
          paginationHTML = `<span class="${params.currentClass}"></span> / <span class="${params.totalClass}"></span>`;
        }
      }
      if (params.type === "progressbar") {
        if (params.renderProgressbar) {
          paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);
        } else {
          paginationHTML = `<span class="${params.progressbarFillClass}"></span>`;
        }
      }
      swiper.pagination.bullets = [];
      el.forEach((subEl) => {
        if (params.type !== "custom") {
          subEl.innerHTML = paginationHTML || "";
        }
        if (params.type === "bullets") {
          swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));
        }
      });
      if (params.type !== "custom") {
        emit("paginationRender", el[0]);
      }
    }
    function init4() {
      swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {
        el: "swiper-pagination"
      });
      const params = swiper.params.pagination;
      if (!params.el)
        return;
      let el;
      if (typeof params.el === "string" && swiper.isElement) {
        el = swiper.el.querySelector(params.el);
      }
      if (!el && typeof params.el === "string") {
        el = [...document.querySelectorAll(params.el)];
      }
      if (!el) {
        el = params.el;
      }
      if (!el || el.length === 0)
        return;
      if (swiper.params.uniqueNavElements && typeof params.el === "string" && Array.isArray(el) && el.length > 1) {
        el = [...swiper.el.querySelectorAll(params.el)];
        if (el.length > 1) {
          el = el.filter((subEl) => {
            if (elementParents(subEl, ".swiper")[0] !== swiper.el)
              return false;
            return true;
          })[0];
        }
      }
      if (Array.isArray(el) && el.length === 1)
        el = el[0];
      Object.assign(swiper.pagination, {
        el
      });
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        if (params.type === "bullets" && params.clickable) {
          subEl.classList.add(...(params.clickableClass || "").split(" "));
        }
        subEl.classList.add(params.modifierClass + params.type);
        subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
        if (params.type === "bullets" && params.dynamicBullets) {
          subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);
          dynamicBulletIndex = 0;
          if (params.dynamicMainBullets < 1) {
            params.dynamicMainBullets = 1;
          }
        }
        if (params.type === "progressbar" && params.progressbarOpposite) {
          subEl.classList.add(params.progressbarOppositeClass);
        }
        if (params.clickable) {
          subEl.addEventListener("click", onBulletClick);
        }
        if (!swiper.enabled) {
          subEl.classList.add(params.lockClass);
        }
      });
    }
    function destroy() {
      const params = swiper.params.pagination;
      if (isPaginationDisabled())
        return;
      let el = swiper.pagination.el;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) => {
          subEl.classList.remove(params.hiddenClass);
          subEl.classList.remove(params.modifierClass + params.type);
          subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
          if (params.clickable) {
            subEl.classList.remove(...(params.clickableClass || "").split(" "));
            subEl.removeEventListener("click", onBulletClick);
          }
        });
      }
      if (swiper.pagination.bullets)
        swiper.pagination.bullets.forEach((subEl) => subEl.classList.remove(...params.bulletActiveClass.split(" ")));
    }
    on("changeDirection", () => {
      if (!swiper.pagination || !swiper.pagination.el)
        return;
      const params = swiper.params.pagination;
      let {
        el
      } = swiper.pagination;
      el = makeElementsArray(el);
      el.forEach((subEl) => {
        subEl.classList.remove(params.horizontalClass, params.verticalClass);
        subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);
      });
    });
    on("init", () => {
      if (swiper.params.pagination.enabled === false) {
        disable();
      } else {
        init4();
        render3();
        update2();
      }
    });
    on("activeIndexChange", () => {
      if (typeof swiper.snapIndex === "undefined") {
        update2();
      }
    });
    on("snapIndexChange", () => {
      update2();
    });
    on("snapGridLengthChange", () => {
      render3();
      update2();
    });
    on("destroy", () => {
      destroy();
    });
    on("enable disable", () => {
      let {
        el
      } = swiper.pagination;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) => subEl.classList[swiper.enabled ? "remove" : "add"](swiper.params.pagination.lockClass));
      }
    });
    on("lock unlock", () => {
      update2();
    });
    on("click", (_s, e3) => {
      const targetEl = e3.target;
      const el = makeElementsArray(swiper.pagination.el);
      if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {
        if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl))
          return;
        const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);
        if (isHidden === true) {
          emit("paginationShow");
        } else {
          emit("paginationHide");
        }
        el.forEach((subEl) => subEl.classList.toggle(swiper.params.pagination.hiddenClass));
      }
    });
    const enable = () => {
      swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);
      let {
        el
      } = swiper.pagination;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));
      }
      init4();
      render3();
      update2();
    };
    const disable = () => {
      swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);
      let {
        el
      } = swiper.pagination;
      if (el) {
        el = makeElementsArray(el);
        el.forEach((subEl) => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));
      }
      destroy();
    };
    Object.assign(swiper.pagination, {
      enable,
      disable,
      render: render3,
      update: update2,
      init: init4,
      destroy
    });
  }

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/scrollbar.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/parallax.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/zoom.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/controller.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/a11y.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/history.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/hash-navigation.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/autoplay.mjs
  init_live_reload();
  function Autoplay(_ref) {
    let {
      swiper,
      extendParams,
      on,
      emit,
      params
    } = _ref;
    swiper.autoplay = {
      running: false,
      paused: false,
      timeLeft: 0
    };
    extendParams({
      autoplay: {
        enabled: false,
        delay: 3e3,
        waitForTransition: true,
        disableOnInteraction: true,
        stopOnLastSlide: false,
        reverseDirection: false,
        pauseOnMouseEnter: false
      }
    });
    let timeout;
    let raf;
    let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3e3;
    let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3e3;
    let autoplayTimeLeft;
    let autoplayStartTime = (/* @__PURE__ */ new Date()).getTime;
    let wasPaused;
    let isTouched;
    let pausedByTouch;
    let touchStartTimeout;
    let slideChanged;
    let pausedByInteraction;
    function onTransitionEnd(e3) {
      if (!swiper || swiper.destroyed || !swiper.wrapperEl)
        return;
      if (e3.target !== swiper.wrapperEl)
        return;
      swiper.wrapperEl.removeEventListener("transitionend", onTransitionEnd);
      resume();
    }
    const calcTimeLeft = () => {
      if (swiper.destroyed || !swiper.autoplay.running)
        return;
      if (swiper.autoplay.paused) {
        wasPaused = true;
      } else if (wasPaused) {
        autoplayDelayCurrent = autoplayTimeLeft;
        wasPaused = false;
      }
      const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - (/* @__PURE__ */ new Date()).getTime();
      swiper.autoplay.timeLeft = timeLeft;
      emit("autoplayTimeLeft", timeLeft, timeLeft / autoplayDelayTotal);
      raf = requestAnimationFrame(() => {
        calcTimeLeft();
      });
    };
    const getSlideDelay = () => {
      let activeSlideEl;
      if (swiper.virtual && swiper.params.virtual.enabled) {
        activeSlideEl = swiper.slides.filter((slideEl) => slideEl.classList.contains("swiper-slide-active"))[0];
      } else {
        activeSlideEl = swiper.slides[swiper.activeIndex];
      }
      if (!activeSlideEl)
        return void 0;
      const currentSlideDelay = parseInt(activeSlideEl.getAttribute("data-swiper-autoplay"), 10);
      return currentSlideDelay;
    };
    const run = (delayForce) => {
      if (swiper.destroyed || !swiper.autoplay.running)
        return;
      cancelAnimationFrame(raf);
      calcTimeLeft();
      let delay = typeof delayForce === "undefined" ? swiper.params.autoplay.delay : delayForce;
      autoplayDelayTotal = swiper.params.autoplay.delay;
      autoplayDelayCurrent = swiper.params.autoplay.delay;
      const currentSlideDelay = getSlideDelay();
      if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === "undefined") {
        delay = currentSlideDelay;
        autoplayDelayTotal = currentSlideDelay;
        autoplayDelayCurrent = currentSlideDelay;
      }
      autoplayTimeLeft = delay;
      const speed = swiper.params.speed;
      const proceed = () => {
        if (!swiper || swiper.destroyed)
          return;
        if (swiper.params.autoplay.reverseDirection) {
          if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {
            swiper.slidePrev(speed, true, true);
            emit("autoplay");
          } else if (!swiper.params.autoplay.stopOnLastSlide) {
            swiper.slideTo(swiper.slides.length - 1, speed, true, true);
            emit("autoplay");
          }
        } else {
          if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {
            swiper.slideNext(speed, true, true);
            emit("autoplay");
          } else if (!swiper.params.autoplay.stopOnLastSlide) {
            swiper.slideTo(0, speed, true, true);
            emit("autoplay");
          }
        }
        if (swiper.params.cssMode) {
          autoplayStartTime = (/* @__PURE__ */ new Date()).getTime();
          requestAnimationFrame(() => {
            run();
          });
        }
      };
      if (delay > 0) {
        clearTimeout(timeout);
        timeout = setTimeout(() => {
          proceed();
        }, delay);
      } else {
        requestAnimationFrame(() => {
          proceed();
        });
      }
      return delay;
    };
    const start = () => {
      swiper.autoplay.running = true;
      run();
      emit("autoplayStart");
    };
    const stop = () => {
      swiper.autoplay.running = false;
      clearTimeout(timeout);
      cancelAnimationFrame(raf);
      emit("autoplayStop");
    };
    const pause = (internal, reset) => {
      if (swiper.destroyed || !swiper.autoplay.running)
        return;
      clearTimeout(timeout);
      if (!internal) {
        pausedByInteraction = true;
      }
      const proceed = () => {
        emit("autoplayPause");
        if (swiper.params.autoplay.waitForTransition) {
          swiper.wrapperEl.addEventListener("transitionend", onTransitionEnd);
        } else {
          resume();
        }
      };
      swiper.autoplay.paused = true;
      if (reset) {
        if (slideChanged) {
          autoplayTimeLeft = swiper.params.autoplay.delay;
        }
        slideChanged = false;
        proceed();
        return;
      }
      const delay = autoplayTimeLeft || swiper.params.autoplay.delay;
      autoplayTimeLeft = delay - ((/* @__PURE__ */ new Date()).getTime() - autoplayStartTime);
      if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop)
        return;
      if (autoplayTimeLeft < 0)
        autoplayTimeLeft = 0;
      proceed();
    };
    const resume = () => {
      if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running)
        return;
      autoplayStartTime = (/* @__PURE__ */ new Date()).getTime();
      if (pausedByInteraction) {
        pausedByInteraction = false;
        run(autoplayTimeLeft);
      } else {
        run();
      }
      swiper.autoplay.paused = false;
      emit("autoplayResume");
    };
    const onVisibilityChange = () => {
      if (swiper.destroyed || !swiper.autoplay.running)
        return;
      const document2 = getDocument();
      if (document2.visibilityState === "hidden") {
        pausedByInteraction = true;
        pause(true);
      }
      if (document2.visibilityState === "visible") {
        resume();
      }
    };
    const onPointerEnter = (e3) => {
      if (e3.pointerType !== "mouse")
        return;
      pausedByInteraction = true;
      if (swiper.animating || swiper.autoplay.paused)
        return;
      pause(true);
    };
    const onPointerLeave = (e3) => {
      if (e3.pointerType !== "mouse")
        return;
      if (swiper.autoplay.paused) {
        resume();
      }
    };
    const attachMouseEvents = () => {
      if (swiper.params.autoplay.pauseOnMouseEnter) {
        swiper.el.addEventListener("pointerenter", onPointerEnter);
        swiper.el.addEventListener("pointerleave", onPointerLeave);
      }
    };
    const detachMouseEvents = () => {
      swiper.el.removeEventListener("pointerenter", onPointerEnter);
      swiper.el.removeEventListener("pointerleave", onPointerLeave);
    };
    const attachDocumentEvents = () => {
      const document2 = getDocument();
      document2.addEventListener("visibilitychange", onVisibilityChange);
    };
    const detachDocumentEvents = () => {
      const document2 = getDocument();
      document2.removeEventListener("visibilitychange", onVisibilityChange);
    };
    on("init", () => {
      if (swiper.params.autoplay.enabled) {
        attachMouseEvents();
        attachDocumentEvents();
        autoplayStartTime = (/* @__PURE__ */ new Date()).getTime();
        start();
      }
    });
    on("destroy", () => {
      detachMouseEvents();
      detachDocumentEvents();
      if (swiper.autoplay.running) {
        stop();
      }
    });
    on("beforeTransitionStart", (_s, speed, internal) => {
      if (swiper.destroyed || !swiper.autoplay.running)
        return;
      if (internal || !swiper.params.autoplay.disableOnInteraction) {
        pause(true, true);
      } else {
        stop();
      }
    });
    on("sliderFirstMove", () => {
      if (swiper.destroyed || !swiper.autoplay.running)
        return;
      if (swiper.params.autoplay.disableOnInteraction) {
        stop();
        return;
      }
      isTouched = true;
      pausedByTouch = false;
      pausedByInteraction = false;
      touchStartTimeout = setTimeout(() => {
        pausedByInteraction = true;
        pausedByTouch = true;
        pause(true);
      }, 200);
    });
    on("touchEnd", () => {
      if (swiper.destroyed || !swiper.autoplay.running || !isTouched)
        return;
      clearTimeout(touchStartTimeout);
      clearTimeout(timeout);
      if (swiper.params.autoplay.disableOnInteraction) {
        pausedByTouch = false;
        isTouched = false;
        return;
      }
      if (pausedByTouch && swiper.params.cssMode)
        resume();
      pausedByTouch = false;
      isTouched = false;
    });
    on("slideChange", () => {
      if (swiper.destroyed || !swiper.autoplay.running)
        return;
      slideChanged = true;
    });
    Object.assign(swiper.autoplay, {
      start,
      stop,
      pause,
      resume
    });
  }

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/thumbs.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/free-mode.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/grid.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/manipulation.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/effect-fade.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/effect-init.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/effect-target.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/effect-virtual-transition-end.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/effect-cube.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/effect-flip.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/shared/create-shadow.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/effect-coverflow.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/effect-creative.mjs
  init_live_reload();

  // node_modules/.pnpm/swiper@10.3.0/node_modules/swiper/modules/effect-cards.mjs
  init_live_reload();

  // src/utils/components/projects-slider.js
  var projectsSlider = () => {
    $(".slider-projects_component").each(function() {
      let loopMode = false;
      if ($(this).attr("loop-mode") === "true") {
        loopMode = true;
      }
      let sliderDuration = 750;
      if ($(this).attr("slider-duration") !== void 0) {
        sliderDuration = +$(this).attr("slider-duration");
      }
      new Swiper($(this).find(".swiper")[0], {
        modules: [Navigation, Pagination, Autoplay],
        speed: sliderDuration,
        loop: loopMode,
        autoHeight: false,
        centeredSlides: loopMode,
        followFinger: true,
        freeMode: false,
        slideToClickedSlide: false,
        slidesPerView: 1,
        spaceBetween: "4%",
        rewind: false,
        autoplay: {
          delay: 4e3,
          disableOnInteraction: false
        },
        mousewheel: {
          forceToAxis: true
        },
        keyboard: {
          enabled: true,
          onlyInViewport: true
        },
        breakpoints: {
          // mobile landscape
          480: {
            slidesPerView: 1,
            spaceBetween: "4%"
          },
          // tablet
          768: {
            slidesPerView: 2,
            spaceBetween: "4%"
          },
          // desktop
          992: {
            slidesPerView: 3,
            spaceBetween: "2%"
          }
        },
        pagination: {
          el: $(this).find(".swiper-bullet-wrapper")[0],
          bulletActiveClass: "is-active",
          bulletClass: "swiper-bullet",
          bulletElement: "div",
          clickable: true
        },
        navigation: {
          nextEl: $(this).find(".swiper-next")[0],
          prevEl: $(this).find(".swiper-prev")[0],
          disabledClass: "is-disabled"
        },
        slideActiveClass: "is-active",
        slideDuplicateActiveClass: "is-active"
      });
      Array.from(document.querySelectorAll(".slider-projects_img-height")).forEach((img) => {
        img.addEventListener("mouseenter", (e3) => {
          e3.currentTarget?.querySelector(".slider-project_title").classList.add("show");
        });
        img.addEventListener("mouseleave", (e3) => {
          e3.currentTarget?.querySelector(".slider-project_title").classList.remove("show");
        });
      });
    });
  };
  var projects_slider_default = projectsSlider;

  // src/utils/pages/contact.js
  init_live_reload();
  var import_jquery2 = __toESM(require_jquery(), 1);
  var jqueryMask = __toESM(require_jquery_mask(), 1);
  var jqueryValidation = __toESM(require_jquery_validate(), 1);

  // src/utils/jquery.nice-select.js
  init_live_reload();
  var import_jquery = __toESM(require_jquery(), 1);
  import_jquery.default.fn.niceSelect = function(method) {
    if (typeof method === "string") {
      if (method === "update") {
        this.each(function() {
          var $select = (0, import_jquery.default)(this);
          var $dropdown = (0, import_jquery.default)(this).next(".nice-select");
          var open = $dropdown.hasClass("open");
          if ($dropdown.length) {
            $dropdown.remove();
            create_nice_select($select);
            if (open) {
              $select.next().trigger("click");
            }
          }
        });
      } else if (method === "destroy") {
        this.each(function() {
          var $select = (0, import_jquery.default)(this);
          var $dropdown = (0, import_jquery.default)(this).next(".nice-select");
          if ($dropdown.length) {
            $dropdown.remove();
            $select.css("display", "");
          }
        });
        if ((0, import_jquery.default)(".nice-select").length === 0) {
          (0, import_jquery.default)(document).off(".nice_select");
        }
      } else {
        console.log('Method "' + method + '" does not exist.');
      }
      return this;
    }
    this.hide();
    this.each(function() {
      var $select = (0, import_jquery.default)(this);
      if (!$select.next().hasClass("nice-select")) {
        create_nice_select($select);
      }
    });
    function create_nice_select($select) {
      $select.after(
        (0, import_jquery.default)("<div></div>").addClass("nice-select").addClass($select.attr("class") || "").addClass($select.attr("disabled") ? "disabled" : "").attr("tabindex", $select.attr("disabled") ? null : "0").html('<span class="current"></span><ul class="list"></ul>')
      );
      var $dropdown = $select.next();
      var $options = $select.find("option");
      var $selected = $select.find("option:selected");
      $dropdown.find(".current").html($selected.data("display") || $selected.text());
      $options.each(function(i2) {
        var $option = (0, import_jquery.default)(this);
        var display = $option.data("display");
        $dropdown.find("ul").append(
          (0, import_jquery.default)("<li></li>").attr("data-value", $option.val()).attr("data-display", display || null).addClass(
            "option" + ($option.is(":selected") ? " selected" : "") + ($option.is(":disabled") ? " disabled" : "")
          ).html($option.text())
        );
      });
    }
    (0, import_jquery.default)(document).off(".nice_select");
    (0, import_jquery.default)(document).on("click.nice_select", ".nice-select", function(event2) {
      var $dropdown = (0, import_jquery.default)(this);
      (0, import_jquery.default)(".nice-select").not($dropdown).removeClass("open");
      $dropdown.toggleClass("open");
      if ($dropdown.hasClass("open")) {
        $dropdown.find(".option");
        $dropdown.find(".focus").removeClass("focus");
        $dropdown.find(".selected").addClass("focus");
      } else {
        $dropdown.focus();
      }
    });
    (0, import_jquery.default)(document).on("click.nice_select", function(event2) {
      if ((0, import_jquery.default)(event2.target).closest(".nice-select").length === 0) {
        (0, import_jquery.default)(".nice-select").removeClass("open").find(".option");
      }
    });
    (0, import_jquery.default)(document).on("click.nice_select", ".nice-select .option:not(.disabled)", function(event2) {
      var $option = (0, import_jquery.default)(this);
      var $dropdown = $option.closest(".nice-select");
      $dropdown.find(".selected").removeClass("selected");
      $option.addClass("selected");
      var text = $option.data("display") || $option.text();
      $dropdown.find(".current").text(text);
      $dropdown.prev("select").val($option.data("value")).trigger("change");
    });
    (0, import_jquery.default)(document).on("keydown.nice_select", ".nice-select", function(event2) {
      var $dropdown = (0, import_jquery.default)(this);
      var $focused_option = (0, import_jquery.default)($dropdown.find(".focus") || $dropdown.find(".list .option.selected"));
      if (event2.keyCode === 32 || event2.keyCode === 13) {
        if ($dropdown.hasClass("open")) {
          $focused_option.trigger("click");
        } else {
          $dropdown.trigger("click");
        }
        return false;
      }
      if (event2.keyCode === 40) {
        if (!$dropdown.hasClass("open")) {
          $dropdown.trigger("click");
        } else {
          var $next = $focused_option.nextAll(".option:not(.disabled)").first();
          if ($next.length > 0) {
            $dropdown.find(".focus").removeClass("focus");
            $next.addClass("focus");
          }
        }
        return false;
      }
      if (event2.keyCode === 38) {
        if (!$dropdown.hasClass("open")) {
          $dropdown.trigger("click");
        } else {
          var $prev = $focused_option.prevAll(".option:not(.disabled)").first();
          if ($prev.length > 0) {
            $dropdown.find(".focus").removeClass("focus");
            $prev.addClass("focus");
          }
        }
        return false;
      }
      if (event2.keyCode === 27) {
        if ($dropdown.hasClass("open")) {
          $dropdown.trigger("click");
        }
      } else if (event2.keyCode === 9) {
        if ($dropdown.hasClass("open")) {
          return false;
        }
      }
    });
    var { style } = document.createElement("a");
    style.cssText = "pointer-events:auto";
    if (style.pointerEvents !== "auto") {
      (0, import_jquery.default)("html").addClass("no-csspointerevents");
    }
    return this;
  };
  var jquery_nice_select_default = import_jquery.default.fn.niceSelect;

  // src/utils/pages/contact.js
  var contact = () => {
    (0, import_jquery2.default)(".field").on("focusin", function() {
      (0, import_jquery2.default)(this).siblings(".field_label").removeClass("large");
    });
    (0, import_jquery2.default)(".field").on("focusout", function() {
      if ((0, import_jquery2.default)(this).val().length === 0) {
        (0, import_jquery2.default)(this).siblings(".field_label").addClass("large");
      }
    });
    (0, import_jquery2.default)("#contact-form").validate({
      rules: {
        projectPriority: {
          required: true
        }
      },
      email: {
        required: true,
        email: true
      },
      errorPlacement: function(error, element) {
        error.appendTo(element.closest(".field_wrap"));
      },
      messages: {
        name: "Laat uw naam achter, zo maken we het persoonlijker.",
        email: "Gelieve uw email in te vullen.",
        phone: "Graag uw telefoonnummer achterlaten voor vlotte communicatie.",
        message: "Laat een opmerking achter."
      }
    });
    (0, import_jquery2.default)(() => {
      var options = {
        onKeyPress: function(cep, e3, field, options2) {
          var masks = ["000 00 00 00 00", "000 000 00 000"];
          var mask = e3.currentTarget.value.length > 13 ? masks[0] : masks[1];
          (0, import_jquery2.default)(".phone").mask(mask, options2);
        }
      };
      (0, import_jquery2.default)(".phone").mask("000", options);
    });
    (0, import_jquery2.default)(() => {
      if ((0, import_jquery2.default)("select")) {
        (0, import_jquery2.default)("select").niceSelect();
      }
    });
    (0, import_jquery2.default)(function() {
      (0, import_jquery2.default)(document).on("submit", "form", function() {
        (0, import_jquery2.default)("html,body").animate({ scrollTop: 0 }, 1e3);
      });
      (0, import_jquery2.default)("form").submit(() => {
        setTimeout(() => {
          (0, import_jquery2.default)(".form_sucess_trigger").click();
        }, 1e3);
      });
    });
  };
  var contact_default = contact;

  // src/utils/pages/home-scroll.js
  init_live_reload();
  var import_jquery4 = __toESM(require_jquery(), 1);
  var homeScroll = () => {
    gsapWithCSS.registerPlugin(ScrollTrigger2);
    let homeIntroImages = document.querySelectorAll(".gallery-photo");
    homeIntroImages && homeIntroImages.forEach((item, index) => {
      const multiplier = index * 10;
      gsapWithCSS.to(item.querySelector(".gallery-photo_img"), {
        yPercent: 10 + multiplier,
        scrollTrigger: {
          trigger: item,
          start: "top bottom",
          end: "bottom top",
          scrub: true
        }
      });
    });
    const heroImg = document.querySelector(".hero_img");
    heroImg && gsapWithCSS.to(heroImg, {
      scale: 1.2,
      duration: 1
    });
    heroImg && gsapWithCSS.to(heroImg, {
      yPercent: 20,
      duration: 1,
      scrollTrigger: {
        trigger: heroImg,
        start: "top +=100px",
        end: "bottom top",
        scrub: true,
        immediateRender: false
      }
    });
    const cursor = document.querySelector(".cursor");
    gsapWithCSS.set(cursor, { xPercent: -50, yPercent: -50 });
    window.addEventListener("mousemove", (e3) => {
      gsapWithCSS.to(cursor, {
        duration: 0.2,
        x: e3.clientX,
        y: e3.clientY
      });
    });
    const projects = document.querySelector(".swiper-wrapper.is-slider-projects");
    const projectTl = gsapWithCSS.timeline({ paused: true }).to(cursor, {
      opacity: 1,
      duration: 0.3
    });
    projects && projects.addEventListener("mouseenter", () => {
      projectTl.play();
    });
    projects && projects.addEventListener("mouseleave", () => projectTl.reverse());
  };
  var horizontalScrollSection = () => {
    const mm = gsapWithCSS.matchMedia();
    const scope = document.querySelector('main[data-barba-namespace="home"]');
    mm.add(
      "(min-width:767px)",
      (context3) => {
        const setTrackHeights = () => {
          (0, import_jquery4.default)(".services").each(function() {
            const trackWidth = (0, import_jquery4.default)(this).find(".track").outerWidth();
            (0, import_jquery4.default)(this).height(trackWidth * 2);
          });
        };
        setTrackHeights();
        context3.add("onResize", () => {
          setTrackHeights();
        });
        window.addEventListener("resize", context3.onResize);
        const service1 = document.querySelector(".s_new");
        const service2 = document.querySelector(".s_renovation");
        const service3 = document.querySelector(".s_metal");
        const numberParalax = "-10%";
        const tlMain = gsapWithCSS.timeline({
          scrollTrigger: {
            trigger: ".services",
            start: "top top",
            end: "95% bottom",
            scrub: 1
          }
        }).to(".track", {
          xPercent: -100,
          ease: "none"
        });
        gsapWithCSS.set(service1.querySelector(".s_img"), {
          clipPath: "polygon(0% 0, 100% 0, 100% 0%, 100% 100%, 100% 100%, 0% 100%, 0 100%, 0 0%)"
        });
        gsapWithCSS.timeline({
          scrollTrigger: {
            trigger: service1,
            containerAnimation: tlMain,
            start: "left left",
            end: "right left",
            scrub: true
          }
        }).to(service1.querySelector(".s_img"), {
          clipPath: "polygon(25% 0, 75% 0, 100% 25%, 100% 75%, 75% 100%, 25% 100%, 0 75%, 0 25%)"
        }).to(
          service1.querySelector(".s_number"),
          {
            x: numberParalax
          },
          "<"
        );
        gsapWithCSS.timeline({
          scrollTrigger: {
            trigger: service2,
            containerAnimation: tlMain,
            start: "-50% left",
            end: "right left",
            scrub: true
          }
        }).to(service2.querySelector(".s_img"), {
          borderTopRightRadius: "300px"
        }).to(
          service2.querySelector(".s_number"),
          {
            x: numberParalax
          },
          "<"
        );
        gsapWithCSS.timeline({
          scrollTrigger: {
            trigger: ".s_metal",
            containerAnimation: tlMain,
            start: "-100% left",
            end: "right 60%",
            scrub: true
          }
        }).fromTo(
          ".s_metal .s_img",
          {
            borderRadius: "0 0 0 0"
          },
          {
            borderRadius: "240px 0 0 0"
          }
        ).to(
          service3.querySelector(".s_number"),
          {
            x: numberParalax
          },
          "<"
        );
        gsapWithCSS.timeline({
          scrollTrigger: {
            trigger: ".track-flex",
            containerAnimation: tlMain,
            start: "left left",
            end: "center -10%",
            scrub: true
          }
        }).to(".s_progress-active", {
          width: "100%",
          ease: "none"
        });
        return () => {
          window.removeEventListener("resize", context3.onResize);
          if (document.querySelector(".services")) {
            document.querySelector(".services").style.height = "auto";
          }
        };
      },
      scope
    );
  };

  // src/utils/transitions/index.js
  init_live_reload();

  // src/utils/transitions/enterTransition.js
  init_live_reload();

  // src/utils/resetWebflow.js
  init_live_reload();
  var resetWebflow = (data) => {
    const parser = new DOMParser();
    const dom = parser.parseFromString(data.next.html, "text/html");
    const webflowPageId = $(dom).find("html").attr("data-wf-page");
    $("html").attr("data-wf-page", webflowPageId);
    window.Webflow && window.Webflow.destroy();
    window.Webflow && window.Webflow.ready();
    window.Webflow && window.Webflow.require("ix2").init();
  };
  var resetWebflow_default = resetWebflow;

  // src/utils/transitions/enterTransition.js
  var enterTransition = (data, transitionName) => {
    window.scrollTo(0, 0);
    gsapWithCSS.to(".load_grid-item", {
      opacity: 0,
      duration: 1e-3,
      stagger: { amount: 0.5, from: "random" },
      onComplete: () => {
        gsapWithCSS.set(".load_grid", { display: "none" });
        resetWebflow_default(data);
      }
    });
    const navLinks = document.querySelectorAll(".nav-link");
    const burgerLines = document.querySelectorAll(".nav_burger-line");
    const navWrapper = document.querySelector(".nav_wrapper");
    const logo = document.querySelector(".paros-logo");
    const logoDark = document.querySelector(".paros-logo-dark");
    const logoMobile = document.querySelector(".paros-logo-mobile");
    const logoMobileDark = document.querySelector(".paros-logo-mobile-dark");
    if (transitionName === "page-to-home" && navLinks) {
      console.log("light mode");
      navLinks.forEach((link) => link.classList.remove("is-dark"));
      navWrapper.classList.remove("is-dark");
      burgerLines.forEach((line) => line.classList.remove("is-dark"));
      logoDark.classList.remove("is-active");
      logo.classList.add("is-active");
      logoMobileDark.classList.remove("is-active");
      logoMobile.classList.add("is-active");
    } else {
      console.log("dark mode");
      navLinks.forEach((link) => {
        if (!link.classList.contains("is-dark")) {
          link.classList.add("is-dark");
        }
      });
      burgerLines.forEach((line) => {
        if (!line.classList.contains("is-dark")) {
          line.classList.add("is-dark");
        }
      });
      if (!navWrapper.classList.contains("is-dark")) {
        navWrapper.classList.add("is-dark");
      }
      if (!logoDark.classList.contains("is-active")) {
        logoDark.classList.add("is-active");
        logo.classList.remove("is-active");
      }
      if (!logoMobileDark.classList.contains("is-active")) {
        logoMobileDark.classList.add("is-active");
        logoMobile.classList.remove("is-active");
      }
    }
  };
  var enterTransition_default = enterTransition;

  // src/utils/transitions/leaveTransition.js
  init_live_reload();
  var leaveTransition = async () => {
    gsapWithCSS.set(".load_grid", { display: "grid" });
    await gsapWithCSS.fromTo(
      ".load_grid-item",
      {
        opacity: 0
      },
      {
        opacity: 1,
        duration: 1e-3,
        stagger: { amount: 0.5, from: "random" }
        // GSAP will set the offset to be a total duration of .5seconds
      }
    );
  };
  var leaveTransition_default = leaveTransition;

  // src/index.ts
  window.addEventListener("DOMContentLoaded", () => {
    let nextUrl;
    gsapWithCSS.registerPlugin(Flip, ScrollTrigger2);
    homeScroll();
    updateCurrentNavLink();
    addBgEffect();
    const burgerButton = document.querySelector(".nav_burger-lines");
    const mobileNav = document.querySelector(".nav_menu.is-mobile");
    const burgerTl = gsapWithCSS.timeline({ paused: true, reversed: true }).to(mobileNav, {
      opacity: 1,
      display: "flex",
      duration: 0
    }).from(mobileNav, {
      opacity: 0,
      duration: 0.4,
      y: -60,
      scale: 0.1,
      transformOrigin: "30% right"
    }).from(".nav-link--mobile", {
      opacity: 0,
      stagger: 0.1,
      duration: 0.5
    });
    const burgerLine1 = gsapWithCSS.to(".nav_burger-line.is-1", {
      rotate: 45,
      y: 6,
      duration: 0.2,
      transformOrigin: "50% 50%"
    });
    const burgerLine2 = gsapWithCSS.to(".nav_burger-line.is-3", {
      rotate: -45,
      y: -5,
      duration: 0.2,
      transformOrigin: "50% 50%"
    });
    const burgerLine3 = gsapWithCSS.to(".nav_burger-line.is-2", {
      opacity: 0,
      duration: 0.2
    });
    burgerLine1.pause();
    burgerLine2.pause();
    burgerLine3.pause();
    const burgerAnimation = (state) => {
      if (state === "play") {
        burgerLine1.play();
        burgerLine2.play();
        burgerLine3.play();
      } else if (state === "reverse") {
        burgerLine1.reverse();
        burgerLine2.reverse();
        burgerLine3.reverse();
      }
    };
    burgerTl.reverse(-1);
    burgerButton?.addEventListener("click", () => {
      if (burgerTl.reversed()) {
        burgerTl.play();
        burgerAnimation("play");
      } else {
        burgerTl.reverse();
        burgerAnimation("reverse");
      }
    });
    if (document.querySelector(".body--contact")) {
      contact_default();
    }
    if (document.querySelector(".load_grid")) {
      gsapWithCSS.to(".load_grid-item", {
        opacity: 0,
        duration: 1e-3,
        delay: 0.2,
        stagger: { amount: 0.4, from: "random" },
        onComplete: () => {
          gsapWithCSS.set(".load_grid", { display: "none" });
          const navbar = document.querySelector(".navbar");
          navbar.style.zIndex = "1000";
        }
      });
    }
    let lenis = new r({
      lerp: 0.3,
      wheelMultiplier: 1,
      infinite: false,
      gestureOrientation: "vertical",
      normalizeWheel: false,
      smoothTouch: false
    });
    const startLenisScroll = (resize) => {
      if (resize === true && lenis != null) {
        lenis.destroy();
        lenis = new r({
          lerp: 0.3,
          wheelMultiplier: 1,
          infinite: false,
          gestureOrientation: "vertical",
          normalizeWheel: false,
          smoothTouch: false
        });
        lenis.start();
        lenis.resize();
      }
      function raf(time) {
        lenis.raf(time);
        requestAnimationFrame(raf);
      }
      requestAnimationFrame(raf);
    };
    startLenisScroll(false);
    const loadImages = () => {
      const imagesToLoad = gsapWithCSS.utils.toArray(".load_img");
      imagesToLoad && imagesToLoad.forEach((img, i2) => {
        gsapWithCSS.to(img.querySelectorAll(".load_img-item"), {
          opacity: 0,
          duration: 0.1,
          delay: 0.1,
          stagger: { amount: 0.6, from: "random" },
          scrollTrigger: {
            trigger: img,
            start: "center bottom",
            end: "center top"
          },
          onComplete: () => {
            gsapWithCSS.set(img, { display: "none" });
          }
        });
      });
    };
    loadImages();
    if (document.querySelector(".tag-canvas")) {
      matterContact();
    }
    addImgHoverEffect();
    const videoScrollSection = () => {
      const zoneEl = (0, import_jquery5.default)("[js-scrollflip-element='zone']"), targetEl = (0, import_jquery5.default)("[js-scrollflip-element='target']").first();
      let tl;
      function createTimeline() {
        if (tl) {
          tl.kill();
          gsapWithCSS.set(targetEl, { clearProps: "all" });
        }
        tl = gsapWithCSS.timeline({
          scrollTrigger: {
            trigger: zoneEl.first(),
            start: "center center",
            endTrigger: zoneEl.last(),
            end: "center center",
            scrub: true
          }
        });
        zoneEl.each(function(index) {
          const nextZoneEl = zoneEl.eq(index + 1);
          if (nextZoneEl.length) {
            const nextZoneDistance = nextZoneEl.offset().top + nextZoneEl.innerHeight() / 2;
            const thisZoneDistance = (0, import_jquery5.default)(this).offset().top + (0, import_jquery5.default)(this).innerHeight() / 2;
            const zoneDifference = nextZoneDistance - thisZoneDistance;
            tl.add(
              Flip.fit(targetEl[0], nextZoneEl[0], {
                duration: zoneDifference,
                ease: "power2.inOut"
              })
            );
          }
        });
      }
      createTimeline();
      let resizeTimer;
      window.addEventListener("resize", function() {
        clearTimeout(resizeTimer);
        resizeTimer = setTimeout(function() {
          createTimeline();
        }, 100);
      });
    };
    projects_slider_default();
    import_core.default.init({
      transitions: [
        {
          name: "page-transition",
          beforeLeave(data) {
            nextUrl = data.next.url.path;
            updateCurrentNavLink(nextUrl);
            burgerTl.timeScale(1.8).reverse();
          },
          async leave() {
            await leaveTransition_default();
          },
          enter(data) {
            enterTransition_default(data, this.name);
          }
        },
        {
          name: "page-to-home",
          to: {
            namespace: ["home"]
          },
          beforeLeave(data) {
            nextUrl = data.next.url.path;
            updateCurrentNavLink(nextUrl);
            burgerTl.timeScale(1.8).reverse();
          },
          async leave() {
            await leaveTransition_default();
          },
          enter(data) {
            enterTransition_default(data, this.name);
          }
        }
      ],
      views: [
        {
          namespace: "home",
          beforeEnter() {
            horizontalScrollSection();
            videoScrollSection();
          }
        },
        {
          namespace: "about",
          beforeEnter(data) {
            enterTransition_default(data, this.name);
          }
        },
        {
          namespace: "contact",
          beforeEnter(data) {
            contact_default();
            enterTransition_default(data, this.name);
          }
        },
        {
          namespace: "projects",
          beforeEnter(data) {
            enterTransition_default(data, this.name);
          }
        }
      ]
    });
    import_core.default.hooks.leave(() => {
      burgerAnimation("reverse");
    });
    function connectToScrollTrigger() {
      lenis.on("scroll", ScrollTrigger2.update);
      gsapWithCSS.ticker.add((time) => {
        lenis.raf(time * 1e3);
      });
    }
    connectToScrollTrigger();
    import_core.default.hooks.after(() => {
      restartWebflow();
      startLenisScroll(true);
      loadImages();
      projects_slider_default();
      addImgHoverEffect();
      homeScroll();
      matterContact();
    });
  });
})();
/*! Bundled license information:

jquery/dist/jquery.js:
  (*!
   * jQuery JavaScript Library v3.7.1
   * https://jquery.com/
   *
   * Copyright OpenJS Foundation and other contributors
   * Released under the MIT license
   * https://jquery.org/license
   *
   * Date: 2023-08-28T13:37Z
   *)

p5/lib/p5.min.js:
  (*! p5.js v1.7.0 July 10, 2023 *)

matter-js/build/matter.js:
  (*!
   * matter-js 0.19.0 by @liabru
   * http://brm.io/matter-js/
   * License MIT
   * 
   * The MIT License (MIT)
   * 
   * Copyright (c) Liam Brummitt and contributors.
   * 
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   * 
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   * 
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   *)

jquery-validation/dist/jquery.validate.js:
  (*!
   * jQuery Validation Plugin v1.19.5
   *
   * https://jqueryvalidation.org/
   *
   * Copyright (c) 2022 Jörn Zaefferer
   * Released under the MIT license
   *)

gsap/gsap-core.js:
  (*!
   * GSAP 3.12.2
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  *)

gsap/CSSPlugin.js:
  (*!
   * CSSPlugin 3.12.2
   * https://greensock.com
   *
   * Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  *)

gsap/utils/matrix.js:
  (*!
   * matrix 3.12.2
   * https://greensock.com
   *
   * Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  *)

gsap/Flip.js:
  (*!
   * Flip 3.12.2
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  *)

gsap/Observer.js:
  (*!
   * Observer 3.12.2
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  *)

gsap/ScrollTrigger.js:
  (*!
   * ScrollTrigger 3.12.2
   * https://greensock.com
   *
   * @license Copyright 2008-2023, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  *)
*/
//# sourceMappingURL=index.js.map
